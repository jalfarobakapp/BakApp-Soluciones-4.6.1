Imports System.IO
Imports System.Threading
Imports BkSpecialPrograms.Bk_Comporamiento_UdMedidas
Imports BkSpecialPrograms.DocumentoListaSuperior
Imports DevComponents.DotNetBar

Public Class Frm_Formulario_Documento

    Dim _Sql As New Class_SQL(Cadena_ConexionSQL_Server)
    Dim Consulta_sql As String

    Dim _NombreEquipo = _Global_Row_EstacionBk.Item("NombreEquipo")

    Dim _New_Idmaeedo As Integer

    Dim _DtsConfig As New DatosBakApp
    Dim _Ds_Documento_Origen As DataSet
    Dim _Tbl_Lector_Codigos As DataTable

    Dim _Fila_Clonada, _Fila_Clonada_Enc As DataGridViewRow

    Dim _Lista_de_precios_de_proveedores As Boolean

    Dim _Ds_Matriz_Documentos As New Ds_Matriz_Documentos
    Dim _TblEncabezado As DataTable
    Dim _TblDetalle As DataTable
    Dim _TblObservaciones As DataTable
    Dim _TblPermisos As DataTable
    Dim _TblEmpaque As DataTable

    Dim _Row_Formato_Modalidad As DataRow

    Dim _Tbl_Mevento_Edo As DataTable
    Dim _Tbl_Mevento_Edd As DataTable
    Dim _Tbl_Maedpce As DataTable

    Dim _Tbl_Maedcr As DataTable

    Dim _Row_Encabezado_Doc As DataRow
    Dim _Row_Observaciones_Doc As DataRow
    'Dim _Row_PermisosNecesarios As DataRow

    Dim _Desde_Prestahop As Boolean

    Dim Fr_Alerta_Stock As DevComponents.DotNetBar.Balloon

    Dim _RowEntidad As DataRow
    Dim _RowEntidad_Despacho As DataRow
    Dim _RowEntidad_X_Defecto As DataRow
    Dim _RowEntidadBakapp As DataRow

    Dim _CodVendedor As String

    Dim _RowLista As DataRow
    Dim _RowMoneda_Doc As DataRow

    Dim _ElistaVen As String
    Dim _ElistaCom As String
    Dim _Elistaint As String

    Dim _Hay_Descuentos_Individuales As Boolean
    Dim _Hay_Descuentos_Globales As Boolean

    Dim _Precio_Costos_Desde As String

    Dim _Post_Venta As Boolean
    Dim _Es_Ajuste As Boolean
    Dim _HoraAlFinalDelDia As Boolean

    Dim _Documento_Interno As Boolean

    Dim _Idmaeedo_Origen As Integer
    Dim _Editar_documento As Boolean
    Dim _En_Construccion As Boolean

    Dim _Tbl_Series_WMS As DataTable

    Dim _Ruta_Documento_Bkp As String

    Dim _Revisar_Notificacion_Automatica_Remota As Boolean
    Dim _RowRemota_Notificacion As DataRow
    Dim _Revision_Remota As Boolean
    Dim _Autorizado_Remota As Boolean
    Dim _Rechazado_Remota As Boolean
    Dim _Bloquear_Edicion_Detalle As Boolean
    Dim _Preguntar_Si_Receptor_Crea_Documento_Definitivo As Boolean
    Dim _No_Volver_A_Preguntar_Agrupa_Producto As Boolean

    Dim _Codigo_abuscar As String
    Dim _Agrupar_Reemplazos As Boolean
    Dim _Ds_Documento_de_Origen As DataSet
    Dim _Id_Activo As String
    Dim _No_Puede_Ver_Precios As Boolean

    Dim _Ejecutar_Creacion_Automaticas_Desde_Doc_Origen As Boolean

    Dim _Idmaeedo_Relacionado As Integer
    Dim _Tido_Origen As String
    Dim _Nudo_Origen As String

    Dim _Id_DocEnc As Integer
    Dim _Solo_Revisar_El_Documento As Boolean

    Dim _Tipo_Documento As csGlobales.Enum_Tipo_Documento
    Dim _Tido As String
    Dim _Tido_Original As String
    Dim _SubTido As String

    Dim _Cantidad_Origen As Double
    Dim _Precio_Origen As Double

    Dim _Tipo_de_Grabacion As csGlobales.Enum_Tipo_de_Grabacion

    Dim _TblDocumentos_Dori As DataTable

    Dim _Cerrar_Al_Grabar As Boolean
    Dim _Solicitar_Observaciones_Al_Grabar As Boolean

    Dim _Correr_a_la_derecha As Boolean

    Dim _Revisando_Situacion_Comercial As Boolean
    Dim _Mostrar_Margen As Boolean
    Dim _Mostrar_Costos As Boolean
    Dim _Permiso_Remoto As Boolean

    Dim _NroDocumento_Editado_Por_Usuario As Boolean
    Dim _NroDocumento_Antes_De_Editar As String

    Dim _Grabar As Boolean


    Dim _Cl_Documento As New Cl_Documento
    Dim _Class_Referencias_DTE As Class_Referencias_DTE

    Dim _Cl_Despacho As Clas_Despacho
    Dim _Descuento_Global_Superado As Boolean

    Dim _Id_DocEnc_Arc = 0
    Dim _Se_Puede_Abrir As Boolean = True
    Dim _Bodega_Destino As String

    Dim Fm_MPC As Frm_MantCostosPrecios

    Dim _Nombre_Archivo_Txt_Especial_Saime
    Dim _Doc_Desde_Arch_Txt_Especial_Saime As Boolean

    Dim _Documento_Reciclado As Boolean
    Dim _ListaCodQRUnicosLeidos As List(Of CodigosDeBarra.CodigosQRLeidos)
    Dim _ListaCodConDocLeidos As List(Of CodigosDeBarra.CodigosConDocLeidos)

    Dim _Facturacion_Automatica As Boolean

    Dim _DecimalesGl As Integer
    Dim _Patente_rvm As String

    Public Property MensajeRevFolio As LsValiciones.Mensajes

    Dim _Cl_DocListaSuperior As New Cl_DocListaSuperior
    Dim _Cl_Pallet As New Pallet.Cl_Pallet

    Public Property ForzarDecimalesEnUnidadesEnteras As Boolean
    Public Property PreVenta As Boolean
    Public Property SobreStock As Boolean

    Dim _Zw_Contenedor As New Zw_Contenedor

    Private _RevisandoBotonesActivos As Boolean
    Private _AvisoCambioRTUVariable As Boolean

    Public Property ModEmpresa_Doc As String
    Public Property ModSucursal_Doc As String
    Public Property ModBodega_Doc As String
    Public Property ModModalidad_Doc As String

    Dim _Row_Modalidad_Doc As DataRow

    Dim _Ls_Cl_PreVenta As New List(Of Zw_PreVenta_StockProd)
    Dim _Ls_Cl_SobreStock As New List(Of Zw_Prod_SobreStock)

#Region "PROPIEDADES"

    Public ReadOnly Property Pro_Idmaeedo() As Integer
        Get
            Return _New_Idmaeedo
        End Get
    End Property

    Public ReadOnly Property Pro_RowEntidad_X_Defecto() As DataRow
        Get
            Dim _Vnta_EntidadXdefecto As String = _Global_Row_Configuracion_Estacion.Item("Vnta_EntidadXdefecto")
            Dim _Vnta_SucEntXdefecto As String = _Global_Row_Configuracion_Estacion.Item("Vnta_SucEntXdefecto")

            _RowEntidad_X_Defecto = Fx_Traer_Datos_Entidad(_Vnta_EntidadXdefecto, _Vnta_SucEntXdefecto)

            Return _RowEntidad_X_Defecto
        End Get
    End Property

    Public Property Pro_RowEntidad() As DataRow
        Get
            Return _RowEntidad
        End Get
        Set(value As DataRow)
            _RowEntidad = value
        End Set
    End Property

    Public Property Pro_RowEntidad_Despacho() As DataRow
        Get
            Return _RowEntidad_Despacho
        End Get
        Set(value As DataRow)
            _RowEntidad_Despacho = value
        End Set
    End Property

    Public ReadOnly Property Pro_Ds_Matriz_Documentos() As DataSet
        Get
            Return _Ds_Matriz_Documentos
        End Get
    End Property

    Public ReadOnly Property Pro_En_Construccion() As Boolean
        Get
            Return _En_Construccion
        End Get
    End Property

    Public Property Pro_RowRemota_Notificacion() As DataRow
        Get
            Return _RowRemota_Notificacion
        End Get
        Set(value As DataRow)
            _RowRemota_Notificacion = value
            If Not (_RowRemota_Notificacion Is Nothing) Then
                _Revisar_Notificacion_Automatica_Remota = True
            End If
        End Set
    End Property

    Public Property Pro_Revisar_Notificacion_Automatica_Remota() As Boolean
        Get
            Return _Revisar_Notificacion_Automatica_Remota
        End Get
        Set(value As Boolean)
            _Revisar_Notificacion_Automatica_Remota = False
        End Set
    End Property

    Public Property Pro_Correr_a_la_derecha() As Boolean
        Get
            Return _Correr_a_la_derecha
        End Get
        Set(value As Boolean)
            _Correr_a_la_derecha = value
        End Set
    End Property

    Public Property Pro_Revision_Remota() As Boolean
        Get
            Return _Revision_Remota
        End Get
        Set(value As Boolean)
            _Revision_Remota = value
        End Set
    End Property

    Public Property Pro_Autorizado_Remota() As Boolean
        Get
            Return _Autorizado_Remota
        End Get
        Set(value As Boolean)
            _Autorizado_Remota = value
        End Set
    End Property

    Public Property Pro_Rechazado_Remota() As Boolean
        Get
            Return _Rechazado_Remota
        End Get
        Set(value As Boolean)
            _Rechazado_Remota = value
        End Set
    End Property

    Public ReadOnly Property Pro_Grabar() As Boolean
        Get
            Return _Grabar
        End Get
    End Property

    Public Property Pro_Agrupar_Reemplazos As Boolean
        Get
            Return _Agrupar_Reemplazos
        End Get
        Set(value As Boolean)
            _Agrupar_Reemplazos = value
        End Set
    End Property

    Public Property Pro_SubTido As String
        Get
            Return _SubTido
        End Get
        Set(value As String)
            _SubTido = value
        End Set
    End Property

    'Public Property Pro_Cl_Soc As Cl_Solicitud_Compra
    '    Get
    '        Return _Cl_Soc
    '    End Get
    '    Set(value As Cl_Solicitud_Compra)
    '        _Cl_Soc = value
    '    End Set
    'End Property

    Public Property Pro_Idmaeedo_Relacionado As Integer
        Get
            Return _Idmaeedo_Relacionado
        End Get
        Set(value As Integer)
            _Idmaeedo_Relacionado = value
        End Set
    End Property

    Public Property Pro_Tido_Origen As String
        Get
            Return _Tido_Origen
        End Get
        Set(value As String)
            _Tido_Origen = value
        End Set
    End Property

    Public Property Pro_Nudo_Origen As String
        Get
            Return _Nudo_Origen
        End Get
        Set(value As String)
            _Nudo_Origen = value
        End Set
    End Property

    Public Property Pro_Nudo As String
        Get
            Return _TblEncabezado.Rows(0).Item("NroDocumento")
        End Get
        Set(value As String)
            _TblEncabezado.Rows(0).Item("NroDocumento") = value
        End Set
    End Property

    Public Property Pro_Ejecutar_Creacion_Automaticas_Desde_Doc_Origen() As Boolean
        Get
            Return _Ejecutar_Creacion_Automaticas_Desde_Doc_Origen
        End Get
        Set(value As Boolean)
            _Ejecutar_Creacion_Automaticas_Desde_Doc_Origen = value
        End Set
    End Property

    Public Property Pro_Id_DocEnc As Integer
        Get
            Return _Id_DocEnc
        End Get
        Set(value As Integer)
            _Id_DocEnc = value
        End Set
    End Property

    Public Property Pro_Solo_Revisar_El_Documento As Boolean
        Get
            Return _Solo_Revisar_El_Documento
        End Get
        Set(value As Boolean)
            _Solo_Revisar_El_Documento = value
        End Set
    End Property

    Public Property Pro_Es_Electronico As Boolean
        Get
            Return _TblEncabezado.Rows(0).Item("Es_Electronico")
        End Get
        Set(value As Boolean)
            _TblEncabezado.Rows(0).Item("Es_Electronico") = value
        End Set
    End Property

    Public Property Pro_Lista_de_precios_de_proveedores As Boolean
        Get
            Return _Lista_de_precios_de_proveedores
        End Get
        Set(value As Boolean)
            _Lista_de_precios_de_proveedores = value
        End Set
    End Property

    Dim _No_puede_Acceder_Al_Documento As Boolean

    Public Property Pro_No_puede_Acceder_Al_Documento As Boolean
        Get
            Return _No_puede_Acceder_Al_Documento
        End Get
        Set(value As Boolean)
            _No_puede_Acceder_Al_Documento = value
        End Set
    End Property

    Public Property Pro_Bodega_Destino As String
        Get
            _Bodega_Destino = _TblEncabezado.Rows(0).Item("Bodega_Destino")
            Return _Bodega_Destino
        End Get
        Set(value As String)
            _Bodega_Destino = value
            _TblEncabezado.Rows(0).Item("Bodega_Destino") = _Bodega_Destino
        End Set
    End Property

    Public Property Documento_Reciclado As Boolean
        Get
            Return _Documento_Reciclado
        End Get
        Set(value As Boolean)
            _Documento_Reciclado = value
        End Set
    End Property

    Public Property MensajesError As String
    Public Property ErrorAlGrabar As Boolean

    Public Property DecimalesGl As Integer
        Get
            Return _DecimalesGl
        End Get
        Set(value As Integer)
            _DecimalesGl = value
        End Set
    End Property

    Public Property SoloprodEnDoc_CLALIBPR As Boolean
    Public Property VerSoloEntidadesDelVendedor As Boolean
    Public Property NoConsolidarNuncaStock As Boolean
    Public Property Cancelar As Boolean

#End Region

    Public Sub New(Tido As String,
                   Tipo_Documento As csGlobales.Enum_Tipo_Documento,
                   Optional Post_Venta As Boolean = False,
                   Optional Cerrar_Al_Grabar As Boolean = False,
                   Optional Solicitar_Observaciones_Al_Grabar As Boolean = True,
                   Optional Es_Ajuste As Boolean = False,
                   Optional HoraAlFinalDelDia As Boolean = False,
                   Optional Documento_Reciclado As Boolean = False,
                   Optional _Facturacion_Automatica As Boolean = False)

        ' Llamada necesaria para el Diseñador de Windows Forms.
        InitializeComponent()
        ' Agregue cualquier inicialización después de la llamada a InitializeComponent().

        ModEmpresa_Doc = Mod_Empresa
        ModSucursal_Doc = Mod_Sucursal
        ModBodega_Doc = Mod_Bodega
        ModModalidad_Doc = Mod_Modalidad

        Me._Documento_Reciclado = Documento_Reciclado

        _DecimalesGl = 2

        Me._Facturacion_Automatica = _Facturacion_Automatica

        Consulta_sql = "Delete " & _Global_BaseBk & "ZW_Permisos Where CodFamilia = 'Lp'
                        Insert Into " & _Global_BaseBk & "ZW_Permisos 
                        (CodPermiso,DescripcionPermiso,CodFamilia,NombreFamiliaPermiso)
                        Select 'Lp-'+KOLT As CodPermiso,NOKOLT as DescripcionPermiso,'Lp','Listas de precios'
                        From TABPP"
        _Sql.Ej_consulta_IDU(Consulta_sql, Not _Facturacion_Automatica)


        Lbl_Version.Text = "Versión: " & _Global_Version_BakApp

        _Tipo_Documento = Tipo_Documento
        _Es_Ajuste = Es_Ajuste
        _HoraAlFinalDelDia = HoraAlFinalDelDia
        _Cerrar_Al_Grabar = Cerrar_Al_Grabar
        _Solicitar_Observaciones_Al_Grabar = Solicitar_Observaciones_Al_Grabar

        Sb_Formato_Generico_Grilla(Grilla_Encabezado, 18, New Font("Tahoma", 8), Color.White, ScrollBars.Vertical, False, False, False)
        Sb_Formato_Generico_Grilla(Grilla_Detalle, 18, New Font("Tahoma", 8), Color.White, ScrollBars.Both, True, False, False)

        _Tido = Tido
        _Tido_Original = Tido

        Grilla_Encabezado.ScrollBars = ScrollBars.None

        _RowEntidad_X_Defecto = Pro_RowEntidad_X_Defecto

        _ElistaVen = Mid(_Global_Row_Configuracion_Estacion.Item("ELISTAVEN"), 6, 3)
        _ElistaCom = Mid(_Global_Row_Configuracion_Estacion.Item("ELISTACOM"), 6, 3)
        _Elistaint = Mid(_Global_Row_Configuracion_Estacion.Item("ELISTAINT"), 6, 3)

        Consulta_sql = "Select top 1 * From MAEMO" & Environment.NewLine &
                       "Where KOMO = 'US$' AND FEMO = '" & Format(FechaDelServidor, "yyyyMMdd") & "'"

        Dim _TblMoneda As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql, Not _Facturacion_Automatica)

        _SubTido = String.Empty

        Select Case _Tipo_Documento

            Case csGlobales.Enum_Tipo_Documento.Guia_Despacho_Interna,
                 csGlobales.Enum_Tipo_Documento.Guia_Recepcion_Interna,
                 csGlobales.Enum_Tipo_Documento.Guia_Traslado_Interno,
                 csGlobales.Enum_Tipo_Documento.Nota_Venta_Interna

                _Documento_Interno = True

            Case csGlobales.Enum_Tipo_Documento.Guia_Recepcion_Prestamos_GRP_PRE

                _SubTido = "PRE"

        End Select

        _Post_Venta = Post_Venta

        If _Post_Venta Then

            Me.Text = "POST-VENTA BAKAPP"
            Lbl_InfoVtaAcumMes.Text = Me.Text
            Btn_Cambiar_Tipo_Documento.Visible = True
            Btn_Revisar_Situacion_Comercial.Visible = True

            Chk_Redondear_Cero.Checked = _Global_Row_Configuracion_Estacion.Item("Vnta_Redondear_Dscto_Cero")

        Else

            Btn_Cambiar_Tipo_Documento.Visible = False

        End If

        If _Tipo_Documento <> csGlobales.Enum_Tipo_Documento.Venta Then

            Btn_Dejar_Doc_Stand_By.Visible = False
            Btn_Revisar_Situacion_Comercial.Visible = False
            Btn_Cambiar_Tipo_Documento.Visible = False

        End If

        Btn_Informe_Ventas_X_Vendedor.Visible = _Post_Venta
        Btn_Desde_COV_OCC.Visible = _Post_Venta

        If Not _Facturacion_Automatica Then

            Sb_Limpiar(ModModalidad_Doc, True)
            Chk_Ver_Dscto_Maximo.Checked = Fx_Tiene_Permiso(Me, "Doc00048",, False)

        End If

        AddHandler Chk_Ver_Dscto_Maximo.CheckedChanging, AddressOf Chk_Ver_Dscto_Maximo_CheckedChanging
        AddHandler Chk_Ver_Dscto_Maximo.CheckedChanged, AddressOf Chk_Ver_Dscto_Maximo_CheckedChanged

        Sb_Color_Botones_Barra(Barra)
        Sb_Color_Botones_Barra(Barra_Herramientas_Producto)

    End Sub

    Private Sub Frm_Formulario_Documento_Load(sender As System.Object, e As System.EventArgs) Handles MyBase.Load

        If _Correr_a_la_derecha Then
            Me.Top += 10
            Me.Left += 10
        End If

        Dim _Color_Totales As Color = Color.FromArgb(46, 46, 46)
        Dim _Color_LblTotales As Color = Color.FromArgb(46, 46, 46)

        If Global_Thema = Enum_Themas.Oscuro Then
            _Color_Totales = Color.White
            _Color_LblTotales = Color.White
        End If

        If Not String.IsNullOrWhiteSpace(_SubTido) Then
            _TblEncabezado.Rows(0).Item("SubTido") = _SubTido
        End If

        Lblx_Total_Costo.ForeColor = _Color_Totales
        Lblx_Margen_Porc.ForeColor = _Color_Totales
        Lblx_Margen_Valor.ForeColor = _Color_Totales
        Lblx_Descuento.ForeColor = _Color_Totales
        Lblx_Sub_TNeto.ForeColor = _Color_Totales

        Lblx_Total_Neto.ForeColor = _Color_Totales
        Lblx_Iva.ForeColor = _Color_Totales
        Lblx_Ila.ForeColor = _Color_Totales
        Lblx_Total_Bruto.ForeColor = _Color_Totales

        Lbl_Total_costo.ForeColor = _Color_LblTotales
        Lbl_Total_Porc_Margen.ForeColor = _Color_LblTotales
        Lbl_Total_Valor_Margen.ForeColor = _Color_LblTotales
        Lbl_Total_Porc_Dscto.ForeColor = _Color_LblTotales
        Lbl_Total_Sub_Total_Neto.ForeColor = _Color_LblTotales

        LblTotalNeto.ForeColor = _Color_LblTotales
        LblTotalIva.ForeColor = _Color_LblTotales
        LblTotalImpuestos.ForeColor = _Color_LblTotales
        LblTotalBruto.ForeColor = _Color_LblTotales

        caract_combo(Cmb_Lista_Costo)
        Consulta_sql = "Select KOLT AS Padre,KOLT+' - '+MOLT+' '+NOKOLT AS Hijo From TABPP Where TILT = 'C' Order by Hijo"
        Cmb_Lista_Costo.DataSource = _Sql.Fx_Get_DataTable(Consulta_sql)
        Cmb_Lista_Costo.SelectedValue = "PM"

        _Configuracion_Regional_()
        Fr_Alerta_Stock = New AlertCustom("", 1)
        CType(Fr_Alerta_Stock, AlertCustom).Tido = _Tido


        Btn_Desde_COV_OCC.Visible = False


        If Not _Post_Venta Then

            Me.Text = _Sql.Fx_Trae_Dato("TABTIDO", "NOTIDO", "TIDO = '" & _Tido & "'").ToString.Trim
            Lbl_DocActual.Text = Me.Text

            If _Es_Ajuste Then
                Me.Text += Space(1) & "(AJUSTE)"
                Lbl_DocActual.Text += Space(1) & "(AJUSTE)"
                Lbl_DocActual.ForeColor = Color.Yellow
            End If

            If _SubTido = "IMP" Then Me.Text += " PROVEEDOR EXTRANJERO"

            If PreVenta Then
                Me.Text += Space(1) & "(PRE-VENTA)"
                Lbl_DocActual.Text += Space(1) & "(PRE-VENTA)"
                Lbl_DocActual.ForeColor = Color.Yellow
            End If

            If SobreStock Then
                Me.Text += Space(1) & "(SOBRE STOCK)"
                Lbl_DocActual.Text += Space(1) & "(SOBRE STOCK)"
                Lbl_DocActual.ForeColor = Color.Yellow
            End If

        Else

            Lbl_DocActual.Text = "Post-Venta"

        End If


        If _Post_Venta Then

            If _Tido = "BLV" Then

                _RowEntidad = _RowEntidad_X_Defecto
                Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, True)

                If Not _Cerrar_Al_Grabar Then

                    'Dim exists = System.IO.File.Exists(AppPath() & "\Data\" & RutEmpresa & "\BkPost\Imp_Bkpost.xml")

                    'If Not exists Then
                    '    MessageBoxEx.Show(Me, "No existe dispositivo de impresión configurado",
                    '                      "Impresora", MessageBoxButtons.OK, MessageBoxIcon.Stop,
                    '                      MessageBoxDefaultButton.Button1, Me.TopMost)
                    'End If

                End If

            End If

            Btn_Desde_COV_OCC.Visible = True

        Else

            Select Case _Tido

                Case "OCI"

                    If _SubTido = "SOC" Then

                        _RowEntidad = _RowEntidad
                        Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, True)

                    End If

                Case "OCC"

                    If Not _Cerrar_Al_Grabar Then

                        Btn_Desde_COV_OCC.Visible = True
                        Btn_Desde_COV_OCC.Tooltip = "Editar Orden De Compra. Genera una nueva Orden con datos de otra, cerrando la anterior"

                    End If

                Case "COV"

                    _TblEncabezado.Rows(0).Item("PreVenta") = PreVenta

            End Select

            Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Configuracion_Formatos_X_Modalidad" & vbCrLf &
                            "Where Empresa = '" & ModEmpresa_Doc & "' And Modalidad = '" & ModModalidad_Doc & "' And TipoDoc = '" & _Tido & "'"
            Dim _RowFormato_Mod As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            Dim _Guardar_PDF_Auto As Boolean = _RowFormato_Mod.Item("Guardar_PDF_Auto")

            Dim _Ruta_PDF = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Estaciones_Ruta_PDF", "Ruta_PDF",
                            "Empresa = '" & ModEmpresa_Doc & "' " &
                            "And NombreEquipo = '" & _NombreEquipo & "' " &
                            "And Modalidad = '" & ModModalidad_Doc & "' " &
                            "And Tido = '" & _Tido & "' And Tipo_Ruta In ('PDF','')")

            If _Guardar_PDF_Auto Then

                If String.IsNullOrEmpty(_Ruta_PDF) Or Not Directory.Exists(_Ruta_PDF) Then

                    MessageBoxEx.Show(Me, "Esta configurada la grabación de PDF automático para esta modalidad," & vbCrLf &
                                  "sin embargo falta la configuración de la carpeta de salida para grabar estos PDF." & vbCrLf & vbCrLf &
                                  "Para configurar esta operación debe hacer lo siguiente:" & vbCrLf & vbCrLf &
                                  "-> Clic en OK o cerrar" & vbCrLf &
                                  "-> En el formulario del documento presionar el botón de la AMPOLLETA (Opciones especiales)" & vbCrLf &
                                  "-> Configuración impresora de salida" & vbCrLf &
                                  "-> Directorio de salida para PDF automático", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Warning)

                End If

            End If

        End If

        AddHandler Me.KeyDown, AddressOf Frm_Formulario_Documento_KeyDown

        Sb_Grilla_Detalle_Eventos(True)

        Sb_Formato_Grilla_Encabezado()
        Sb_Formato_Grilla_Detalle()

        Me.Refresh()

        If _Post_Venta Then
            Me.ActiveControl = Grilla_Detalle
            Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(0).Cells("Codigo")
        Else
            Me.ActiveControl = Grilla_Encabezado
            If _Tido = "GRC" Or _Tido = "FCC" Or _Tido = "GRD" Then
                Grilla_Encabezado.CurrentCell = Grilla_Encabezado.Rows(0).Cells("NroDocumento")
            Else
                Grilla_Encabezado.CurrentCell = Grilla_Encabezado.Rows(0).Cells("CodEntidad")
            End If
        End If

        Dim _Existe = System.IO.File.Exists(_Ruta_Documento_Bkp)

        If _Revision_Remota Then

            ' REVISION DE DOCUMENTO DESDE SOLICITUDES EN CADENA PARA PERMISOS REMOTOS

            Timer_Revisa_Permiso_Remoto.Enabled = _Revisar_Notificacion_Automatica_Remota
            Me.MinimizeBox = False
            Btn_Limpiar.Visible = False
            Btn_Editar_Nota_de_venta.Visible = False

            Dim _CodPermiso As String = _RowRemota_Notificacion.Item("CodPermiso")

            If Not _CodPermiso.Contains("Bkp00014") Then
                _Bloquear_Edicion_Detalle = True
            End If

            'AddHandler Btn_Aceptar_Documento.Click, AddressOf Sb_Autorizar_Permiso_Solicitado
            'AddHandler Btn_Rechazar_Documento.Click, AddressOf Sb_Rechazar_Permiso_Solicitado

        ElseIf _Revisar_Notificacion_Automatica_Remota Then

            ' REVISION DE DOCUMENTO CUANDO EL PERMISO NO ES OTORGADO REMOTAMENTE Y ES RECHAZADO.

            Timer_Revisar_Notificacion.Enabled = _Revisar_Notificacion_Automatica_Remota
            Me.MinimizeBox = False
            Btn_Limpiar.Visible = False
            Btn_Editar_Nota_de_venta.Visible = False

        ElseIf _Ejecutar_Creacion_Automaticas_Desde_Doc_Origen Then

            Timer_Crear_Doc_Desde_Otro.Start()

        ElseIf _Solo_Revisar_El_Documento Then

            Timer_Solo_Ver_Documento_Casi_Bakapp.Start()

        Else

            If _Existe Then
                Sb_Traer_Documento_Minimizado()
            End If

        End If

        AddHandler Rdb_Costo_Lista.CheckedChanged, AddressOf Sb_Rdb_CheckedChanged
        AddHandler Rdb_Costo_PM.CheckedChanged, AddressOf Sb_Rdb_CheckedChanged
        AddHandler Rdb_Costo_Uc.CheckedChanged, AddressOf Sb_Rdb_CheckedChanged
        AddHandler Cmb_Lista_Costo.SelectedIndexChanged, AddressOf Sb_Rdb_CheckedChanged

        Barra.Visible = True

        Sb_Botones_Activos(False, True)

        Btn_Archivos_Adjuntos.Visible = _Sql.Fx_Existe_Tabla(_Global_BaseBk & "Zw_Casi_DocArc")


        Dim _Es_Electronico As Boolean = _TblEncabezado.Rows(0).Item("Es_Electronico")
        Dim _NroDocumento As String = _TblEncabezado.Rows(0).Item("NroDocumento")

        If _Es_Electronico Then

            MensajeRevFolio = Fx_Revisar_Expiracion_Folio_SII(Me, _Tido, _NroDocumento, Not _Facturacion_Automatica, ModEmpresa_Doc, ModModalidad_Doc)

            If Not MensajeRevFolio.EsCorrecto And Not _Facturacion_Automatica Then ' Not Fx_Revisar_Expiracion_Folio_SII(Nothing, _Tido, _NroDocumento, True) Then

                If Not String.IsNullOrEmpty(_NroDocumento) Then

                    MessageBoxEx.Show(Me, MensajeRevFolio.Mensaje, MensajeRevFolio.Detalle, MessageBoxButtons.OK, MensajeRevFolio.Icono)

                    'MessageBoxEx.Show(Me, "El folio del documento electrónico (" & _NroDocumento & ") ya expiró en el SII." & vbCrLf &
                    '                  "Informe al administrador del sistema", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)

                End If

                Me.Close()

            End If

        End If

        Sb_Revisar_Si_Hay_Archivos_Adjuntos()

        If _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Configuracion", "SoloprodEnDoc_CLALIBPR") Then
            If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Venta Then
                SoloprodEnDoc_CLALIBPR = _Global_Row_Configuracion_Estacion.Item("SoloprodEnDoc_CLALIBPR")
            End If
        End If

        Lbl_TipoVenta.Visible = SoloprodEnDoc_CLALIBPR
        Btn_CambiarTipoVenta.Visible = SoloprodEnDoc_CLALIBPR

        Me.Refresh()

    End Sub

    Sub Sb_Revisar_Si_Hay_Archivos_Adjuntos()

        Dim _Archivos = Fx_Revisar_Si_Hay_Archivos_Adjuntos(_NombreEquipo, _TblDetalle, "Idmaeedo_Dori")

        If _Revision_Remota Then

            Dim _Id_DocEnc = _RowRemota_Notificacion.Item("Id_Casi_DocEnc")

            _Archivos += _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_Casi_DocArc", "Id_DocEnc = " & _Id_DocEnc)

        End If

        If _Archivos > 0 Then
            Btn_Archivos_Adjuntos.Tooltip = "Archivos adjuntos al documento (" & _Archivos & " archivo(s))"
            If _Archivos > 9 Then
                Btn_Archivos_Adjuntos.Image = My.Resources.Recursos_Documento.attach_number_9_plus
                Btn_Archivos_Adjuntos.ImageAlt = My.Resources.Recursos_Documento.attach_number_9_plus___copia
            Else
                Select Case _Archivos
                    Case 0
                        Btn_Archivos_Adjuntos.Image = My.Resources.Recursos_Documento.document_attach
                        Btn_Archivos_Adjuntos.ImageAlt = My.Resources.Recursos_Documento.document_attach___copia
                    Case 1
                        Btn_Archivos_Adjuntos.Image = My.Resources.Recursos_Documento.attach_number_1
                        Btn_Archivos_Adjuntos.ImageAlt = My.Resources.Recursos_Documento.attach_number_1___copia
                    Case 2
                        Btn_Archivos_Adjuntos.Image = My.Resources.Recursos_Documento.attach_number_2
                        Btn_Archivos_Adjuntos.ImageAlt = My.Resources.Recursos_Documento.attach_number_2___copia
                    Case 3
                        Btn_Archivos_Adjuntos.Image = My.Resources.Recursos_Documento.attach_number_3
                        Btn_Archivos_Adjuntos.ImageAlt = My.Resources.Recursos_Documento.attach_number_3___copia
                    Case 4
                        Btn_Archivos_Adjuntos.Image = My.Resources.Recursos_Documento.attach_number_4
                        Btn_Archivos_Adjuntos.ImageAlt = My.Resources.Recursos_Documento.attach_number_4___copia
                    Case 5
                        Btn_Archivos_Adjuntos.Image = My.Resources.Recursos_Documento.attach_number_5
                        Btn_Archivos_Adjuntos.ImageAlt = My.Resources.Recursos_Documento.attach_number_5___copia
                    Case 6
                        Btn_Archivos_Adjuntos.Image = My.Resources.Recursos_Documento.attach_number_6
                        Btn_Archivos_Adjuntos.ImageAlt = My.Resources.Recursos_Documento.attach_number_6___copia
                    Case 7
                        Btn_Archivos_Adjuntos.Image = My.Resources.Recursos_Documento.attach_number_7
                        Btn_Archivos_Adjuntos.ImageAlt = My.Resources.Recursos_Documento.attach_number_7___copia
                    Case 8
                        Btn_Archivos_Adjuntos.Image = My.Resources.Recursos_Documento.attach_number_8
                        Btn_Archivos_Adjuntos.ImageAlt = My.Resources.Recursos_Documento.attach_number_8___copia
                    Case 9
                        Btn_Archivos_Adjuntos.Image = My.Resources.Recursos_Documento.attach_number_9
                        Btn_Archivos_Adjuntos.ImageAlt = My.Resources.Recursos_Documento.attach_number_9___copia
                End Select
            End If
        Else
            Btn_Archivos_Adjuntos.Tooltip = "Archivos adjuntos al documento"
            Btn_Archivos_Adjuntos.Image = My.Resources.Recursos_Documento.document_attach
            Btn_Archivos_Adjuntos.ImageAlt = My.Resources.Recursos_Documento.document_attach___copia
        End If

    End Sub

    Sub Sb_Botones_Activos(_Revisando_Situacion_Comercial As Boolean, _DemarcarPickeo As Boolean)

        _RevisandoBotonesActivos = True

        BtnGrabar.Visible = False
        Btn_Limpiar.Visible = False
        Btn_Desde_COV_OCC.Visible = False
        Btn_Productos_Solicitados_Bodega.Visible = False
        Btn_Revisar_Situacion_Comercial.Visible = False
        Btn_Cambiar_Tipo_Documento.Visible = False

        Btn_Dejar_Doc_Stand_By.Visible = False
        Btn_Observaciones.Visible = False
        Btn_Informe_Ventas_X_Vendedor.Visible = False
        Btn_Editar_Cotizacion.Visible = False
        Btn_Editar_Nota_de_venta.Visible = False
        Btn_Aceptar_Documento.Visible = False
        Btn_Rechazar_Documento.Visible = False
        Btn_Ver_Costos.Visible = False
        Btn_Mostrar_Margenes.Visible = False

        Btn_Cadena_Remota.Visible = False
        Btn_Mini_Sol_Crear_Producto.Visible = False
        Btn_Mini_Sol_Compra.Visible = False
        Btn_Sol_Compra.Visible = False
        Btn_Anotaciones_al_documento.Visible = False

        Btn_Opciones_Especiales.Visible = False
        Btn_Prestashop.Enabled = False
        Btn_Cliente_Prestashop.Enabled = False

        Btn_Revisar_Situacion_Comercial.Image = My.Resources.Recursos_Documento.project_calculate 'Imagenes_32x32.Images.Item("project-calculate.png")
        Btn_Revisar_Situacion_Comercial.ImageAlt = My.Resources.Recursos_Documento.project_calculate___copia 'Imagenes_32x32.Images.Item("project-calculate.png")

        Btn_Revisar_Situacion_Comercial.Text = String.Empty
        Btn_Revisar_Situacion_Comercial.Tooltip = "Revisar situación comercial del documento [F8]"

        Btn_Despacho.Enabled = False

        Lbl_Reserva_OCC.Visible = (_Tido = "OCC")
        Btn_Grabar_Doc_Reserva_OCC.Visible = (_Tido = "OCC")
        Btn_Utilizar_Doc_Reserva_OCC.Visible = (_Tido = "OCC")
        Btn_Bodega_Para_Todos.Visible = (_Tido = "OCC")
        Btn_Lista_Costos_Proveedor.Visible = (_Tido = "OCC" Or _Tido = "GRC" Or _Tido = "FCC" Or _Tido = "BLC")
        Btn_Levantar_Prod_Txt_Especial_Saime.Visible = _Tido = "GRI"

        Dim _Visado As Boolean = _TblEncabezado.Rows(0).Item("Vizado")

        Lbl_Progreso.Visible = False
        Barra_Progreso.Visible = False

        Btn_Cambiar_Moneda.Enabled = Not _Revision_Remota
        Btn_Contenedor.Visible = PreVenta

        If _DemarcarPickeo Then
            Chk_Pickear.Checked = False
            Chk_Pickear.Visible = False
            Chk_Pickear.Enabled = True
        End If



        If _Revisando_Situacion_Comercial Or _Revision_Remota Or _Solo_Revisar_El_Documento Then

            Btn_Aceptar_Documento.Visible = _Revision_Remota
            Btn_Rechazar_Documento.Visible = _Revision_Remota
            Btn_Observaciones.Visible = _Revision_Remota
            Btn_Ver_Costos.Visible = True
            Btn_Mostrar_Margenes.Visible = True
            Btn_Anotaciones_al_documento.Visible = True
            Btn_Recargar_Producto.Enabled = False
            Chk_Ver_Dscto_Maximo.Visible = False
            Chk_Pickear.Enabled = False

        Else

            Select Case _Tido

                Case "BLV", "FCV", "FDV", "COV", "GDV", "NCV", "GRD"

                    BtnGrabar.Visible = True
                    Btn_Limpiar.Visible = True
                    Btn_Dejar_Doc_Stand_By.Visible = True
                    Btn_Observaciones.Visible = True

                    Btn_Opciones_Especiales.Visible = True
                    Btn_Prestashop.Enabled = True

                    If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Then

                        Btn_Revisar_Situacion_Comercial.Visible = Not _Cerrar_Al_Grabar
                        Btn_Modificar_Chk_Redondeo.Visible = True

                    End If

                    Btn_Cambiar_Tipo_Documento.Visible = (_Post_Venta Or _Tido = "BLV")

                    If _Documento_Reciclado Then
                        Btn_Cambiar_Tipo_Documento.Visible = False
                    End If

                    Btn_Informe_Ventas_X_Vendedor.Visible = _Post_Venta
                    Btn_Desde_COV_OCC.Visible = _Post_Venta

                    Btn_Cadena_Remota.Visible = (_Tido = "NVV")

                    Btn_Mini_Sol_Compra.Visible = True
                    Btn_Sol_Compra.Visible = True
                    Btn_Anotaciones_al_documento.Visible = True

                    If _Post_Venta Then
                        Btn_Desde_COV_OCC.Visible = Not _Cerrar_Al_Grabar
                    Else
                        Btn_Dejar_Doc_Stand_By.Visible = Not _Cerrar_Al_Grabar
                    End If

                    Btn_Despacho.Enabled = True

                    Btn_Editar_Cotizacion.Visible = (_Tido = "COV")
                    Btn_Contenedor.Visible = (_Tido = "COV" And PreVenta)

                Case "COV", "NVV"

                    BtnGrabar.Visible = True
                    Btn_Limpiar.Visible = True
                    Btn_Revisar_Situacion_Comercial.Visible = True
                    Btn_Dejar_Doc_Stand_By.Visible = True
                    Btn_Observaciones.Visible = True

                    Btn_Editar_Nota_de_venta.Visible = (_Tido = "NVV")

                    Btn_Informe_Ventas_X_Vendedor.Visible = True
                    Btn_Cadena_Remota.Visible = True
                    Btn_Anotaciones_al_documento.Visible = True

                    Btn_Opciones_Especiales.Visible = True
                    Btn_Prestashop.Enabled = True
                    Btn_Despacho.Enabled = True

                Case "OCI", "OCC", "NVI"

                    BtnGrabar.Visible = True
                    Btn_Limpiar.Visible = True
                    Btn_Dejar_Doc_Stand_By.Visible = True

                    Btn_Observaciones.Visible = True
                    Chk_Redondear_Cero.Visible = False
                    Btn_Anotaciones_al_documento.Visible = True

                    Btn_Desde_COV_OCC.Visible = (Not _Cerrar_Al_Grabar And _Tido <> "NVI")
                    Btn_Cadena_Remota.Visible = (Not _Cerrar_Al_Grabar And _Tido <> "NVI")

                    Btn_Opciones_Especiales.Visible = True

                Case "GRC", "FCC", "GTI", "GDD", "GDP", "GRI", "GDI"

                    BtnGrabar.Visible = True
                    Btn_Limpiar.Visible = True
                    Btn_Dejar_Doc_Stand_By.Visible = True

                    Btn_Observaciones.Visible = True
                    Chk_Redondear_Cero.Visible = False
                    Btn_Anotaciones_al_documento.Visible = True

                    Btn_Opciones_Especiales.Visible = True

            End Select

            Btn_Limpiar.Visible = Not _Cerrar_Al_Grabar

            If Me.MinimizeBox Then
                Me.MinimizeBox = Not _Cerrar_Al_Grabar
            End If

            If _Tido = "NVV" And _DemarcarPickeo Then
                Chk_Pickear.Checked = _Global_Row_Configuracion_General.Item("Pickear_NVVTodas")
                Chk_Pickear.Visible = _Global_Row_Configuracion_General.Item("Pickear_NVVTodas")
                Chk_Pickear.Enabled = True
            End If

        End If

        Me.ControlBox = True

        If _Revisar_Notificacion_Automatica_Remota Or _Revision_Remota Then

            Me.ControlBox = True
            Me.MinimizeBox = False

            Btn_Limpiar.Visible = False
            Btn_Cadena_Remota.Visible = False
            Btn_Dejar_Doc_Stand_By.Visible = False
            Btn_Editar_Nota_de_venta.Visible = False

        End If

        'BOTONOS INCATIVO O ACTIVOS EN CASO DE ESTAR VISADO EL DOCUMENTO

        Btn_Dejar_Doc_Stand_By.Enabled = Not Warning_Visado.Visible
        Btn_Editar_Nota_de_venta.Enabled = Not Warning_Visado.Visible
        Btn_Cambiar_Bodega.Enabled = Not Warning_Visado.Visible

        If _Tido = "NVV" Or _Tido = "OCC" Then
            Btn_Cadena_Remota.Enabled = Not Warning_Visado.Visible
        End If

        _TblEncabezado.Rows(0).Item("Pickear") = Chk_Pickear.Checked

        _RevisandoBotonesActivos = False

        Me.Refresh()

    End Sub

    Private Sub Frm_Formulario_Documento_FormClosed(sender As Object, e As System.Windows.Forms.FormClosedEventArgs) Handles Me.FormClosed

        If Fr_Alerta_Stock.Visible Then
            Fr_Alerta_Stock.Close()
        End If

        If Not _Revision_Remota Then

            If _Sql.Fx_Existe_Tabla(_Global_BaseBk & "Zw_Casi_DocArc") Then

                Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Casi_DocArc Where NombreEquipo = '" & _NombreEquipo & "' And Id_DocEnc = " & _Id_DocEnc_Arc & " And En_Construccion = 1"
                _Sql.Ej_consulta_IDU(Consulta_sql)

            End If

        End If

        Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Casi_DocTom Where NombreEquipo = '" & _NombreEquipo & "'"
        _Sql.Ej_consulta_IDU(Consulta_sql)

        If PreVenta Then
            Dim _Cl_Contenedor As New Cl_Contenedor
            _Cl_Contenedor.Fx_Soltar_Contenedor_Tomado()
        End If

    End Sub

    Sub Sb_Grilla_Detalle_Eventos(_Agregar As Boolean)

        If _Agregar Then

            AddHandler Grilla_Detalle.KeyDown, AddressOf Grilla_Detalle_KeyDown
            AddHandler Grilla_Detalle.CellEndEdit, AddressOf Grilla_Detalle_CellEndEdit
            AddHandler Grilla_Detalle.RowPostPaint, AddressOf Sb_Grilla_Detalle_RowPostPaint
            AddHandler Grilla_Detalle.CellEnter, AddressOf Grilla_Detalle_CellEnter
            AddHandler Grilla_Detalle.EditingControlShowing, AddressOf Grilla_Detalle_EditingControlShowing
            AddHandler Grilla_Detalle.MouseDown, AddressOf Grilla_Detalle_MouseDown
            AddHandler Grilla_Detalle.CellDoubleClick, AddressOf Grilla_Detalle_CellDoubleClick

        Else

            RemoveHandler Grilla_Detalle.KeyDown, AddressOf Grilla_Detalle_KeyDown
            RemoveHandler Grilla_Detalle.CellEndEdit, AddressOf Grilla_Detalle_CellEndEdit
            RemoveHandler Grilla_Detalle.RowPostPaint, AddressOf Sb_Grilla_Detalle_RowPostPaint
            RemoveHandler Grilla_Detalle.CellEnter, AddressOf Grilla_Detalle_CellEnter
            RemoveHandler Grilla_Detalle.EditingControlShowing, AddressOf Grilla_Detalle_EditingControlShowing
            RemoveHandler Grilla_Detalle.MouseDown, AddressOf Grilla_Detalle_MouseDown
            RemoveHandler Grilla_Detalle.CellDoubleClick, AddressOf Grilla_Detalle_CellDoubleClick

        End If

    End Sub

    Sub Sb_Nuevo_Doc(_Cambiar_Tido As Boolean)

        If _Cambiar_Tido Then _Tido = _Tido_Original

        _Grabar = False
        _No_Volver_A_Preguntar_Agrupa_Producto = False
        _Idmaeedo_Relacionado = 0
        _Idmaeedo_Origen = 0
        _NroDocumento_Editado_Por_Usuario = False
        _Doc_Desde_Arch_Txt_Especial_Saime = False
        _Nombre_Archivo_Txt_Especial_Saime = String.Empty
        _Desde_Prestahop = False
        _ListaCodQRUnicosLeidos = New List(Of CodigosDeBarra.CodigosQRLeidos)
        _ListaCodConDocLeidos = New List(Of CodigosDeBarra.CodigosConDocLeidos)
        _Patente_rvm = String.Empty

        _Cl_DocListaSuperior = New Cl_DocListaSuperior
        _Cl_Pallet = New Pallet.Cl_Pallet
        Lbl_InfoVtaAcumMes.Visible = False

        Lbl_NroDecimales.Text = FormatNumber(0, _DecimalesGl)

        Chk_Redondear_Cero.Enabled = False
        _AvisoCambioRTUVariable = False

        Btn_UtilizarDetalleOtroDoc.Tag = String.Empty

        _Cl_Despacho = Nothing

        If Not IsNothing(Fm_MPC) Then
            Fm_MPC.Close()
            Fm_MPC.Dispose()
            Fm_MPC = Nothing
        End If

        _Ls_Cl_PreVenta = New List(Of Zw_PreVenta_StockProd)

        'Dim _Cl_Contenedor As New Cl_Contenedor
        '_Cl_Contenedor.Fx_Soltar_Contenedor_Tomado(_Zw_Contenedor)
        '_Zw_Contenedor = New Zw_Contenedor

        Consulta_sql = "Insert Into " & _Global_BaseBk & "Zw_Conceptos (Koct)" & vbCrLf &
                       "Select KOCT From TABCT" & vbCrLf &
                       "Where KOCT Not In (Select Koct From " & _Global_BaseBk & "Zw_Conceptos)"
        _Sql.Ej_consulta_IDU(Consulta_sql)

        Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Conceptos" & vbCrLf &
                       "Where Koct Not In (Select KOCT From TABCT)"
        _Sql.Ej_consulta_IDU(Consulta_sql)

        If Not _Revision_Remota Then

            If _Sql.Fx_Existe_Tabla(_Global_BaseBk & "Zw_Casi_DocArc") Then

                Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Casi_DocArc Where NombreEquipo = '" & _NombreEquipo & "' And En_Construccion = 1"
                _Sql.Ej_consulta_IDU(Consulta_sql)

            End If

        End If

        If _Global_Row_Configuracion_General.Item("BuscarProdConCodRapido") Then
            Consulta_sql = "Insert Into " & _Global_BaseBk & "Zw_Prod_Asociacion (Codigo,DescripcionBusqueda)" & vbCrLf &
                           "Select KOPR,KOPRRA From MAEPR" & vbCrLf &
                           "Where KOPRRA Not In (Select DescripcionBusqueda From " & _Global_BaseBk & "Zw_Prod_Asociacion)"
            _Sql.Ej_consulta_IDU(Consulta_sql)
        End If

        If _Global_Row_Configuracion_General.Item("BuscarProdConCodTecnico") Then
            Consulta_sql = "Insert Into " & _Global_BaseBk & "Zw_Prod_Asociacion (Codigo,DescripcionBusqueda)" & vbCrLf &
                           "Select KOPR,KOPRTE From MAEPR" & vbCrLf &
                           "Where KOPRTE Not In (Select DescripcionBusqueda From " & _Global_BaseBk & "Zw_Prod_Asociacion)"
            _Sql.Ej_consulta_IDU(Consulta_sql)
        End If


        Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Configuracion_Formatos_X_Modalidad" & vbCrLf &
                       "Where Empresa = '" & ModEmpresa_Doc & "' And Modalidad = '" & ModModalidad_Doc & "' And TipoDoc = '" & _Tido & "'"
        _Row_Formato_Modalidad = _Sql.Fx_Get_DataRow(Consulta_sql)

        Dim _Grabar_Con_Huella As Boolean = _Row_Formato_Modalidad.Item("Grabar_Con_Huella")

        Btn_Huella.Visible = _Grabar_Con_Huella

        If _Grabar_Con_Huella Then

            If _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_EstacionesBkp", "Tiene_Lector_Huella") And
               _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_EstacionesBkp", "Lector_Huella") Then

                Dim _Tiene_Lector_Huella As Boolean = _Global_Row_EstacionBk.Item("Tiene_Lector_Huella")

                _Global_Row_EstacionBk.Item("Lector_Huella") = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_EstacionesBkp", "Lector_Huella", "NombreEquipo = '" & _NombreEquipo & "'")

                If _Tiene_Lector_Huella Then
                    Lbl_Version.Text = "Versión: " & _Global_Version_BakApp & ", DOCUMENTO SE TIENE QUE GRABAR CON LECTOR DE HUELLAS: " & _Global_Row_EstacionBk.Item("Lector_Huella")
                    Btn_Huella.Tag = 1
                End If

            Else
                Btn_Huella.Tag = 0
                Btn_Huella.Tooltip = Lbl_Version.Text = "Versión: " & _Global_Version_BakApp & "Falta configuración de huella para este equipo"
            End If

        End If

        _Id_DocEnc_Arc = 0

        _No_Puede_Ver_Precios = Fx_Tiene_Permiso(Me, "NO00001", , False)

        Btn_Cambiar_IVA.Enabled = False

        Table_Totales_Comerciales.Visible = False
        Table_Metodo_Costeo_Comercial.Visible = False

        Dim _Aplicar_Venciminetos = True

        LabelX2.Text = "Funcionario activo"

        If Not _Post_Venta Then

            Me.Text = _Sql.Fx_Trae_Dato("TABTIDO", "NOTIDO", "TIDO = '" & _Tido & "'").ToString.Trim
            Lbl_DocActual.Text = Me.Text

            If _Es_Ajuste Then
                Me.Text += Space(1) & "(AJUSTE)"
                Lbl_DocActual.Text += Space(1) & "(AJUSTE)"
                Lbl_DocActual.ForeColor = Color.Yellow
            End If

            If _SubTido = "IMP" Then Me.Text += " PROVEEDOR EXTRANJERO"

            If PreVenta Then
                Me.Text += Space(1) & "(PRE-VENTA)"
                Lbl_DocActual.Text += Space(1) & "(PRE-VENTA)"
                Lbl_DocActual.ForeColor = Color.Yellow
            End If

        Else

            Lbl_DocActual.Text = "Post-Venta"

        End If

        _New_Idmaeedo = 0
        Dim _TipoValor = _Global_Row_Configuracion_Estacion.Item("Vnta_TipoValor_Bruto_Neto")

        _Ds_Matriz_Documentos.Clear()
        _Ds_Matriz_Documentos = New Ds_Matriz_Documentos

        _Ds_Documento_de_Origen = Nothing

        _Hay_Descuentos_Individuales = False
        _Hay_Descuentos_Globales = False

        _RowEntidad = Nothing
        _RowEntidad_Despacho = Nothing

        Txt_Nombre_Entidad.Text = String.Empty
        Txt_Contacto.Text = String.Empty
        Lbl_Nombre_Entidad_Fisica.Text = String.Empty

        _TblDocumentos_Dori = Nothing

        If _Post_Venta Or _Tido = "BLV" Then

            If Not _Documento_Reciclado Then If _Cambiar_Tido Then _Tido = "BLV"
            _RowEntidad = Pro_RowEntidad_X_Defecto

        Else

            ' DOCUMENTOS INTERNOS

            If _Documento_Interno Then

                Dim _Rten = Split(RutEmpresa, "-")

                Consulta_sql = "Select Top 1 * From MAEEN Where KOEN = '" & RutEmpresa & "' And TIPOSUC = 'P'"
                _RowEntidad = _Sql.Fx_Get_DataRow(Consulta_sql)

                If IsNothing(_RowEntidad) Then
                    Consulta_sql = "Select Top 1 * From MAEEN Where KOEN LIKE '" & _Rten(0) & "%' AND RTEN = '" & _Rten(0) & "' And TIPOSUC = 'P'"
                    _RowEntidad = _Sql.Fx_Get_DataRow(Consulta_sql)
                End If

                If IsNothing(_RowEntidad) Then
                    Consulta_sql = "Select Top 1 * From MAEEN Where KOEN LIKE '" & _Rten(0) & "%' And TIPOSUC = 'P'"
                    _RowEntidad = _Sql.Fx_Get_DataRow(Consulta_sql)
                End If

                If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Guia_Traslado_Interno Or
                   _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Nota_Venta_Interna Or
                   _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Recepcion_Interna Then
                    _RowEntidad.Item("KOEN") = RutEmpresa
                    _RowEntidad.Item("SUEN") = String.Empty
                End If

                If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Despacho_Interna Then
                    _RowEntidad.Item("KOEN") = RutEmpresa
                    _RowEntidad.Item("SUEN") = Mod_Sucursal
                End If

                _Aplicar_Venciminetos = False

            Else

                _RowEntidad = Nothing

            End If

        End If

        ' ESTO SIRVE PARA VINCULAR LA TABLA DE PASO DE LOS DESCUENTOS CON LA TABLA DE PASO DEL DETALLE
        Try
            Dim _ds As Object = _Ds_Matriz_Documentos
            Dim ParentCol As DataColumn = _Ds_Matriz_Documentos.Tables("Detalle_Doc").Columns("Id")
            Dim ChildCol As DataColumn = _Ds_Matriz_Documentos.Tables("Descuentos_Doc").Columns("Id")

            Dim _Dr As New DataRelation("Productos", ParentCol, ChildCol)
            _Dr.Nested = True
            _Ds_Matriz_Documentos.Relations.Add(_Dr)
        Catch ex As Exception

        End Try

        Try
            Dim _ds As Object = _Ds_Matriz_Documentos
            Dim ParentCol As DataColumn = _Ds_Matriz_Documentos.Tables("Detalle_Doc").Columns("Id")
            Dim ChildCol As DataColumn = _Ds_Matriz_Documentos.Tables("Impuestos_Doc").Columns("Id")
            Dim _Dr As New DataRelation("Productos_", ParentCol, ChildCol)
            _Dr.Nested = True
            _Ds_Matriz_Documentos.Relations.Add(_Dr)
        Catch ex As Exception

        End Try

        Try
            Dim _ds As Object = _Ds_Matriz_Documentos
            Dim ParentCol As DataColumn = _Ds_Matriz_Documentos.Tables("Detalle_Doc").Columns("Id")
            Dim ChildCol As DataColumn = _Ds_Matriz_Documentos.Tables("Tbl_Wms").Columns("Id")
            Dim _Dr As New DataRelation("Productos_", ParentCol, ChildCol)
            _Dr.Nested = True
            _Ds_Matriz_Documentos.Relations.Add(_Dr)
        Catch ex As Exception

        End Try

        _TblDetalle = _Ds_Matriz_Documentos.Tables("Detalle_Doc")
        Grilla_Detalle.DataSource = _TblDetalle 'Nothing

        'Grilla_Detalle.DataSource = _Ds_Matriz_Documentos
        'Grilla_Detalle.DataMember = _Ds_Matriz_Documentos.Tables("Detalle_Doc").TableName

        Dim _FechaEmision As Date = Now
        Dim _Fecha_1er_Vencimiento As Date = Now
        Dim _FechaUltVencimiento As Date = Now
        Dim _FechaRecepcion As Date = Now

        Dim _Cuotas = 0
        Dim _Dias_1er_Vencimiento = 0
        Dim _Dias_Vencimiento = 0
        Dim _Forma_de_Pago = String.Empty

        Dim _NewNeroDocumento As String

        If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Then

        End If

        '*********************************************************************

        If _Cuotas = 0 Then _Cuotas = 1

        Dim _Cuotas_(_Cuotas - 1) As Date
        _Cuotas_(0) = _FechaUltVencimiento

        Dim _FechasVenci As Date = _FechaEmision
        Dim _dias As Integer
        'If Cuotas > 1 Then
        _dias = _Dias_1er_Vencimiento
        For i = 1 To _Cuotas
            _FechasVenci = DateAdd(DateInterval.Day, _dias, _FechasVenci)
            _Cuotas_(i - 1) = _FechasVenci
            _dias = _Dias_Vencimiento
        Next
        _FechaUltVencimiento = _FechasVenci
        _Fecha_1er_Vencimiento = _Cuotas_(0)

        Dim _Centro_Costo As String

        Consulta_sql = "Select TOP 1 * From TABMO Where KOMO = '$'"
        _RowMoneda_Doc = _Sql.Fx_Get_DataRow(Consulta_sql)

        Dim _Moneda As String = _RowMoneda_Doc.Item("KOMO").ToString.Trim
        Dim _Tasadorig_Doc As Double = _RowMoneda_Doc.Item("VAMO")
        Dim _Tipo_Moneda As String = _RowMoneda_Doc.Item("TIMO")

        Dim _Valor_Dolar As Double

        Consulta_sql = "Select TOP 1 * From MAEMO Where KOMO = 'US$' AND FEMO = '" & Format(FechaDelServidor, "yyyyMMdd") & "' Order by IDMAEMO DESC"
        Dim _RowMoneda_USdolar = _Sql.Fx_Get_DataRow(Consulta_sql)

        If Not IsNothing(_RowMoneda_USdolar) Then
            _Valor_Dolar = _RowMoneda_USdolar.Item("VAMO")
        End If

        LblMoneda.Tag = _Moneda
        LblMoneda.Text = _Moneda

        Dim _ListaPrecios As String

        Dim _CodEntidad = String.Empty
        Dim _CodSucEntidad = String.Empty
        Dim _Entidad_Fisica_Doc = String.Empty
        Dim _EntidadSuc_Fisica_Doc = String.Empty

        If Not (_RowEntidad Is Nothing) Then
            _CodEntidad = _RowEntidad.Item("KOEN")
            _CodSucEntidad = _RowEntidad.Item("SUEN")
        End If

        If Not (_RowEntidad_Despacho Is Nothing) Then
            _Entidad_Fisica_Doc = _RowEntidad_Despacho.Item("KOEN")
            _EntidadSuc_Fisica_Doc = _RowEntidad_Despacho.Item("SUEN")
        End If

        If _Sql.Fx_Exite_Campo("CONFIEST", _Tido) And _Tido <> "GRP" Then
            _NewNeroDocumento = Traer_Numero_Documento(_Tido, , , , True, Me)
        End If

        Select Case _Tido
            Case "GRC", "FCC", "GRD"
                _NewNeroDocumento = String.Empty
        End Select

        _TipoValor = _Sql.Fx_Trae_Dato("TABTIDO", "MEARDO", "TIDO = '" & _Tido & "'")

        If _TipoValor = "N" Then
            ChkValores.Checked = True
        ElseIf _TipoValor = "B" Then
            ChkValores.Checked = False
        End If

        If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Then
            _Centro_Costo = "LUVTVEN"
            _ListaPrecios = _ElistaVen

            If _RowEntidad Is Nothing Then
                If _Tido = "BLV" Then
                    '_CodEntidad = _EntidadXdefecto
                    '_CodSucEntidad = _SucEntXdefecto
                End If
            End If

            ChkValores.Visible = True
            ChkValores.Enabled = False

        Else
            _Centro_Costo = "LUVTCOM"

            If _Documento_Interno Then
                _ListaPrecios = _Elistaint
            Else
                _ListaPrecios = _ElistaCom
            End If

        End If

        _Centro_Costo = _Global_Row_Configuracion_Estacion.Item(_Centro_Costo).ToString.Trim

        If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Nota_Venta_Interna Or
            _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Traslado_Interno Then
            _Centro_Costo = String.Empty
        End If

        Dim _Modalidad_Doc As String = _Global_Row_Configuracion_Estacion.Item("Modalidad")

        _TblEncabezado = _Ds_Matriz_Documentos.Tables("Encabezado_Doc")
        Grilla_Encabezado.DataSource = _TblEncabezado

        Dim _Campo_NroDocumemto As DataGridViewTextBoxColumn
        _Campo_NroDocumemto = Grilla_Encabezado.Columns("NroDocumento")
        _Campo_NroDocumemto.MaxInputLength = 10

        Dim NewFila As DataRow
        NewFila = _TblEncabezado.NewRow
        With NewFila

            .Item("Id_DocEnc") = 0
            .Item("Post_Venta") = _Post_Venta
            .Item("Tipo_Documento") = _Tipo_Documento.ToString

            .Item("Modalidad") = _Modalidad_Doc
            .Item("Empresa") = ModEmpresa_Doc
            .Item("Sucursal") = Mod_Sucursal
            .Item("TipoDoc") = _Tido
            .Item("SubTido") = _SubTido

            .Item("NroDocumento") = _NewNeroDocumento '"XXXXXXXXXX"
            .Item("CodEntidad") = NuloPorNro(_CodEntidad, String.Empty)
            .Item("CodSucEntidad") = NuloPorNro(_CodSucEntidad, String.Empty)

            .Item("CodSucEntidadFisica") = NuloPorNro(_Entidad_Fisica_Doc, String.Empty)
            .Item("CodSucEntidadFisica") = NuloPorNro(_EntidadSuc_Fisica_Doc, String.Empty)
            .Item("ListaPrecios") = _ListaPrecios
            .Item("CodFuncionario") = FUNCIONARIO
            .Item("NomFuncionario") = Trim(Nombre_funcionario_activo)

            .Item("Es_Electronico") = Fx_Es_Electronico(_Tido)

            .Item("FechaEmision") = _FechaEmision
            .Item("Fecha_1er_Vencimiento") = _Fecha_1er_Vencimiento
            .Item("FechaUltVencimiento") = _FechaUltVencimiento
            .Item("FechaRecepcion") = _FechaRecepcion
            .Item("FechaMaxRecepcion") = _FechaRecepcion

            .Item("Cuotas") = _Cuotas

            .Item("Dias_1er_Vencimiento") = _Dias_1er_Vencimiento
            .Item("Dias_Vencimiento") = _Dias_Vencimiento

            .Item("Moneda_Doc") = _Moneda
            .Item("Valor_Dolar") = _Valor_Dolar
            .Item("DocEn_Neto_Bruto") = _TipoValor
            .Item("TipoMoneda") = _Tipo_Moneda  ' -- Tipo Moneda del documento: Nacional/Extranjera
            .Item("Tasadorig_Doc") = _Tasadorig_Doc

            .Item("Centro_Costo") = _Centro_Costo
            .Item("Contacto_Ent") = String.Empty
            .Item("NomContacto_Ent") = String.Empty

            .Item("TotalNetoDoc") = 0
            .Item("TotalIvaDoc") = 0
            .Item("TotalIlaDoc") = 0
            .Item("TotalBrutoDoc") = 0

            .Item("CantTotal") = 0
            .Item("CantDesp") = 0

            .Item("Vizado") = False
            .Item("Idmaeedo_Origen") = 0

            .Item("CodUsuario_Permiso_Dscto") = String.Empty
            .Item("Fun_Auto_Deuda_Ven") = String.Empty

            '.Item("Vizado_Stock") = False
            .Item("Fun_Auto_Stock_Ins") = String.Empty
            .Item("Fun_Auto_Cupo_Exe") = String.Empty
            .Item("Fun_Auto_Fecha_Des") = String.Empty

            .Item("Stand_by") = False
            .Item("Libro") = String.Empty
            .Item("Fecha_Tributaria") = String.Empty

            .Item("Reserva_NroOCC") = False
            .Item("Reserva_Idmaeedo") = 0

            .Item("Bodega_Destino") = String.Empty
            .Item("TotalKilos") = 0

            .Item("MinKgDesp") = 0
            .Item("MinNetoDesp") = 0

            .Item("Es_ValeTransitorio") = (_Post_Venta And (_Tido = "BLV" Or _Tido = "FCV"))

            .Item("TblTipoVenta") = String.Empty
            .Item("CodTipoVenta") = String.Empty
            .Item("Customizable") = False
            .Item("Pickear") = False

            .Item("PreVenta") = PreVenta
            .Item("IdCont") = 0
            .Item("Contenedor") = String.Empty

            .Item("PdaRMovil") = False
            .Item("Idpdaenca") = 0
            .Item("ConservaNudo") = False

            _TblEncabezado.Rows.Add(NewFila)

        End With

        Lbl_TipoVenta.Text = "..."

        ' LINEAS OFERTA

        '_TblDetalle.Columns.Add("Idmaeddo_Oferta", System.Type.[GetType]("System.Int32"))

        Sb_Nueva_Linea(_ListaPrecios)

        _TblObservaciones = _Ds_Matriz_Documentos.Tables("Observaciones_Doc")
        NewFila = _TblObservaciones.NewRow
        With NewFila
            .Item("Observaciones") = String.Empty
            .Item("Forma_pago") = String.Empty
            .Item("Motivo") = String.Empty
            .Item("Orden_compra") = String.Empty
            .Item("Placa") = String.Empty
            .Item("CodRetirador") = String.Empty
            _Ds_Matriz_Documentos.Tables("Observaciones_Doc").Rows.Add(NewFila)
        End With

        _TblEmpaque = _Ds_Matriz_Documentos.Tables("Tbl_Empaque")
        NewFila = _TblEmpaque.NewRow
        With NewFila
            .Item("Funcionario_Inicia") = FUNCIONARIO
            .Item("Funcionario_Finaliza") = String.Empty
            _Ds_Matriz_Documentos.Tables("Tbl_Empaque").Rows.Add(NewFila)
        End With

        If Not (_RowEntidad Is Nothing) Then

            Dim _No_Puede_Acceder As Boolean

            Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, False, _Aplicar_Venciminetos)

        End If

        Sb_Sumar_Totales()

        LblDescripcion.Text = String.Empty
        Txt_Responsable.Text = " " & Nombre_funcionario_activo

        LblTotalNeto.Tag = 0
        LblTotalIva.Tag = 0
        LblTotalImpuestos.Tag = 0
        LblTotalBruto.Tag = 0

        LblTotalNeto.Text = FormatNumber(0, 0)
        LblTotalIva.Text = FormatNumber(0, 0)
        LblTotalImpuestos.Text = FormatNumber(0, 0)
        LblTotalBruto.Text = FormatNumber(0, 0)

        Grilla_Encabezado.ClearSelection()

        Sb_Formato_Grilla_Encabezado()
        Sb_Formato_Grilla_Detalle()

        Dim _Cl_Permisos_Asociados As New Cl_Permisos_Asociados(_Ds_Matriz_Documentos)

        _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Bkp00015", False, False, "", "", False, False, False) ' Stock
        _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Bkp00014", False, False, "", "", False, False, False) ' Descuento
        _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Bkp00039", False, False, "", "", False, False, False) ' Descuento
        _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Bkp00019", False, False, "", "", False, False, False) ' Morosidad
        _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Bkp00033", False, False, "", "", False, False, False) ' Cupo exedido
        _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Bkp00057", False, False, "", "", False, False, False) ' Fecha despacho
        _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Comp0092", False, False, "", "", False, False, False) ' Solicitud de compra
        _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Comp0095", False, False, "", "", False, False, False) ' Solicitud de compra Validar producto a comprar
        _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Bkp00062", False, False, "", "", False, False, False) ' Minimo de venta por documento
        _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "ODp00017", False, False, "", "", False, False, False) ' Despacho mínimo en Kg o Total Neto
        _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Doc00098", False, False, "", "", False, False, False)
        _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Doc00101", False, False, "", "", False, False, False) ' Crear documento sin Picking
        _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Doc00102", False, False, "", "", False, False, False) ' Cambiar RTU de pesos variables

        _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Doc00161", False, False, "", "", False, False, False) ' Cambiar vendedor de la linea diferente al del cliente

        '_Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Doc00103", False, False, "", "", False, False, False) ' Morosidad por cheques protestados
        'Doc00161

        _TblPermisos = _Ds_Matriz_Documentos.Tables("Permisos_Doc")

        Consulta_sql = "Select IDEVENTO,ARCHIRVE,IDRVE,KOFU," &
                       "Isnull((Select top 1 NOKOFU From TABFU Tf Where Tf.KOFU = Mv.KOFU),'') As 'Funcionario'," & vbCrLf &
                       "FEVENTO,FEVENTO AS Hora2,HORAGRAB,Convert(nvarchar, convert(datetime, (HORAGRAB*1.0/3600)/24), 108) As Hora,FECHAREF," & vbCrLf &
                       "KOTABLA,KOCARAC,(CASE WHEN LINK = '' THEN NOKOCARAC ELSE '(*) '+ NOKOCARAC END) AS 'NOKOCARAC'" & vbCrLf &
                       ",ISNULL(ARCHIRSE,'')AS ARCHIRSE,ISNULL(IDRSE,0) AS IDRSE,LINK,KOFUDEST,Cast(0 As Float) As LEY20956" & vbCrLf &
                       "From MEVENTO Mv" & vbCrLf &
                       "Where 1 < 0 " & vbCrLf &
                       "Order by FEVENTO,HORAGRAB"

        _Tbl_Mevento_Edo = _Sql.Fx_Get_DataTable(Consulta_sql)
        _Tbl_Mevento_Edd = _Sql.Fx_Get_DataTable(Consulta_sql)

        _Tbl_Mevento_Edo.TableName = "Mevento_Edo"
        _Tbl_Mevento_Edd.TableName = "Mevento_Edd"

        _Ds_Matriz_Documentos.Tables.Add(_Tbl_Mevento_Edo)
        _Ds_Matriz_Documentos.Tables.Add(_Tbl_Mevento_Edd)

        ' Agregamos tabla Maedpce para los pagos asociados

        Consulta_sql = "SELECT TOP 1 IDMAEDPCE,EMPRESA,SUREDP,CJREDP,TIDP,NUDP,ENDP,EMDP,SUEMDP,CUDP,NUCUDP,FEEMDP,FEVEDP,MODP," & vbCrLf &
                       "TIMODP,TAMODP,VADP,VAABDP,VAASDP,VAVUDP,ESPGDP,REFANTI,KOTU,NUTRANSMI,DOCUENANTI,KOFUDP,KOTNDP,SUTNDP,ESASDP,ESPGDP,CUOTAS," &
                       "CAST(0 AS INT) AS IDMAEEDO,CAST(0 AS FLOAT) AS SALDO" & vbCrLf &
                       "FROM MAEDPCE WITH ( NOLOCK ) " & vbCrLf &
                       "WHERE 1 = 0"

        _Tbl_Maedpce = _Sql.Fx_Get_DataTable(Consulta_sql)

        _Tbl_Mevento_Edd.TableName = "Maedpce"

        _Ds_Matriz_Documentos.Tables.Add(_Tbl_Maedpce)

        ' Agregamos tabla Maedcr para los recargos asociados

        Consulta_sql = "Select Cast(0 As Float) As Id,Cast('' As Varchar(2)) As Empresa,Cast('' As Varchar(3)) As Sulido,Cast('' As Varchar(13)) As Endo," & vbCrLf &
                       "Cast('' As Varchar(3)) As Tido,Cast('' As Varchar(10)) As Nudo," & vbCrLf &
                        "Cast('' As Varchar(10)) As Suendo,Cast(0 As Float) As Cantidad,Cast(0 As Float) As ValNeto,Cast(0 As Float) As VUnitario," & vbCrLf &
                        "Cast(0 As Float) As Recargo,Cast(0 As Float) As Peso,Cast(0 As Float) As Volumen," & vbCrLf &
                        "Cast('' As Varchar(13)) As Codigo,Cast('' As Varchar(50)) As Descripcion," & vbCrLf &
                        "NULIDO As Nulido,RECARCALCU As Recarcalcu,IDDDODCR As Idddodcr,VALDCR As Valdcr From MAEDCR Where 1<0"
        _Tbl_Maedcr = _Sql.Fx_Get_DataTable(Consulta_sql)

        _Tbl_Maedcr.TableName = "Maedcr"
        _Ds_Matriz_Documentos.Tables.Add(_Tbl_Maedcr)

        _Class_Referencias_DTE = New Class_Referencias_DTE(0)
        _Ds_Matriz_Documentos.Tables.Add(_Class_Referencias_DTE.Tbl_Referencias)

        '_Row_PermisosNecesarios = NewFila
        Warning_Visado.Visible = False
        Btn_Desbloquear_Visado.Visible = False

        Me.ActiveControl = Grilla_Detalle
        Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(0).Cells("Codigo")

        Sb_Mostrar_Datos_Producto_Activo(False)

        If _Tido = "GRC" Or _Tido = "FCC" Or _Tido = "GRD" Then

            Me.ActiveControl = Grilla_Encabezado
            Grilla_Encabezado.CurrentCell = Grilla_Encabezado.Rows(0).Cells("NroDocumento")

        End If

        Dim _Es_Electronico As Boolean = _TblEncabezado.Rows(0).Item("Es_Electronico")

        If _Es_Electronico Then

            If _Global_Row_Configuracion_General.Item("FacElec_Bakapp_Hefesto") Then

                Dim _Cn As String = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_DTE_Configuracion", "Valor", "Empresa = '" & ModEmpresa_Doc & "' And Campo = 'Cn'")

                If String.IsNullOrEmpty(_Cn) Then

                    MessageBoxEx.Show(Me, "Falta incorporar el nombre del certificado digital" & vbCrLf & vbCrLf &
                                      "INFORME ESTA SITUACION AL ADMINISTRADOR DEL SISTEMA POR FAVOR", "Validación Modalidad: " & ModModalidad_Doc,
                                      MessageBoxButtons.OK, MessageBoxIcon.Stop)

                    If Me.Visible Then
                        Me.Close()
                    End If
                    Return

                Else

                    'Dim _Certificado As Security.Cryptography.X509Certificates.X509Certificate2 = FuncionesComunes.RecuperarCertificado(_Cn)

                    'If IsNothing(_Certificado) Then

                    '    MessageBoxEx.Show(Me, "Falta instalar el certificado digital en este equipo" & vbCrLf &
                    '                      "Cetificado: " & _Cn & vbCrLf & vbCrLf &
                    '                      "INFORME ESTA SITUACION AL ADMINISTRADOR DEL SISTEMA POR FAVOR", "Validación Modalidad: " & Modalidad,
                    '                      MessageBoxButtons.OK, MessageBoxIcon.Stop)

                    'End If

                End If

            End If

            MensajeRevFolio = Fx_Revisar_Expiracion_Folio_SII(Me, _Tido, _NewNeroDocumento, False, ModEmpresa_Doc, ModModalidad_Doc)

            If Not MensajeRevFolio.EsCorrecto Then 'Not Fx_Revisar_Expiracion_Folio_SII(Me, _Tido, _NewNeroDocumento, True) Then

                _NewNeroDocumento = String.Empty

                If Me.Visible Then
                    MessageBoxEx.Show(Me, MensajeRevFolio.Mensaje, MensajeRevFolio.Detalle, MessageBoxButtons.OK, MensajeRevFolio.Icono)
                    Me.Close()
                End If

            End If

        End If

        Lbl_Costo_Lista.Visible = False

        If _Documento_Interno And Not _Cerrar_Al_Grabar Then

            Dim _SucEntidad As String = _RowEntidad.Item("SUEN")

            If String.IsNullOrEmpty(_SucEntidad) Then

                Dim _Msg = String.Empty

                'If _Tido = "GTI" Then _Msg = "Debe indicar sucursal de destino del traslado"
                If _Tido = "NVI" Then _Msg = "1.- Debera indicar la bodega que recibira los productos." & vbCrLf &
                                             "Bodega de destino."

                If Not String.IsNullOrEmpty(_Msg) Then

                    'MessageBoxEx.Show(Me, _Msg, "Asistente de cración de NVI",
                    '                  MessageBoxButtons.OK, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, Me.TopMost)

                    Grilla_Encabezado.CurrentCell = Grilla_Encabezado.Rows(0).Cells("CodSucEntidad")
                    Call Grilla_Encabezado_CellDoubleClick(Nothing, Nothing)

                End If

            End If

        End If

        If Not _Documento_Interno Then
            Grilla_Encabezado.Columns("CodEntidad").ReadOnly = False
        End If

        Me.Refresh()

    End Sub

    Function Fx_Nuevo_Doc_Auto(_Cambiar_Tido As Boolean) As String

        Dim _Mensaje = String.Empty

        Try

            If _Cambiar_Tido Then _Tido = _Tido_Original

            _Grabar = False
            _No_Volver_A_Preguntar_Agrupa_Producto = False
            _Idmaeedo_Relacionado = 0
            _Idmaeedo_Origen = 0
            _NroDocumento_Editado_Por_Usuario = False
            _Doc_Desde_Arch_Txt_Especial_Saime = False
            _Nombre_Archivo_Txt_Especial_Saime = String.Empty
            _Desde_Prestahop = False
            _ListaCodQRUnicosLeidos = New List(Of CodigosDeBarra.CodigosQRLeidos)
            _ListaCodConDocLeidos = New List(Of CodigosDeBarra.CodigosConDocLeidos)
            _Patente_rvm = String.Empty

            Lbl_NroDecimales.Text = FormatNumber(0, _DecimalesGl)

            Chk_Redondear_Cero.Enabled = False

            _Cl_Despacho = Nothing

            If Not IsNothing(Fm_MPC) Then
                Fm_MPC.Close()
                Fm_MPC.Dispose()
                Fm_MPC = Nothing
            End If

            Consulta_sql = "Insert Into " & _Global_BaseBk & "Zw_Conceptos (Koct)" & vbCrLf &
                           "Select KOCT From TABCT" & vbCrLf &
                           "Where KOCT Not In (Select Koct From " & _Global_BaseBk & "Zw_Conceptos)"
            _Sql.Ej_consulta_IDU(Consulta_sql, False)

            Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Conceptos" & vbCrLf &
                           "Where Koct Not In (Select KOCT From TABCT)"
            _Sql.Ej_consulta_IDU(Consulta_sql, False)

            'If Not _Revision_Remota Then

            '    If _Sql.Fx_Existe_Tabla(_Global_BaseBk & "Zw_Casi_DocArc") Then

            '        Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Casi_DocArc Where NombreEquipo = '" & _NombreEquipo & "' And En_Construccion = 1"
            '        _Sql.Ej_consulta_IDU(Consulta_sql)

            '    End If

            'End If

            'If _Global_Row_Configuracion_General.Item("BuscarProdConCodRapido") Then
            '    Consulta_sql = "Insert Into " & _Global_BaseBk & "Zw_Prod_Asociacion (Codigo,DescripcionBusqueda)" & vbCrLf &
            '                   "Select KOPR,KOPRRA From MAEPR" & vbCrLf &
            '                   "Where KOPRRA Not In (Select DescripcionBusqueda From " & _Global_BaseBk & "Zw_Prod_Asociacion)"
            '    _Sql.Ej_consulta_IDU(Consulta_sql)
            'End If

            'If _Global_Row_Configuracion_General.Item("BuscarProdConCodTecnico") Then
            '    Consulta_sql = "Insert Into " & _Global_BaseBk & "Zw_Prod_Asociacion (Codigo,DescripcionBusqueda)" & vbCrLf &
            '                   "Select KOPR,KOPRTE From MAEPR" & vbCrLf &
            '                   "Where KOPRTE Not In (Select DescripcionBusqueda From " & _Global_BaseBk & "Zw_Prod_Asociacion)"
            '    _Sql.Ej_consulta_IDU(Consulta_sql)
            'End If


            'Consulta_sql = "Select Modalidad, TipoDoc, NombreFormato, Grabar_Con_Huella
            '            From " & _Global_BaseBk & "Zw_Configuracion_Formatos_X_Modalidad Where Empresa = '" & ModEmpresa_Doc & "' And Modalidad = '" & Modalidad & "' And TipoDoc = '" & _Tido & "'"
            'Dim _RowFormato_Mod As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            'Dim _Grabar_Con_Huella As Boolean = _RowFormato_Mod.Item("Grabar_Con_Huella")

            'Btn_Huella.Visible = _Grabar_Con_Huella

            'If _Grabar_Con_Huella Then

            '    If _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_EstacionesBkp", "Tiene_Lector_Huella") And
            '       _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_EstacionesBkp", "Lector_Huella") Then

            '        Dim _Tiene_Lector_Huella As Boolean = _Global_Row_EstacionBk.Item("Tiene_Lector_Huella")

            '        _Global_Row_EstacionBk.Item("Lector_Huella") = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_EstacionesBkp", "Lector_Huella", "NombreEquipo = '" & _NombreEquipo & "'")

            '        If _Tiene_Lector_Huella Then
            '            Lbl_Version.Text = "Versión: " & _Global_Version_BakApp & ", DOCUMENTO SE TIENE QUE GRABAR CON LECTOR DE HUELLAS: " & _Global_Row_EstacionBk.Item("Lector_Huella")
            '            Btn_Huella.Tag = 1
            '        End If

            '    Else
            '        Btn_Huella.Tag = 0
            '        Btn_Huella.Tooltip = Lbl_Version.Text = "Versión: " & _Global_Version_BakApp & "Falta configuración de huella para este equipo"
            '    End If

            'End If

            _Id_DocEnc_Arc = 0

            '_No_Puede_Ver_Precios = Fx_Tiene_Permiso(Me, "NO00001", , False)

            Btn_Cambiar_IVA.Enabled = False

            Table_Totales_Comerciales.Visible = False
            Table_Metodo_Costeo_Comercial.Visible = False

            Dim _Aplicar_Venciminetos = True

            'LabelX2.Text = "Funcionario activo"

            'If Not _Post_Venta Then

            '    Me.Text = _Sql.Fx_Trae_Dato("TABTIDO", "NOTIDO", "TIDO = '" & _Tido & "'").ToString.Trim
            '    Lbl_Tido.Text = Me.Text

            '    If _Es_Ajuste Then
            '        Me.Text += Space(1) & "(AJUSTE)"
            '        Lbl_Tido.Text += Space(1) & "(AJUSTE)"
            '        Lbl_Tido.ForeColor = Color.Yellow
            '    End If

            '    If _SubTido = "IMP" Then Me.Text += " PROVEEDOR EXTRANJERO"

            'Else

            '    Lbl_Tido.Text = "Post-Venta"

            'End If

            Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Configuracion_Formatos_X_Modalidad" & vbCrLf &
                           "Where Empresa = '" & ModEmpresa_Doc & "' And Modalidad = '" & ModModalidad_Doc & "' And TipoDoc = '" & _Tido & "'"
            _Row_Formato_Modalidad = _Sql.Fx_Get_DataRow(Consulta_sql)

            _New_Idmaeedo = 0
            Dim _TipoValor = _Global_Row_Configuracion_Estacion.Item("Vnta_TipoValor_Bruto_Neto")

            _Ds_Matriz_Documentos.Clear()
            _Ds_Matriz_Documentos = New Ds_Matriz_Documentos

            _Ds_Documento_de_Origen = Nothing

            _Hay_Descuentos_Individuales = False
            _Hay_Descuentos_Globales = False

            _RowEntidad = Nothing
            _RowEntidad_Despacho = Nothing

            Txt_Nombre_Entidad.Text = String.Empty
            Lbl_Nombre_Entidad_Fisica.Text = String.Empty

            _TblDocumentos_Dori = Nothing

            If _Post_Venta Or _Tido = "BLV" Then

                If Not _Documento_Reciclado Then If _Cambiar_Tido Then _Tido = "BLV"
                _RowEntidad = Pro_RowEntidad_X_Defecto

            Else

                ' DOCUMENTOS INTERNOS

                'If _Documento_Interno Then

                '    Dim _Rten = Split(RutEmpresa, "-")

                '    Consulta_sql = "Select Top 1 * From MAEEN Where KOEN = '" & RutEmpresa & "' And TIPOSUC = 'P'"
                '    _RowEntidad = _Sql.Fx_Get_DataRow(Consulta_sql)

                '    If IsNothing(_RowEntidad) Then
                '        Consulta_sql = "Select Top 1 * From MAEEN Where KOEN LIKE '" & _Rten(0) & "%' AND RTEN = '" & _Rten(0) & "' And TIPOSUC = 'P'"
                '        _RowEntidad = _Sql.Fx_Get_DataRow(Consulta_sql)
                '    End If

                '    If IsNothing(_RowEntidad) Then
                '        Consulta_sql = "Select Top 1 * From MAEEN Where KOEN LIKE '" & _Rten(0) & "%' And TIPOSUC = 'P'"
                '        _RowEntidad = _Sql.Fx_Get_DataRow(Consulta_sql)
                '    End If

                '    If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Guia_Traslado_Interno Or
                '       _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Nota_Venta_Interna Or
                '       _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Recepcion_Interna Then
                '        _RowEntidad.Item("KOEN") = RutEmpresa
                '        _RowEntidad.Item("SUEN") = String.Empty
                '    End If

                '    If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Despacho_Interna Then
                '        _RowEntidad.Item("KOEN") = RutEmpresa
                '        _RowEntidad.Item("SUEN") = Mod_Sucursal
                '    End If

                '    _Aplicar_Venciminetos = False

                'Else

                '    _RowEntidad = Nothing

                'End If

            End If

            ' ESTO SIRVE PARA VINCULAR LA TABLA DE PASO DE LOS DESCUENTOS CON LA TABLA DE PASO DEL DETALLE
            Try
                Dim _ds As Object = _Ds_Matriz_Documentos
                Dim ParentCol As DataColumn = _Ds_Matriz_Documentos.Tables("Detalle_Doc").Columns("Id")
                Dim ChildCol As DataColumn = _Ds_Matriz_Documentos.Tables("Descuentos_Doc").Columns("Id")

                Dim _Dr As New DataRelation("Productos", ParentCol, ChildCol)
                _Dr.Nested = True
                _Ds_Matriz_Documentos.Relations.Add(_Dr)
            Catch ex As Exception

            End Try

            Try
                Dim _ds As Object = _Ds_Matriz_Documentos
                Dim ParentCol As DataColumn = _Ds_Matriz_Documentos.Tables("Detalle_Doc").Columns("Id")
                Dim ChildCol As DataColumn = _Ds_Matriz_Documentos.Tables("Impuestos_Doc").Columns("Id")
                Dim _Dr As New DataRelation("Productos_", ParentCol, ChildCol)
                _Dr.Nested = True
                _Ds_Matriz_Documentos.Relations.Add(_Dr)
            Catch ex As Exception

            End Try

            Try
                Dim _ds As Object = _Ds_Matriz_Documentos
                Dim ParentCol As DataColumn = _Ds_Matriz_Documentos.Tables("Detalle_Doc").Columns("Id")
                Dim ChildCol As DataColumn = _Ds_Matriz_Documentos.Tables("Tbl_Wms").Columns("Id")
                Dim _Dr As New DataRelation("Productos_", ParentCol, ChildCol)
                _Dr.Nested = True
                _Ds_Matriz_Documentos.Relations.Add(_Dr)
            Catch ex As Exception

            End Try

            _TblDetalle = _Ds_Matriz_Documentos.Tables("Detalle_Doc")
            Grilla_Detalle.DataSource = _TblDetalle 'Nothing

            'Grilla_Detalle.DataSource = _Ds_Matriz_Documentos
            'Grilla_Detalle.DataMember = _Ds_Matriz_Documentos.Tables("Detalle_Doc").TableName

            Dim _FechaEmision As Date = Now
            Dim _Fecha_1er_Vencimiento As Date = Now
            Dim _FechaUltVencimiento As Date = Now
            Dim _FechaRecepcion As Date = Now

            Dim _Cuotas = 0
            Dim _Dias_1er_Vencimiento = 0
            Dim _Dias_Vencimiento = 0
            Dim _Forma_de_Pago = String.Empty

            Dim _NewNeroDocumento As String

            If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Then

            End If

            '*********************************************************************

            If _Cuotas = 0 Then _Cuotas = 1

            Dim _Cuotas_(_Cuotas - 1) As Date
            _Cuotas_(0) = _FechaUltVencimiento

            Dim _FechasVenci As Date = _FechaEmision
            Dim _dias As Integer
            'If Cuotas > 1 Then
            _dias = _Dias_1er_Vencimiento
            For i = 1 To _Cuotas
                _FechasVenci = DateAdd(DateInterval.Day, _dias, _FechasVenci)
                _Cuotas_(i - 1) = _FechasVenci
                _dias = _Dias_Vencimiento
            Next
            _FechaUltVencimiento = _FechasVenci
            _Fecha_1er_Vencimiento = _Cuotas_(0)

            Dim _Centro_Costo As String

            Consulta_sql = "Select TOP 1 * From TABMO Where KOMO = '$'"
            _RowMoneda_Doc = _Sql.Fx_Get_DataRow(Consulta_sql, False)

            Dim _Moneda As String = _RowMoneda_Doc.Item("KOMO").ToString.Trim
            Dim _Tasadorig_Doc As Double = _RowMoneda_Doc.Item("VAMO")
            Dim _Tipo_Moneda As String = _RowMoneda_Doc.Item("TIMO")

            Dim _Valor_Dolar As Double

            Consulta_sql = "Select TOP 1 * From MAEMO Where KOMO = 'US$' AND FEMO = '" & Format(FechaDelServidor, "yyyyMMdd") & "' Order by IDMAEMO DESC"
            Dim _RowMoneda_USdolar = _Sql.Fx_Get_DataRow(Consulta_sql, False)

            If Not IsNothing(_RowMoneda_USdolar) Then
                _Valor_Dolar = _RowMoneda_USdolar.Item("VAMO")
            End If

            LblMoneda.Tag = _Moneda
            LblMoneda.Text = _Moneda

            Dim _ListaPrecios As String

            Dim _CodEntidad = String.Empty
            Dim _CodSucEntidad = String.Empty
            Dim _Entidad_Fisica_Doc = String.Empty
            Dim _EntidadSuc_Fisica_Doc = String.Empty

            If Not (_RowEntidad Is Nothing) Then
                _CodEntidad = _RowEntidad.Item("KOEN")
                _CodSucEntidad = _RowEntidad.Item("SUEN")
            End If

            If Not (_RowEntidad_Despacho Is Nothing) Then
                _Entidad_Fisica_Doc = _RowEntidad_Despacho.Item("KOEN")
                _EntidadSuc_Fisica_Doc = _RowEntidad_Despacho.Item("SUEN")
            End If

            If _Sql.Fx_Exite_Campo("CONFIEST", _Tido) And _Tido <> "GRP" Then
                _NewNeroDocumento = Traer_Numero_Documento(_Tido, , , False, True, Me, ModEmpresa_Doc)
            End If

            Select Case _Tido
                Case "GRC", "FCC", "GRD"
                    _NewNeroDocumento = String.Empty
            End Select

            _TipoValor = _Sql.Fx_Trae_Dato("TABTIDO", "MEARDO", "TIDO = '" & _Tido & "'",, False)

            If _TipoValor = "N" Then
                ChkValores.Checked = True
            ElseIf _TipoValor = "B" Then
                ChkValores.Checked = False
            End If

            If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Then
                _Centro_Costo = "LUVTVEN"
                _ListaPrecios = _ElistaVen

                If _RowEntidad Is Nothing Then
                    If _Tido = "BLV" Then
                        '_CodEntidad = _EntidadXdefecto
                        '_CodSucEntidad = _SucEntXdefecto
                    End If
                End If

                ChkValores.Visible = True
                ChkValores.Enabled = False

            Else
                _Centro_Costo = "LUVTCOM"

                If _Documento_Interno Then
                    _ListaPrecios = _Elistaint
                Else
                    _ListaPrecios = _ElistaCom
                End If

            End If

            _Centro_Costo = _Global_Row_Configuracion_Estacion.Item(_Centro_Costo).ToString.Trim

            If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Nota_Venta_Interna Or
                _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Traslado_Interno Then
                _Centro_Costo = String.Empty
            End If

            Dim _Modalidad_Doc As String = _Global_Row_Configuracion_Estacion.Item("Modalidad")

            _TblEncabezado = _Ds_Matriz_Documentos.Tables("Encabezado_Doc")
            Grilla_Encabezado.DataSource = _TblEncabezado

            Dim _Campo_NroDocumemto As DataGridViewTextBoxColumn
            _Campo_NroDocumemto = Grilla_Encabezado.Columns("NroDocumento")
            _Campo_NroDocumemto.MaxInputLength = 10

            Dim NewFila As DataRow
            NewFila = _TblEncabezado.NewRow
            With NewFila

                .Item("Id_DocEnc") = 0
                .Item("Post_Venta") = _Post_Venta
                .Item("Tipo_Documento") = _Tipo_Documento.ToString

                .Item("Modalidad") = _Modalidad_Doc
                .Item("Empresa") = ModEmpresa_Doc
                .Item("Sucursal") = Mod_Sucursal
                .Item("TipoDoc") = _Tido
                .Item("SubTido") = _SubTido

                .Item("NroDocumento") = _NewNeroDocumento '"XXXXXXXXXX"
                .Item("CodEntidad") = NuloPorNro(_CodEntidad, String.Empty)
                .Item("CodSucEntidad") = NuloPorNro(_CodSucEntidad, String.Empty)

                .Item("CodSucEntidadFisica") = NuloPorNro(_Entidad_Fisica_Doc, String.Empty)
                .Item("CodSucEntidadFisica") = NuloPorNro(_EntidadSuc_Fisica_Doc, String.Empty)
                .Item("ListaPrecios") = _ListaPrecios
                .Item("CodFuncionario") = FUNCIONARIO
                .Item("NomFuncionario") = Trim(Nombre_funcionario_activo)

                .Item("Es_Electronico") = Fx_Es_Electronico(_Tido)

                .Item("FechaEmision") = _FechaEmision
                .Item("Fecha_1er_Vencimiento") = _Fecha_1er_Vencimiento
                .Item("FechaUltVencimiento") = _FechaUltVencimiento
                .Item("FechaRecepcion") = _FechaRecepcion
                .Item("FechaMaxRecepcion") = _FechaRecepcion

                .Item("Cuotas") = _Cuotas

                .Item("Dias_1er_Vencimiento") = _Dias_1er_Vencimiento
                .Item("Dias_Vencimiento") = _Dias_Vencimiento

                .Item("Moneda_Doc") = _Moneda
                .Item("Valor_Dolar") = _Valor_Dolar
                .Item("DocEn_Neto_Bruto") = _TipoValor
                .Item("TipoMoneda") = _Tipo_Moneda  ' -- Tipo Moneda del documento: Nacional/Extranjera
                .Item("Tasadorig_Doc") = _Tasadorig_Doc

                .Item("Centro_Costo") = _Centro_Costo
                .Item("Contacto_Ent") = String.Empty
                .Item("NomContacto_Ent") = String.Empty

                .Item("TotalNetoDoc") = 0
                .Item("TotalIvaDoc") = 0
                .Item("TotalIlaDoc") = 0
                .Item("TotalBrutoDoc") = 0

                .Item("CantTotal") = 0
                .Item("CantDesp") = 0

                .Item("Vizado") = False
                .Item("Idmaeedo_Origen") = 0

                .Item("CodUsuario_Permiso_Dscto") = String.Empty
                .Item("Fun_Auto_Deuda_Ven") = String.Empty

                '.Item("Vizado_Stock") = False
                .Item("Fun_Auto_Stock_Ins") = String.Empty
                .Item("Fun_Auto_Cupo_Exe") = String.Empty
                .Item("Fun_Auto_Fecha_Des") = String.Empty

                .Item("Stand_by") = False
                .Item("Libro") = String.Empty
                .Item("Fecha_Tributaria") = String.Empty

                .Item("Reserva_NroOCC") = False
                .Item("Reserva_Idmaeedo") = 0

                .Item("Bodega_Destino") = String.Empty
                .Item("TotalKilos") = 0

                .Item("MinKgDesp") = 0
                .Item("MinNetoDesp") = 0

                .Item("Es_ValeTransitorio") = (_Post_Venta And (_Tido = "BLV" Or _Tido = "FCV"))

                .Item("TblTipoVenta") = String.Empty
                .Item("CodTipoVenta") = String.Empty
                .Item("Customizable") = False

                _TblEncabezado.Rows.Add(NewFila)

            End With

            Lbl_TipoVenta.Text = "..."

            ' LINEAS OFERTA

            '_TblDetalle.Columns.Add("Idmaeddo_Oferta", System.Type.[GetType]("System.Int32"))

            Sb_Nueva_Linea(_ListaPrecios)

            _TblObservaciones = _Ds_Matriz_Documentos.Tables("Observaciones_Doc")
            NewFila = _TblObservaciones.NewRow
            With NewFila
                .Item("Observaciones") = String.Empty
                .Item("Forma_pago") = String.Empty
                .Item("Motivo") = String.Empty
                .Item("Orden_compra") = String.Empty
                .Item("Placa") = String.Empty
                .Item("CodRetirador") = String.Empty
                _Ds_Matriz_Documentos.Tables("Observaciones_Doc").Rows.Add(NewFila)
            End With

            _TblEmpaque = _Ds_Matriz_Documentos.Tables("Tbl_Empaque")
            NewFila = _TblEmpaque.NewRow
            With NewFila
                .Item("Funcionario_Inicia") = FUNCIONARIO
                .Item("Funcionario_Finaliza") = String.Empty
                _Ds_Matriz_Documentos.Tables("Tbl_Empaque").Rows.Add(NewFila)
            End With

            If Not (_RowEntidad Is Nothing) Then

                'Dim _No_Puede_Acceder As Boolean

                Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, False, _Aplicar_Venciminetos)

            End If

            Sb_Sumar_Totales()

            LblDescripcion.Text = String.Empty
            Txt_Responsable.Text = " " & Nombre_funcionario_activo

            LblTotalNeto.Tag = 0
            LblTotalIva.Tag = 0
            LblTotalImpuestos.Tag = 0
            LblTotalBruto.Tag = 0

            LblTotalNeto.Text = FormatNumber(0, 0)
            LblTotalIva.Text = FormatNumber(0, 0)
            LblTotalImpuestos.Text = FormatNumber(0, 0)
            LblTotalBruto.Text = FormatNumber(0, 0)

            Grilla_Encabezado.ClearSelection()

            Sb_Formato_Grilla_Encabezado()
            Sb_Formato_Grilla_Detalle()

            Dim _Cl_Permisos_Asociados As New Cl_Permisos_Asociados(_Ds_Matriz_Documentos)

            _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Bkp00015", False, False, "", "", False, False, False) ' Stock
            _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Bkp00014", False, False, "", "", False, False, False) ' Descuento
            _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Bkp00039", False, False, "", "", False, False, False) ' Descuento
            _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Bkp00019", False, False, "", "", False, False, False) ' Morosidad
            _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Bkp00033", False, False, "", "", False, False, False) ' Cupo exedido
            _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Bkp00057", False, False, "", "", False, False, False) ' Fecha despacho
            _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Comp0092", False, False, "", "", False, False, False) ' Solicitud de compra
            _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Comp0095", False, False, "", "", False, False, False) ' Solicitud de compra Validar producto a comprar
            _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Bkp00062", False, False, "", "", False, False, False) ' Minimo de venta por documento
            _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "ODp00017", False, False, "", "", False, False, False) ' Despacho mínimo en Kg o Total Neto
            _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Doc00101", False, False, "", "", False, False, False) ' Crear documento sin Picking
            _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Doc00102", False, False, "", "", False, False, False) ' Crear documento sin Picking

            _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Doc00161", False, False, "", "", False, False, False) ' Cambiar vendedor de la linea diferente al del cliente

            '_Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, "Doc00103", False, False, "", "", False, False, False) ' Morosidad por cheques protestados

            _TblPermisos = _Ds_Matriz_Documentos.Tables("Permisos_Doc")

            Consulta_sql = "Select IDEVENTO,ARCHIRVE,IDRVE,KOFU," &
                           "Isnull((Select top 1 NOKOFU From TABFU Tf Where Tf.KOFU = Mv.KOFU),'') As 'Funcionario'," & vbCrLf &
                           "FEVENTO,FEVENTO AS Hora2,HORAGRAB,Convert(nvarchar, convert(datetime, (HORAGRAB*1.0/3600)/24), 108) As Hora,FECHAREF," & vbCrLf &
                           "KOTABLA,KOCARAC,(CASE WHEN LINK = '' THEN NOKOCARAC ELSE '(*) '+ NOKOCARAC END) AS 'NOKOCARAC'" & vbCrLf &
                           ",ISNULL(ARCHIRSE,'')AS ARCHIRSE,ISNULL(IDRSE,0) AS IDRSE,LINK,KOFUDEST,Cast(0 As Float) As LEY20956" & vbCrLf &
                           "From MEVENTO Mv" & vbCrLf &
                           "Where 1 < 0 " & vbCrLf &
                           "Order by FEVENTO,HORAGRAB"

            _Tbl_Mevento_Edo = _Sql.Fx_Get_DataTable(Consulta_sql)
            _Tbl_Mevento_Edd = _Sql.Fx_Get_DataTable(Consulta_sql)

            _Tbl_Mevento_Edo.TableName = "Mevento_Edo"
            _Tbl_Mevento_Edd.TableName = "Mevento_Edd"

            _Ds_Matriz_Documentos.Tables.Add(_Tbl_Mevento_Edo)
            _Ds_Matriz_Documentos.Tables.Add(_Tbl_Mevento_Edd)

            'Agregamos tabla Maedpce para los pagos asociados

            Consulta_sql = "SELECT TOP 1 IDMAEDPCE,EMPRESA,SUREDP,CJREDP,TIDP,NUDP,ENDP,EMDP,SUEMDP,CUDP,NUCUDP,FEEMDP,FEVEDP,MODP," & vbCrLf &
                           "TIMODP,TAMODP,VADP,VAABDP,VAASDP,VAVUDP,ESPGDP,REFANTI,KOTU,NUTRANSMI,DOCUENANTI,KOFUDP,KOTNDP,SUTNDP,ESASDP,ESPGDP,CUOTAS," &
                           "CAST(0 AS INT) AS IDMAEEDO,CAST(0 AS FLOAT) AS SALDO" & vbCrLf &
                           "FROM MAEDPCE WITH ( NOLOCK ) " & vbCrLf &
                           "WHERE 1 = 0"

            _Tbl_Maedpce = _Sql.Fx_Get_DataTable(Consulta_sql)

            _Tbl_Mevento_Edd.TableName = "Maedpce"

            _Ds_Matriz_Documentos.Tables.Add(_Tbl_Maedpce)

            ' Agregamos tabla Maedcr para los recargos asociados

            Consulta_sql = "Select Cast(0 As Float) As Id,Cast('' As Varchar(2)) As Empresa,Cast('' As Varchar(3)) As Sulido,Cast('' As Varchar(13)) As Endo," & vbCrLf &
                           "Cast('' As Varchar(3)) As Tido,Cast('' As Varchar(10)) As Nudo," & vbCrLf &
                            "Cast('' As Varchar(10)) As Suendo,Cast(0 As Float) As Cantidad,Cast(0 As Float) As ValNeto,Cast(0 As Float) As VUnitario," & vbCrLf &
                            "Cast(0 As Float) As Recargo,Cast(0 As Float) As Peso,Cast(0 As Float) As Volumen," & vbCrLf &
                            "Cast('' As Varchar(13)) As Codigo,Cast('' As Varchar(50)) As Descripcion," & vbCrLf &
                            "NULIDO As Nulido,RECARCALCU As Recarcalcu,IDDDODCR As Idddodcr,VALDCR As Valdcr From MAEDCR Where 1<0"
            _Tbl_Maedcr = _Sql.Fx_Get_DataTable(Consulta_sql)

            _Tbl_Maedcr.TableName = "Maedcr"
            _Ds_Matriz_Documentos.Tables.Add(_Tbl_Maedcr)

            _Class_Referencias_DTE = New Class_Referencias_DTE(0)
            _Ds_Matriz_Documentos.Tables.Add(_Class_Referencias_DTE.Tbl_Referencias)

            '_Row_PermisosNecesarios = NewFila
            Warning_Visado.Visible = False
            Btn_Desbloquear_Visado.Visible = False

            Me.ActiveControl = Grilla_Detalle
            Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(0).Cells("Codigo")

            'Sb_Mostrar_Datos_Producto_Activo(False)

            'If _Tido = "GRC" Or _Tido = "FCC" Or _Tido = "GRD" Then

            '    Me.ActiveControl = Grilla_Encabezado
            '    Grilla_Encabezado.CurrentCell = Grilla_Encabezado.Rows(0).Cells("NroDocumento")

            'End If

            Dim _Es_Electronico As Boolean = _TblEncabezado.Rows(0).Item("Es_Electronico")

            If _Es_Electronico Then

                If _Global_Row_Configuracion_General.Item("FacElec_Bakapp_Hefesto") Then

                    Dim _Cn As String = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_DTE_Configuracion", "Valor",
                                                          "Empresa = '" & ModEmpresa_Doc & "' And Campo = 'Cn'",, False)

                    If String.IsNullOrEmpty(_Cn) Then

                        'MessageBoxEx.Show(Me, "Falta incorporar el nombre del certificado digital" & vbCrLf & vbCrLf &
                        '                  "INFORME ESTA SITUACION AL ADMINISTRADOR DEL SISTEMA POR FAVOR", "Validación Modalidad: " & Modalidad,
                        '                  MessageBoxButtons.OK, MessageBoxIcon.Stop)

                        If Me.Visible Then
                            Me.Close()
                        End If

                        Throw New System.Exception("Falta incorporar el nombre del certificado digital" & vbCrLf & vbCrLf &
                                          "INFORME ESTA SITUACION AL ADMINISTRADOR DEL SISTEMA POR FAVOR")

                    Else

                        'Dim _Certificado As Security.Cryptography.X509Certificates.X509Certificate2 = FuncionesComunes.RecuperarCertificado(_Cn)

                        'If IsNothing(_Certificado) Then

                        '    MessageBoxEx.Show(Me, "Falta instalar el certificado digital en este equipo" & vbCrLf &
                        '                      "Cetificado: " & _Cn & vbCrLf & vbCrLf &
                        '                      "INFORME ESTA SITUACION AL ADMINISTRADOR DEL SISTEMA POR FAVOR", "Validación Modalidad: " & Modalidad,
                        '                      MessageBoxButtons.OK, MessageBoxIcon.Stop)

                        'End If

                    End If

                End If

                MensajeRevFolio = Fx_Revisar_Expiracion_Folio_SII(Me, _Tido, _NewNeroDocumento, False, ModEmpresa_Doc, ModModalidad_Doc)

                If Not MensajeRevFolio.EsCorrecto Then 'Not Fx_Revisar_Expiracion_Folio_SII(Me, _Tido, _NewNeroDocumento, True) Then

                    _NewNeroDocumento = String.Empty
                    Throw New System.Exception(MensajeRevFolio.Mensaje)

                End If

            End If

            Lbl_Costo_Lista.Visible = False

            'If _Documento_Interno And Not _Cerrar_Al_Grabar Then

            '    Dim _SucEntidad As String = _RowEntidad.Item("SUEN")

            '    If String.IsNullOrEmpty(_SucEntidad) Then

            '        Dim _Msg = String.Empty

            '        'If _Tido = "GTI" Then _Msg = "Debe indicar sucursal de destino del traslado"
            '        If _Tido = "NVI" Then _Msg = "1.- Debera indicar la bodega que recibira los productos." & vbCrLf &
            '                                     "Bodega de destino."

            '        If Not String.IsNullOrEmpty(_Msg) Then

            '            'MessageBoxEx.Show(Me, _Msg, "Asistente de cración de NVI",
            '            '                  MessageBoxButtons.OK, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, Me.TopMost)

            '            Grilla_Encabezado.CurrentCell = Grilla_Encabezado.Rows(0).Cells("CodSucEntidad")
            '            Call Grilla_Encabezado_CellDoubleClick(Nothing, Nothing)

            '        End If

            '    End If

            'End If

            'If Not _Documento_Interno Then
            '    Grilla_Encabezado.Columns("CodEntidad").ReadOnly = False
            'End If

        Catch ex As Exception
            _Mensaje = ex.Message
        End Try

        Return _Mensaje

    End Function

    Private Sub Sb_Nueva_Linea(_CodLista As String)

        Dim _Centro_Costo As String = _TblEncabezado.Rows(0).Item("Centro_Costo")
        Dim _Proyecto As String = String.Empty

        Dim _Empresa = ModEmpresa_Doc
        Dim _Sucursal = Mod_Sucursal
        Dim _Bodega = Mod_Bodega

        If _TblDetalle.Rows.Count >= 1 Then

            _Proyecto = _TblDetalle.Rows(_TblDetalle.Rows.Count - 1).Item("Proyecto")

            If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Compra Or
               _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Nota_Venta_Interna Or
               Chk_Conservar_Bodega_Sig_Linea_Venta.Checked Then

                _Empresa = _TblDetalle.Rows(_TblDetalle.Rows.Count - 1).Item("Empresa")
                _Sucursal = _TblDetalle.Rows(_TblDetalle.Rows.Count - 1).Item("Sucursal")
                _Bodega = _TblDetalle.Rows(_TblDetalle.Rows.Count - 1).Item("Bodega")

            End If

        End If

        Dim NewFila As DataRow
        NewFila = _TblDetalle.NewRow
        With NewFila

            .Item("Id_DocDet") = 0
            .Item("Empresa") = _Empresa
            .Item("Sucursal") = _Sucursal
            .Item("Bodega") = _Bodega
            .Item("CodFuncionario") = _CodVendedor
            .Item("CodVendedor") = _CodVendedor
            .Item("Codigo") = String.Empty
            .Item("Descripcion") = String.Empty
            .Item("Rtu") = 0

            .Item("Descripcion_Ori") = String.Empty
            .Item("PrecioNetoUd") = 0
            .Item("Precio") = 0

            .Item("Cantidad") = 0
            .Item("CantUd1") = 0
            .Item("CantUd2") = 0
            .Item("Potencia") = 0

            .Item("UnTrans") = 1
            .Item("UdTrans") = String.Empty

            .Item("Ud01PR") = String.Empty
            .Item("Ud02PR") = String.Empty

            .Item("DescMaximo") = 0
            .Item("DescuentoPorc") = 0
            .Item("DescuentoValor") = 0
            .Item("DescuentoValor_Anterior") = 0
            .Item("ValIvaLinea") = 0
            .Item("ValIlaLinea") = 0
            .Item("ValNetoLinea") = 0
            .Item("ValBrutoLinea") = 0
            .Item("PorIla") = 0

            .Item("Operacion") = String.Empty
            .Item("Potencia") = 0

            .Item("CodLista") = _CodLista
            .Item("Idmaeedo_Dori") = 0
            .Item("Idmaeddo_Dori") = 0
            .Item("Tidopa") = String.Empty
            .Item("Nudopa") = String.Empty

            .Item("Prct") = 0
            .Item("Tict") = String.Empty
            .Item("Tipr") = String.Empty

            Dim _FechaEmision As Date = FormatDateTime(_TblEncabezado.Rows(0).Item("FechaEmision"), DateFormat.ShortDate)

            .Item("FechaEmision") = _FechaEmision
            '.Item("FechaRecepcion") = _FechaEmision
            .Item("CantUd1_Dori") = 0
            .Item("CantUd2_Dori") = 0
            .Item("CDespUd1") = 0
            .Item("CDespUd2") = 0
            .Item("StockBodega") = 0
            .Item("Stock_desde_WMS") = 0
            .Item("Crear_CPr") = False
            .Item("Id_CPr") = 0
            .Item("Centro_Costo") = _Centro_Costo
            .Item("Proyecto") = _Proyecto
            .Item("Consolidar_Stock") = False
            .Item("No_Aplica_Redondeo") = False

            .Item("ValVtaStockInf") = False
            .Item("ValVtaDescMax") = False
            .Item("Lincondest") = False

            .Item("PrecioBrutoUd") = 0
            .Item("PrecioNetoUdLista") = 0
            .Item("PrecioBrutoUdLista") = 0

            .Item("PorIva") = 0
            .Item("NroDscto") = 0
            .Item("NroImpuestos") = 0

            .Item("DsctoRealPorc") = 0
            .Item("DsctoRealValor") = 0
            .Item("DsctoNeto") = 0
            .Item("DsctoBruto") = 0

            .Item("StockBodega") = 0
            .Item("UbicacionBod") = String.Empty

            .Item("SubTotal") = 0
            .Item("ValNetoLinea") = 0
            .Item("ValIlaLinea") = 0
            .Item("ValIvaLinea") = 0
            .Item("ValBrutoLinea") = 0

            .Item("DsctoRealPorc") = 0
            .Item("DsctoRealValor") = 0
            .Item("DsctoNeto") = 0
            .Item("DsctoBruto") = 0

            .Item("SubTotal") = 0
            .Item("PrecioListaUd1") = 0
            .Item("PrecioListaUd2") = 0
            .Item("PmLinea") = 0
            .Item("PmSucLinea") = 0
            .Item("PmIFRS") = 0
            .Item("PrecioNetoRealUd1") = 0
            .Item("PrecioNetoRealUd2") = 0


            Dim _RowMoneda_Det As DataRow

            Consulta_sql = "Select * From TABPP" & vbCrLf &
                            "Inner Join TABMO On MOLT = KOMO" & vbCrLf &
                            "Where KOLT = '" & _CodLista & "'"

            _RowMoneda_Det = _Sql.Fx_Get_DataRow(Consulta_sql, False)

            If Not String.IsNullOrEmpty(_Sql.Pro_Error) Then
                Throw New System.Exception(_Sql.Pro_Error)
            End If

            .Item("Moneda") = _RowMoneda_Det.Item("KOMO")
            .Item("Tipo_Cambio") = _RowMoneda_Det.Item("VAMO")
            .Item("Tipo_Moneda") = _RowMoneda_Det.Item("TIMO")


            .Item("Tasadorig") = _TblEncabezado.Rows(0).Item("Tasadorig_Doc") '_RowMoneda_Det.Item("VAMO")

            .Item("Id_Oferta") = 0
            .Item("Es_Padre_Oferta") = False
            .Item("Oferta") = String.Empty
            .Item("Padre_Oferta") = 0
            .Item("Hijo_Oferta") = 0
            .Item("Aplica_Oferta") = False
            .Item("Cantidad_Oferta") = 0
            .Item("Porcdesc_Oferta") = 0

            .Item("Recargo_Campo") = String.Empty
            .Item("Recargo_Valor") = 0

            .Item("FunValida_Compra") = String.Empty
            .Item("Recargo_Distribuido") = False
            .Item("TieneOccPdte") = False
            .Item("PrecioListaUd1_Prov") = 0
            .Item("PrecioListaUd2_Prov") = 0
            .Item("Pesoubic") = 0
            .Item("SumaKilos") = 0

            .Item("Id_OtSvr") = 0
            .Item("Semilla_Svr") = 0
            .Item("Nmarca") = String.Empty
            .Item("RtuVariable") = False
            .Item("Espuntosvta") = False
            .Item("ModFechVto") = False
            .Item("Condicionado") = False
            .Item("EsPallet") = False
            .Item("DesacRazTransf") = False
            .Item("Grupo") = String.Empty

            _TblDetalle.Rows.Add(NewFila)

        End With

        Sb_Limpiar_Lista_CodBarras()

        Me.Refresh()

    End Sub

    Private Sub Sb_Sumar_Totales()

        Dim _Total_Neto As Double
        Dim _Total_Iva As Double
        Dim _Total_Ila As Double
        Dim _Total_Bruto As Double

        Dim _SubTotal As Double
        Dim _TotalDsctoReal_Porc As Double
        Dim _DsctoRealValor As Double

        Dim _Cant As Double = 0
        Dim _CantDesp As Double = 0
        Dim _Todos_con_Iva = True
        Dim _SumPorIva As Double
        Dim _Tiene_Ila = False

        Dim _CantUd1 As Double = 0
        Dim _CantUd2 As Double = 0
        Dim _Cantidad As Double = 0
        Dim _Potencia As Double = 0
        Dim _Flete As Double = 0

        Dim _Tict As String
        Dim _Items = 0

        Dim _Decimal = 0
        Dim _Moneda As String = _TblEncabezado.Rows(0).Item("Moneda_Doc").ToString.Trim

        If _Moneda <> "$" Then
            _Decimal = 2
        End If

        Dim _Ud1 As String
        Dim _Ud2 As String

        _Hay_Descuentos_Globales = False

        Dim _Kilos As Double

        For Each row As DataGridViewRow In Grilla_Detalle.Rows

            Dim _Nt, _Iv, _Il, _Br As Double
            Dim _UnTrans

            _DsctoRealValor += NuloPorNro(row.Cells("DsctoRealValor").Value, 0)
            _SubTotal += NuloPorNro(row.Cells("SubTotal").Value, 0)

            _Nt = NuloPorNro(row.Cells("ValNetoLinea").Value, 2)
            _Iv = NuloPorNro(row.Cells("ValIvaLinea").Value, 2)
            _Il = NuloPorNro(row.Cells("ValIlaLinea").Value, 2)
            _Br = NuloPorNro(row.Cells("ValBrutoLinea").Value, 2)

            '<PrecioNetoUd>1672</PrecioNetoUd>
            '<PrecioNetoUdLista>1672.0000000000002</PrecioNetoUdLista>
            '<PrecioBrutoUd>1989.68</PrecioBrutoUd>

            Dim _Codigo As String = NuloPorNro(row.Cells("Codigo").Value, "")

            If Not String.IsNullOrEmpty(_Codigo) Then

                If _Todos_con_Iva Then
                    Dim _Iva = NuloPorNro(row.Cells("PorIva").Value, 0)
                    If Not CBool(_Iva) Then
                        _Todos_con_Iva = False
                    End If
                    _SumPorIva += _Iva
                End If

                If Not _Tiene_Ila Then
                    Dim _Ila = NuloPorNro(row.Cells("PorIla").Value, 0)
                    If CBool(_Ila) Then
                        _Tiene_Ila = True
                    End If
                End If
                _Items += 1
            End If

            _Total_Neto += _Nt
            _Total_Iva += _Iv
            _Total_Ila += _Il
            _Total_Bruto += _Br

            _UnTrans = NuloPorNro(row.Cells("UnTrans").Value, 0)
            Dim _Ud As String = "Ud1"

            If _UnTrans = 1 Then
                _Ud = "Ud1"
            ElseIf _UnTrans = 2 Then
                _Ud = "Ud2"
            Else
                _Ud = "Ud1"
            End If

            _Cant += NuloPorNro(row.Cells("Cant" & _Ud).Value, 0)
            _CantDesp += NuloPorNro(row.Cells("CDesp" & _Ud).Value, 0)

            _Tict = NuloPorNro(row.Cells("Tict").Value, "")

            Dim _Oferta As String = row.Cells("Oferta").Value
            Dim _Aplica_Oferta As Boolean = row.Cells("Aplica_Oferta").Value

            If Not _Aplica_Oferta Then
                If _Tict = "D" Then
                    _Hay_Descuentos_Globales = True
                End If
            End If

            Dim _Prct As Boolean = row.Cells("Prct").Value

            If Not _Prct Then

                _Cantidad += row.Cells("Cantidad").Value
                _CantUd1 += row.Cells("CantUd1").Value
                _CantUd2 += row.Cells("CantUd2").Value

                _Kilos += row.Cells("Pesoubic").Value * row.Cells("CantUd1").Value

                _Potencia = row.Cells("Potencia").Value
                _Flete += Math.Round(_Potencia * row.Cells("CantUd1").Value, 0)

                Dim _Ud1New = NuloPorNro(row.Cells("Ud01PR").Value, "UD1")
                Dim _Ud2New = NuloPorNro(row.Cells("Ud02PR").Value, "UD1")

                If String.IsNullOrEmpty(_Ud1) Then

                    _Ud1 = _Ud1New
                    _Ud2 = _Ud2New

                Else

                    If _Ud1New <> _Ud1 Then _Ud1 = "UD1"
                    If _Ud2New <> _Ud2 Then _Ud2 = "UD2"

                End If

            End If

        Next

        Dim _Suma_Flete As String

        If CBool(_Flete) Then
            _Suma_Flete = ", Suma de flete: " & FormatNumber(_Flete, 0)
        End If

        'Dim _CUd1, _CUd2 As String

        Dim _Dec1 = Math.Round(_CantUd1, 2) - Math.Round(_CantUd1, 0)
        Dim _Dec2 = Math.Round(_CantUd1, 2) - Math.Round(_CantUd1, 0)
        Dim _DecT = Math.Round(_Cantidad, 2) - Math.Round(_Cantidad, 0)

        Dim _DecimT, _Decim1, _Decim2 As Integer

        If _Dec1 <> 0 Then _Decim1 = 2
        If _Dec2 <> 0 Then _Decim2 = 2
        If _DecT <> 0 Then _DecimT = 2

        Dim _Kilos_Str As String

        If CBool(_Kilos) Then
            _Kilos_Str = "Kilos: " & FormatNumber(_Kilos, 2) & ", "
        End If

        If _Ud1 = _Ud2 And _CantUd1 = _CantUd2 Then
            Lbl_Totaliza_Cantidades.Text = _Kilos_Str & "Total Cantidades, " & _Ud1 & ": " & FormatNumber(_CantUd1, _Decim1) & _Suma_Flete
        Else
            Lbl_Totaliza_Cantidades.Text = _Kilos_Str & "Total Cantidades, " & _Ud1 & ": " & FormatNumber(_CantUd1, _Decim1) & ", " & _Ud2 & ": " & FormatNumber(_CantUd2, _Decim2) & _Suma_Flete
        End If

        '"Trans: " & FormatNumber(_Cantidad, _DecimT) & _Suma_Flete

        ' DEJO ESTO ACA POR SI A CASO NO ME CUADRAN LOS TOTALES DEL DOCUMENTO

        'If CBool(_SumPorIva) Then
        'If _Todos_con_Iva And Not _Tiene_Ila Then
        ' _SumPorIva = _SumPorIva / _Items
        'Iva = _SumPorIva / 100
        'Iva = Math.Round(Neto * Iva)
        'End If
        'End If


        If ChkValores.Checked Then ' NETO

            If _Todos_con_Iva And Not _Tiene_Ila Then

                Dim _Iva_Ult As Double
                Dim _Calcular_Iva As Boolean

                For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows

                    Dim _Iva = NuloPorNro(_Fila.Cells("PorIva").Value, 0)
                    Dim _Index = _Fila.Index

                    If _Index <> 0 Then
                        If _Iva <> _Iva_Ult Then
                            _Calcular_Iva = False
                            Exit For
                        Else
                            _Calcular_Iva = True
                        End If
                    End If
                    _Iva_Ult = _Iva
                Next

                If _Calcular_Iva Then

                    Dim _IVA_Porc = _Iva_Ult / 100

                    _Total_Iva = _Total_Neto * _IVA_Porc

                    _Total_Iva = Math.Round(_Total_Iva, 2)

                    Dim _Tasadorig_Doc = _TblEncabezado.Rows(0).Item("Tasadorig_Doc")

                    If _Tasadorig_Doc = 1 Then

                        Dim _Decimales = Split(_Total_Iva, ",")
                        Dim _Extrac_Decimal = Math.Round(_Total_Iva - CInt(_Total_Iva), 3)

                        If _Decimales.Length = 2 Then

                            _Extrac_Decimal = _Decimales(1)

                            If _Extrac_Decimal > 9 Then
                                _Extrac_Decimal = Mid(_Extrac_Decimal, 1, 1)
                            End If

                            If _Extrac_Decimal > 4 Then
                                _Total_Iva = Math.Ceiling(_Total_Iva)
                            End If

                        End If

                    End If

                End If

            End If

            _Total_Neto = Math.Round(_Total_Neto, _Decimal)
            _Total_Ila = Math.Round(_Total_Ila, _Decimal)
            _Total_Iva = Math.Round(_Total_Iva, _Decimal)

            _Total_Bruto = Math.Round(_Total_Neto, 2) + Math.Round(_Total_Iva, 2) + Math.Round(_Total_Ila, 2)
            _TotalDsctoReal_Porc = Math.Round(_DsctoRealValor / (_Total_Neto + _DsctoRealValor), 4)
        Else
            _TotalDsctoReal_Porc = Math.Round(_DsctoRealValor / (_Total_Bruto + _DsctoRealValor), 4)
        End If

        Dim _Neto_Suma As Double = Math.Round(_Total_Neto, 5)
        Dim _Iva_Suma As Double = Math.Round(_Total_Iva, 5)
        Dim _Ila_Suma As Double = Math.Round(_Total_Ila, 5)
        Dim _Bruto_Suma As Double = _Neto_Suma + _Iva_Suma + _Ila_Suma



        _Total_Neto = Math.Round(_Total_Neto, _Decimal) 'GrillaTotales.Rows(0).Cells("TotalNetoDoc").Value
        _Total_Iva = Math.Round(_Total_Iva, _Decimal) 'GrillaTotales.Rows(0).Cells("TotalIvaDoc").Value
        _Total_Ila = Math.Round(_Total_Ila, _Decimal) 'GrillaTotales.Rows(0).Cells("TotalIlaDoc").Value
        _Total_Bruto = Math.Round(_Total_Bruto, _Decimal) 'GrillaTotales.Rows(0).Cells("TotalBrutoDoc").Value

        LblTotalNeto.Tag = _Total_Neto
        LblTotalIva.Tag = _Total_Iva
        LblTotalImpuestos.Tag = _Total_Ila
        LblTotalBruto.Tag = _Total_Bruto

        LblTotalNeto.Text = FormatNumber(_Total_Neto, _Decimal)
        LblTotalIva.Text = FormatNumber(_Total_Iva, _Decimal)
        LblTotalImpuestos.Text = FormatNumber(_Total_Ila, _Decimal)
        LblTotalBruto.Text = FormatNumber(_Total_Bruto, _Decimal)

        With _TblEncabezado.Rows(0)

            .Item("TotalNetoDoc") = _Total_Neto 'Math.Round(Neto, 0)
            .Item("TotalIvaDoc") = _Total_Iva ' Math.Round(Iva, 0)
            .Item("TotalIlaDoc") = _Total_Ila 'Math.Round(Ila, 0)
            .Item("TotalBrutoDoc") = _Total_Bruto 'Math.Round(Bruto, 0)
            .Item("TotalDsctoReal_Porc") = _TotalDsctoReal_Porc * 100

            .Item("CantTotal") = Math.Round(_Cant, 5)    ' Math.Round(_Cant, 2)
            .Item("CantDesp") = Math.Round(_CantDesp, 5) ' Math.Round(_CantDesp, 2)

        End With

        If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Compra Then

            Dim _No_Puede_Ver_Precios As Boolean = Fx_Tiene_Permiso(Me, "NO00001", , False)

            If _No_Puede_Ver_Precios Then
                LblTotalNeto.Text = FormatNumber(0, _Decimal)
                LblTotalIva.Text = FormatNumber(0, _Decimal)
                LblTotalImpuestos.Text = FormatNumber(0, _Decimal)
                LblTotalBruto.Text = FormatNumber(0, _Decimal)
            End If

        End If

    End Sub

    Private Sub Sb_Detalle_INSERTar_Nueva_Linea(_CodLista As String)
        Dim NewFila As DataRow
        NewFila = _Ds_Matriz_Documentos.Tables("Detalle_Doc").NewRow
        With NewFila

            .Item("Sucursal") = Mod_Sucursal
            .Item("Bodega") = Mod_Bodega
            .Item("Codigo") = String.Empty
            .Item("Descripcion") = String.Empty
            .Item("Descripcion_Ori") = String.Empty

            .Item("PrecioNetoUd") = 0
            .Item("Cantidad") = 0
            .Item("DescuentoPorc") = 0
            .Item("DescuentoValor") = 0
            .Item("ValIvaLinea") = 0
            .Item("ValIlaLinea") = 0
            .Item("ValNetoLinea") = 0
            .Item("ValBrutoLinea") = 0
            .Item("CodLista") = _CodLista

            _Ds_Matriz_Documentos.Tables("Detalle_Doc").Rows.Add(NewFila)
        End With

    End Sub

    Private Sub Sb_Formato_Grilla_Encabezado()

        With Grilla_Encabezado

            OcultarEncabezadoGrilla(Grilla_Encabezado, True)

            Dim _TidoSubtido = _Tido.Trim & _SubTido.Trim

            Dim _Color_Documento = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_TablaDeCaracterizaciones",
                                                     "NombreTabla",
                                                     "Tabla = 'DOCUMENTOS_COLOR' And CodigoTabla = '" & _TidoSubtido & "'",
                                                     True, False, 0)

            Dim _BackColor_Tido As Color

            Try

                _Color_Documento = Replace(_Color_Documento, ",", ";").ToString.Trim

                Dim _RGB() = Split(_Color_Documento, ";")

                Dim _R As Integer = _RGB(0)
                Dim _G As Integer = _RGB(1)
                Dim _B As Integer = _RGB(2)

                _BackColor_Tido = Color.FromArgb(_R, _G, _B)

                If _Global_Row_Configuracion_Estacion.Item("FacElect_Usar_AmbienteCertificacion") Then
                    _BackColor_Tido = Color.FromArgb(235, 81, 13)
                    Lbl_Version.Text = "Versión: " & _Global_Version_BakApp & " (*** Ambiente Certificación SII ***)"
                End If

                If Global_Thema = Enum_Themas.Oscuro Then
                    Lbl_Version.ForeColor = Color.White
                    Lbl_DocActual.ForeColor = Color.White
                End If

                MStb_Barra.BackgroundStyle.BackColor = _BackColor_Tido
                Panel_Documento.BackColor = _BackColor_Tido

            Catch ex As Exception

            End Try

            Dim _DisplayIndex = 0

            .Columns("TipoDoc").Visible = True
            .Columns("TipoDoc").Width = 30
            .Columns("TipoDoc").HeaderText = "TD"
            .Columns("TipoDoc").DisplayIndex = _DisplayIndex
            .Columns("TipoDoc").ReadOnly = True
            _DisplayIndex += 1

            .Columns("NroDocumento").Visible = True
            .Columns("NroDocumento").Width = 80
            .Columns("NroDocumento").HeaderText = "Número"
            .Columns("NroDocumento").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
            .Columns("NroDocumento").DisplayIndex = _DisplayIndex
            .Columns("NroDocumento").ReadOnly = True
            _DisplayIndex += 1

            .Columns("CodEntidad").Visible = True
            .Columns("CodEntidad").Width = 85
            .Columns("CodEntidad").HeaderText = "Entidad"
            '.Columns("CodEntidad").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
            .Columns("CodEntidad").DisplayIndex = _DisplayIndex
            .Columns("CodEntidad").ReadOnly = True
            _DisplayIndex += 1

            .Columns("CodSucEntidad").Visible = True
            .Columns("CodSucEntidad").Width = 50
            .Columns("CodSucEntidad").HeaderText = "Suc."
            .Columns("CodSucEntidad").DisplayIndex = _DisplayIndex
            .Columns("CodSucEntidad").ReadOnly = True
            _DisplayIndex += 1

            .Columns("FechaEmision").Visible = True
            .Columns("FechaEmision").Width = 90
            .Columns("FechaEmision").HeaderText = "Fecha Em."
            .Columns("FechaEmision").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
            .Columns("FechaEmision").DefaultCellStyle.Format = "dd/MM/yyyy"
            .Columns("FechaEmision").DisplayIndex = _DisplayIndex
            .Columns("FechaEmision").ReadOnly = True
            _DisplayIndex += 1

            .Columns("FechaUltVencimiento").Visible = True
            .Columns("FechaUltVencimiento").Width = 90
            .Columns("FechaUltVencimiento").HeaderText = "Ult. Venci."
            .Columns("FechaUltVencimiento").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
            .Columns("FechaUltVencimiento").DefaultCellStyle.Format = "dd/MM/yyyy"
            .Columns("FechaUltVencimiento").DisplayIndex = _DisplayIndex
            .Columns("FechaUltVencimiento").ReadOnly = True
            _DisplayIndex += 1

            If Not _Post_Venta Then

                Dim _Header_FechaRecepcion = String.Empty

                If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Or _Tido = "NVI" Then
                    _Header_FechaRecepcion = "F.Despacho"
                ElseIf _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Compra Then
                    _Header_FechaRecepcion = "F.Recepción"
                End If

                .Columns("FechaRecepcion").Visible = Not String.IsNullOrEmpty(_Header_FechaRecepcion)
                .Columns("FechaRecepcion").Width = 90
                .Columns("FechaRecepcion").HeaderText = _Header_FechaRecepcion
                .Columns("FechaRecepcion").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
                .Columns("FechaRecepcion").DefaultCellStyle.Format = "dd/MM/yyyy"
                .Columns("FechaRecepcion").DisplayIndex = _DisplayIndex
                .Columns("FechaRecepcion").ReadOnly = True
                _DisplayIndex += 1

            End If

            .Columns("CodFuncionario").Visible = True
            .Columns("CodFuncionario").Width = 30
            .Columns("CodFuncionario").HeaderText = "Resp"
            .Columns("CodFuncionario").DisplayIndex = _DisplayIndex
            .Columns("CodFuncionario").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
            .Columns("CodFuncionario").ReadOnly = True
            _DisplayIndex += 1

            .Columns("Sucursal").Visible = True
            .Columns("Sucursal").Width = 35
            .Columns("Sucursal").HeaderText = "Suc"
            .Columns("Sucursal").DisplayIndex = _DisplayIndex
            .Columns("Sucursal").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
            .Columns("Sucursal").ReadOnly = True
            _DisplayIndex += 1

            .Columns("Centro_Costo").Visible = True
            .Columns("Centro_Costo").Width = 50
            .Columns("Centro_Costo").HeaderText = "C.Costo"
            .Columns("Centro_Costo").DisplayIndex = _DisplayIndex
            .Columns("Centro_Costo").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
            .Columns("Centro_Costo").ReadOnly = True
            _DisplayIndex += 1

            .Columns("ListaPrecios").Visible = True
            .Columns("ListaPrecios").Width = 50
            .Columns("ListaPrecios").HeaderText = "Lista"
            .Columns("ListaPrecios").DisplayIndex = _DisplayIndex
            .Columns("ListaPrecios").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
            .Columns("ListaPrecios").ReadOnly = True
            _DisplayIndex += 1

            .Columns("Moneda_Doc").Visible = True
            .Columns("Moneda_Doc").Width = 35
            .Columns("Moneda_Doc").HeaderText = "Mon."
            .Columns("Moneda_Doc").DisplayIndex = _DisplayIndex
            .Columns("Moneda_Doc").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
            .Columns("Moneda_Doc").ReadOnly = True
            _DisplayIndex += 1

            .Columns("Valor_Dolar").Visible = True
            .Columns("Valor_Dolar").Width = 50
            .Columns("Valor_Dolar").HeaderText = "T.Mon"
            .Columns("Valor_Dolar").DisplayIndex = _DisplayIndex
            .Columns("Valor_Dolar").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
            .Columns("Valor_Dolar").ReadOnly = True
            _DisplayIndex += 1

            .Columns("Modalidad").Visible = True
            .Columns("Modalidad").Width = 50
            .Columns("Modalidad").HeaderText = "Mod."
            .Columns("Modalidad").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleCenter
            .Columns("Modalidad").DisplayIndex = _DisplayIndex
            .Columns("Modalidad").ReadOnly = True
            _DisplayIndex += 1

            .Columns("Es_Electronico").Visible = True
            .Columns("Es_Electronico").Width = 50
            .Columns("Es_Electronico").HeaderText = "Elec."
            .Columns("Es_Electronico").DisplayIndex = _DisplayIndex
            .Columns("Es_Electronico").ReadOnly = True
            _DisplayIndex += 1

            .Columns("Moneda_Doc").Visible = True
            .Columns("Moneda_Doc").Width = 30 + 10
            .Columns("Moneda_Doc").HeaderText = "Mon."
            .Columns("Moneda_Doc").DisplayIndex = _DisplayIndex
            .Columns("Moneda_Doc").ReadOnly = True
            _DisplayIndex += 1

            '.Columns("Contacto_Ent").Visible = True
            '.Columns("Contacto_Ent").Width = 110 + 60
            '.Columns("Contacto_Ent").HeaderText = "Contacto"
            '.Columns("Contacto_Ent").HeaderCell.Style.Alignment = DataGridViewContentAlignment.MiddleLeft ' <-- Alineación izquierda
            '.Columns("Contacto_Ent").DisplayIndex = _DisplayIndex
            '.Columns("Contacto_Ent").ReadOnly = True
            '_DisplayIndex += 1

            '.Columns("NomContacto_Ent").Visible = True
            '.Columns("NomContacto_Ent").Width = 110 + 60
            '.Columns("NomContacto_Ent").HeaderText = "Contacto"
            '.Columns("NomContacto_Ent").HeaderCell.Style.Alignment = DataGridViewContentAlignment.MiddleLeft ' <-- Alineación izquierda
            '.Columns("NomContacto_Ent").DisplayIndex = _DisplayIndex
            '.Columns("NomContacto_Ent").ReadOnly = True
            '_DisplayIndex += 1

        End With

    End Sub

    Private Sub Sb_Formato_Grilla_Detalle()

        Dim _No_Puede_Ver_Precios As Boolean = Fx_Tiene_Permiso(Me, "NO00001", , False)

        With Grilla_Detalle

            Dim Total As String
            Dim FormatoPrecio As String
            Dim Precio_ As String
            Dim _DisplayIndex = 0

            Dim _Nveces As String = New String("0", _DecimalesGl)

            If Not String.IsNullOrEmpty(_Nveces) Then
                _Nveces = "." & _Nveces
            End If

            ' .Columns("STOCK_Ud1").DefaultCellStyle.Format = "##,###0.##"
            If ChkValores.Checked Then ' TipoNB = "B" Then
                Total = "ValNetoLinea"
                FormatoPrecio = "###,##0" & _Nveces
                Precio_ = "Precio Neto"
            Else 'If TipoNB = "N" Then
                Total = "ValBrutoLinea"
                FormatoPrecio = "###,##0" & _Nveces
                Precio_ = "Precio Bruto"
            End If

            .RowTemplate.Height = 18
            '.AlternatingRowsDefaultCellStyle.BackColor = Color.PaleGoldenrod

            OcultarEncabezadoGrilla(Grilla_Detalle, True)
            Dim _Mas = 0

            If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Compra Then _Mas = 10

            .Columns("Bodega").ReadOnly = True
            .Columns("Bodega").Width = 35
            .Columns("Bodega").HeaderText = "Bod"
            .Columns("Bodega").Visible = True
            .Columns("Bodega").Frozen = True
            .Columns("Bodega").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("CodFuncionario").ReadOnly = True
            .Columns("CodFuncionario").Width = 35
            .Columns("CodFuncionario").HeaderText = "Fun"
            .Columns("CodFuncionario").Visible = True
            .Columns("CodFuncionario").Frozen = True
            .Columns("CodFuncionario").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("Lincondest").ReadOnly = True
            .Columns("Lincondest").Width = 20
            .Columns("Lincondest").HeaderText = "D"
            .Columns("Lincondest").Visible = True
            .Columns("Lincondest").Frozen = True
            .Columns("Lincondest").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("Codigo").Width = 100 + _Mas
            .Columns("Codigo").HeaderText = "Código"
            .Columns("Codigo").Visible = True
            .Columns("Codigo").Frozen = True
            .Columns("Codigo").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            Select Case _Tipo_Documento

                Case csGlobales.Enum_Tipo_Documento.Compra

                    .Columns("CodigoProv").Width = 150
                    .Columns("CodigoProv").HeaderText = "Cód. Alternativo"
                    .Columns("CodigoProv").ReadOnly = True
                    .Columns("CodigoProv").Visible = True
                    .Columns("CodigoProv").DisplayIndex = _DisplayIndex
                    _DisplayIndex += 1

                Case Else

                    If Chk_Ver_Dscto_Maximo.Checked Then
                        .Columns("Descripcion").Width = 200
                    Else
                        .Columns("Descripcion").Width = 210
                    End If

                    .Columns("Descripcion").HeaderText = "Descripción"
                    .Columns("Descripcion").ReadOnly = True
                    .Columns("Descripcion").Visible = True
                    .Columns("Descripcion").DisplayIndex = _DisplayIndex
                    _DisplayIndex += 1

            End Select

            .Columns("UdTrans").Width = 25
            .Columns("UdTrans").HeaderText = "UN"
            .Columns("UdTrans").ReadOnly = True
            .Columns("UdTrans").Visible = True
            .Columns("UdTrans").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("Cantidad").Width = 60 + _Mas
            .Columns("Cantidad").HeaderText = "Cantidad"
            .Columns("Cantidad").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns("Cantidad").DefaultCellStyle.Format = "###,##0.##"
            .Columns("Cantidad").Visible = True
            .Columns("Cantidad").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("Moneda").Width = 30
            .Columns("Moneda").HeaderText = "M."
            .Columns("Moneda").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleLeft
            .Columns("Moneda").Visible = True
            .Columns("Moneda").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("Precio").Width = 80 + _Mas
            .Columns("Precio").HeaderText = Precio_
            .Columns("Precio").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns("Precio").DefaultCellStyle.Format = FormatoPrecio
            .Columns("Precio").Visible = True
            .Columns("Precio").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("DescMaximo").Width = 45
            .Columns("DescMaximo").HeaderText = "D.M.%"
            .Columns("DescMaximo").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns("DescMaximo").DefaultCellStyle.Format = "###,##0.##"
            .Columns("DescMaximo").Visible = (_Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Venta And Chk_Ver_Dscto_Maximo.Checked)
            .Columns("DescMaximo").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("DescuentoPorc").Width = 50 + _Mas
            .Columns("DescuentoPorc").HeaderText = "Desc %"
            .Columns("DescuentoPorc").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns("DescuentoPorc").DefaultCellStyle.Format = "###,##0.##"
            .Columns("DescuentoPorc").Visible = True
            .Columns("DescuentoPorc").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("DescuentoValor").Width = 70 + _Mas
            .Columns("DescuentoValor").HeaderText = "Descuento"
            .Columns("DescuentoValor").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns("DescuentoValor").DefaultCellStyle.Format = "###,##0.##"
            .Columns("DescuentoValor").Visible = True
            .Columns("DescuentoValor").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns(Total).Width = 80 + _Mas
            .Columns(Total).HeaderText = "Total"
            .Columns(Total).DefaultCellStyle.Format = "###,##0.##"
            .Columns(Total).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns(Total).ReadOnly = True
            .Columns(Total).Visible = True
            '.Columns(Total).Frozen = True
            .Columns(Total).DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Compra Then

                .Columns("Centro_Costo").Width = 50
                .Columns("Centro_Costo").HeaderText = "C.Costo"
                .Columns("Centro_Costo").ReadOnly = True
                .Columns("Centro_Costo").Visible = True
                '.Columns("Centro_Costo").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                .Columns("Centro_Costo").DisplayIndex = _DisplayIndex
                _DisplayIndex += 1

                .Columns("Proyecto").Width = 80
                .Columns("Proyecto").HeaderText = "Proyecto"
                .Columns("Proyecto").ReadOnly = True
                .Columns("Proyecto").Visible = True
                '.Columns("Proyecto").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
                .Columns("Proyecto").DisplayIndex = _DisplayIndex
                _DisplayIndex += 1

                .Columns("Precio").Visible = Not _No_Puede_Ver_Precios
                .Columns("DescuentoPorc").Visible = Not _No_Puede_Ver_Precios
                .Columns("DescuentoValor").Visible = Not _No_Puede_Ver_Precios
                .Columns(Total).Visible = Not _No_Puede_Ver_Precios

            End If

            If _Documento_Interno Then

                If _No_Puede_Ver_Precios Then
                    .Columns("Precio").Visible = False
                    .Columns("DescuentoPorc").Visible = False
                    .Columns("DescuentoValor").Visible = False
                    .Columns("Descripcion").Width += 80 + 50 + 70 + 90
                    .Columns(Total).Visible = False
                End If

            End If

            .Columns("FechaRecepcion").Width = 70
            .Columns("FechaRecepcion").HeaderText = "F.Entrega"
            .Columns("FechaRecepcion").Visible = True
            .Columns("FechaRecepcion").DefaultCellStyle.Format = "dd/MM/yyyy"
            .Columns("FechaRecepcion").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("Potencia").Width = 80 + _Mas
            .Columns("Potencia").HeaderText = "Potencia"
            .Columns("Potencia").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns("Potencia").DefaultCellStyle.Format = FormatoPrecio
            .Columns("Potencia").Visible = True
            .Columns("Potencia").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("SumaKilos").Width = 80 + _Mas
            .Columns("SumaKilos").HeaderText = "Peso"
            .Columns("SumaKilos").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns("SumaKilos").DefaultCellStyle.Format = FormatoPrecio
            .Columns("SumaKilos").DefaultCellStyle.Format = "Kg ###,##0.#0"
            .Columns("SumaKilos").Visible = True
            .Columns("SumaKilos").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .ScrollBarAppearance = eScrollBarAppearance.ApplicationScroll
            .ScrollBars = ScrollBars.Both 'ScrollBars.Vertical

            If Not Global_Thema = Enum_Themas.Oscuro Then
                .BackgroundColor = Color.White
            End If

        End With



        Me.Refresh()

    End Sub

    Private Sub Sb_Formato_Grilla_Detalle_Revision_situacion_Comercial()

        Sb_Formato_Generico_Grilla(Grilla_Detalle, 18, New Font("Tahoma", 8), Color.AliceBlue, ScrollBars.Both, True, False, False)

        With Grilla_Detalle

            Dim Total, Total_Str As String
            Dim FormatoPrecio As String
            Dim Precio_ As String
            Dim Precio_Campo As String

            If ChkValores.Checked Then
                Total = "ValNetoLinea"
                FormatoPrecio = "$ ###,##.###"
                Precio_ = "Precio Neto "
                Precio_Campo = "PrecioNetoUdLista"
                Total_Str = "Total"
            Else
                Total = "ValBrutoLinea"
                FormatoPrecio = "$ ###,##.##"
                Precio_Campo = "PrecioBrutoUdLista"
                Precio_ = "Precio Bruto "
                Total_Str = "Total"
            End If

            .RowTemplate.Height = 18
            OcultarEncabezadoGrilla(Grilla_Detalle, True)

            Dim _DisplayIndex = 0

            .Columns("Bodega").ReadOnly = True
            .Columns("Bodega").Width = 35
            .Columns("Bodega").HeaderText = "Bod"
            .Columns("Bodega").Visible = True
            .Columns("Bodega").Frozen = True
            .Columns("Bodega").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("Lincondest").ReadOnly = True
            .Columns("Lincondest").Width = 20
            .Columns("Lincondest").HeaderText = "D"
            .Columns("Lincondest").Visible = True
            .Columns("Lincondest").Frozen = True
            .Columns("Lincondest").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("Codigo").Width = 100
            .Columns("Codigo").HeaderText = "Código"
            .Columns("Codigo").Visible = True
            .Columns("Codigo").Frozen = True
            .Columns("Codigo").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("UdTrans").Width = 25
            .Columns("UdTrans").HeaderText = "UN"
            .Columns("UdTrans").ReadOnly = True
            .Columns("UdTrans").Visible = True
            .Columns("UdTrans").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("Cantidad").Width = 60
            .Columns("Cantidad").HeaderText = "Cantidad"
            .Columns("Cantidad").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns("Cantidad").DefaultCellStyle.Format = "###,##.##"
            .Columns("Cantidad").Visible = True
            .Columns("Cantidad").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns(Precio_Campo).Width = 80  '110 
            .Columns(Precio_Campo).HeaderText = Precio_ & "(Lista)"
            .Columns(Precio_Campo).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns(Precio_Campo).DefaultCellStyle.Format = FormatoPrecio
            .Columns(Precio_Campo).Visible = True
            .Columns(Precio_Campo).DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("Precio").Width = 80  '110 
            .Columns("Precio").HeaderText = Precio_ & " (Dig.)"
            .Columns("Precio").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns("Precio").DefaultCellStyle.Format = FormatoPrecio
            .Columns("Precio").Visible = True
            .Columns("Precio").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("DsctoRealPorc").Width = 50
            .Columns("DsctoRealPorc").HeaderText = "Dscto Real %"
            .Columns("DsctoRealPorc").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns("DsctoRealPorc").DefaultCellStyle.Format = "###,#0.##"
            .Columns("DsctoRealPorc").Visible = True
            .Columns("DsctoRealPorc").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("DescMaximo").Width = 50
            .Columns("DescMaximo").HeaderText = "Dscto Max %"
            .Columns("DescMaximo").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns("DescMaximo").DefaultCellStyle.Format = "###,#0.##"
            .Columns("DescMaximo").Visible = True
            .Columns("DescMaximo").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("DescuentoPorc").Width = 50
            .Columns("DescuentoPorc").HeaderText = "Desc %"
            .Columns("DescuentoPorc").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns("DescuentoPorc").DefaultCellStyle.Format = "###,#0.##"
            .Columns("DescuentoPorc").Visible = True
            .Columns("DescuentoPorc").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("DescuentoValor").Width = 70
            .Columns("DescuentoValor").HeaderText = "Descuento"
            .Columns("DescuentoValor").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns("DescuentoValor").DefaultCellStyle.Format = "$ ###,##"
            .Columns("DescuentoValor").Visible = True
            .Columns("DescuentoValor").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns(Total).Width = 100
            .Columns(Total).HeaderText = Total_Str
            .Columns(Total).DefaultCellStyle.Format = "$ ###,##"
            .Columns(Total).DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns(Total).ReadOnly = True
            .Columns(Total).Visible = True
            .Columns(Total).DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("ValNetoLinea").Width = 80
            .Columns("ValNetoLinea").HeaderText = "Total Neto $"
            .Columns("ValNetoLinea").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns("ValNetoLinea").DefaultCellStyle.Format = "###,##.##"
            .Columns("ValNetoLinea").Visible = True
            .Columns("ValNetoLinea").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("Total_Costo").Width = 80
            .Columns("Total_Costo").HeaderText = "Total Costo $"
            .Columns("Total_Costo").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns("Total_Costo").DefaultCellStyle.Format = "###,##.##"
            .Columns("Total_Costo").Visible = _Mostrar_Costos
            .Columns("Total_Costo").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("Margen_Valor").Width = 80
            .Columns("Margen_Valor").HeaderText = "Margen $"
            .Columns("Margen_Valor").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns("Margen_Valor").DefaultCellStyle.Format = "$ ###,##.##"
            .Columns("Margen_Valor").Visible = _Mostrar_Margen
            .Columns("Margen_Valor").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

            .Columns("Margen_Porc").Width = 60
            .Columns("Margen_Porc").HeaderText = "Mrg %"
            .Columns("Margen_Porc").DefaultCellStyle.Alignment = DataGridViewContentAlignment.MiddleRight
            .Columns("Margen_Porc").DefaultCellStyle.Format = "% ###,##.###"
            .Columns("Margen_Porc").Visible = _Mostrar_Margen
            .Columns("Margen_Porc").DisplayIndex = _DisplayIndex
            _DisplayIndex += 1

        End With

    End Sub

    Sub Sb_Marcar_Fila_Grilla(_Fila As DataGridViewRow)

        Dim _Vizado As Boolean = Grilla_Encabezado.Rows(0).Cells("Vizado").Value

        Dim _Permiso_Dscto As Boolean
        Dim _Permiso_Stock As Boolean

        Dim _Codigo = _Fila.Cells("Codigo").Value
        Dim _Crear_CPr = _Fila.Cells("Crear_CPr").Value
        Dim _Es_Padre_Oferta As Boolean = _Fila.Cells("Es_Padre_Oferta").Value
        Dim _Aplica_Oferta As Boolean = _Fila.Cells("Aplica_Oferta").Value

        If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Or
           _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Traslado_Interno Or
           _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Nota_Venta_Interna Then

            Dim __DD = Grilla_Detalle.CurrentCell

            Try

                Dim _ContadorDsctos As Integer = 0

                If _Tido <> "NCV" Then

                    With _Fila

                        Dim _DescuentoPorc As Double = NuloPorNro(Math.Round(.Cells("DescuentoPorc").Value, 2), 0)
                        Dim _DsctoRealPorc As Double = NuloPorNro(.Cells("DsctoRealPorc").Value, 0)

                        Dim _DescMaximo As Double = .Cells("DescMaximo").Value

                        Dim _Sucursal = .Cells("Sucursal").Value
                        Dim _Bodega = .Cells("Bodega").Value

                        Dim _Oferta As String = NuloPorNro(.Cells("Oferta").Value, "")
                        Dim _Padre_Oferta As String = NuloPorNro(.Cells("Padre_Oferta").Value, "")

                        Dim _ValVtaDescMax = .Cells("ValVtaDescMax").Value
                        Dim _ValVtaStockInf = .Cells("ValVtaStockInf").Value
                        Dim _Cantidad As Double

                        Dim _UnTrans = NuloPorNro(_Fila.Cells("UnTrans").Value, 1)
                        Dim _RtuVariable As Boolean = _Fila.Cells("RtuVariable").Value
                        Dim _Nmarca As String = _Fila.Cells("Nmarca").Value

                        If _RtuVariable And _Nmarca = "¡" Then
                            _UnTrans = 2
                        End If


                        For Each _Row As DataRow In _TblDetalle.Rows

                            Dim _Cod = _Row.Item("Codigo")
                            Dim _Suc = _Row.Item("Sucursal")
                            Dim _Bod = _Row.Item("Bodega")

                            If _Cod = _Codigo And _Suc = _Sucursal And _Bod = _Bodega Then
                                _Cantidad += _Row.Item("CantUd" & _UnTrans)
                            End If

                        Next

                        Dim _UdTrans = .Cells("UdTrans").Value
                        'Dim _UnTrans = .Cells("UnTrans").Value

                        Dim _Solicitado_bodega As Boolean = .Cells("Solicitado_bodega").Value

                        Dim _Prct As Boolean = .Cells("Prct").Value
                        Dim _Tict As String = .Cells("Tict").Value
                        Dim _Tipr As String = .Cells("Tipr").Value

                        Dim _Stock As Double
                        Dim _Stock_Disponible As Double

                        Dim _Precio As Double = NuloPorNro(.Cells("Precio").Value, 0)
                        Dim _DescuentoValor As Double = NuloPorNro(.Cells("DescuentoValor").Value, 0)
                        Dim _PrecioLista As Double
                        Dim _Precio_Cn_Dscto As Double = _Precio - _DescuentoValor

                        If ChkValores.Checked Then
                            _PrecioLista = Math.Round(NuloPorNro(.Cells("PrecioNetoUdLista").Value, 0), 0)
                        Else
                            _PrecioLista = NuloPorNro(.Cells("PrecioBrutoUdLista").Value, 0)
                        End If

                        Dim _Tidopa As String = .Cells("Tidopa").Value

                        If Global_Thema = Enum_Themas.Oscuro Then ' Dark
                            .Cells("StockBodega").Style.BackColor = Color.Black
                            .Cells("UbicacionBod").Style.BackColor = Color.Black
                            .Cells("Cantidad").Style.ForeColor = Color.White
                            .Cells("UdTrans").Style.ForeColor = Color.White
                        Else
                            .Cells("StockBodega").Style.BackColor = Color.Gray
                            .Cells("UbicacionBod").Style.BackColor = Color.Gray
                            .Cells("Cantidad").Style.ForeColor = Color.Black
                            .Cells("UdTrans").Style.ForeColor = Color.Black
                        End If

                        .Cells("DescMaximo").Style.ForeColor = Color.Gray

                        'Dim _RowStock As DataRow
                        Dim _Usar_Stock_Disponible As Boolean

                        If _Tipr <> "SSN" Then

                            Dim _Stock_Suficiente As Boolean = False

                            If Not _Prct Then

                                Sb_Revisar_Stock_Fila(_Fila, _Stock_Suficiente, _Stock, _Stock_Disponible, False)

                                If _Stock <> _Stock_Disponible Then
                                    _Stock = _Stock_Disponible
                                    _Usar_Stock_Disponible = True
                                End If

                            Else
                                _Stock = 0
                            End If

                            .Cells("StockBodega").Value = _Stock

                            If CBool(_Cantidad) Then

                                If _Stock - _Cantidad < 0 Or _Stock <= 0 Then

                                    If Not _ValVtaStockInf Then

                                        'If _Usar_Stock_Disponible Then
                                        '    '   MessageBoxEx.Show(Me, "Está sacando más cantidad de lo disponible en bodega según programación." & Environment.NewLine & _
                                        '    '                    "Stock disponible en " & _UdTrans & " " & FormatNumber(_Stock_Disponible, 2), "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                                        'End If

                                        .Cells("StockBodega").Value = _Stock

                                        If _Tidopa = "GDP" Or _Tidopa = "GDV" Then

                                            .Cells("Cantidad").Style.ForeColor = Azul
                                            .Cells("UdTrans").Style.ForeColor = Azul

                                        Else

                                            .Cells("Cantidad").Style.ForeColor = Rojo
                                            .Cells("UdTrans").Style.ForeColor = Rojo

                                            _Permiso_Stock = True

                                        End If

                                    Else

                                        .Cells("Cantidad").Style.ForeColor = Azul

                                    End If

                                End If

                            End If

                        End If

                        If _DescuentoPorc > 0 Then
                            _ContadorDsctos += 1
                        End If

                        If _DescMaximo = 0 Then
                            _DescMaximo = 0.5
                        End If

                        Dim _Dec = Math.Round(_DsctoRealPorc - Math.Round(_DescMaximo, 0), 2)
                        If _Dec <= 0.5 Then _DsctoRealPorc = _DescMaximo

                        If Global_Thema = Enum_Themas.Oscuro Then ' Dark

                            .Cells("DescuentoPorc").Style.ForeColor = Color.White
                            .Cells("DescuentoValor").Style.ForeColor = Color.White
                            .Cells("Precio").Style.ForeColor = Color.White

                        Else

                            .Cells("DescuentoPorc").Style.ForeColor = Color.Black
                            .Cells("DescuentoValor").Style.ForeColor = Color.Black
                            .Cells("Precio").Style.ForeColor = Color.Black

                        End If

                        If _DescMaximo < _DsctoRealPorc Then '_DescMaximo < _DescuentoPorc Or _DescMaximo < _DsctoRealPorc Then

                            If _Vizado Or (_ValVtaDescMax And Not _Descuento_Global_Superado) Then ' _ValVtaDescMax = False Then

                                .Cells("DescuentoPorc").Style.ForeColor = Azul
                                .Cells("DescuentoValor").Style.ForeColor = Azul

                            Else

                                If Not _Aplica_Oferta Or (_Aplica_Oferta And _Es_Padre_Oferta) Then

                                    .Cells("DescuentoPorc").Style.ForeColor = Rojo
                                    .Cells("DescuentoValor").Style.ForeColor = Rojo

                                    _Permiso_Dscto = True

                                End If

                            End If

                        Else

                            If Global_Thema = Enum_Themas.Oscuro Then ' Dark

                                .Cells("DescuentoPorc").Style.ForeColor = Color.White
                                .Cells("DescuentoValor").Style.ForeColor = Color.White

                            Else

                                .Cells("DescuentoPorc").Style.ForeColor = Color.Black
                                .Cells("DescuentoValor").Style.ForeColor = Color.Black

                            End If

                        End If

                        If Math.Round(_Precio, 0) < Math.Round(_PrecioLista, 0) Then

                            If _DsctoRealPorc > _DescMaximo Then

                                .Cells("Precio").Style.ForeColor = Rojo

                                _Permiso_Dscto = True

                            Else

                                If Global_Thema = Enum_Themas.Oscuro Then ' Dark
                                    .Cells("Precio").Style.ForeColor = Color.FromArgb(195, 132, 222)
                                Else
                                    .Cells("Precio").Style.ForeColor = Color.Purple
                                End If

                            End If

                        Else

                            If Global_Thema = Enum_Themas.Oscuro Then ' Dark
                                .Cells("Precio").Style.ForeColor = Color.White
                            Else
                                .Cells("Precio").Style.ForeColor = Color.Black
                            End If

                        End If


                        Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Prod_SolBodega
                                        Where Codigo = '" & _Codigo & "' And Funcionario = '" & FUNCIONARIO & "' And Estado IN ('SOL','ENT')"

                        Dim _TblProdSol As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

                        _Solicitado_bodega = CBool(_TblProdSol.Rows.Count)

                        If _Solicitado_bodega Then

                            If Global_Thema = Enum_Themas.Oscuro Then
                                .DefaultCellStyle.ForeColor = Color.Yellow
                            Else
                                .DefaultCellStyle.BackColor = Color.Yellow
                            End If

                        Else

                            If Global_Thema = Enum_Themas.Oscuro Then ' Dark
                                .DefaultCellStyle.BackColor = Color.Black
                            Else
                                .DefaultCellStyle.BackColor = Color.White
                            End If

                        End If

                        If _Vizado Then

                            If Not Global_Thema = Enum_Themas.Oscuro Then ' Dark
                                .DefaultCellStyle.BackColor = Color.WhiteSmoke
                            End If

                        End If

                        If _Revision_Remota Then

                            If _Permiso_Dscto Then

                                Dim _CodPermiso = _RowRemota_Notificacion.Item("CodPermiso")

                                If _CodPermiso = "Bkp00014" Then

                                    If Global_Thema = Enum_Themas.Oscuro Then
                                        .DefaultCellStyle.ForeColor = Color.Yellow
                                    Else
                                        .DefaultCellStyle.BackColor = Color.Yellow
                                    End If

                                End If

                            End If

                            If _Permiso_Stock Then

                                Dim _CodPermiso = _RowRemota_Notificacion.Item("CodPermiso")

                                If _CodPermiso = "Bkp00015" Then

                                    If Global_Thema = Enum_Themas.Oscuro Then
                                        .DefaultCellStyle.BackColor = Color.Yellow
                                    Else
                                        .DefaultCellStyle.BackColor = Color.Yellow
                                    End If

                                End If

                            End If

                        End If

                        If _Aplica_Oferta Then

                            If _Es_Padre_Oferta Then

                                .Cells("Codigo").Style.ForeColor = Azul

                            End If

                            .Cells("Descripcion").Style.ForeColor = Azul

                        End If


                    End With

                End If

                Dim _FF = Grilla_Detalle.CurrentRow.Index

            Catch ex As Exception

            Finally

                Dim _Reg As Integer = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_Prod_SolBodega",
                                                               "Funcionario = '" & FUNCIONARIO & "'" & Environment.NewLine &
                                                               "And Estado IN ('SOL','ENT')")

                If CBool(_Reg) Then

                    Btn_Productos_Solicitados_Bodega.Visible = True
                    Btn_Productos_Solicitados_Bodega.Text = _Reg

                Else

                    Btn_Productos_Solicitados_Bodega.Visible = False
                    Btn_Productos_Solicitados_Bodega.Text = String.Empty

                End If

            End Try

        Else

            If _Crear_CPr Then

                _Fila.DefaultCellStyle.BackColor = Color.LightYellow

            Else

                If Global_Thema = Enum_Themas.Oscuro Then
                    _Fila.DefaultCellStyle.BackColor = Color.Black
                Else
                    _Fila.DefaultCellStyle.BackColor = Color.White
                End If

            End If

        End If

    End Sub

    Sub Sb_Marcar_Grilla()

        Dim _Vizado As Boolean = _TblEncabezado.Rows(0).Item("Vizado")

        Warning_Visado.Visible = _Vizado
        Btn_Desbloquear_Visado.Visible = _Vizado
        Btn_Modificar_Chk_Redondeo.Enabled = Not _Vizado
        Btn_Cambiar_IVA.Enabled = _Vizado
        Btn_Cambiar_ILA.Enabled = _Vizado

        If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Then

            Dim __DD = Grilla_Detalle.CurrentCell

            Try
                Dim _ContadorDsctos As Integer = 0

                For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows
                    Sb_Marcar_Fila_Grilla(_Fila)
                Next

                Dim _FF = Grilla_Detalle.CurrentRow.Index

            Catch ex As Exception
            Finally

                Dim _Reg As Integer = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_Prod_SolBodega",
                                                       "Funcionario = '" & FUNCIONARIO & "'" & Environment.NewLine &
                                                       "And Estado IN ('SOL','ENT')")

                If CBool(_Reg) Then

                    Btn_Productos_Solicitados_Bodega.Visible = True
                    Btn_Productos_Solicitados_Bodega.Text = _Reg

                Else

                    Btn_Productos_Solicitados_Bodega.Visible = False
                    Btn_Productos_Solicitados_Bodega.Text = String.Empty

                End If

                Me.Refresh()

            End Try

        End If

    End Sub

    Sub Sb_Actualizar_Datos_De_La_Entidad(_Formulario As Form,
                                          _RowEntidad As DataRow,
                                          Optional _Revisar_Permiso_Lista_Precio As Boolean = True,
                                          Optional _Aplicar_Venciminetos As Boolean = True,
                                          Optional _Cambiar_Vendedor As Boolean = True,
                                          Optional ByRef _No_Puede_Acceder As Boolean = False,
                                          Optional _ListaOrigen As String = "")

        Dim _Koen As String
        Dim _Suen As String
        Dim _FechaEmision As Date = _TblEncabezado.Rows(0).Item("FechaEmision")
        Dim _Fecha_1er_Vencimiento As Date = _TblEncabezado.Rows(0).Item("Fecha_1er_Vencimiento")
        Dim _FechaUltVencimiento As Date = _TblEncabezado.Rows(0).Item("FechaUltVencimiento")
        Dim _Cuotas As Integer = 1
        Dim _Dias_1er_Vencimiento As Integer = 0
        Dim _Dias_Vencimiento As Integer = 0
        Dim _Forma_pago As String
        Dim _Kofuen As String

        _TblEncabezado.Rows(0).Item("CodEntidad") = String.Empty
        _TblEncabezado.Rows(0).Item("CodSucEntidad") = String.Empty
        _TblEncabezado.Rows(0).Item("CodEntidadFisica") = String.Empty
        _TblEncabezado.Rows(0).Item("CodSucEntidadFisica") = String.Empty
        _TblEncabezado.Rows(0).Item("Nombre_Entidad") = String.Empty

        Txt_Nombre_Entidad.Text = String.Empty
        Lbl_Nombre_Entidad_Fisica.Text = String.Empty

        Dim _Lista As String
        Dim _Permiso As String

        Dim _ListaPrecios = _TblEncabezado.Rows(0).Item("ListaPrecios")

        If Not (_RowEntidad Is Nothing) Then

            _Kofuen = Trim(_RowEntidad.Item("KOFUEN"))

            _Cuotas = _RowEntidad.Item("NUVECR")
            _Dias_1er_Vencimiento = _RowEntidad.Item("DIPRVE")
            _Dias_Vencimiento = NuloPorNro(_RowEntidad.Item("DIASVENCI"), 0)

            'Dim _Rut As String
            'Dim _Rt() As String = Split(_RowEntidad.Item("RTEN"), "-", 2)

            '_Rut = _Rt(0).Trim
            '_Rut = Replace(FormatNumber(_Rut, 0) & "-" & RutDigito(_Rut), ",", ".")

            _TblEncabezado.Rows(0).Item("CodEntidad") = _RowEntidad.Item("KOEN")
            _TblEncabezado.Rows(0).Item("CodSucEntidad") = _RowEntidad.Item("SUEN")
            _TblEncabezado.Rows(0).Item("Nombre_Entidad") = _RowEntidad.Item("NOKOEN")

            Txt_Nombre_Entidad.Text = " " & _RowEntidad.Item("NOKOEN").ToString.Trim

            If Not Fx_Revisar_si_tiene_registros(False) Then

                If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Then

                    _Lista = Mid(_RowEntidad.Item("LVEN"), 6, 3)

                Else

                    _Lista = Mid(_RowEntidad.Item("LCEN"), 6, 3)

                End If

            End If

            If String.IsNullOrEmpty(Trim(_Lista)) Then

                _Lista = _ListaPrecios

            End If

        End If

        Dim _Koen_Xdefecto = _Global_Row_Configuracion_Estacion.Item("Vnta_EntidadXdefecto")
        Dim _Suen_Xdefecto = _Global_Row_Configuracion_Estacion.Item("Vnta_SucEntXdefecto")

        If String.IsNullOrEmpty(_Kofuen) Then
            _Kofuen = FUNCIONARIO
        End If

        ' Si el documento en el formato de la modalidad tiene una lista de precios por defecto, el sistema deja a esa lista en el documento actual
        ' de lo contrario conserva la lista de precios de la modalidad del sistema, solo para Boletas.
        Dim _ListaPrecioDoc As String = _Row_Formato_Modalidad.Item("ListaPrecioDoc")

        If _Tido = "BLV" AndAlso Not String.IsNullOrWhiteSpace(_ListaPrecioDoc) AndAlso
            Not (_RowEntidad_X_Defecto Is Nothing) AndAlso Not IsDBNull(_RowEntidad_X_Defecto) Then

            Dim _ListaVtaEntidad As String = _Sql.Fx_Trae_Dato("MAEEN", "LVEN",
                                                               "KOEN = '" & _RowEntidad.Item("KOEN") & "' And SUEN = '" & _RowEntidad.Item("SUEN") & "'")

            _ListaVtaEntidad = _ListaVtaEntidad.ToString.Trim.Replace("TABPP", "")

            If String.IsNullOrWhiteSpace(_ListaVtaEntidad) Then

                Dim _Cod1 As String = _RowEntidad_X_Defecto.Item("KOEN").ToString.Trim & _RowEntidad_X_Defecto.Item("SUEN").ToString.Trim
                Dim _Cod2 As String = _RowEntidad.Item("KOEN").ToString.Trim & _RowEntidad.Item("SUEN").ToString.Trim

                If _Cod1 <> _Cod2 Then
                    _Lista = _ListaPrecioDoc
                End If

            End If

        Else

            If Not String.IsNullOrEmpty(_ListaOrigen) Then
                _Lista = _ListaOrigen
            End If

        End If


        Dim _Es_Usuario_Xdefecto As Boolean = (Trim(_RowEntidad.Item("KOEN")) = Trim(_Koen_Xdefecto) And Trim(_RowEntidad.Item("SUEN")) = Trim(_Suen_Xdefecto))
        Dim _Conservar_Vendedor_No_Preguntar As Boolean = _Global_Row_Configuracion_Estacion.Item("Conservar_Vendedor_No_Preguntar")
        Dim _Cambiar_Vendedor_Doc = _Cambiar_Vendedor

        _CodVendedor = _Kofuen

        If Not _Es_Usuario_Xdefecto Then

            If _Cambiar_Vendedor Then

                If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Or _Post_Venta Then

                    If FUNCIONARIO.Trim <> _Kofuen.Trim Then

                        Consulta_sql = "Select Top 1 * From TABFU Where KOFU = '" & _Kofuen & "'"
                        Dim _RowVendedor As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                        _Cambiar_Vendedor = Not _Ejecutar_Creacion_Automaticas_Desde_Doc_Origen

                        If _Cambiar_Vendedor Then

                            If Not _Conservar_Vendedor_No_Preguntar Then

                                Dim _Vendedor_MAEEN As String = _RowVendedor.Item("NOKOFU").ToString.Trim

                                Dim Chk_Conservar_Vendedor_MAEEN As New Command
                                Chk_Conservar_Vendedor_MAEEN.Checked = True
                                Chk_Conservar_Vendedor_MAEEN.Name = "Chk_Conservar_Vendedor_MAEEN"
                                Chk_Conservar_Vendedor_MAEEN.Text = "Conservar al vendedor por defecto: " & _Vendedor_MAEEN

                                Dim Chk_Cambiar_Vendedor_Actual As New Command
                                Chk_Cambiar_Vendedor_Actual.Checked = False
                                Chk_Cambiar_Vendedor_Actual.Name = "Chk_Cambiar_Vendedor_Actual"
                                Chk_Cambiar_Vendedor_Actual.Text = "Cambiar el vendedor por el usuario actual: " & Nombre_funcionario_activo.Trim

                                Dim Chk_Cambiar_A_Otro_Vendedor As New Command
                                Chk_Cambiar_A_Otro_Vendedor.Checked = False
                                Chk_Cambiar_A_Otro_Vendedor.Name = "Chk_Cambiar_A_Otro_Vendedor"
                                Chk_Cambiar_A_Otro_Vendedor.Text = "Cambiar por otro vendedor..."


                                Dim _Opciones() As Command = {Chk_Conservar_Vendedor_MAEEN, Chk_Cambiar_Vendedor_Actual, Chk_Cambiar_A_Otro_Vendedor}

                                _Koen = _RowEntidad.Item("KOEN")
                                _Suen = _RowEntidad.Item("SUEN")

                                Dim _Info As New TaskDialogInfo("Validación del sistema",
                                          eTaskDialogIcon.Users,
                                          "El cliente pertenece a otro vendedor",
                                          "Confirme su opción",
                                          eTaskDialogButton.Ok, eTaskDialogBackgroundColor.Red, _Opciones, Nothing, Nothing, Nothing, Nothing)

                                Dim _Resultado As eTaskDialogResult = TaskDialog.Show(_Info)

                                If Chk_Cambiar_Vendedor_Actual.Checked Then

                                    _Cambiar_Vendedor_Doc = Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Bkp00040", Nothing, _Koen, _Suen)

                                    If _Cambiar_Vendedor Then
                                        _CodVendedor = FUNCIONARIO
                                    End If

                                ElseIf Chk_Cambiar_A_Otro_Vendedor.Checked Then

                                    If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Bkp00040", Nothing, _Koen, _Suen) Then
                                        Sb_Cambiar_Vendedor(False)
                                    End If

                                End If

                            End If

                        End If

                    End If

                End If

            End If

        End If

        If _Cambiar_Vendedor_Doc Then

            If _Post_Venta Then

                _TblEncabezado.Rows(0).Item("CodFuncionario") = _CodVendedor

            End If

            For Each _Fila As DataRow In _TblDetalle.Rows

                _Fila.Item("CodFuncionario") = _CodVendedor
                _Fila.Item("CodVendedor") = _CodVendedor

            Next

        End If

        _Permiso = "Lp-" & _Lista

        If _Cuotas = 0 Then _Cuotas = 1

        Dim _Cuotas_(_Cuotas - 1) As Date

        If Not _Aplicar_Venciminetos Then
            _Dias_1er_Vencimiento = 0
        End If

        If CBool(_Dias_1er_Vencimiento) Or CBool(_Dias_Vencimiento) Then

            _TblEncabezado.Rows(0).Item("Dias_1er_Vencimiento") = _Dias_1er_Vencimiento
            _TblEncabezado.Rows(0).Item("Dias_Vencimiento") = _Dias_Vencimiento

            If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Or _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Compra Then

                Dim _FechasVenci As Date = _FechaEmision
                Dim _dias As Integer

                If _Dias_1er_Vencimiento > 0 Or _Dias_Vencimiento > 0 Then

                    _dias = _Dias_1er_Vencimiento

                    For i = 1 To _Cuotas

                        _FechasVenci = DateAdd(DateInterval.Day, _dias, _FechasVenci)
                        _Cuotas_(i - 1) = _FechasVenci
                        _dias = _Dias_Vencimiento

                    Next

                    _FechaUltVencimiento = _FechasVenci

                Else

                    _Cuotas = 1

                End If

                _Fecha_1er_Vencimiento = _Cuotas_(0)

            End If

        Else

            _Fecha_1er_Vencimiento = _FechaEmision
            _FechaUltVencimiento = _FechaEmision
            _Cuotas = 0
            _Dias_1er_Vencimiento = 0
            _Dias_Vencimiento = 0

        End If

        _Forma_pago = Trim(_RowEntidad.Item("CPEN"))

        _TblEncabezado.Rows(0).Item("FechaEmision") = _FechaEmision
        _TblEncabezado.Rows(0).Item("Fecha_1er_Vencimiento") = _Fecha_1er_Vencimiento
        _TblEncabezado.Rows(0).Item("FechaUltVencimiento") = _FechaUltVencimiento
        _TblEncabezado.Rows(0).Item("Cuotas") = _Cuotas
        _TblEncabezado.Rows(0).Item("Dias_1er_Vencimiento") = _Dias_1er_Vencimiento
        _TblEncabezado.Rows(0).Item("Dias_Vencimiento") = _Dias_Vencimiento
        _TblEncabezado.Rows(0).Item("RevFincredEnt") = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Entidades",
                                                                      "RevFincred",
                                                                      "CodEntidad = '" & _RowEntidad.Item("KOEN") & "' And CodSucEntidad = '" & _RowEntidad.Item("SUEN") & "'",,,, True)

        _TblEncabezado.Rows(0).Item("RevFincred") = _TblEncabezado.Rows(0).Item("RevFincredEnt")
        _TblObservaciones.Rows(0).Item("Forma_pago") = _Forma_pago

        _Koen = _TblEncabezado.Rows(0).Item("CodEntidad")
        _Suen = _TblEncabezado.Rows(0).Item("CodSucEntidad")

        If _Revisar_Permiso_Lista_Precio Or _Es_Usuario_Xdefecto Then

            Dim _Tiene_Permiso_Lista As Boolean = Fx_Tiene_Permiso(Me, _Permiso, , False, , "TRABAJAR CON LISTA " & _Permiso)
            Dim _Cambiar_lista As Boolean
            Dim _Mostrar_Mensaje_cambio_lista As Boolean

            If _Tiene_Permiso_Lista Then

                _Cambiar_lista = True

            Else

                If Fx_Tiene_Permiso(Me, "NO00002",, False) Then

                    MessageBoxEx.Show(Me, "Usted no puede generar documentos a clientes que tienen otra lista de precios a la que no tienes acceso" & vbCrLf &
                                      "El cliente tiene asignada la lista: (" & _Lista & ") y usted no tiene permiso para utilizar esta lista de precios" & vbCrLf & vbCrLf &
                                      "Cliente: " & _RowEntidad.Item("NOKOEN").ToString.Trim & vbCrLf & vbCrLf &
                                      "NO ES POSIBLE REALIZAR LA VENTA",
                                      "Restricción del sistema (NO00002)", MessageBoxButtons.OK, MessageBoxIcon.Stop)

                    _No_Puede_Acceder = True
                    _No_puede_Acceder_Al_Documento = True

                    If Not _Post_Venta Then _RowEntidad_X_Defecto = Nothing

                    If Me.Visible Then
                        Sb_Limpiar(ModModalidad_Doc)
                    End If

                    Return

                End If

                If MessageBoxEx.Show(_Formulario, "Usted no posee permiso para trabajar con esta lista de precios: " & _Lista & Environment.NewLine &
                                  "La lista seguirá siendo:" & _ListaPrecios & Environment.NewLine & Environment.NewLine &
                                  "¿Desea pedir permiso para trabajar con la lista de la entidad?",
                                  "Validación", MessageBoxButtons.YesNo, MessageBoxIcon.Warning,
                                  MessageBoxDefaultButton.Button1, Me.TopMost) = Windows.Forms.DialogResult.Yes Then

                    _Cambiar_lista = Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, _Permiso, Nothing, _Koen, _Suen, "TRABAJAR CON LISTA " & _Permiso)
                    '_Cambiar_lista = Fx_Tiene_Permiso(Me, _Permiso, , , , "TRABAJAR CON LISTA " & _Permiso)

                    If Not _Cambiar_lista Then

                        _Mostrar_Mensaje_cambio_lista = True

                    End If

                Else

                    _Mostrar_Mensaje_cambio_lista = True

                End If

            End If

            If _Mostrar_Mensaje_cambio_lista Then

                Beep()
                ToastNotification.Show(Me, "LA LISTA NO FUE CAMBIADA",
                                       My.Resources.table_money,
                                       2 * 1000, eToastGlowColor.Red,
                                       eToastPosition.MiddleCenter)

            End If

            If _Cambiar_lista Then

                _ListaPrecios = _Lista
                _TblEncabezado.Rows(0).Item("ListaPrecios") = _ListaPrecios
                _TblDetalle.Rows(0).Item("CodLista") = _ListaPrecios

                Dim _CodLista = _TblEncabezado.Rows(0).Item("ListaPrecios")

                Consulta_sql = "Select * From TABPP Inner Join TABMO On MOLT = KOMO Where KOLT = '" & _CodLista & "'"
                Dim _RowMoneda_Det = _Sql.Fx_Get_DataRow(Consulta_sql)

                _TblDetalle.Rows(0).Item("CodLista") = _RowMoneda_Det.Item("KOLT")
                _TblDetalle.Rows(0).Item("Moneda") = _RowMoneda_Det.Item("KOMO")
                _TblDetalle.Rows(0).Item("Tipo_Cambio") = _RowMoneda_Det.Item("VAMO")
                _TblDetalle.Rows(0).Item("Tipo_Moneda") = _RowMoneda_Det.Item("TIMO")
                _TblDetalle.Rows(0).Item("Tasadorig") = _TblEncabezado.Rows(0).Item("Tasadorig_Doc")

            End If

        End If

        If _Tido = "FCC" Or _Tido = "GRC" Then

            Dim _Recepelect As Boolean = _RowEntidad.Item("RECEPELECT")
            _TblEncabezado.Rows(0).Item("Es_Electronico") = _Recepelect

        End If

        If Not _Post_Venta Then
            Grilla_Encabezado.Columns("CodEntidad").ReadOnly = True
        End If

        Me.ActiveControl = Grilla_Detalle
        Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(0).Cells("Codigo")

        Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Entidades Where CodEntidad = '" & _Koen & "' And CodSucEntidad = '" & _Suen & "'"
        _RowEntidadBakapp = _Sql.Fx_Get_DataRow(Consulta_sql)

        If IsNothing(_RowEntidadBakapp) Then
            Consulta_sql = "Insert Into " & _Global_BaseBk & "Zw_Entidades (CodEntidad,CodSucEntidad) Values ('" & _Koen & "','" & _Suen & "')"
            If _Sql.Ej_consulta_IDU(Consulta_sql) Then
                Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Entidades Where CodEntidad = '" & _Koen & "' And CodSucEntidad = '" & _Suen & "'"
                _RowEntidadBakapp = _Sql.Fx_Get_DataRow(Consulta_sql)
            End If
        End If

    End Sub

    Private Sub BtnSalir_Click(sender As System.Object, e As System.EventArgs)

        Me.Close()

    End Sub

    Sub Sb_Mostrar_Datos_Producto_Activo(_Mostrar_Stock As Boolean, Optional _Muestra_NewRow As Boolean = False)

        If Grilla_Detalle.RowCount > 0 Then

            Try

                Dim _Moneda As String = _TblEncabezado.Rows(0).Item("Moneda_Doc").ToString.Trim
                Dim __DD = Grilla_Detalle.CurrentCell
                Dim _Fila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index)

                Dim _Cabeza = Grilla_Detalle.Columns(Grilla_Detalle.CurrentCell.ColumnIndex).Name

                With _Fila

                    Dim _Descripcion As String
                    Dim _Descripcion_Ori As String

                    Try
                        _Descripcion = .Cells("Descripcion").Value.ToString.Trim

                        ' HABILITAR ESTA OPCION PARA MOLINOS HEREDIA

                        _Descripcion_Ori = .Cells("Descripcion_Ori").Value.ToString.Trim

                        If _Descripcion <> _Descripcion_Ori Then
                            _Descripcion = _Descripcion & " (" & _Descripcion_Ori & ")"
                        End If

                    Catch ex As Exception
                        _Descripcion = String.Empty
                    End Try



                    If Not _Muestra_NewRow Then

                        If .IsNewRow And Grilla_Detalle.RowCount > 0 Then

                            LblDescripcion.Text = String.Empty
                            LblUbicacionBodega.Text = String.Empty
                            LblNetoLinea.Text = FormatNumber(0, 2)
                            LblIvaLinea.Text = FormatNumber(0, 2)
                            LblImpuestosLinea.Text = FormatNumber(0, 2)
                            LbllBrutoLinea.Text = FormatNumber(0, 0)
                            LblListaLinea.Text = String.Empty
                            Lbl_Costo_Lista.Text = FormatNumber(0, 0)

                            Exit Sub

                        End If

                    End If

                    Dim _Codigo As String = NuloPorNro(.Cells("Codigo").Value, "")
                    Dim _NetoLinea As Double = NuloPorNro(.Cells("ValNetoLinea").Value, 0)
                    Dim _IvaLinea As Double = NuloPorNro(.Cells("ValIvaLinea").Value, 0)
                    Dim _IlaLinea As Double = NuloPorNro(.Cells("ValIlaLinea").Value, 0)

                    Dim _PorIva As Double = NuloPorNro(.Cells("PorIva").Value, 0)
                    Dim _PorIla As Double = NuloPorNro(.Cells("PorIla").Value, 0)

                    Dim _BrutoLinea As Double = NuloPorNro(.Cells("ValBrutoLinea").Value, 0)
                    Dim _CodLista As String = NuloPorNro(.Cells("CodLista").Value, "")
                    Dim _UbicacionBod As String = NuloPorNro(.Cells("UbicacionBod").Value, String.Empty)
                    Dim _Prct As Boolean = NuloPorNro(.Cells("Prct").Value, False)

                    Dim _CodFuncionario As String = NuloPorNro(.Cells("CodFuncionario").Value, String.Empty)

                    Dim _Recargo_Campo As String = NuloPorNro(.Cells("Recargo_Campo").Value, String.Empty)
                    Dim _Recargo_Valor As Double = NuloPorNro(.Cells("Recargo_Valor").Value, 0)

                    Dim _Monedal As String = NuloPorNro(.Cells("Moneda").Value, String.Empty)

                    Dim _Idmaeddo_Dori = Val(NuloPorNro(_Fila.Cells("Idmaeddo_Dori").Value, 0))
                    Dim _Desde As String

                    Dim _CostoLista As String = FormatNumber(NuloPorNro(.Cells("CostoLista").Value, 0), 0)
                    Lbl_Costo_Lista.Text = Rellenar(_CostoLista, 9, " ", False)

                    If CBool(_Idmaeddo_Dori) Then

                        Dim Td, Nr As String
                        Td = .Cells("Tidopa").Value
                        Nr = .Cells("Nudopa").Value
                        _Desde = " Desde: " & Td & " - " & Nr

                    End If

                    Consulta_sql = "Select * From TABFU Where KOFU = '" & _CodFuncionario & "'"
                    Dim _Row_Vendedor As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                    Dim _Vendedor As String = String.Empty

                    If Not String.IsNullOrEmpty(_Descripcion) And Not IsNothing(_Row_Vendedor) And _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Venta Then
                        _Vendedor = Space(5) & "Vendedor: " & _Row_Vendedor.Item("NOKOFU").ToString.Trim
                    End If

                    If CBool(_Recargo_Valor) Then
                        _Desde = " - Recargo Valor (" & _Recargo_Campo & "): " & _Monedal.Trim & " " & FormatNumber(_Recargo_Valor, 2)
                    End If

                    Dim _Centro_Costo As String = .Cells("Centro_Costo").Value.ToString.Trim

                    LblDescripcion.Text = _Descripcion & " " & _Desde & " " & _Vendedor

                    If Not String.IsNullOrEmpty(LblDescripcion.Text.Trim) And Not String.IsNullOrEmpty(_Centro_Costo) Then
                        LblDescripcion.Text += Space(5) & "(Cent.Costo: " & _Centro_Costo & ")"
                    End If

                    LblUbicacionBodega.Text = _UbicacionBod
                    LblNetoLinea.Text = FormatNumber(_NetoLinea, 2)

                    LblIvaLinea.Text = FormatNumber(_IvaLinea, 2)
                    LblImpuestosLinea.Text = FormatNumber(_IlaLinea, 2)

                    GroupPanel7.Text = "Impuestos"

                    If _PorIla > 0 Then
                        GroupPanel7.Text = "Impuestos " & _PorIla & "%"
                    End If

                    LbllBrutoLinea.Text = FormatNumber(_BrutoLinea, 0)
                    LblListaLinea.Text = _CodLista

                    If _Documento_Interno Then

                        If _No_Puede_Ver_Precios Then

                            LblNetoLinea.Text = FormatNumber(0, 2)
                            LblIvaLinea.Text = FormatNumber(0, 2)
                            LblImpuestosLinea.Text = FormatNumber(0, 2)
                            LbllBrutoLinea.Text = FormatNumber(0, 0)

                        End If

                    End If

                    Dim _UnTrans As Integer = NuloPorNro(.Cells("UnTrans").Value, 1)
                    Dim _Nuevo_Producto As Boolean = .Cells("Nuevo_Producto").Value

                    If _Nuevo_Producto And Grilla_Detalle.Rows.Count > 1 Then

                        If Fr_Alerta_Stock.Visible Then
                            Fr_Alerta_Stock.Visible = False
                        End If

                    End If

                    If _Mostrar_Stock Then

                        If Fr_Alerta_Stock.Visible Then

                            If _Codigo_abuscar <> _Codigo Then

                                If _Cabeza = "Cantidad" Then

                                    Fr_Alerta_Stock.Close()
                                    _Codigo_abuscar = _Codigo
                                    Fr_Alerta_Stock = New AlertCustom(_Codigo, _UnTrans)
                                    CType(Fr_Alerta_Stock, AlertCustom).Tido = _Tido

                                    ShowLoadAlert(Fr_Alerta_Stock, Me)

                                Else

                                    If Fr_Alerta_Stock.Visible Then
                                        Fr_Alerta_Stock.Visible = False
                                    End If

                                End If

                            End If

                        End If

                    End If

                    If _Revision_Remota Then
                        Btn_Mini_Buscar_CodAlternativo_Grilla.Enabled = False
                        Btn_Mini_Buscar_CodPrincipal_Grilla.Enabled = False
                        Btn_Mini_Buscar_Producto_Grilla.Enabled = False
                        Btn_Mini_Refrescar_Stock_X_Linea.Enabled = False
                    Else
                        Btn_Mini_Buscar_CodAlternativo_Grilla.Enabled = Not String.IsNullOrEmpty(_Codigo)
                        Btn_Mini_Buscar_CodPrincipal_Grilla.Enabled = Not String.IsNullOrEmpty(_Codigo)
                        Btn_Mini_Buscar_Producto_Grilla.Enabled = Not String.IsNullOrEmpty(_Codigo)
                        Btn_Mini_Refrescar_Stock_X_Linea.Enabled = Not String.IsNullOrEmpty(_Codigo)
                    End If

                    'Btn_Mini_Info_Producto_Grilla.Enabled = Not String.IsNullOrEmpty(_Codigo)
                    'Btn_Mini_Kardex_Producto_Grilla.Enabled = Not String.IsNullOrEmpty(_Codigo)
                    Btn_Mini_Cambiar_Bodega.Enabled = Not String.IsNullOrEmpty(_Codigo)
                    Btn_Mini_Bodega_Para_Todos.Enabled = Not String.IsNullOrEmpty(_Codigo)
                    'Btn_Mini_Observaciones_Linea.Enabled = Not String.IsNullOrEmpty(_Codigo)
                    'Btn_Mini_Imagen_Sol_Bodega.Enabled = Not String.IsNullOrEmpty(_Codigo)
                    Btn_Mini_Sol_Crear_Producto.Enabled = Not String.IsNullOrEmpty(_Codigo)
                    'Btn_Mini_Anotaciones_a_la_linea.Enabled = Not String.IsNullOrEmpty(_Codigo)
                    Btn_Mini_Consolidar_Stock.Enabled = Not String.IsNullOrEmpty(_Codigo)

                    Btn_Mini_Recargar_Producto.Enabled = (Not String.IsNullOrEmpty(_Codigo) And _Tido = "OCC")

                    Btn_Mini_Clonar_Producto.Enabled = Not String.IsNullOrEmpty(_Codigo)

                    If _Prct Then
                        'Btn_Mini_Kardex_Producto_Grilla.Enabled = False
                        Btn_Mini_Consolidar_Stock.Enabled = False
                        Btn_Mini_Recargar_Producto.Enabled = False
                        'Btn_Mini_Imagen_Sol_Bodega.Enabled = False
                        Btn_Mini_Clonar_Producto.Enabled = False
                    End If

                End With

            Catch ex As Exception
                ' MsgBox(ex.Message)
            End Try

        End If

    End Sub

    Sub Sb_Borrar_Conceptos_Descuento()

        With Grilla_Detalle

            Dim _Filas = Grilla_Detalle.Rows.Count - 1
            Dim _Concep(_Filas) As String
            Dim _i = 0
            Dim _a = 0

            For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows

                Dim _Tict = NuloPorNro(_Fila.Cells("Tict").Value, "")
                Dim _Codigo = NuloPorNro(_Fila.Cells("Codigo").Value, "")

                Dim _Oferta As String = _Fila.Cells("Oferta").Value
                Dim _Padre_Oferta As Integer = _Fila.Cells("Padre_Oferta").Value
                Dim _Aplica_Oferta As Boolean = _Fila.Cells("Aplica_Oferta").Value

                If _Tict = "D" And Not _Aplica_Oferta Then

                    _Hay_Descuentos_Globales = False
                    _Concep(_a) = _i
                    _a += 1
                    _Fila.Cells("DsctoRealPorc").Value = 0

                End If

                _i += 1

            Next

            If _a > 0 Then

                Dim _Regresivo As Integer = _a - 1

                For _i = 0 To _a - 1

                    .Rows.RemoveAt(_Concep(_Regresivo))
                    _Regresivo -= 1

                Next

            End If

            Sb_Sumar_Totales()

        End With

    End Sub

    Sub Sb_Detalle_Codigo(_Fila As DataGridViewRow,
                          _Indice As Integer)


        If Fx_Revisar_Si_Hay_Descuentos() = Enum_Descuento.Gloabales Then
            Dim Nro = "Bkp00016"
            Dim Permiso = Fx_Tiene_Permiso(Me, Nro)
            If Permiso = False Then
                ' MensajeSinPermiso(Nro)
                Grilla_Detalle.Rows.RemoveAt(_Indice)
                Return
            End If
        End If

    End Sub

    Enum Enum_Descuento
        Individuales
        Gloabales
        Sin_Descuento
    End Enum

    Function Fx_Revisar_Si_Hay_Descuentos() As Enum_Descuento

        Dim _SumaDescuentos As Double = 0

        _Hay_Descuentos_Globales = False
        _Hay_Descuentos_Individuales = False

        Dim _CodDescuento As Integer = 0
        Dim _CodRecargo As Integer = 0

        For Each row As DataGridViewRow In Grilla_Detalle.Rows

            Dim _Tict = NuloPorNro(row.Cells("Tict").Value, String.Empty)
            Dim _Aplica_Oferta = row.Cells("Aplica_Oferta").Value

            _SumaDescuentos += NuloPorNro(row.Cells("DescuentoValor").Value, 0)

            If _Tict = "D" And Not _Aplica_Oferta Then
                _CodDescuento += 1
            ElseIf _Tict = "R" Then
                _CodRecargo += 1
            End If

            Dim _Tiene_Dscto As Boolean = row.Cells("Tiene_Dscto").Value

            If _Tiene_Dscto Then
                'Return Enum_Descuento.Individuales
            End If

        Next

        If _CodDescuento > 0 Then
            _Hay_Descuentos_Globales = True
            _Hay_Descuentos_Individuales = False
            Return Enum_Descuento.Gloabales
        ElseIf _CodDescuento = 0 And _SumaDescuentos > 0 Then
            _Hay_Descuentos_Globales = False
            _Hay_Descuentos_Individuales = True
            Return Enum_Descuento.Sin_Descuento
        Else
            Return Enum_Descuento.Sin_Descuento
        End If

    End Function

    Sub Sb_Agregar_Concepto(_Fila As DataGridViewRow, _RowConcepto As DataRow)

        Dim _TotalNetoDoc As Double = _TblEncabezado.Rows(0).Item("TotalNetoDoc")
        Dim _TotalIvaDoc As Double = _TblEncabezado.Rows(0).Item("TotalIvaDoc")
        Dim _TotalIlaDoc As Double = _TblEncabezado.Rows(0).Item("TotalIlaDoc")
        Dim _TotalBrutoDoc As Double = _TblEncabezado.Rows(0).Item("TotalBrutoDoc")

        Dim _DsctoNeto As Double
        Dim _DsctoBruto As Double

        Dim _ValIvaLinea As Double
        Dim _ValIlaLinea As Double
        Dim _ValNetoLinea As Double
        Dim _ValBrutoLinea As Double

        Dim _Descripcion As String = Trim(_RowConcepto.Item("NOKOCT"))
        Dim _Descripcion_Ori As String = Trim(_RowConcepto.Item("NOKOCT"))

        Dim _Ud1Linea = String.Empty
        Dim _Ud2Linea = String.Empty
        Dim _UnTrans = 1

        Dim _RtuProLinea = 1
        Dim _MaxDescuento As Double = _RowConcepto.Item("POCT")
        Dim _Porcentaje_Calc As Double = _RowConcepto.Item("POCT")
        Dim _IVAdelProducto As Double = _RowConcepto.Item("POIVCT")
        Dim _IlaProducto = 0

        Dim _DescuentoValor As Double
        Dim _Valor_Calculado As Double

        Dim _PrecioLinea As Double
        Dim _PrecioNeto As Double
        Dim _PrecioBruto As Double

        Dim _PrecioNetoUd = _PrecioNeto
        Dim _PrecioBrutoUd = _PrecioBruto

        Dim _Iva = _IVAdelProducto / 100
        Dim _Ila = _IlaProducto / 100

        Dim _Impuestos As Double = 1 + (_Iva + _Ila)

        If ChkValores.Checked Then
            _PrecioLinea = _TblEncabezado.Rows(0).Item("TotalNetoDoc")
        Else
            _PrecioLinea = _TblEncabezado.Rows(0).Item("TotalBrutoDoc")
            _TotalBrutoDoc = _PrecioLinea
        End If

        Dim _TipoValor As String

        If ChkValores.Checked Then
            _PrecioNeto = _PrecioLinea
            _TipoValor = "N"
        Else
            _PrecioNeto = Math.Round(_PrecioLinea / _Impuestos, 5)
            _PrecioBruto = _PrecioLinea
            _TipoValor = "B"
        End If

        _Valor_Calculado = Math.Round((_Porcentaje_Calc / 100) * _PrecioLinea, 0)

        If ChkValores.Checked Then ' SI VALORES SON NETOS

            _ValNetoLinea = Math.Round(_Valor_Calculado, 0)
            _ValIvaLinea = (Math.Round(_ValNetoLinea * (_IVAdelProducto / 100), 5))
            _ValBrutoLinea = Math.Round((_ValNetoLinea + _ValIvaLinea), 0)
            _DescuentoValor = _ValNetoLinea

        Else                      ' SI VALORES SON BRUTOS

            _ValBrutoLinea = _Valor_Calculado
            _ValNetoLinea = Math.Round(_Valor_Calculado / _Impuestos, 0)
            _ValIvaLinea = (Math.Round(_ValNetoLinea * (_IVAdelProducto / 100), 0))
            _DescuentoValor = _ValBrutoLinea

        End If

        _DsctoNeto = _ValNetoLinea
        _DsctoBruto = _ValBrutoLinea

        Dim _Prct = 1
        Dim _Tict = _RowConcepto.Item("TICT")
        Dim _Tipr = String.Empty

        _PrecioNeto = _TblEncabezado.Rows(0).Item("TotalNetoDoc")
        _PrecioBruto = _TblEncabezado.Rows(0).Item("TotalBrutoDoc")

        Dim _NetoRealUd1 = 0
        Dim _NetoRealUd2 = 0

        Dim _Stock As Double = 0
        Dim _UbicacionBod = String.Empty
        'Dim _VtaStock = True


        If _Tict = "D" Then
            _ValNetoLinea = _ValNetoLinea * -1
            _ValIvaLinea = _ValIvaLinea * -1
            _ValBrutoLinea = _ValBrutoLinea * -1
        End If

        With _Fila

            .Cells("Codigo").Value = _RowConcepto.Item("KOCT")
            .Cells("Cantidad").Value = 0
            .Cells("CantidadCalculo").Value = 0

            .Cells("CantUd1").Value = _Valor_Calculado
            .Cells("CDespUd1").Value = _Valor_Calculado
            .Cells("CantUd2").Value = 0
            .Cells("CDespUd2").Value = 0

            .Cells("DescuentoPorc").Value = _Porcentaje_Calc
            .Cells("DescuentoValor").Value = _DescuentoValor
            .Cells("TipoValor").Value = _TipoValor

            .Cells("DsctoRealPorc").Value = 0
            .Cells("DsctoRealValor").Value = 0

            .Cells("ValVtaStockInf").Value = True

            .Cells("Prct").Value = _Prct
            .Cells("Precio").Value = 0


            .Cells("PrecioCalculo").Value = _PrecioLinea
            .Cells("Tipr").Value = _Tipr
            .Cells("Descripcion").Value = _Descripcion
            .Cells("Descripcion_Ori").Value = _Descripcion_Ori
            .Cells("Rtu").Value = _RtuProLinea
            .Cells("Tict").Value = _Tict
            .Cells("UnTrans").Value = _UnTrans
            .Cells("UdTrans").Value = String.Empty
            .Cells("Ud01PR").Value = _Ud1Linea
            .Cells("Ud02PR").Value = _Ud2Linea
            .Cells("PrecioNetoUd").Value = 0
            .Cells("PrecioBrutoUd").Value = 0

            .Cells("PrecioNetoUdLista").Value = 0
            .Cells("PrecioBrutoUdLista").Value = 0

            .Cells("DsctoNeto").Value = 0
            .Cells("DsctoBruto").Value = 0

            .Cells("PorIva").Value = _IVAdelProducto
            .Cells("PorIla").Value = _IlaProducto
            .Cells("StockBodega").Value = 0
            .Cells("ValVtaStockInf").Value = False

            .Cells("UbicacionBod").Value = String.Empty
            .Cells("DescMaximo").Value = _MaxDescuento
            .Cells("Operacion").Value = String.Empty
            .Cells("Potencia").Value = 0

            Dim _Lincondest As Boolean

            Consulta_sql = "Select Case When FICO = 0 And FIAD = 0 Then 'No'
                            WHEN FICO <> 0 AND FIAD = 1 Then 'Si'
                            WHEN FICO <> 0 AND FIAD = 0 Then 'Si'
                            WHEN FICO = 0 AND FIAD <> 0 Then 'Revisar'
                            END AS Consulta
                            From TABTIDO
                            Where TIDO = '" & _Tido & "'"

            Dim _Row_Tido As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            If _Row_Tido.Item("Consulta") = "Si" Then
                _Lincondest = True
            ElseIf _Row_Tido.Item("Consulta") = "No" Then
                _Lincondest = False
            ElseIf _Row_Tido.Item("Consulta") = "Revisar" Then

                Dim _Despacha_Stock As String = _Global_Row_Configuracion_Estacion.Item("EDESFACV")

                If _Despacha_Stock = "S" Then
                    _Lincondest = True
                End If

            End If

            .Cells("Lincondest").Value = _Lincondest
            .Cells("ValVtaDescMax").Value = False
            .Cells("NroDscto").Value = 0
            .Cells("DsctoNeto").Value = 0
            .Cells("DsctoBruto").Value = 0
            .Cells("IdMaeddo_Dori").Value = 0
            .Cells("Nuevo_Producto").Value = 0

            .Cells("DsctoNeto").Value = _DsctoNeto
            .Cells("DsctoBruto").Value = _DsctoBruto

            .Cells("ValIvaLinea").Value = _ValIvaLinea
            .Cells("ValIlaLinea").Value = _ValIlaLinea
            .Cells("ValNetoLinea").Value = _ValNetoLinea
            .Cells("ValBrutoLinea").Value = _ValBrutoLinea

            Dim _Cabeza = "DescuentoPorc"

            Sb_Sumar_Totales()

        End With

    End Sub

    Sub Sb_Traer_Producto_A_La_Nueva_Fila(_Fila As DataGridViewRow,
                                          _RowProducto As DataRow,
                                          _Indice As Integer)

        Dim _Codigo = _RowProducto.Item("KOPR")
        Dim _Tipr As String = _RowProducto.Item("TIPR")
        Dim _CodLista = _Fila.Cells("CodLista").Value
        Dim _Descripcion = _RowProducto.Item("NOKOPR")

        Dim _Empresa = _Fila.Cells("Empresa").Value
        Dim _Sucursal = _Fila.Cells("Sucursal").Value
        Dim _Bodega = _Fila.Cells("Bodega").Value

        Dim _Indice_Agrupa As Integer
        Dim _Existe_En_Lista As Boolean

        Dim _Mensaje As LsValiciones.Mensajes

        If SoloprodEnDoc_CLALIBPR And _Tipr <> "SSN" Then

            Dim _Clalibpr = _RowProducto.Item("CLALIBPR").ToString.Trim

            _Mensaje = Fx_RevisarTipoVenta(_Clalibpr)

            If Not _Mensaje.EsCorrecto Then

                Dim _ExluyeTipoVenta As Boolean = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Productos", "ExluyeTipoVenta", "Codigo = '" & _Codigo & "'",, False,, True)

                If Not _ExluyeTipoVenta Then

                    MessageBoxEx.Show(Me, _Codigo.ToString.Trim & " - " & _Descripcion.ToString.Trim & vbCrLf & vbCrLf &
                            _Mensaje.Mensaje, _Mensaje.Detalle, MessageBoxButtons.OK, _Mensaje.Icono)
                    _Fila.Cells("Codigo").Value = String.Empty

                    Return

                End If

            End If

        End If

        For Each _Fl As DataGridViewRow In Grilla_Detalle.Rows

            Dim _Codigo2 = _Fl.Cells("Codigo").Value
            Dim _Sucursal2 = _Fl.Cells("Sucursal").Value
            Dim _Bodega2 = _Fl.Cells("Bodega").Value
            Dim _Tipr2 = NuloPorNro(_Fl.Cells("Tipr").Value, "")
            Dim _Nuevo_Producto2 = _Fl.Cells("Nuevo_Producto").Value
            Dim _Aplica_Oferta2 = _Fl.Cells("Aplica_Oferta").Value
            Dim _Tidopa = _Fl.Cells("Tidopa").Value
            Dim _CodLista2 = _Fl.Cells("CodLista").Value

            Dim _TieneTidopa As Boolean = Not String.IsNullOrEmpty(_Tidopa.ToString.Trim)

            If _Editar_documento Then
                _TieneTidopa = False
            End If

            If _Codigo2 = _Codigo And _Sucursal2 = _Sucursal And _Bodega2 = _Bodega And _CodLista = _CodLista2 And Not _Nuevo_Producto2 And
                Fx_ProdConInfo(_Tipr2) And Not _Aplica_Oferta2 And Not _TieneTidopa Then

                _Indice_Agrupa = _Fl.Index
                _Existe_En_Lista = True
                Exit For

            End If

        Next

        If _Existe_En_Lista Then

            If PreVenta And _Tido = "COV" Then
                MessageBoxEx.Show(Me, "El producto ya esta en la lista", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                _Fila.Cells("Codigo").Value = String.Empty
                Return
            End If

            _Mensaje = Fx_ProductoEnLista(_Codigo, _Descripcion)

            If Not _Mensaje.EsCorrecto Then
                _Fila.Cells("Codigo").Value = String.Empty
                Return
            End If

            If _Mensaje.Mensaje = "Agrupar" Then
                _Fila.Cells("Codigo").Value = String.Empty
                Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(_Indice_Agrupa).Cells("Cantidad")
                Grilla_Detalle.Focus()
                Return
            End If

        End If

        Consulta_sql = "Select Top 1 PP01UD,PP02UD,DTMA01UD As DSCTOMAX,ECUACION," &
                       "(Select top 1 MELT From TABPP Where KOLT = '" & _CodLista & "') as MELT From TABPRE" & Space(1) &
                       "Where KOLT = '" & _CodLista & "' And KOPR = '" & _Codigo & "'"
        Dim _RowPrecios As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        If (_RowPrecios Is Nothing) Then

            MessageBoxEx.Show(Me, "Este producto no esta asignado a esta lista de precios [" & _CodLista & "]" & Environment.NewLine &
                              "Producto: " & Trim(_Codigo) & " - " & _Descripcion, "Validación",
                              MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
            _Fila.Cells("Codigo").Value = String.Empty
            Exit Sub

        End If

        Dim _Asociado_Bodega As Boolean = CBool(_Sql.Fx_Cuenta_Registros("TABBOPR",
                                                "EMPRESA = '" & _Empresa &
                                                "' And KOSU = '" & _Sucursal &
                                                "' And KOBO = '" & _Bodega &
                                                "' And KOPR = '" & _Codigo & "'"))

        If Not _Asociado_Bodega Then

            Dim _Pedir_Permiso As Boolean

            Consulta_sql = "Select Tbp.*,Tb.NOKOBO From TABBOPR Tbp 
                                                    Left Join TABBO Tb On Tb.EMPRESA = Tbp.EMPRESA And Tb.KOSU = Tbp.KOSU And Tb.KOBO = Tbp.KOBO
                                                Where Tbp.EMPRESA = '" & _Empresa & "' And Tbp.KOSU = '" & _Sucursal & "' AND Tbp.KOPR = '" & _Codigo & "'"
            Dim _TblTabbopr As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

            If CBool(_TblTabbopr.Rows.Count) Then

                If _TblTabbopr.Rows.Count = 1 Then

                    Dim _Bodega_Str As String = _Sql.Fx_Trae_Dato("TABBO", "Ltrim(Rtrim(KOBO))+' - '+Ltrim(Rtrim(NOKOBO))",
                                                "EMPRESA = '" & _Empresa & "' And KOSU = '" & _Sucursal & "' And KOBO = '" & _Bodega & "'")

                    _Sucursal = _TblTabbopr.Rows(0).Item("KOSU")
                    _Bodega = _TblTabbopr.Rows(0).Item("KOBO")
                    _Asociado_Bodega = True
                    _Pedir_Permiso = True

                    MessageBoxEx.Show(Me, "Este producto no esta asignado a la bodega " & _Bodega_Str & vbCrLf & vbCrLf &
                                      "Producto se asignara a bodega: " & _Bodega & " - " & _TblTabbopr.Rows(0).Item("NOKOBO").ToString.Trim, "Asignación automática",
                                      MessageBoxButtons.OK, MessageBoxIcon.Exclamation)

                Else

                    MessageBoxEx.Show(Me, "Código: " & _Codigo.ToString.Trim & " - " & _Descripcion.ToString.Trim & vbCrLf & vbCrLf &
                                      "Este producto no esta asignado a la bodega " & _Bodega & vbCrLf &
                                      "Debe seleccionar una bodega para la línea del documento", "Validación",
                                      MessageBoxButtons.OK, MessageBoxIcon.Warning)

                    Dim _Row_Bodega As DataRow
                    Dim _Stock_Insuficiente As Boolean
                    Dim _Cantidad As Double = NuloPorNro(_Fila.Cells("Cantidad").Value, 0)

                    Dim _Es_Venta As Boolean = (_Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Venta)

                    Dim Fm As New Frm_Formulario_Cantidad_Stock_X_Bodega(_Codigo, _Cantidad, _Sucursal, _Es_Venta, _Tido)
                    Fm.ShowDialog(Me)
                    _Row_Bodega = Fm.Row_Bodega
                    _Stock_Insuficiente = Fm.Stock_Insuficiente
                    Fm.Dispose()

                    If Not IsNothing(_Row_Bodega) Then

                        _Sucursal = _Row_Bodega.Item("KOSU").ToString.Trim
                        _Bodega = _Row_Bodega.Item("KOBO").ToString.Trim
                        _Asociado_Bodega = True

                    Else

                        _Fila.Cells("Codigo").Value = String.Empty
                        Return

                    End If

                End If

            End If

            If _Asociado_Bodega Then

                Dim _Permiso = "Bo" & _Empresa & _Sucursal & _Bodega

                If _Pedir_Permiso Then
                    _Asociado_Bodega = Fx_Tiene_Permiso(Me, _Permiso)
                End If

                If _Asociado_Bodega Then
                    _Fila.Cells("Sucursal").Value = _Sucursal
                    _Fila.Cells("Bodega").Value = _Bodega
                    _Asociado_Bodega = True
                Else
                    _Fila.Cells("Codigo").Value = String.Empty
                    Return
                End If

            End If

        End If

        If _Asociado_Bodega Then

            If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Compra Then
                ' AGREGAR ALGO ACA PARA UN CODIGO NO ASOCIADO A UN PROVEEDOR
            End If

            If Fx_Existe_Producto_Seleccionado_WMS(_Empresa, _Sucursal, _Bodega, _Codigo) Then
                MessageBoxEx.Show(Me, "Este producto ya se encuentra en el detalle",
                                  "Producto no puede estar más de una vez en el detalle",
                                MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                _Fila.Cells("Codigo").Value = String.Empty
                Return
            End If

            Sb_Traer_Producto_Grilla(_Fila, _RowProducto, False,,,, True)

            Dim _Potencia As Double = _Fila.Cells("Potencia").Value

            If CBool(_Potencia) Then

                If MessageBoxEx.Show(Me, "Este producto posee recargo unitario definido por proveedor" & vbCrLf &
                                     "El valor es : " & FormatNumber(_Potencia, 2) & vbCrLf &
                                     "¿Desea modificarlo?", "Potencia", MessageBoxButtons.YesNo, MessageBoxIcon.Question) = DialogResult.Yes Then

                    If InputBox_Bk(Me, "Potencia", "Modificar flete/recargo", _Potencia, False,,, True,
                                   _Tipo_Imagen.Cheque_Numero,, _Tipo_Caracter.Moneda) Then

                        _Fila.Cells("Potencia").Value = _Potencia

                    End If

                End If

            End If

            Me.ActiveControl = Grilla_Detalle

            Try
                Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(_Indice).Cells("Cantidad")
                Sb_Mostrar_Datos_Producto_Activo(True)
            Catch ex As Exception

            End Try

        Else

            MessageBoxEx.Show(Me, "Producto no asignado a esta Sucursal/Bodega",
                              "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
            _Fila.Cells("Codigo").Value = String.Empty

        End If

    End Sub

    Function Fx_Validar_Si_Se_Puede_Traer_Producto_A_La_Nueva_Fila(_RowProducto As DataRow,
                                                                   _CodLista As String,
                                                                   _Empresa As String,
                                                                   _Sucursal As String,
                                                                   _Bodega As String,
                                                                   _Cantidad As Double,
                                                                   _IngresoAutomatico As Boolean) As LsValiciones.Mensajes

        Dim _Mensaje As New LsValiciones.Mensajes
        Dim _Msj As LsValiciones.Mensajes

        Try

            Dim _Codigo = _RowProducto.Item("KOPR")
            Dim _Tipr As String = _RowProducto.Item("TIPR")
            Dim _Descripcion = _RowProducto.Item("NOKOPR")

            Dim _Indice_Agrupa As Integer
            Dim _Existe_En_Lista As Boolean

            If SoloprodEnDoc_CLALIBPR And _Tipr <> "SSN" Then

                Dim _Clalibpr = _RowProducto.Item("CLALIBPR").ToString.Trim

                _Msj = Fx_RevisarTipoVenta(_Clalibpr)

                If Not _Msj.EsCorrecto Then

                    Dim _ExluyeTipoVenta As Boolean = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Productos", "ExluyeTipoVenta", "Codigo = '" & _Codigo & "'",, False,, True)

                    If Not _ExluyeTipoVenta Then

                        _Mensaje.Detalle = "Producto: " & Trim(_Codigo) & " - " & _Descripcion.ToString.Trim
                        Throw New System.Exception(_Msj.Mensaje)

                    End If

                End If

            End If

            For Each _Fl As DataGridViewRow In Grilla_Detalle.Rows

                Dim _Codigo2 = _Fl.Cells("Codigo").Value
                Dim _Sucursal2 = _Fl.Cells("Sucursal").Value
                Dim _Bodega2 = _Fl.Cells("Bodega").Value
                Dim _Tipr2 = NuloPorNro(_Fl.Cells("Tipr").Value, "")
                Dim _Nuevo_Producto2 = _Fl.Cells("Nuevo_Producto").Value
                Dim _Aplica_Oferta2 = _Fl.Cells("Aplica_Oferta").Value
                Dim _Tidopa = _Fl.Cells("Tidopa").Value
                Dim _CodLista2 = _Fl.Cells("CodLista").Value

                Dim _TieneTidopa As Boolean = Not String.IsNullOrEmpty(_Tidopa.ToString.Trim)

                If _Editar_documento Then
                    _TieneTidopa = False
                End If

                If _Codigo2 = _Codigo And _Sucursal2 = _Sucursal And _Bodega2 = _Bodega And _CodLista = _CodLista2 And Not _Nuevo_Producto2 And
                    Fx_ProdConInfo(_Tipr2) And Not _Aplica_Oferta2 And Not _TieneTidopa Then

                    _Indice_Agrupa = _Fl.Index
                    _Existe_En_Lista = True
                    Exit For

                End If

            Next

            If _Existe_En_Lista Then

                If _IngresoAutomatico Then
                    _Mensaje.Detalle = "Producto: " & Trim(_Codigo) & " - " & _Descripcion.ToString.Trim
                    Throw New System.Exception("Producto ya existe en el documento, no se puede duplicar desde esta opción")
                End If

                _Msj = Fx_ProductoEnLista(_Codigo, _Descripcion)

                If Not _Msj.EsCorrecto Then
                    Throw New System.Exception(_Msj.Mensaje)
                End If

                If _Mensaje.Mensaje = "Agrupar" Then
                    Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(_Indice_Agrupa).Cells("Cantidad")
                    Grilla_Detalle.Focus()
                    Throw New System.Exception(_Msj.Mensaje)
                End If

            End If

            Consulta_sql = "Select Top 1 PP01UD,PP02UD,DTMA01UD As DSCTOMAX,ECUACION," &
                           "(Select top 1 MELT From TABPP Where KOLT = '" & _CodLista & "') as MELT From TABPRE" & Space(1) &
                           "Where KOLT = '" & _CodLista & "' And KOPR = '" & _Codigo & "'"
            Dim _RowPrecios As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            If (_RowPrecios Is Nothing) Then

                _Mensaje.Detalle = "Producto: " & Trim(_Codigo) & " - " & _Descripcion.ToString.Trim
                Throw New System.Exception("Este producto no esta asignado a esta lista de precios [" & _CodLista & "]")

            End If

            Dim _Asociado_Bodega As Boolean = CBool(_Sql.Fx_Cuenta_Registros("TABBOPR",
                                                    "EMPRESA = '" & _Empresa &
                                                    "' And KOSU = '" & _Sucursal &
                                                    "' And KOBO = '" & _Bodega &
                                                    "' And KOPR = '" & _Codigo & "'"))

            If Not _Asociado_Bodega Then

                Dim _Pedir_Permiso As Boolean

                Consulta_sql = "Select Tbp.*,Tb.NOKOBO From TABBOPR Tbp" & vbCrLf &
                               "Left Join TABBO Tb On Tb.EMPRESA = Tbp.EMPRESA And Tb.KOSU = Tbp.KOSU And Tb.KOBO = Tbp.KOBO" & vbCrLf &
                               "Where Tbp.EMPRESA = '" & _Empresa & "' And Tbp.KOSU = '" & _Sucursal & "' AND Tbp.KOPR = '" & _Codigo & "'"
                Dim _TblTabbopr As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

                If CBool(_TblTabbopr.Rows.Count) Then

                    If _TblTabbopr.Rows.Count = 0 Then

                        '    Dim _Bodega_Str As String = _Sql.Fx_Trae_Dato("TABBO", "Ltrim(Rtrim(KOBO))+' - '+Ltrim(Rtrim(NOKOBO))",
                        '                                "EMPRESA = '" & _Empresa & "' And KOSU = '" & _Sucursal & "' And KOBO = '" & _Bodega & "'")

                        '    _Sucursal = _TblTabbopr.Rows(0).Item("KOSU")
                        '    _Bodega = _TblTabbopr.Rows(0).Item("KOBO")

                        '    _Asociado_Bodega = True
                        '    _Pedir_Permiso = True

                        '    MessageBoxEx.Show(Me, "Este producto no esta asignado a la bodega " & _Bodega_Str & vbCrLf & vbCrLf &
                        '                      "Producto se asignara a bodega: " & _Bodega & " - " & _TblTabbopr.Rows(0).Item("NOKOBO").ToString.Trim, "Asignación automática",
                        '                      MessageBoxButtons.OK, MessageBoxIcon.Exclamation)

                        'Else

                        MessageBoxEx.Show(Me, "Código: " & _Codigo.ToString.Trim & " - " & _Descripcion.ToString.Trim & vbCrLf & vbCrLf &
                                          "Este producto no esta asignado a la bodega " & _Bodega & vbCrLf &
                                          "Debe seleccionar una bodega para la línea del documento", "Validación",
                                          MessageBoxButtons.OK, MessageBoxIcon.Warning)

                        Dim _Row_Bodega As DataRow
                        Dim _Stock_Insuficiente As Boolean
                        'Dim _Cantidad As Double = NuloPorNro(_Fila.Cells("Cantidad").Value, 0)

                        Dim _Es_Venta As Boolean = (_Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Venta)

                        Dim Fm As New Frm_Formulario_Cantidad_Stock_X_Bodega(_Codigo, _Cantidad, _Sucursal, _Es_Venta, _Tido)
                        Fm.ShowDialog(Me)
                        _Row_Bodega = Fm.Row_Bodega
                        _Stock_Insuficiente = Fm.Stock_Insuficiente
                        Fm.Dispose()

                        If Not IsNothing(_Row_Bodega) Then

                            _Sucursal = _Row_Bodega.Item("KOSU").ToString.Trim
                            _Bodega = _Row_Bodega.Item("KOBO").ToString.Trim
                            _Asociado_Bodega = True

                        Else

                            Throw New System.Exception("No se selecciono ninguna otra bodega")

                        End If

                    End If

                End If

                If _Asociado_Bodega Then

                    Dim _Permiso = "Bo" & _Empresa & _Sucursal & _Bodega

                    If _Pedir_Permiso Then
                        _Asociado_Bodega = Fx_Tiene_Permiso(Me, _Permiso)
                    End If

                    If Not _Asociado_Bodega Then

                        _Mensaje.Detalle = "Producto: " & Trim(_Codigo) & " - " & _Descripcion.ToString.Trim
                        Throw New System.Exception("No tiene permiso para asignar este producto a la bodega seleccionada")

                    End If

                    'If _Asociado_Bodega Then
                    '    _Fila.Cells("Sucursal").Value = _Sucursal
                    '    _Fila.Cells("Bodega").Value = _Bodega
                    '    _Asociado_Bodega = True
                    'Else
                    '    _Fila.Cells("Codigo").Value = String.Empty
                    '    Return
                    'End If

                End If

            End If

            'If _Asociado_Bodega Then

            'If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Compra Then
            '    ' AGREGAR ALGO ACA PARA UN CODIGO NO ASOCIADO A UN PROVEEDOR
            'End If

            'If Fx_Existe_Producto_Seleccionado_WMS(_Empresa, _Sucursal, _Bodega, _Codigo) Then
            '    MessageBoxEx.Show(Me, "Este producto ya se encuentra en el detalle",
            '                      "Producto no puede estar más de una vez en el detalle",
            '                    MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
            '    _Fila.Cells("Codigo").Value = String.Empty
            '    Return
            'End If

            'Sb_Traer_Producto_Grilla(_Fila, _RowProducto, False,,,, True)

            'Dim _Potencia As Double = _Fila.Cells("Potencia").Value

            'If CBool(_Potencia) Then

            '    If MessageBoxEx.Show(Me, "Este producto posee recargo unitario definido por proveedor" & vbCrLf &
            '                         "El valor es : " & FormatNumber(_Potencia, 2) & vbCrLf &
            '                         "¿Desea modificarlo?", "Potencia", MessageBoxButtons.YesNo, MessageBoxIcon.Question) = DialogResult.Yes Then

            '        If InputBox_Bk(Me, "Potencia", "Modificar flete/recargo", _Potencia, False,,, True,
            '                       _Tipo_Imagen.Cheque_Numero,, _Tipo_Caracter.Moneda) Then

            '            _Fila.Cells("Potencia").Value = _Potencia

            '        End If

            '    End If

            'End If

            'Me.ActiveControl = Grilla_Detalle

            'Try
            '    Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(_Indice).Cells("Cantidad")
            '    Sb_Mostrar_Datos_Producto_Activo(True)
            'Catch ex As Exception

            'End Try

            'Else

            '    MessageBoxEx.Show(Me, "Producto no asignado a esta Sucursal/Bodega",
            '                      "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
            '    _Fila.Cells("Codigo").Value = String.Empty

            'End If

            _Mensaje.EsCorrecto = True
            _Mensaje.Mensaje = "Producto: " & Trim(_Codigo) & " - " & _Descripcion.ToString.Trim
            _Mensaje.Detalle = "Producto se puede agregar a la lista"
            _Mensaje.Icono = MessageBoxIcon.Information

        Catch ex As Exception
            _Mensaje.EsCorrecto = False
            '_Mensaje.Detalle = "Problema!!"
            _Mensaje.Mensaje = ex.Message
            _Mensaje.Icono = MessageBoxIcon.Stop
        End Try

        Return _Mensaje

    End Function

    Function Fx_ProductoEnLista(_Codigo As String, _Descripcion As String) As LsValiciones.Mensajes

        Dim _Mensaje As New LsValiciones.Mensajes

        Try

            If _No_Volver_A_Preguntar_Agrupa_Producto Then
                _Mensaje.EsCorrecto = True
                _Mensaje.Mensaje = "Nuevo"
                Return _Mensaje
            End If

            Dim Chk_Agrupar As New Command
            Chk_Agrupar.Checked = True
            Chk_Agrupar.Name = "Chk_Agrupar"
            Chk_Agrupar.Text = "Agrupar en el registro existente"

            Dim Chk_INSERTar As New Command
            Chk_INSERTar.Checked = False
            Chk_INSERTar.Name = "Chk_INSERTar"
            Chk_INSERTar.Text = "Insertar el producto en un registro nuevo"

            Dim Chk_No_Volver_A_Preguntar As New Command
            Chk_No_Volver_A_Preguntar.Checked = False
            Chk_No_Volver_A_Preguntar.Name = "Chk_INSERTar"
            Chk_No_Volver_A_Preguntar.Text = "No volver a preguntar"

            If Not Fx_Tiene_Permiso(Me, "Doc00091",, False) Then
                Chk_No_Volver_A_Preguntar = Nothing
            End If

            Dim _Opciones() As Command = {Chk_Agrupar, Chk_INSERTar}

            Dim _Info As New TaskDialogInfo("Producto: " & _Codigo.Trim & ", " & _Descripcion.Trim,
                    eTaskDialogIcon.Information2,
                    "El producto ya esta en la lista",
                    "Indique su opción",
                    eTaskDialogButton.Ok, eTaskDialogBackgroundColor.Red, _Opciones, Nothing, Chk_No_Volver_A_Preguntar, Nothing, Nothing)

            Dim _Resultado As eTaskDialogResult = TaskDialog.Show(_Info)

            If Not IsNothing(Chk_No_Volver_A_Preguntar) Then
                _No_Volver_A_Preguntar_Agrupa_Producto = Chk_No_Volver_A_Preguntar.Checked
            End If

            If _Resultado = eTaskDialogResult.Ok Then

                If Chk_Agrupar.Checked Then

                    _Mensaje.EsCorrecto = True
                    _Mensaje.Mensaje = "Agrupar"

                    '_Fila.Cells("Codigo").Value = String.Empty
                    'Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(_Indice_Agrupa).Cells("Cantidad")
                    'Grilla_Detalle.Focus()

                End If

                If Chk_INSERTar.Checked Then

                    If Not Fx_Tiene_Permiso(Me, "Doc00092") Then
                        _Mensaje = Fx_ProductoEnLista(_Codigo, _Descripcion)
                        If Not _Mensaje.EsCorrecto Then
                            Return _Mensaje
                        End If
                    Else
                        _Mensaje.EsCorrecto = True
                        _Mensaje.Mensaje = "Nuevo"
                    End If

                End If

            End If

        Catch ex As Exception
            _Mensaje.EsCorrecto = False
            _Mensaje.Detalle = "Problema!!"
            _Mensaje.Mensaje = ex.Message
            _Mensaje.Icono = MessageBoxIcon.Stop
        End Try

        Return _Mensaje

    End Function

    Sub Sb_Traer_Producto_Grilla(_Fila As DataGridViewRow,
                                 _RowProducto As DataRow,
                                 _Desde_Otro_Documento As Boolean,
                                 Optional _UnTrans As Integer = 1,
                                 Optional _Mostrar_Oferta As Boolean = True,
                                 Optional _CodAlternativo As String = "",
                                 Optional _RevisarNMarca As Boolean = False)

        Dim _Codigo As String = _RowProducto.Item("KOPR")
        Dim _Descripcion As String = _Fila.Cells("Descripcion").Value
        Dim _Descripcion_Ori As String = _RowProducto.Item("NOKOPR").ToString.Trim

        Dim _ListaCostos = Mid(_RowProducto.Item("LISCOSTO"), 6, 3)
        Dim _ListaPrecios = _Fila.Cells("CodLista").Value

        Dim _Operacion As String = String.Empty
        Dim _Potencia As Double

        Dim _RowCostos As DataRow
        Dim _RowPrecios As DataRow
        Dim _RowStock As DataRow
        Dim _RowImpuestos As DataRow
        Dim _RowFlete As DataRow

        Dim _CodEntidad = _TblEncabezado.Rows(0).Item("CodEntidad")
        Dim _CodSucEntidad = _TblEncabezado.Rows(0).Item("CodSucEntidad")

        Dim _CodEntidadFisica = _TblEncabezado.Rows(0).Item("CodEntidadFisica")

        Dim _Empresa = _Fila.Cells("Empresa").Value
        Dim _Sucursal = _Fila.Cells("Sucursal").Value
        Dim _Bodega = _Fila.Cells("Bodega").Value

        Dim _Noaplica_Imp As String = String.Empty
        Dim _PorIla As Double
        Dim _QuitaImpCarne As Boolean = False

        If _Sql.Fx_Exite_Campo("TABIMPR", "NOAPLICEN") Then

            If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Venta Then

                _Noaplica_Imp = " And NOAPLICEN Not like '%ventas%'"

                If _Tido = "BLV" Then
                    _Noaplica_Imp = " And NOAPLICEN Not like '%BSV,BLV%'"
                End If

                If _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Entidades", "ImpNoCobraVta") AndAlso
                    _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Entidades", "ImpNoCobraVtaStr") Then

                    Dim _ImpNoCobraVta As Boolean = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Entidades", "ImpNoCobraVta", "CodEntidad = '" & _CodEntidad & "'", True)
                    Dim _ImpNoCobraVtaStr As String = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Entidades", "ImpNoCobraVtaStr", "CodEntidad = '" & _CodEntidad & "'", True)

                    If _ImpNoCobraVta Then
                        _Noaplica_Imp += " And KOIM <> '" & _ImpNoCobraVtaStr & "'"
                    End If

                End If

                If RutEmpresa = "77988832-0" Or (RutEmpresa = "76095906-5" And ModEmpresa_Doc = "02") Then
                    _QuitaImpCarne = True
                End If

            ElseIf _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Compra Then
                _Noaplica_Imp = " And NOAPLICEN Not like '%compras%'"
            End If

        End If

        Consulta_sql = "Select Isnull(Sum(POIM),0) As Impuesto From TABIM" & Space(1) &
                       "Where KOIM In (Select KOIM From TABIMPR Where KOPR = '" & _Codigo & "'" & _Noaplica_Imp & ")"
        _RowImpuestos = _Sql.Fx_Get_DataRow(Consulta_sql)

        Try
            _PorIla = NuloPorNro(_RowImpuestos.Item("Impuesto"), 0)
        Catch ex As Exception
            _PorIla = 0
        End Try

        If _QuitaImpCarne Then
            _PorIla = 0
        End If

        Dim _ExisteCosto As Boolean = CBool(_Sql.Fx_Cuenta_Registros("TABPRE", "KOLT = '" & _ListaCostos & "' And KOPR = '" & _Codigo & "'"))
        Dim _ExistePrecio As Boolean = CBool(_Sql.Fx_Cuenta_Registros("TABPRE", "KOLT = '" & _ListaPrecios & "' And KOPR = '" & _Codigo & "'"))

        If Not _ExisteCosto Then
            Consulta_sql = "Insert Into TABPRE (KOLT,KOPR,KOPRRA,KOPRTE) Values " &
               "('" & _ListaCostos & "','" & _Codigo & "','" & _RowProducto.Item("KOPRRA") & "','" & _RowProducto.Item("KOPRTE") & "')"
            _Sql.Ej_consulta_IDU(Consulta_sql, False)
        End If

        If Not _ExistePrecio Then
            Consulta_sql = "Insert Into TABPRE (KOLT,KOPR,KOPRRA,KOPRTE) Values " &
               "('" & _ListaPrecios & "','" & _Codigo & "','" & _RowProducto.Item("KOPRRA") & "','" & _RowProducto.Item("KOPRTE") & "')"
            _Sql.Ej_consulta_IDU(Consulta_sql, False)
        End If

        Consulta_sql = "Select Top 1 *,(Select top 1 MELT From TABPP Where KOLT = '" & _ListaCostos & "') As MELT From TABPRE" & vbCrLf &
                       "Where KOLT = '" & _ListaCostos & "' And KOPR = '" & _Codigo & "'"
        _RowCostos = _Sql.Fx_Get_DataRow(Consulta_sql)

        Consulta_sql = "Select Top 1 *,(Select top 1 MELT From TABPP Where KOLT = '" & _ListaPrecios & "') as MELT From TABPRE" & vbCrLf &
                       "Where KOLT = '" & _ListaPrecios & "' And KOPR = '" & _Codigo & "'"
        _RowPrecios = _Sql.Fx_Get_DataRow(Consulta_sql)

        Consulta_sql = "Select Top 1 * From MAEST
                        Where EMPRESA = '" & ModEmpresa_Doc & "' And KOSU = '" & _Sucursal &
                       "' And KOBO = '" & _Bodega & "' And KOPR = '" & _Codigo & "'"
        _RowStock = _Sql.Fx_Get_DataRow(Consulta_sql)

        If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Compra Then

            Consulta_sql = "Select * From TABRECPR Where KOPR = '" & _Codigo.Trim & "' And KOEN = '" & _CodEntidad & "'"
            _RowFlete = _Sql.Fx_Get_DataRow(Consulta_sql)

            If Not IsNothing(_RowFlete) Then

                _Potencia = _RowFlete.Item("RECARGO")

                If _Potencia > 0 Then
                    _Operacion = "RECA"
                End If

            End If

        End If


        Dim _PrecioNeto As Double
        Dim _PrecioBruto As Double
        Dim _CostoLista As Double

        Dim _Rtu As Double = _RowProducto.Item("RLUD")

        '' Aca de debe poner la validación de RTU con el Web Service de BodOne

        'Dim _Cl_Producto As Cl_Producto = New Cl_Producto()
        '_Cl_Producto.Fx_Llenar_Zw_Producto(_Codigo)

        'If _Cl_Producto.Zw_Producto.RtuXWms Then

        '    Dim _Mensaje As LsValiciones.Mensajes
        '    _Mensaje = _Cl_Producto.Fx_ActualizarRtuAutomaticaWMS(_Codigo, _Empresa, _Sucursal, _Bodega)

        '    If _Mensaje.EsCorrecto Then
        '        _Rtu = _Mensaje.Tag
        '    End If

        'End If

        Dim _DescMaximo As Double = NuloPorNro(_RowPrecios.Item("DTMA01UD"), 0)
        Dim _Ecuacion As String = NuloPorNro(_RowPrecios.Item("ECUACION").ToString.Trim, "")
        Dim _Ecuacionu2 As String = NuloPorNro(_RowPrecios.Item("ECUACIONU2").ToString.Trim, "")

        If String.IsNullOrEmpty(_Ecuacion.Trim) Then
            _Ecuacion = _Sql.Fx_Trae_Dato("TABPP", "ECUDEF01UD", "KOLT = '" & _ListaPrecios & "'").ToString.Trim
        End If

        If String.IsNullOrEmpty(_Ecuacionu2.Trim) Then
            _Ecuacionu2 = _Sql.Fx_Trae_Dato("TABPP", "ECUDEF02UD", "KOLT = '" & _ListaPrecios & "'").ToString.Trim
        End If


        Dim _PorIva As Double = _RowProducto.Item("POIVPR")

        If _SubTido = "IMP" Then
            _PorIva = 0
            _PorIla = 0
        End If

        Dim _PrecioLinea As Double = NuloPorNro(_RowPrecios.Item("PP0" & _UnTrans & "UD"), 0)

        Dim _PrecioListaUd1 As Double
        Dim _PrecioListaUd2 As Double

        Dim _Prct = 0
        Dim _Tict = String.Empty
        Dim _Tipr = _RowProducto.Item("TIPR")
        Dim _Prrg As Boolean = _RowProducto.Item("PRRG")

        Dim _Iva = _PorIva / 100
        Dim _Ila = _PorIla / 100

        Dim _Impuestos As Double = 1 + (_Iva + _Ila)
        Dim _TipoValor As String

        Dim _DescripcionProductoLinea = _RowProducto.Item("NOKOPR")
        Dim _Nuevo_Producto As Boolean = _Fila.Cells("Nuevo_Producto").Value
        Dim _EsPallet As Boolean = _Fila.Cells("EsPallet").Value

        Dim _Pesoubic As Double = NuloPorNro(_RowProducto.Item("PESOUBIC"), 0)

        If Not _Desde_Otro_Documento Then

            If _Tipr = "SSN" Or _Prrg Then

                Dim _Editar_Descripcion As Boolean

                If _Nuevo_Producto Then

                    _Editar_Descripcion = True

                Else

                    If Not _Editar_documento Then

                        If Not _Revision_Remota Then

                            If Not _Revisar_Notificacion_Automatica_Remota Then

                                If Not String.IsNullOrEmpty(_Descripcion) Then
                                    _DescripcionProductoLinea = _Descripcion
                                End If

                                _Editar_Descripcion = True

                            End If

                        End If

                    End If

                End If

                If _EsPallet Then
                    _Editar_Descripcion = False
                End If

                If _Editar_Descripcion Then

                    Dim _Aceptar As Boolean
                    Dim _Paso_DescripcionProductoLinea = _DescripcionProductoLinea.ToString.Trim
                    _Aceptar = InputBox_Bk(Me, "Descripción modificable", "Descripción del producto", _Paso_DescripcionProductoLinea, False,, 50)

                    If _Aceptar Then
                        _DescripcionProductoLinea = _Paso_DescripcionProductoLinea
                    End If

                End If

            End If

        End If

        Dim _Valor_desde_Lista As csGlobales.Enum_Neto_Bruto

        If _RowPrecios.Item("MELT") = "N" Then
            _Valor_desde_Lista = csGlobales.Enum_Neto_Bruto.Neto
            '_EsNetoLinea = True
        Else
            _Valor_desde_Lista = csGlobales.Enum_Neto_Bruto.Bruto
            '_EsNetoLinea = False
        End If

        Dim _PmLinea As Double = _Sql.Fx_Trae_Dato("MAEPREM", "PM", "KOPR = '" & _Codigo & "' And EMPRESA = '" & ModEmpresa_Doc & "'", True)
        Dim _Precio_UC1 As Double = _Sql.Fx_Trae_Dato("MAEPREM", "PPUL01", "KOPR = '" & _Codigo & "' And EMPRESA = '" & ModEmpresa_Doc & "'", True)
        Dim _Precio_UC2 As Double = _Sql.Fx_Trae_Dato("MAEPREM", "PPUL02", "KOPR = '" & _Codigo & "' And EMPRESA = '" & ModEmpresa_Doc & "'", True)
        Dim _PmSucLinea As Double = _Sql.Fx_Trae_Dato("MAEPMSUC", "PMSUC", "KOPR = '" & _Codigo & "' And EMPRESA = '" & ModEmpresa_Doc & "' AND KOSU = '" & _Sucursal & "'", True)
        Dim _PmIFRS As Double = _Sql.Fx_Trae_Dato("MAEPREM", "PMIFRS", "EMPRESA = '" & ModEmpresa_Doc & "' And KOPR = '" & _Codigo & "'", True)

        Dim _Ud1Linea = _RowProducto.Item("UD01PR")
        Dim _Ud2Linea = _RowProducto.Item("UD02PR")
        Dim _UdTrans As String
        Dim _EcuacionCosto As String

        Dim _Nmarca As String = NuloPorNro(_RowProducto.Item("NMARCA").ToString.Trim, "")

        If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Compra Then

            Dim _Reg As Boolean
            Dim _Proveedor As String

            If (_RowEntidad_Despacho Is Nothing) Then
                _Proveedor = _CodEntidad
            Else
                _Proveedor = _RowEntidad_Despacho.Item("KOEN")
            End If

            If String.IsNullOrEmpty(_CodAlternativo) Then
                _CodAlternativo = _Sql.Fx_Trae_Dato("TABCODAL", "KOPRAL", "KOPR = '" & _Codigo & "' And KOEN = '" & _Proveedor & "'")
            End If

            If Not String.IsNullOrEmpty(_CodAlternativo) Then
                Consulta_sql = "Select Top 1 * From TABCODAL Where KOEN = '" & _Proveedor & "' And KOPRAL = '" & _CodAlternativo & "'"
                Dim _RowTabcodal As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)
                _Nmarca = NuloPorNro(_RowTabcodal.Item("NMARCA").ToString.Trim, "")
            End If

            _Reg = CBool(_Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_ListaPreCosto",
                                           "Lista = '" & _ListaPrecios &
                                           "' And Proveedor = '" & _Proveedor &
                                           "' And Codigo = '" & _Codigo & "'"))

            If Not _Reg Then

                _Reg = CBool(_Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_ListaPreCosto", "
                                                       Lista = '" & _ListaPrecios & "' And Proveedor = '" & _Proveedor & "' 
                                                        And Codigo = '" & _Codigo & "' And CodAlternativo = '" & _CodAlternativo & "'"))

                If Not _Reg Then

                    Consulta_sql = "INSERT INTO " & _Global_BaseBk & "Zw_ListaPreCosto (Lista,Proveedor,CodAlternativo,Codigo,
                                    CostoUd1,CostoUd2,Rtu,FechaVigencia,Desc1,Desc2,Desc3,Desc4,Desc5,Flete) Values 
                                    ('" & _ListaPrecios & "','" & _Proveedor & "','" & _CodAlternativo & "',
                                    '" & _Codigo & "',0,0," & De_Num_a_Tx_01(_Rtu, False, 5) & ",GetDate(),0,0,0,0,0,0)"

                    _Sql.Ej_consulta_IDU(Consulta_sql)

                End If

            End If

        End If

        If _RevisarNMarca Then

            Dim _Cl_CompUdMedidas As New Bk_Comporamiento_UdMedidas.Cl_CompUdMedidas
            Dim _NNmarca As New Bk_Comporamiento_UdMedidas.Nmarca

            _NNmarca = _Cl_CompUdMedidas.Fx_Decifra_Nmarca(_Nmarca)

            If _Tido = "OCC" Or _Tido = "GRC" Or _Tido = "FCC" Then
                If _NNmarca.Tratamiento = Cl_CompUdMedidas.Enum_Tratamientos_RTU.c01_Caso_normal_respetar_RTU_definida And
                   (_NNmarca.Comportamiento = Cl_CompUdMedidas.Enum_Comportamiento.c03_Comprar_en_2da_Udad_Vender_1ra_Udad Or
                    _NNmarca.Comportamiento = Cl_CompUdMedidas.Enum_Comportamiento.c05_Comprar_en_2da_Udad_Vender_2da_Udad) Then
                    _UnTrans = 2
                End If
            End If

            If _Tido = "BLV" Or _Tido = "FCV" Or _Tido = "NVV" Or _Tido = "GDV" Then
                If _NNmarca.Tratamiento = Cl_CompUdMedidas.Enum_Tratamientos_RTU.c01_Caso_normal_respetar_RTU_definida And
                   (_NNmarca.Comportamiento = Cl_CompUdMedidas.Enum_Comportamiento.c04_Comprar_en_1ra_Udad_Vender_2da_Udad Or
                    _NNmarca.Comportamiento = Cl_CompUdMedidas.Enum_Comportamiento.c05_Comprar_en_2da_Udad_Vender_2da_Udad) Then
                    _UnTrans = 2
                End If
            End If

        End If

        If _UnTrans = 1 Then
            _UdTrans = _Ud1Linea
            If Not IsNothing(_RowCostos) Then _EcuacionCosto = NuloPorNro(_RowCostos.Item("ECUACION").ToString.Trim, "")
        Else
            _UdTrans = _Ud2Linea
            If Not IsNothing(_RowCostos) Then _EcuacionCosto = NuloPorNro(_RowCostos.Item("ECUACIONU2").ToString.Trim, "")
        End If

        Dim _Koen = _TblEncabezado.Rows(0).Item("CodEntidad")

        _DescMaximo = Fx_Precio_Formula_Random(_RowPrecios, "DTMA0" & _UnTrans & "UD", "EDTMA0" & _UnTrans & "UD", Nothing, True, _Koen, 0, 0)

        Dim _MostrarError As Boolean = Not _Facturacion_Automatica

        _PrecioListaUd1 = Fx_Funcion_Ecuacion_Random(Me, _Koen, _Ecuacion, _Codigo, 1, _RowPrecios, 0, 0, 0, _MostrarError)
        _PrecioListaUd2 = Fx_Funcion_Ecuacion_Random(Me, _Koen, _Ecuacionu2, _Codigo, 2, _RowPrecios, 0, 0, 0, _MostrarError)

        If Not IsNothing(_RowCostos) Then _CostoLista = Fx_Funcion_Ecuacion_Random(Me, _Koen, _EcuacionCosto, _Codigo, _UnTrans, _RowCostos, 1, 1, 1, _MostrarError)

        Dim _PrecioListaUd1_Prov As Double
        Dim _PrecioListaUd2_Prov As Double

        If _Tido = "OCC" Then

            Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_ListaPreCosto Where Proveedor = '" & _CodEntidad & "' And Sucursal = '" & _CodSucEntidad & "' And Codigo = '" & _Codigo & "'"
            Dim _RowListaPreCosto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            If Not IsNothing(_RowListaPreCosto) Then

                _PrecioListaUd1_Prov = Math.Round(_RowListaPreCosto.Item("CostoUd1"), 2)
                _PrecioListaUd2_Prov = Math.Round(_RowListaPreCosto.Item("CostoUd2"), 2)

            End If

        End If

        If _UnTrans = 1 Then
            _PrecioLinea = _PrecioListaUd1
        ElseIf _UnTrans = 2 Then
            _PrecioLinea = _PrecioListaUd2
        End If

        ' PREGUNTA SI EL VALOR QUE SE TRAE DESDE LA LISTA DE PRECIOS EN NETO O BRUTO
        Dim _PrecioNetoUd,
            _PrecioBrutoUd,
            _PrecioNetoUdLista As Double '= PrecioNeto ' Math.Round(SubTotal / CantUd1, 5)

        Dim _PrecioNetoUdLinea,
            _PrecioBrutoUdLinea,
            _PrecioBrutoUdLista As Double

        Dim _Melt As String

        Select Case _Valor_desde_Lista

            Case csGlobales.Enum_Neto_Bruto.Neto

                _PrecioNeto = _PrecioLinea
                _PrecioBruto = Math.Round(_PrecioNeto * _Impuestos, 5)
                _PrecioNeto = Math.Round(_PrecioBruto / _Impuestos, 5)

                _PrecioNetoUd = _PrecioNeto
                _PrecioBrutoUd = _PrecioBruto
                _PrecioNetoUdLinea = _PrecioNetoUd
                _PrecioBrutoUdLinea = _PrecioBruto

                _PrecioNetoUdLista = _PrecioNeto
                _PrecioBrutoUdLista = _PrecioBruto

                _Melt = "N"

            Case csGlobales.Enum_Neto_Bruto.Bruto

                _PrecioNeto = Math.Round(_PrecioLinea / _Impuestos, 5)
                _PrecioBruto = _PrecioLinea
                'TipoValor = "B"

                _PrecioNetoUdLinea = _PrecioNeto
                _PrecioNetoUd = Math.Round(_PrecioNeto, 0)
                _PrecioNetoUdLista = _PrecioNetoUd

                _PrecioBrutoUd = _PrecioLinea
                _PrecioBrutoUdLinea = _PrecioLinea
                _PrecioBrutoUdLista = _PrecioLinea

                _Melt = "B"

        End Select


        If ChkValores.Checked Then
            _TipoValor = "N"
            _PrecioLinea = _PrecioNeto
        Else
            _TipoValor = "B"
            _PrecioLinea = _PrecioBruto
        End If

        If Not ChkValores.Checked Then
            _PrecioLinea = _PrecioBruto
        End If

        Dim _DsctoNeto = 0 'Math.Round(_ValorDscto, 5)
        Dim _DsctoBruto = 0 'Math.Round(_DsctoNeto * _Impuestos)

        Dim _NetoRealUd1 = 0 'TotalNeto / CantUd1
        Dim _NetoRealUd2 = 0 'TotalNeto / CantUd2

        Dim _Stock As Double

        If Not (_RowStock Is Nothing) Then
            _Stock = _RowStock.Item("STFI" & _UnTrans).ToString
        End If

        Dim _UbicacionBod = _Sql.Fx_Trae_Dato("TABBOPR", "DATOSUBIC",
                                              "EMPRESA = '" & ModEmpresa_Doc & "' AND KOSU = '" & _Sucursal & "' AND KOBO = '" & _Bodega & "' AND KOPR = '" & _Codigo & "'")

        Dim _ValVtaStockInf = True

        Dim _Lincondest As Boolean

        Dim _Oferta As String = String.Empty
        Dim _Fecha_Emision As String = Format(_TblEncabezado.Rows(0).Item("FechaEmision"), "yyyyMMdd")

        If _Mostrar_Oferta Then

            Consulta_sql = "Select * From MAEERES " & vbCrLf &
                           "Inner Join MAEDRES On MAEDRES.CODIGO = MAEERES.CODIGO" & vbCrLf &
                           "Where MAEDRES.CODIGO = '" & _Codigo & "' And TIPORESE = 'OFE' And FTOFERTA >= '" & _Fecha_Emision & "'"
            Dim _Row_Oferta As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            If Not IsNothing(_Row_Oferta) Then
                _Oferta = _Row_Oferta.Item("CODIGO")
            End If

        End If

        With _Fila

            Consulta_sql = "Select Case When FICO = 0 And FIAD = 0 Then 'No'
                            WHEN FICO <> 0 AND FIAD = 1 Then 'Si'
                            WHEN FICO <> 0 AND FIAD = 0 Then 'Si'
                            WHEN FICO = 0 AND FIAD <> 0 Then 'Revisar'
                            END AS Consulta
                            From TABTIDO
                            Where TIDO = '" & _Tido & "'"

            Dim _Row_Tido As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            If _Row_Tido.Item("Consulta") = "Si" Then
                _Lincondest = True
            ElseIf _Row_Tido.Item("Consulta") = "No" Then
                _Lincondest = False
            ElseIf _Row_Tido.Item("Consulta") = "Revisar" Then

                Dim _Despacha_Stock As String = _Global_Row_Configuracion_Estacion.Item("EDESFACV")

                If _Despacha_Stock = "S" Then
                    _Lincondest = True
                End If

            End If


            .Cells("Codigo").Value = _Codigo
            .Cells("Cantidad").Value = 0
            .Cells("CantUd1").Value = 0
            .Cells("CantUd2").Value = 0

            .Cells("DescuentoPorc").Value = 0
            .Cells("DescuentoValor").Value = 0
            .Cells("Lincondest").Value = _Lincondest
            .Cells("ValVtaStockInf").Value = _ValVtaStockInf ' Permiso para vender con Stock 0

            .Cells("Prct").Value = _Prct
            .Cells("TipoValor").Value = _TipoValor
            .Cells("Precio").Value = _PrecioLinea
            .Cells("PrecioCalculo").Value = _PrecioLinea
            .Cells("Tipr").Value = _Tipr
            .Cells("Descripcion").Value = _DescripcionProductoLinea
            .Cells("Descripcion_Ori").Value = _Descripcion_Ori
            .Cells("Rtu").Value = _Rtu
            .Cells("Tict").Value = String.Empty
            .Cells("UnTrans").Value = _UnTrans 'UnidadTrans ' numero
            .Cells("UdTrans").Value = _UdTrans 'UnTrans ' caracter
            .Cells("Ud01PR").Value = _Ud1Linea
            .Cells("Ud02PR").Value = _Ud2Linea

            .Cells("Melt").Value = _Melt
            .Cells("PrecioNetoUd").Value = _PrecioNetoUd
            .Cells("PrecioBrutoUd").Value = _PrecioBrutoUd
            .Cells("PrecioNetoUdLista").Value = _PrecioNetoUdLista
            .Cells("PrecioBrutoUdLista").Value = _PrecioBrutoUdLista

            .Cells("PrecioNetoRealUd1").Value = 0
            .Cells("PrecioNetoRealUd2").Value = 0

            .Cells("SubTotal").Value = 0

            .Cells("DescuentoPorc").Value = 0
            .Cells("DescuentoValor").Value = 0
            .Cells("NroDscto").Value = _DsctoNeto
            .Cells("DsctoNeto").Value = _DsctoNeto
            .Cells("Operacion").Value = _Operacion
            .Cells("Observa").Value = String.Empty
            .Cells("Potencia").Value = _Potencia

            .Cells("DsctoBruto").Value = _DsctoBruto

            .Cells("PrecioListaUd1").Value = _PrecioListaUd1
            .Cells("PrecioListaUd2").Value = _PrecioListaUd2

            .Cells("PrecioListaUd1_Prov").Value = _PrecioListaUd1_Prov
            .Cells("PrecioListaUd2_Prov").Value = _PrecioListaUd2_Prov

            .Cells("PorIva").Value = _PorIva
            .Cells("PorIla").Value = _PorIla
            .Cells("StockBodega").Value = _Stock
            .Cells("ValVtaStockInf").Value = False

            .Cells("UbicacionBod").Value = _UbicacionBod

            .Cells("DescMaximo").Value = _DescMaximo
            .Cells("PmSucLinea").Value = _PmSucLinea
            .Cells("PmLinea").Value = _PmLinea
            .Cells("PmIFRS").Value = _PmIFRS

            .Cells("Nuevo_Producto").Value = 0
            .Cells("Pesoubic").Value = _Pesoubic
            .Cells("Nmarca").Value = _Nmarca

            Dim _PermisoDscto As Boolean = False

            .Cells("ValVtaDescMax").Value = _PermisoDscto
            .Cells("CodigoProv").Value = _CodAlternativo

            .Cells("Melt").Value = _RowPrecios.Item("MELT")
            .Cells("Ecuacion").Value = _Ecuacion

            Dim _Row_Zw_Prod_Asociacion As DataRow
            Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Prod_Asociacion Where Codigo = '" & _Codigo & "' And Producto = 1"
            _Row_Zw_Prod_Asociacion = _Sql.Fx_Get_DataRow(Consulta_sql)

            Dim _Stock_desde_WMS As Boolean

            If Not (_Row_Zw_Prod_Asociacion Is Nothing) Then
                Try
                    _Stock_desde_WMS = _Row_Zw_Prod_Asociacion.Item("Stock_desde_WMS")
                Catch ex As Exception
                    _Stock_desde_WMS = False
                End Try
            End If

            .Cells("Stock_desde_WMS").Value = _Stock_desde_WMS
            .Cells("CostoLista").Value = _CostoLista

        End With

        If _DescripcionProductoLinea.ToString.Trim <> _Descripcion_Ori Then
            _DescripcionProductoLinea = _DescripcionProductoLinea & " (" & _Descripcion_Ori & ")"
        End If

        LblDescripcion.Text = _DescripcionProductoLinea
        LblUbicacionBodega.Text = _UbicacionBod
        LblNetoLinea.Text = FormatNumber(0, 2)
        LblIvaLinea.Text = FormatNumber(0, 2)
        LblImpuestosLinea.Text = FormatNumber(0, 2)
        LbllBrutoLinea.Text = FormatNumber(0, 0)
        LblListaLinea.Text = _ListaPrecios


        'Agregar Lista Superior
        If _Tido = "NVV" AndAlso _Cl_DocListaSuperior.UsarVencListaPrecios And Not _Revisar_Notificacion_Automatica_Remota Then
            _Cl_DocListaSuperior.Sb_Insertar_NuevaLineaLpEntidad(_Fila.Index, _Codigo, _Cl_DocListaSuperior.ListaEntidad, _UnTrans, _Impuestos, _Valor_desde_Lista)
            _Cl_DocListaSuperior.Sb_Insertar_NuevaLineaLpSuperior(_Fila.Index, _Codigo, _Cl_DocListaSuperior.ListaEntidad, _UnTrans, _Impuestos, _Valor_desde_Lista)
        End If

        If Not String.IsNullOrEmpty(_Oferta) And _Mostrar_Oferta Then

            _Fila.Cells("Oferta").Value = _Oferta

            Dim Fm As New Frm_Formulario_Oferta(_Oferta)
            Fm.ShowDialog(Me)
            Fm.Dispose()

        End If

        Consulta_sql = "Select Top 1 * From MAEPROBS Where KOPR = '" & _Codigo & "'"
        Dim _RowProductoObs As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        If Not _Desde_Otro_Documento And Not IsNothing(_RowProductoObs) Then
            If Not String.IsNullOrEmpty(_RowProductoObs.Item("MENSAJE01")) Then

                Dim _Mensaje01 As String = Replace(_RowProductoObs.Item("MENSAJE01").ToString.Trim, vbCrLf, " ")

                Dim _Msg As String = Fx_AjustarTexto(_Mensaje01.Trim, 100).ToString.Trim

                MessageBoxEx.Show(Me, _Msg, "Mensaje asociado al producto",
                                  MessageBoxButtons.OK, MessageBoxIcon.Information)

            End If
        End If

    End Sub

    Sub Sb_Actualizar_Precio_Linea(_Fila As DataGridViewRow)

        Dim _Codigo As String = _Fila.Cells("Codigo").Value
        Dim _UnTrans As Integer = _Fila.Cells("UnTrans").Value
        Dim _CodLista = _Fila.Cells("CodLista").Value

        Consulta_sql = "Select Top 1 *,(Select top 1 MELT From TABPP Where KOLT = '" & _CodLista & "') As MELT From TABPRE
                        Where KOLT = '" & _CodLista & "' And KOPR = '" & _Codigo & "'"
        Dim _RowPrecios As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        Dim _MaxDescuento As Double = _RowPrecios.Item("DTMA01UD")
        Dim _Ecuacion As String = Trim(_RowPrecios.Item("ECUACION"))
        Dim _Ecuacionu2 As String = NuloPorNro(_RowPrecios.Item("ECUACIONU2").ToString.Trim, "")

        Dim _Koen = _TblEncabezado.Rows(0).Item("CodEntidad")

        Dim _DescMaximo = Fx_Precio_Formula_Random(_RowPrecios, "DTMA0" & _UnTrans & "UD", "EDTMA0" & _UnTrans & "UD", Nothing, True, _Koen, 0, 0)
        Dim _PrecioListaUd1 = Fx_Funcion_Ecuacion_Random(Me, _Koen, _Ecuacion, _Codigo, 1, _RowPrecios, 0, 0, 0)
        Dim _PrecioListaUd2 = Fx_Funcion_Ecuacion_Random(Me, _Koen, _Ecuacionu2, _Codigo, 2, _RowPrecios, 0, 0, 0)
        Dim _PrecioLinea As Double = _RowPrecios.Item("PP0" & _UnTrans & "UD").ToString

        If _UnTrans = 1 Then
            _PrecioLinea = _PrecioListaUd1
        ElseIf _UnTrans = 2 Then
            _PrecioLinea = _PrecioListaUd2
        End If

        Dim _PrecioNetoUd,
            _PrecioBrutoUd,
            _PrecioNetoUdLista As Double '= PrecioNeto ' Math.Round(SubTotal / CantUd1, 5)

        Dim _PrecioNetoUdLinea,
            _PrecioBrutoUdLinea,
            _PrecioBrutoUdLista As Double

        Dim _Valor_desde_Lista As csGlobales.Enum_Neto_Bruto

        If _RowPrecios.Item("MELT") = "N" Then
            _Valor_desde_Lista = csGlobales.Enum_Neto_Bruto.Neto
            '_EsNetoLinea = True
        Else
            _Valor_desde_Lista = csGlobales.Enum_Neto_Bruto.Bruto
            '_EsNetoLinea = False
        End If

        Dim _PrecioNeto As Double
        Dim _PrecioBruto As Double

        Dim _PorIva As Double = _Fila.Cells("PorIva").Value
        Dim _PorIla As Double = _Fila.Cells("PorIla").Value
        Dim _Rtu As Double = _Fila.Cells("Rtu").Value

        Dim _Iva = _PorIva / 100
        Dim _Ila = _PorIla / 100

        Dim _Impuestos As Double = 1 + (_Iva + _Ila)

        Select Case _Valor_desde_Lista

            Case csGlobales.Enum_Neto_Bruto.Neto

                _PrecioNeto = _PrecioLinea
                _PrecioBruto = Math.Round(_PrecioNeto * _Impuestos, 2)
                _PrecioNeto = _PrecioBruto / _Impuestos
                'TipoValor = "N"

                _PrecioNetoUd = _PrecioNeto
                _PrecioBrutoUd = _PrecioBruto
                _PrecioNetoUdLinea = _PrecioNetoUd
                _PrecioBrutoUdLinea = _PrecioBruto
                If _Rtu < 1 Then
                    _PrecioNetoUdLista = _PrecioLinea / _Rtu
                    _PrecioBrutoUdLista = _PrecioBruto / _Rtu
                Else
                    _PrecioNetoUdLista = _PrecioNeto
                    _PrecioBrutoUdLista = _PrecioBruto
                End If

            Case csGlobales.Enum_Neto_Bruto.Bruto

                _PrecioNeto = Math.Round(_PrecioLinea / _Impuestos, 3)
                _PrecioBruto = _PrecioLinea
                'TipoValor = "B"

                _PrecioNetoUdLinea = _PrecioNeto
                _PrecioNetoUd = Math.Round(_PrecioNeto, 0)
                _PrecioNetoUdLista = _PrecioNetoUd

                _PrecioBrutoUd = _PrecioLinea
                _PrecioBrutoUdLinea = _PrecioLinea
                _PrecioBrutoUdLista = _PrecioLinea

        End Select


        If ChkValores.Checked Then
            _PrecioLinea = _PrecioNeto
        Else
            _PrecioLinea = _PrecioBruto
        End If

        If Not ChkValores.Checked Then
            _PrecioLinea = _PrecioBruto
        End If

        _Fila.Cells("DescMaximo").Value = _DescMaximo
        _Fila.Cells("PrecioLinea").Value = _PrecioLinea

    End Sub

    Sub Sb_Traer_Producto_Grilla_Producto_A_Crear(_Fila As DataGridViewRow, _RowProducto As DataRow)

        Dim _CodAlternativo As String = String.Empty
        Dim _Codigo = _RowProducto.Item("Kopr")
        Dim _Descripcion = _RowProducto.Item("Nokopr")

        Dim _ListaPrecios = _TblEncabezado.Rows(0).Item("ListaPrecios")
        _ListaPrecios = _Fila.Cells("CodLista").Value
        Dim _UnTrans = 1

        Dim _RowPrecios As DataRow
        Dim _RowStock As DataRow

        Dim _CodEntidad = _TblEncabezado.Rows(0).Item("CodEntidad")
        Dim _CodEntidadFisica = _TblEncabezado.Rows(0).Item("CodEntidadFisica")

        Dim _Sucursal = _Fila.Cells("Sucursal").Value
        Dim _Bodega = _Fila.Cells("Bodega").Value

        Consulta_sql = "Select " & _RowProducto.Item("CostoUd1") & " As PP01UD," & _RowProducto.Item("CostoUd1") & " As PP02UD,
                        0 As DSCTOMAX,0 As DTMA01UD,'' As ECUACION,
                        (Select top 1 MELT From TABPP Where KOLT = '" & _ListaPrecios & "') As MELT"
        _RowPrecios = _Sql.Fx_Get_DataRow(Consulta_sql)

        Dim _PrecioNeto As Double
        Dim _PrecioBruto As Double

        Dim _RtuProLinea As Double = _RowProducto.Item("Rlud")
        Dim _MaxDescuento As Double = _RowPrecios.Item("DTMA01UD")
        Dim _Ecuacion As String = Trim(_RowPrecios.Item("ECUACION"))
        Dim _IVAdelProducto As Double = _RowProducto.Item("Poivpr")
        Dim _IlaProducto As Double = 0

        Dim _PrecioLinea As Double = _RowPrecios.Item("PP0" & _UnTrans & "UD").ToString

        Dim _Precios_Venta_Desde_Random As Boolean = _Global_Row_Configuracion_Estacion.Item("Precios_Venta_Desde_Random")
        Dim _Precios_Venta_Desde_BakApp As Boolean = _Global_Row_Configuracion_Estacion.Item("Precios_Venta_Desde_BakApp")

        If _Precios_Venta_Desde_BakApp Then

            _MaxDescuento = _RowPrecios.Item("DSCTOMAX").ToString
            _Ecuacion = Trim(_RowPrecios.Item("ECUACION").ToString)
            _PrecioLinea = _RowPrecios.Item("PP0" & _UnTrans & "UD").ToString

        End If

        Dim _Prct = 0
        Dim _Tict = String.Empty
        Dim _Tipr = _RowProducto.Item("Tipr")
        Dim _Prrg As Boolean

        Dim _Iva = _IVAdelProducto / 100
        Dim _Ila = _IlaProducto / 100

        Dim _Impuestos As Double = 1 + (_Iva + _Ila)
        Dim _TipoValor As String

        Dim _DescripcionProductoLinea = _RowProducto.Item("Nokopr")
        Dim _Nuevo_Producto = _Fila.Cells("Nuevo_Producto").Value

        If _Tipr = "SSN" Or _Prrg Then

            Dim _Editar_Descripcion As Boolean

            If _Nuevo_Producto Then

                _Editar_Descripcion = True

            Else

                If Not _Editar_documento Then

                    If Not _Revision_Remota Then

                        If Not _Revisar_Notificacion_Automatica_Remota Then

                            If Not String.IsNullOrEmpty(_Descripcion) Then
                                _DescripcionProductoLinea = _Descripcion
                            End If

                            _Editar_Descripcion = True

                        End If

                    End If

                End If

            End If

            If _Editar_Descripcion Then

                Dim _Aceptar As Boolean
                Dim _Paso_DescripcionProductoLinea = _DescripcionProductoLinea
                _Aceptar = InputBox_Bk(Me, "Descripción modificable", "Descripción del producto", _Paso_DescripcionProductoLinea, False,, 50)

                If _Aceptar Then
                    _DescripcionProductoLinea = _Paso_DescripcionProductoLinea
                End If

            End If

        End If

        Dim _Valor_desde_Lista As csGlobales.Enum_Neto_Bruto

        If _RowPrecios.Item("MELT") = "N" Then
            _Valor_desde_Lista = csGlobales.Enum_Neto_Bruto.Neto
            '_EsNetoLinea = True
        Else
            _Valor_desde_Lista = csGlobales.Enum_Neto_Bruto.Bruto
            '_EsNetoLinea = False
        End If


        Dim _PmLinea As Double = _Sql.Fx_Trae_Dato("MAEPREM", "PM", "KOPR = '" & _Codigo & "' And EMPRESA = '" & ModEmpresa_Doc & "'", True)
        Dim _Precio_UC1 As Double = _Sql.Fx_Trae_Dato("MAEPREM", "PPUL01", "KOPR = '" & _Codigo & "' And EMPRESA = '" & ModEmpresa_Doc & "'", True)
        Dim _Precio_UC2 As Double = _Sql.Fx_Trae_Dato("MAEPREM", "PPUL02", "KOPR = '" & _Codigo & "' And EMPRESA = '" & ModEmpresa_Doc & "'", True)
        Dim _PmSucLinea As Double = _Sql.Fx_Trae_Dato("MAEPMSUC", "PMSUC", "KOPR = '" & _Codigo & "' And EMPRESA = '" & ModEmpresa_Doc & "' AND KOSU = '" & _Sucursal & "'", True)
        Dim _PmIFRS As Double = _Sql.Fx_Trae_Dato("MAEPREM", "PMIFRS", "EMPRESA = '" & ModEmpresa_Doc & "' And KOPR = '" & _Codigo & "'", True)

        Dim _Ud1Linea = _RowProducto.Item("Ud01pr")
        Dim _Ud2Linea = _RowProducto.Item("Ud02pr")
        Dim _UdTrans As String

        If _UnTrans = 1 Then
            _UdTrans = _Ud1Linea
        Else
            _UdTrans = _Ud2Linea
        End If

        Dim _Proveedor As String

        If (_RowEntidad_Despacho Is Nothing) Then
            _Proveedor = _CodEntidad
        Else
            _Proveedor = _RowEntidad_Despacho.Item("KOEN")
        End If

        _CodAlternativo = _RowProducto.Item("Kopral")

        ' PREGUNTA SI EL VALOR QUE SE TRAE DESDE LA LISTA DE PRECIOS EN NETO O BRUTO

        Dim _PrecioNetoUd,
            _PrecioBrutoUd,
            _PrecioNetoUdLista As Double '= PrecioNeto ' Math.Round(SubTotal / CantUd1, 5)

        Dim _PrecioNetoUdLinea,
            _PrecioBrutoUdLinea,
            _PrecioBrutoUdLista As Double

        Select Case _Valor_desde_Lista

            Case csGlobales.Enum_Neto_Bruto.Neto

                _PrecioNeto = _PrecioLinea
                _PrecioBruto = Math.Round(_PrecioNeto * _Impuestos, 2)
                _PrecioNeto = _PrecioBruto / _Impuestos
                'TipoValor = "N"

                _PrecioNetoUd = _PrecioNeto
                _PrecioBrutoUd = _PrecioBruto
                _PrecioNetoUdLinea = _PrecioNetoUd
                _PrecioBrutoUdLinea = _PrecioBruto

                If _RtuProLinea < 1 Then
                    _PrecioNetoUdLista = _PrecioLinea / _RtuProLinea
                    _PrecioBrutoUdLista = _PrecioBruto / _RtuProLinea
                Else
                    _PrecioNetoUdLista = _PrecioNeto
                    _PrecioBrutoUdLista = _PrecioBruto
                End If

            Case csGlobales.Enum_Neto_Bruto.Bruto

                _PrecioNeto = Math.Round(_PrecioLinea / _Impuestos, 3)
                _PrecioBruto = _PrecioLinea
                'TipoValor = "B"

                _PrecioNetoUdLinea = _PrecioNeto
                _PrecioNetoUd = Math.Round(_PrecioNeto, 0)
                _PrecioNetoUdLista = _PrecioNetoUd

                _PrecioBrutoUd = _PrecioLinea
                _PrecioBrutoUdLinea = _PrecioLinea
                _PrecioBrutoUdLista = _PrecioLinea

        End Select


        If ChkValores.Checked Then
            _TipoValor = "N"
            _PrecioLinea = _PrecioNeto
        Else
            _TipoValor = "B"
            _PrecioLinea = _PrecioBruto
        End If

        If Not ChkValores.Checked Then
            _PrecioLinea = _PrecioBruto
        End If

        'If UnidadTrans = 2 Then
        'PrecioNetoUd = PrecioNeto * RtuProLinea
        'PrecioBrutoUd = PrecioBruto * RtuProLinea
        'End If

        Dim _DsctoNeto = 0 'Math.Round(_ValorDscto, 5)
        Dim _DsctoBruto = 0 'Math.Round(_DsctoNeto * _Impuestos)

        Dim _NetoRealUd1 = 0 'TotalNeto / CantUd1
        Dim _NetoRealUd2 = 0 'TotalNeto / CantUd2

        Dim _Stock As Double

        If Not (_RowStock Is Nothing) Then
            _Stock = _RowStock.Item("STFI" & _UnTrans).ToString
        End If

        Dim _VtaStock = True
        Dim _Lincondest As Boolean

        With _Fila

            Consulta_sql = "Select Case When FICO = 0 And FIAD = 0 Then 'No'
                            When FICO <> 0 AND FIAD = 1 Then 'Si'
                            When FICO <> 0 AND FIAD = 0 Then 'Si' 
                            When FICO = 0 AND FIAD <> 0 Then 'Revisar'
                            End As Consulta
                            From TABTIDO
                            Where TIDO = '" & _Tido & "'"
            Dim _Row_Tido As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            If _Row_Tido.Item("Consulta") = "Si" Then
                _Lincondest = True
            ElseIf _Row_Tido.Item("Consulta") = "No" Then
                _Lincondest = False
            ElseIf _Row_Tido.Item("Consulta") = "Revisar" Then

                Dim _Despacha_Stock As String = _Global_Row_Configuracion_Estacion.Item("EDESFACV")

                If _Despacha_Stock = "S" Then
                    _Lincondest = True
                End If

            End If

            .Cells("Codigo").Value = _Codigo
            .Cells("Cantidad").Value = 0
            .Cells("CantUd1").Value = 0
            .Cells("CantUd2").Value = 0

            .Cells("DescuentoPorc").Value = 0
            .Cells("DescuentoValor").Value = 0
            .Cells("Lincondest").Value = _Lincondest
            .Cells("ValVtaStockInf").Value = _VtaStock ' Permiso para vender con Stock 0

            .Cells("Prct").Value = _Prct
            .Cells("TipoValor").Value = _TipoValor
            .Cells("Precio").Value = _PrecioLinea
            .Cells("PrecioCalculo").Value = _PrecioLinea
            .Cells("Tipr").Value = _Tipr
            .Cells("Descripcion").Value = _DescripcionProductoLinea
            .Cells("Descripcion_Ori").Value = _DescripcionProductoLinea
            .Cells("Rtu").Value = _RtuProLinea
            .Cells("Tict").Value = String.Empty
            .Cells("UnTrans").Value = _UnTrans 'UnidadTrans ' numero
            .Cells("UdTrans").Value = _UdTrans 'UnTrans ' caracter
            .Cells("Ud01PR").Value = _Ud1Linea
            .Cells("Ud02PR").Value = _Ud2Linea

            .Cells("PrecioNetoUd").Value = _PrecioNetoUd
            .Cells("PrecioBrutoUd").Value = _PrecioBrutoUd
            .Cells("PrecioNetoUdLista").Value = _PrecioNetoUdLista
            .Cells("PrecioBrutoUdLista").Value = _PrecioBrutoUdLista

            .Cells("DescuentoPorc").Value = 0
            .Cells("DescuentoValor").Value = 0
            .Cells("NroDscto").Value = _DsctoNeto
            .Cells("DsctoNeto").Value = _DsctoNeto
            .Cells("Operacion").Value = String.Empty
            .Cells("Observa").Value = String.Empty
            .Cells("Potencia").Value = 0

            .Cells("DsctoBruto").Value = _DsctoBruto
            '.Cells("CodLista").Value = _ListaPrecioDoc
            .Cells("PorIva").Value = _IVAdelProducto
            .Cells("PorIla").Value = _IlaProducto
            .Cells("StockBodega").Value = _Stock
            .Cells("ValVtaStockInf").Value = False
            '.Cells("Sucursal").Value = _SucursalDoc
            '.Cells("Bodega").Value = BodegaDoc
            .Cells("UbicacionBod").Value = String.Empty

            .Cells("DescMaximo").Value = _MaxDescuento
            .Cells("PmSucLinea").Value = _PmSucLinea
            .Cells("PmLinea").Value = _PmLinea
            .Cells("PmIFRS").Value = _PmIFRS

            .Cells("Nuevo_Producto").Value = 0

            'Dim Permiso = "Bkp00014"
            Dim _PermisoDscto As Boolean = False 'Fx_Tiene_Permiso(Me, Permiso, FUNCIONARIO, True)

            .Cells("ValVtaDescMax").Value = _PermisoDscto
            '.Cells("IdMaeedo_Dori").Value = 0
            '.Cells("IdMaeddo_Dori").Value = 0

            .Cells("CodigoProv").Value = _CodAlternativo

            Dim _Moneda = _TblEncabezado.Rows(0).Item("Moneda_Doc")
            Dim _Tipo_Cambio = _TblEncabezado.Rows(0).Item("Valor_Dolar")
            Dim _Tipo_Moneda = _TblEncabezado.Rows(0).Item("TipoMoneda")

            .Cells("Moneda").Value = _Moneda
            .Cells("Tipo_Moneda").Value = _Tipo_Moneda
            .Cells("Tipo_Cambio").Value = _Tipo_Cambio

            .Cells("Ecuacion").Value = _Ecuacion
            .Cells("Stock_desde_WMS").Value = False '_Stock_desde_WMS

            .Cells("Crear_CPr").Value = True
            .Cells("Id_CPr").Value = _RowProducto.Item("Id_CPr")

        End With

        LblDescripcion.Text = _DescripcionProductoLinea
        LblUbicacionBodega.Text = String.Empty
        LblNetoLinea.Text = FormatNumber(0, 2)
        LblIvaLinea.Text = FormatNumber(0, 2)
        LblImpuestosLinea.Text = FormatNumber(0, 2)
        LbllBrutoLinea.Text = FormatNumber(0, 0)
        LblListaLinea.Text = _ListaPrecios

    End Sub



    Sub Sb_Recalcular_Descuentos(_Fila_Actual As DataGridViewRow,
                                 _Mostrar_Mensaje As Boolean,
                                 _Mostrar_Mensaje_Dscto_Global As Boolean)


        Dim _i = 0

        Dim _Filas = Grilla_Detalle.Rows.Count

        For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows

            If _i = _Filas Then Exit For

            Dim _Codigo As String = _Fila.Cells("Codigo").Value
            Dim _Prct As Boolean = _Fila.Cells("Prct").Value
            Dim _Tipr As String = _Fila.Cells("Tipr").Value
            Dim _Tict As String = _Fila.Cells("Tict").Value
            Dim _Aplica_Oferta As Boolean = _Fila.Cells("Aplica_Oferta").Value

            If _Prct = 1 And _Tict = "D" And Not _Aplica_Oferta Then

                _Fila.Cells("DsctoNeto").Value = 0
                _Fila.Cells("DsctoBruto").Value = 0
                _Fila.Cells("ValIvaLinea").Value = 0
                _Fila.Cells("ValIlaLinea").Value = 0
                _Fila.Cells("ValNetoLinea").Value = 0
                _Fila.Cells("ValBrutoLinea").Value = 0
                _Fila.Cells("PrecioNetoRealUd1").Value = 0
                _Fila.Cells("PrecioNetoRealUd2").Value = 0
                _Fila.Cells("DescuentoValor").Value = 0
                _Fila.Cells("PrecioCalculo").Value = 0
                _Fila.Cells("SubTotal").Value = 0

            End If

            _i += 1

        Next

        Sb_Sumar_Totales()

        _i = 0

        For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows

            If _i = _Filas Then Exit For

            If _Fila_Actual.Index <> _i Then

                Dim _Prct As Boolean = _Fila.Cells("Prct").Value
                Dim _Tict = _Fila.Cells("Tict").Value
                Dim _Aplica_Oferta As Boolean = _Fila.Cells("Aplica_Oferta").Value
                Dim _Codigo As String = _Fila.Cells("Codigo").Value

                If _Prct And _Tict = "D" Then
                    If _Aplica_Oferta Then
                        Sb_Procesar_Datos_De_Grilla(_Fila, "DescuentoValor", _Mostrar_Mensaje, _Mostrar_Mensaje_Dscto_Global)
                    Else

                        Dim _Koen = _TblEncabezado.Rows(0).Item("CodEntidad")

                        Consulta_sql = "Select * From TABCT Where KOCT = '" & _Codigo & "'"
                        Dim _RowConcepto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                        Dim _Valor_Concepto = FX_Traer_Valor_Concepto(_RowConcepto, _Koen)

                        If CBool(_Valor_Concepto) Then
                            _Fila.Cells("DescuentoPorc").Value = _Valor_Concepto
                            Sb_Procesar_Datos_De_Grilla(_Fila, "DescuentoPorc", False, False, True)
                        Else
                            Sb_Procesar_Datos_De_Grilla(_Fila, "DescuentoPorc", _Mostrar_Mensaje, _Mostrar_Mensaje_Dscto_Global)
                        End If

                    End If
                End If

            End If

            _i += 1

        Next

    End Sub

    Sub Sb_Procesar_Datos_De_Grilla(_Fila As DataGridViewRow,
                                    _Cabeza As String,
                                    _Mostrar_Mensaje As Boolean,
                                    _Mostrar_Mensaje_Dscto_Global As Boolean,
                                    Optional _Procesando_Concepto As Boolean = False,
                                    Optional _Revisar_Descuentos As Boolean = True)

        With _Fila

            Dim _Id As Integer = .Cells("Id").Value

            Dim _Codigo As String = NuloPorNro(.Cells("Codigo").Value, "")
            Dim _Crear_CPr = .Cells("Crear_CPr").Value

            If String.IsNullOrEmpty(_Codigo) Then Exit Sub

            Consulta_sql = "Select Top 1 * From MAEPR Where KOPR = '" & _Codigo & "'"
            Dim _RowProducto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)


            .Cells("CantidadCalculo").Value = NuloPorNro(.Cells("Cantidad").Value, 0)
            Dim _Cantidad As Double = NuloPorNro(.Cells("CantidadCalculo").Value, 0)

            If _Cantidad < 0 Then _Cantidad = 0

            .Cells("PrecioCalculo").Value = NuloPorNro(.Cells("Precio").Value, 0)
            Dim _Precio As Double = .Cells("PrecioCalculo").Value

            Dim _Precio_Calculado As Double
            Dim _Decimales As Integer

            Dim _Moneda_Det As String = .Cells("Moneda").Value
            Dim _Tipo_Moneda_Det As String = .Cells("Tipo_Moneda").Value
            Dim _Tipo_Cambio_Det As Double = .Cells("Tipo_Cambio").Value

            Dim _Moneda_Enc As String = _TblEncabezado.Rows(0).Item("Moneda_Doc")
            Dim _Tipo_Moneda_Enc As String = _TblEncabezado.Rows(0).Item("TipoMoneda")
            Dim _Tipo_Cambio_Ent As Double = _TblEncabezado.Rows(0).Item("Valor_Dolar")

            Dim _VlEntero = Math.Round(Math.Round(_Tipo_Cambio_Det, 0) - Math.Round(_Tipo_Cambio_Det, 5), 2)

            If _Moneda_Det.Trim <> _Moneda_Enc.Trim Then
                If _Tipo_Moneda_Enc = "N" Then
                    '_Precio_Calculado = Math.Round(_Precio * _Tipo_Cambio_Ent, 2)
                    _Precio_Calculado = Math.Round(_Precio * _Tipo_Cambio_Det, 5)
                Else
                    '_Precio_Calculado = Math.Round(_Precio / _Tipo_Cambio_Ent, 5)
                    _Precio_Calculado = Math.Round(_Precio / _Tipo_Cambio_Det, 5)
                    _Decimales = _DecimalesGl ' 2
                End If
            Else
                If _Tipo_Moneda_Enc <> "N" Or _Tipo_Cambio_Det <> 1 Then
                    _Decimales = _DecimalesGl ' 2
                End If
                _Precio_Calculado = _Precio
            End If

            Dim _Ecuacion As String = NuloPorNro(.Cells("Ecuacion").Value, "")

            Dim _CantUd1 As Double
            Dim _CantUd2 As Double

            Dim _Divisible = String.Empty
            Dim _Divisible2 = String.Empty

            If Not IsNothing(_RowProducto) Then

                _Divisible = Trim(NuloPorNro(_RowProducto.Item("DIVISIBLE"), ""))
                _Divisible2 = Trim(NuloPorNro(_RowProducto.Item("DIVISIBLE2"), ""))

            End If

            Dim _Descuento As Double = NuloPorNro(.Cells("DescuentoValor").Value, 0)

            Dim _Tict = .Cells("Tict").Value
            Dim _Prct = .Cells("Prct").Value
            Dim _Tipr = .Cells("Tipr").Value

            If _Cantidad = 0 And _Tipr <> String.Empty Then
                .Cells("DescuentoPorc").Value = 0
            End If

            Dim _DescuentoPorc As Double = NuloPorNro(.Cells("DescuentoPorc").Value, 0)
            Dim _DescuentoPorc_Original As Double = NuloPorNro(.Cells("DescuentoPorc").Value, 0)
            Dim _DescMaximo As Double = NuloPorNro(.Cells("DescMaximo").Value, 0)

            Dim _UnTrans As Integer = .Cells("UnTrans").Value
            Dim _PorIva As Double = .Cells("PorIva").Value
            Dim _PorIla As Double = .Cells("PorIla").Value
            Dim _Rtu As Double = .Cells("Rtu").Value

            Dim _Impuestos = 1 + ((_PorIva + _PorIla) / 100)

            Dim _TotalIva As Double
            Dim _TotalIla As Double
            Dim _TotalNeto As Double
            Dim _TotalBruto As Double

            Dim _TotalDsctoNeto As Double
            Dim _TotalDsctoBruto As Double

            Dim _PrecioNeto As Double
            Dim _PrecioBruto As Double

            Dim _PrecioNetoRealUd1 As Double
            Dim _PrecioNetoRealUd2 As Double

            Dim _Total As Double

            Dim _Idmaeddo_Dori As Integer = _Fila.Cells("Idmaeddo_Dori").Value

            Dim _Decimal = 2

            If _UnTrans = 1 Then

                If Not ForzarDecimalesEnUnidadesEnteras And Fx_Solo_Enteros(_Cantidad, _Divisible) And Not _Facturacion_Automatica Then
                    If _Cantidad <> 0 Then
                        MessageBoxEx.Show(Me, "El producto solo permite cantidades enteras", "Validación",
                                          MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                    End If
                    .Cells("Cantidad").Value = 0
                    _Cantidad = 0
                End If

                If NuloPorNro(_Fila.Cells("RtuVariable").Value, False) Or _Facturacion_Automatica Or _Fila.Cells("DesacRazTransf").Value Then

                    _CantUd1 = _Fila.Cells("CantUd1").Value
                    _CantUd2 = _Fila.Cells("CantUd2").Value

                Else

                    If _Rtu = 1 Then
                        _CantUd1 = _Cantidad
                        _CantUd2 = _Cantidad * _Rtu
                    Else
                        _CantUd1 = _Cantidad
                        _CantUd2 = _Cantidad / _Rtu
                    End If

                End If

            ElseIf _UnTrans = 2 Then

                If Not ForzarDecimalesEnUnidadesEnteras And Fx_Solo_Enteros(_Cantidad, _Divisible2) Then
                    MessageBoxEx.Show(Me, "El producto solo permite cantidades enteras", "Validación",
                                      MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                    .Cells("Cantidad").Value = 0
                    _Cantidad = 0
                End If

                If _Rtu > 1 Then
                    _CantUd2 = _Cantidad
                    _CantUd1 = _Cantidad * _Rtu
                Else
                    _CantUd2 = _Cantidad
                    _CantUd1 = _Cantidad / _Rtu
                End If

            End If

            Dim _CodLista As String = .Cells("CodLista").Value

            If Not _Revision_Remota And Not _Revisar_Notificacion_Automatica_Remota Then

                If _Cabeza = "Cantidad" Then

                    If _Ecuacion.Contains("[") Then

                        If Not CBool(_Idmaeddo_Dori) Then

                            Consulta_sql = "Select Top 1 *,--PP01UD,PP02UD,DTMA01UD As DSCTOMAX,ECUACION,
                                        (Select top 1 MELT From TABPP Where KOLT = '" & _CodLista & "') as MELT From TABPRE
                                        Where KOLT = '" & _CodLista & "' And KOPR = '" & _Codigo & "'"
                            Dim _RowPrecios = _Sql.Fx_Get_DataRow(Consulta_sql)

                            Dim _Koen = _TblEncabezado.Rows(0).Item("CodEntidad")

                            _Precio = Fx_Funcion_Ecuacion_Random(Me, _Koen, _Ecuacion, _Codigo, _UnTrans, _RowPrecios, _Cantidad, _CantUd1, _CantUd2)

                            If ChkValores.Checked Then
                                .Cells("PrecioNetoUdLista").Value = _Precio
                            Else
                                .Cells("PrecioBrutoUdLista").Value = _Precio
                            End If

                            .Cells("Precio").Value = _Precio
                            .Cells("PrecioCalculo").Value = _Precio

                            _Precio_Calculado = _Precio

                        End If

                    End If

                End If

            End If

            Dim _NumDsctos As Integer = _Ds_Matriz_Documentos.Tables("Descuentos_Doc").Compute("Count(Podt)", "Id = " & _Id & " And Podt <> 0")

            Dim _No_Aplica_Redondeo As Boolean = .Cells("No_Aplica_Redondeo").Value
            Dim _Aplicar_Redondeo As Boolean = Chk_Redondear_Cero.Checked

            If _No_Aplica_Redondeo Then _Aplicar_Redondeo = False

            Dim _TotalNeto_Calculo As Double
            Dim _TotalBruto_Calculo As Double

            Dim _Descontar As Boolean
            Dim _Total_Concepto As Double

            'SI EL PRODUCTO ES UN CONCEPTO DE DESCUENTO O RECARGO

            Dim _DescuentoValor_Anterior As Double = .Cells("DescuentoValor_Anterior").Value
            Dim _Recargo As Double

            'Dim _Idmaeddo_Dori As Integer = .Cells("Idmaeddo_Dori").Value
            Dim _Idmaeedo_Dori As Integer = .Cells("Idmaeedo_Dori").Value

            If Convert.ToBoolean(_Prct) Then

                _Total_Concepto = .Cells(_Cabeza).Value

                _TotalNeto_Calculo = _TblEncabezado.Rows(0).Item("TotalNetoDoc")
                _TotalBruto_Calculo = _TblEncabezado.Rows(0).Item("TotalBrutoDoc")

                Consulta_sql = "Select Top 1 * From TABCT Where KOCT = '" & _Codigo & "'"
                Dim _Row_Concepto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                Dim _Aplicacion = _Row_Concepto.Item("APLICACION").ToString.Trim

                If Not _Procesando_Concepto Then
                    _Aplicacion = String.Empty
                End If

                If _Tict = "D" Then

                    _Descontar = True
                    _Cantidad = 1 : _CantUd1 = 1 : _CantUd2 = 1
                    _TotalNeto_Calculo += _DescuentoValor_Anterior

                    Dim _TNeto As Double
                    Dim _TBruto As Double

                    For i = 0 To _Fila.Index - 1

                        Dim _Nt = NuloPorNro(Grilla_Detalle.Rows(i).Cells("ValNetoLinea").Value, 2)
                        Dim _Br = NuloPorNro(Grilla_Detalle.Rows(i).Cells("ValBrutoLinea").Value, 2)

                        _TNeto += _Nt
                        _TBruto += _Br

                    Next

                    _TotalNeto_Calculo = _TNeto
                    _TotalBruto_Calculo = _TBruto

                    ' ****  ESTO ES NUEVO

                    Dim _Tidopa As String = .Cells("Tidopa").Value

                    If _Tidopa = "NVV" Then

                        _TotalNeto_Calculo = 0
                        _TotalBruto_Calculo = 0

                        For Each _Fldscto As DataRow In _TblDetalle.Rows

                            Dim _Id_Dscto As Integer = _Fldscto.Item("Id")
                            Dim _Idmaeedo_Dori_Dscto As Integer = _Fldscto.Item("Idmaeedo_Dori")

                            If _Idmaeedo_Dori = _Idmaeedo_Dori_Dscto And _Id <> _Id_Dscto Then

                                _TotalNeto_Calculo += _Fldscto.Item("ValNetoLinea")
                                _TotalBruto_Calculo += _Fldscto.Item("ValBrutoLinea")

                            End If

                        Next

                    End If

                    ' ***************************************************


                    If _Cabeza = "DescuentoPorc" Then

                        Select Case _Aplicacion

                            Case "Valor neto/bruto documento", ""

                                If ChkValores.Checked Then
                                    _Descuento = Math.Round((_DescuentoPorc / 100) * _TotalNeto_Calculo, _Decimales)
                                    If _Aplicar_Redondeo Then _Descuento = Fx_Redondeo_Descuento(_Descuento, Chk_Redondear_Cero.Checked)
                                    _DescuentoPorc = Math.Round((_Descuento / _TotalNeto_Calculo) * 100, 5)
                                Else
                                    _Descuento = Math.Round((_DescuentoPorc / 100) * _TotalBruto_Calculo)
                                    If _Aplicar_Redondeo Then _Descuento = Fx_Redondeo_Descuento(_Descuento, Chk_Redondear_Cero.Checked)
                                    _DescuentoPorc = Math.Round((_Descuento / _TotalBruto_Calculo) * 100, 5)
                                End If

                            Case "Nro items del documento", "Peso de los items en documento", "Volumen en lts items documento"

                                Dim _NroItem As Double = 0

                                Dim _Por_Peso As Boolean = (_Aplicacion = "Peso de los items en documento")
                                Dim _Por_Item As Boolean = (_Aplicacion = "Nro items del documento")
                                Dim _Por_Volumen As Boolean = (_Aplicacion = "Volumen en lts items documento")

                                For Each _Fl As DataRow In _TblDetalle.Rows

                                    If Not CBool(_Fl.Item("Prct")) Then

                                        Dim _Kopr = _Fl.Item("Codigo")

                                        If _Por_Item Then _NroItem += _Fl.Item("Cantidad")

                                        If _Por_Peso Then
                                            Dim _Peso As Double = _Sql.Fx_Trae_Dato("MAEPR", "PESOUBIC", "KOPR = '" & _Kopr & "'", True)
                                            _NroItem += _Fl.Item("CantUd1") * _Peso
                                        End If

                                        If _Por_Volumen Then
                                            Dim _Volumen As Double = _Sql.Fx_Trae_Dato("MAEPR", "LTSUBIC", "KOPR = '" & _Kopr & "'", True)
                                            _NroItem += _Fl.Item("CantUd1") * _Volumen
                                        End If

                                    End If

                                Next

                                _Descuento = _NroItem * _DescuentoPorc

                                If ChkValores.Checked Then
                                    If _Aplicar_Redondeo Then _Descuento = Fx_Redondeo_Descuento(_Descuento, Chk_Redondear_Cero.Checked)
                                    _DescuentoPorc = Math.Round((_Descuento / _TotalNeto_Calculo) * 100, 5)
                                Else
                                    If _Aplicar_Redondeo Then _Descuento = Fx_Redondeo_Descuento(_Descuento, Chk_Redondear_Cero.Checked)
                                    _DescuentoPorc = Math.Round((_Descuento / _TotalBruto_Calculo) * 100, 5)
                                End If

                        End Select

                    ElseIf _Cabeza = "DescuentoValor" Then

                        If ChkValores.Checked Then
                            If _Aplicar_Redondeo Then _Descuento = Fx_Redondeo_Descuento(_Descuento, Chk_Redondear_Cero.Checked)
                            _DescuentoPorc = Math.Round((_Descuento / _TotalNeto_Calculo) * 100, 5)
                        Else
                            If _Aplicar_Redondeo Then _Descuento = Fx_Redondeo_Descuento(_Descuento, Chk_Redondear_Cero.Checked)
                            _DescuentoPorc = Math.Round((_Descuento / _TotalBruto_Calculo) * 100, 5)
                        End If

                    End If

                ElseIf _Tict = "R" Then

                    If ChkValores.Checked Then
                        _Total_Concepto = .Cells("ValNetoLinea").Value
                    Else
                        _Total_Concepto = .Cells("ValBrutoLinea").Value
                    End If

                    _Recargo = NuloPorNro(.Cells("RecargoValor").Value, 0)

                    If ChkValores.Checked Then
                        _TotalNeto = _Total_Concepto
                    Else
                        _TotalNeto = Math.Round(_Total_Concepto / _Impuestos, 3)
                        _TotalBruto = _Total_Concepto
                    End If

                    If _Cabeza = "DescuentoPorc" Then

                        Select Case _Aplicacion

                            Case "Valor neto/bruto documento", ""

                                _TotalNeto_Calculo -= _Recargo
                                _TotalBruto_Calculo -= _Recargo

                                _DescuentoPorc = _DescuentoPorc / 100

                                If ChkValores.Checked Then
                                    _TotalNeto = Math.Round((1 + _DescuentoPorc) * _TotalNeto_Calculo, _Decimales)
                                    _Recargo = Math.Round(_TotalNeto - _TotalNeto_Calculo, _Decimales)
                                    If _Aplicar_Redondeo Then _Recargo = Fx_Redondeo_Descuento(_Recargo, Chk_Redondear_Cero.Checked)
                                    _DescuentoPorc = Math.Round((_Recargo / _TotalNeto_Calculo) * 100, 5)
                                    _TotalNeto = _Recargo
                                Else
                                    _Recargo = Math.Round((_DescuentoPorc / 100) * _TotalBruto_Calculo)
                                    If _Aplicar_Redondeo Then _Recargo = Fx_Redondeo_Descuento(_Recargo, Chk_Redondear_Cero.Checked)
                                    _DescuentoPorc = Math.Round((_Recargo / _TotalBruto_Calculo) * 100, 5)
                                End If

                            Case "Nro items del documento", "Peso de los items en documento", "Volumen en lts items documento"

                                Dim _NroItem As Double = 0

                                Dim _Por_Peso As Boolean = (_Aplicacion = "Peso de los items en documento")
                                Dim _Por_Item As Boolean = (_Aplicacion = "Nro items del documento")
                                Dim _Por_Volumen As Boolean = (_Aplicacion = "Volumen en lts items documento")

                                For Each _Fl As DataRow In _TblDetalle.Rows

                                    If Not CBool(_Fl.Item("Prct")) Then

                                        Dim _Kopr = _Fl.Item("Codigo")

                                        If _Por_Item Then _NroItem += _Fl.Item("Cantidad")

                                        If _Por_Peso Then
                                            Dim _Peso As Double = _Sql.Fx_Trae_Dato("MAEPR", "PESOUBIC", "KOPR = '" & _Kopr & "'", True)
                                            _NroItem += _Fl.Item("CantUd1") * _Peso
                                        End If

                                        If _Por_Volumen Then
                                            Dim _Volumen As Double = _Sql.Fx_Trae_Dato("MAEPR", "LTSUBIC", "KOPR = '" & _Kopr & "'", True)
                                            _NroItem += _Fl.Item("CantUd1") * _Volumen
                                        End If

                                    End If

                                Next

                                _Total_Concepto = _NroItem * _DescuentoPorc

                                _TotalNeto_Calculo -= _Recargo
                                _TotalBruto_Calculo -= _Recargo

                                If ChkValores.Checked Then
                                    If _Aplicar_Redondeo Then _Total_Concepto = Fx_Redondeo_Descuento(_Total_Concepto, Chk_Redondear_Cero.Checked)
                                    _DescuentoPorc = Math.Round((_Total_Concepto / (_TotalNeto_Calculo)) * 100, 5)
                                Else
                                    If _Aplicar_Redondeo Then _Total_Concepto = Fx_Redondeo_Descuento(_Total_Concepto, Chk_Redondear_Cero.Checked)
                                    _DescuentoPorc = Math.Round((_Descuento / (_TotalBruto_Calculo)) * 100, 5)
                                End If

                                _Recargo = _Total_Concepto

                                If ChkValores.Checked Then
                                    _TotalNeto = _Total_Concepto
                                Else
                                    _TotalNeto = Math.Round(_Total_Concepto / _Impuestos, 3)
                                    _TotalBruto = _Total_Concepto
                                End If

                        End Select


                    ElseIf _Cabeza = "ValNetoLinea" Or _Cabeza = "ValBrutoLinea" Then

                        _TotalNeto_Calculo -= _Recargo
                        _TotalBruto_Calculo -= _Recargo

                        If ChkValores.Checked Then
                            If _Aplicar_Redondeo Then _Total_Concepto = Fx_Redondeo_Descuento(_Total_Concepto, Chk_Redondear_Cero.Checked)
                            _DescuentoPorc = Math.Round((_Total_Concepto / (_TotalNeto_Calculo)) * 100, 5)
                        Else
                            If _Aplicar_Redondeo Then _Total_Concepto = Fx_Redondeo_Descuento(_Total_Concepto, Chk_Redondear_Cero.Checked)
                            _DescuentoPorc = Math.Round((_Total_Concepto / (_TotalBruto_Calculo)) * 100, 5)
                        End If

                        _Recargo = _Total_Concepto

                    End If

                    If (Double.IsNaN(_DescuentoPorc) Or Double.IsInfinity(_DescuentoPorc)) Then
                        _DescuentoPorc = 0
                    End If

                    _Descuento = 0

                End If

                .Cells("DsctoNeto").Value = 0
                .Cells("DsctoBruto").Value = 0
                .Cells("ValIvaLinea").Value = 0
                .Cells("ValIlaLinea").Value = 0
                .Cells("ValNetoLinea").Value = 0
                .Cells("ValBrutoLinea").Value = 0
                .Cells("PrecioNetoRealUd1").Value = 0
                .Cells("PrecioNetoRealUd2").Value = 0
                .Cells("SubTotal").Value = 0

            Else

                If ChkValores.Checked Then
                    _PrecioNeto = _Precio_Calculado
                Else
                    _PrecioNeto = Math.Round(_Precio_Calculado / _Impuestos, 3)
                    _PrecioBruto = _Precio_Calculado
                End If

                _TotalNeto = _PrecioNeto * _Cantidad
                _TotalNeto = Math.Round(_PrecioNeto * _Cantidad, 5)

                _TotalBruto = Math.Round((_TotalNeto * _Impuestos), _Decimales)

                If _Cabeza = "Cantidad" And String.IsNullOrEmpty(_Tict) Then

                    _DescuentoPorc = 0
                    _Descuento = 0
                    .Cells("DescuentoPorc").Value = _DescuentoPorc
                    .Cells("DescuentoValor").Value = _Descuento
                    Eliminar_Campos(_Ds_Matriz_Documentos.Tables("Descuentos_Doc"), _Id)

                End If

                Dim _Recargo_Valor2 As Double = _Fila.Cells("Recargo_Valor").Value

                _TotalNeto_Calculo = _TotalNeto
                _TotalBruto_Calculo = _TotalBruto

                If _Cabeza = "DescuentoPorc" Or
                   _Cabeza = "Precio" Then

                    If _Precio > 0 Then

                        If ChkValores.Checked Then
                            _Descuento = Math.Round((_DescuentoPorc / 100) * _TotalNeto_Calculo, _Decimales)
                            If _Aplicar_Redondeo Then _Descuento = Fx_Redondeo_Descuento(_Descuento, Chk_Redondear_Cero.Checked)
                            _DescuentoPorc = Math.Round((_Descuento / _TotalNeto_Calculo) * 100, 5)
                        Else
                            _Descuento = Math.Round((_DescuentoPorc / 100) * _TotalBruto_Calculo)
                            If _Aplicar_Redondeo Then _Descuento = Fx_Redondeo_Descuento(_Descuento, Chk_Redondear_Cero.Checked)
                            _DescuentoPorc = Math.Round((_Descuento / _TotalBruto_Calculo) * 100, 5)
                        End If

                    End If

                ElseIf _Cabeza = "DescuentoValor" Then

                    If ChkValores.Checked Then
                        If _Aplicar_Redondeo Then _Descuento = Fx_Redondeo_Descuento(_Descuento, Chk_Redondear_Cero.Checked)
                        _DescuentoPorc = Math.Round((_Descuento / _TotalNeto_Calculo) * 100, 5)
                    Else
                        If _Aplicar_Redondeo Then _Descuento = Fx_Redondeo_Descuento(_Descuento, Chk_Redondear_Cero.Checked)
                        _DescuentoPorc = Math.Round((_Descuento / _TotalBruto_Calculo) * 100, 5)
                    End If

                End If

            End If

            .Cells("DescuentoPorc").Value = _DescuentoPorc
            .Cells("DescuentoValor").Value = _Descuento
            .Cells("DescuentoValor_Anterior").Value = _Descuento
            .Cells("RecargoValor").Value = _Recargo

            .Cells("DsctoRealPorc").Value = 0
            .Cells("DsctoRealValor").Value = 0

            Dim _Valor_Dscto As Double
            Dim _CodFunAutoriza_Dscto = "xyz"
            Dim _CodPermiso_Dscto = "Bkp00014"

            If String.IsNullOrEmpty(_Tict) And String.IsNullOrEmpty(_Codigo) = False Then

                Dim _PrecioLista As Double

                If ChkValores.Checked Then
                    _PrecioLista = NuloPorNro(.Cells("PrecioNetoUdLista").Value, 0)
                    _PrecioLista = Math.Round(NuloPorNro(.Cells("PrecioNetoUdLista").Value, 0), 0)
                Else
                    _PrecioLista = NuloPorNro(.Cells("PrecioBrutoUdLista").Value, 0)
                End If

                Dim _PrecioListaUd1 As Double = .Cells("PrecioListaUd1").Value
                Dim _PrecioListaUd2 As Double = .Cells("PrecioListaUd2").Value

                Dim _Precio_Cn_Dscto As Double = (_Precio_Calculado * _Cantidad) - _Descuento
                Dim _Precio_NetoLista As Double = _PrecioLista * _Cantidad
                Dim _Valor_Dscto_Real As Double = Math.Round(_Precio_NetoLista - _Precio_Cn_Dscto, 2)
                Dim _Dscto_Real As Double

                _Valor_Dscto_Real = Math.Round(_Precio_NetoLista - _Precio_Cn_Dscto, 2)

                If _Valor_Dscto_Real > 0 Then
                    _Dscto_Real = Math.Round((_Valor_Dscto_Real / _Precio_NetoLista) * 100, 2)
                Else
                    _Dscto_Real = 0
                    _Valor_Dscto_Real = 0
                End If

                .Cells("Tiene_Dscto").Value = False
                .Cells("DsctoRealPorc").Value = _Dscto_Real
                .Cells("DsctoRealValor").Value = _Valor_Dscto_Real

                Dim _CodFunAutoriza As String = .Cells("CodFunAutoriza").Value


                If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta And _Revisar_Descuentos Then

                    If _Global_Row_Configuracion_General.Item("Permisos_Descuentos_Por_Responzable") Then
                        If _CodFunAutoriza = "xyz" Then _CodFunAutoriza = FUNCIONARIO
                    Else
                        If _CodFunAutoriza = "xyz" Then _CodFunAutoriza = _CodVendedor
                    End If

                    If _Precio_Cn_Dscto < _Precio_NetoLista Then

                        Dim _Vizado As Boolean = Grilla_Encabezado.Rows(0).Cells("Vizado").Value

                        If _DescMaximo = 0 Then _DescMaximo = 0.5

                        Dim _Dec = Math.Round(_Dscto_Real - Math.Round(_DescMaximo, 0), 2)
                        If _Dec <= 0.5 Then _Dscto_Real = _DescMaximo

                        If _Dscto_Real > _DescMaximo Then

                            .Cells("Tiene_Dscto").Value = True

                            If _Vizado Then
                                .Cells("ValVtaDescMax").Value = True
                            Else

                                .Cells("CodFunAutoriza").Value = _CodFunAutoriza

                                Dim _Mensaje = String.Empty
                                Dim _MsIcono As Object

                                Dim _Tbl As DataTable = Fx_Trae_Permiso_Bk(_CodFunAutoriza, _CodPermiso_Dscto)

                                If CBool(_Tbl.Rows.Count) Then
                                    _Valor_Dscto = _Tbl.Rows(0).Item("Valor_Dscto")
                                End If

                                Dim _Msj_DsctoReal = String.Empty

                                If _Precio <> _PrecioLista Then
                                    _Msj_DsctoReal = Environment.NewLine & "Descuento Real: " & _Dscto_Real & "%"
                                End If

                                If _Dscto_Real > _Valor_Dscto Then

                                    If _Tido = "COV" Then
                                        _Mensaje = vbCrLf & vbCrLf & "¡SE SOLICITARA PERMISO AL GRABAR OTRO DOCUMENTO QUE DEPENDA DE ESTA COTIZACION!"
                                        _MsIcono = MessageBoxIcon.Warning
                                    Else
                                        _Mensaje = vbCrLf & vbCrLf & "¡SE SOLICITARA PERMISO AL GRABAR EL DOCUMENTO!"
                                        _MsIcono = MessageBoxIcon.Stop
                                    End If
                                    .Cells("ValVtaDescMax").Value = False
                                Else

                                    _CodFunAutoriza_Dscto = _CodFunAutoriza
                                    _Mensaje = vbCrLf & vbCrLf & "Usuario: " & _CodFunAutoriza & " Tiene autorización"
                                    _MsIcono = MessageBoxIcon.Exclamation
                                    .Cells("ValVtaDescMax").Value = True

                                End If

                                .Cells("DsctoRealPorc").Value = _Dscto_Real
                                .Cells("CodPermiso").Value = _CodPermiso_Dscto

                                If _DescMaximo <= 0.5 Then
                                    _DescMaximo = 0
                                End If

                                If Not _Revisando_Situacion_Comercial And Not _Revisar_Notificacion_Automatica_Remota Then

                                    If _Mostrar_Mensaje Then

                                        Dim _No_Permitir_Grabar_Con_Dscto_Superado As Boolean = _Global_Row_Configuracion_General.Item("No_Permitir_Grabar_Con_Dscto_Superado")

                                        If _No_Permitir_Grabar_Con_Dscto_Superado Then

                                            MessageBoxEx.Show(Me, "Descuento máximo según lista: " & _DescMaximo & "%" & Environment.NewLine &
                                                              "Descuento aplicado: " & Math.Round(_DescuentoPorc, 3) & "%" & Environment.NewLine & Environment.NewLine &
                                                              "(Se quitara el descuento - Norma de configuración general (BakApp).)",
                                                              "Supera descuento máximo según lista de precios",
                                                              MessageBoxButtons.OK, _MsIcono, MessageBoxDefaultButton.Button1, Me.TopMost)

                                            Sb_Procesar_Datos_De_Grilla(_Fila, "Cantidad", True, True)

                                            Return

                                        Else

                                            MessageBoxEx.Show(Me, "Descuento máximo según lista: " & _DescMaximo & "%" & Environment.NewLine &
                                                              "Descuento aplicado: " & Math.Round(_DescuentoPorc, 5) & "%" & Environment.NewLine &
                                                              _Msj_DsctoReal & _Mensaje,
                                                              "Supera descuento máximo según lista de precios",
                                                              MessageBoxButtons.OK, _MsIcono, MessageBoxDefaultButton.Button1, Me.TopMost)

                                        End If

                                    End If

                                End If

                            End If

                        End If

                    Else
                        .Cells("ValVtaDescMax").Value = True
                    End If

                End If

                If ChkValores.Checked Then ' SI VALORES SON NETOS

                    _TotalNeto = _TotalNeto - _Descuento

                Else                      ' SI VALORES SON BRUTOS

                    _TotalBruto = _TotalBruto - _Descuento

                End If

            End If

            Dim _Recargo_Valor As Double = _Fila.Cells("Recargo_Valor").Value

            If ChkValores.Checked Then ' SI VALORES SON NETOS

                _TotalNeto += _Recargo_Valor

                ' Con esta funcion redondeamos hacia arriba cuando el decimal es un .5, ya que la funcion Math.Round redondea 
                ' hacia abajo cuando es asi y Random lo hace hacia arriba

                If _Tipo_Cambio_Det = 1 Then

                    Dim _Dec = _TotalNeto - Math.Round(_TotalNeto, 0) '37772.5
                    If _Dec = 0.5 Then _TotalNeto += 0.01

                End If

                _TotalNeto = Math.Round(_TotalNeto, _Decimales)

                _TotalIva = (Math.Round(_TotalNeto * (_PorIva / 100), 5))
                _TotalIla = (Math.Round(_TotalNeto * (_PorIla / 100), 5))
                _TotalBruto = Math.Round((_TotalNeto * _Impuestos), _Decimales)
                _TotalDsctoNeto = _Descuento

                _Total = _TotalNeto

                _PrecioNeto = _Precio

                If _Moneda_Det.Trim <> "$" Then _Decimales = _DecimalesGl ' 2

                _PrecioBruto = Math.Round(_Precio * _Impuestos, _Decimales)

                If _Tict = "D" Then
                    _TotalDsctoBruto = Math.Round((_Descuento * _Impuestos), _Decimales)
                End If

                If _Tict = "R" Then

                    _TotalDsctoBruto = _TotalBruto
                    _TotalDsctoNeto = 0

                End If

            Else                      ' SI VALORES SON BRUTOS

                _TotalBruto += _Recargo_Valor

                _TotalNeto = Math.Round(_TotalBruto / _Impuestos, 5)

                _TotalIva = (Math.Round(_TotalNeto * (_PorIva / 100), 5))
                _TotalIla = (Math.Round(_TotalNeto * (_PorIla / 100), 5))
                _TotalDsctoBruto = _Descuento
                _Total = _TotalBruto

                _PrecioBruto = _Precio_Calculado
                _PrecioNeto = Math.Round(_Precio / _Impuestos, 3)

                If _Tict = "R" Then

                    _TotalDsctoBruto = 0
                    _TotalDsctoNeto = _TotalNeto

                End If

            End If


            If _Descontar Then

                _PrecioNetoRealUd1 = 0
                _PrecioNetoRealUd2 = 0

                If ChkValores.Checked Then ' SI VALORES SON NETOS
                    _TotalNeto = _TotalNeto - _Descuento
                    _TotalIva = (Math.Round(_TotalNeto * (_PorIva / 100), 5))
                    _TotalIla = (Math.Round(_TotalNeto * (_PorIla / 100), 5))
                    _TotalBruto = Math.Round((_TotalNeto * _Impuestos), 0)
                    _TotalDsctoNeto = _Descuento
                    _Total = _TotalNeto
                Else                      ' SI VALORES SON BRUTOS
                    _TotalBruto = _Descuento
                    _TotalNeto = Math.Round(_TotalBruto / _Impuestos, 5)
                    _TotalIva = (Math.Round(_TotalNeto * (_PorIva / 100), 5))
                    _TotalIla = (Math.Round(_TotalNeto * (_PorIla / 100), 5))
                    _TotalDsctoNeto = Math.Round(_TotalNeto, 0)
                    _TotalDsctoBruto = _Descuento
                    _Total = _TotalBruto
                End If

                If _TotalNeto > 0 Then

                    _TotalIla = _TotalIla * -1
                    _TotalIva = _TotalIva * -1
                    _TotalNeto = _TotalNeto * -1
                    _TotalBruto = _TotalBruto * -1
                    _Total = _Total * -1

                End If

                .Cells("Precio").Value = 0

            Else

                If _Cantidad > 0 Then

                    _PrecioNetoRealUd1 = Math.Round(_TotalNeto / _CantUd1, 5)
                    _PrecioNetoRealUd2 = Math.Round(_TotalNeto / _CantUd2, 5)

                    If Not ChkValores.Checked Then
                        _PrecioNeto = _PrecioNetoRealUd1
                    End If

                Else
                    _PrecioNetoRealUd1 = 0
                    _PrecioNetoRealUd2 = 0
                End If

            End If

            If Convert.ToBoolean(_Prct) Then

                Dim _Multiplo = 1

                If _Tict = "D" Then
                    _Multiplo = -1
                ElseIf _Tict = "R" Then
                    _Multiplo = 1
                End If

                If ChkValores.Checked Then
                    _CantUd1 = _TotalNeto * _Multiplo
                    _CantUd2 = 0
                Else
                    _CantUd1 = _TotalBruto * _Multiplo
                    _CantUd2 = 0
                End If

                'If _Tido <> "OCC" Then .Cells("CDespUd1").Value = _CantUd1

                .Cells("Cantidad").Value = 0

            End If


            Dim _NroImpuestos As Integer = 0

            If _PorIla > 0 Then

                Dim _Noaplica_Imp As String = String.Empty

                If _Sql.Fx_Exite_Campo("TABIMPR", "NOAPLICEN") Then
                    If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Venta Then
                        _Noaplica_Imp = " And NOAPLICEN Not like '%ventas%'"
                        If _Tido = "BLV" Then
                            _Noaplica_Imp = " And NOAPLICEN Not like '%BSV,BLV%'"
                        End If
                    ElseIf _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Compra Then
                        _Noaplica_Imp = " And NOAPLICEN Not like '%compras%'"
                    End If
                End If

                Consulta_sql = "Select KOIM,POIM From TABIM Where KOIM IN (Select KOIM From TABIMPR Where KOPR = '" & _Codigo & "'" & _Noaplica_Imp & ")"
                Dim _TblIla As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

                If CBool(_TblIla.Rows.Count) Then

                    Eliminar_Campos(_Ds_Matriz_Documentos.Tables("Impuestos_Doc"), _Id)

                    For Each _Fila_Ila As DataRow In _TblIla.Rows

                        Dim _Koimli As String = _Fila_Ila.Item("KOIM")
                        Dim _Poimli As Double = _Fila_Ila.Item("POIM")
                        Dim _Vaimli As Double = (Math.Round(_TotalNeto * (_Poimli / 100), 5))

                        Dim NewFila As DataRow
                        NewFila = _Ds_Matriz_Documentos.Tables("Impuestos_Doc").NewRow
                        With NewFila
                            .Item("Id") = _Id
                            .Item("Poimli") = _Poimli
                            .Item("Koimli") = _Koimli
                            .Item("Vaimli") = _Vaimli
                            .Item("Lilg") = String.Empty
                            _Ds_Matriz_Documentos.Tables("Impuestos_Doc").Rows.Add(NewFila)
                        End With
                        _NroImpuestos += 1
                    Next

                End If

            End If


            _TotalIla = Math.Round(_TotalIla, 2)
            _TotalIva = Math.Round(_TotalIva, 2)
            _TotalNeto = Math.Round(_TotalNeto, _Decimal)
            _TotalBruto = Math.Round(_TotalBruto, _Decimal)

            If String.IsNullOrEmpty(.Cells("CodFunAutoriza").Value) Then
                .Cells("CodFunAutoriza").Value = _CodFunAutoriza_Dscto
            End If

            .Cells("CodPermiso").Value = _CodPermiso_Dscto

            .Cells("PrecioNetoUd").Value = _PrecioNeto
            .Cells("PrecioBrutoUd").Value = _PrecioBruto

            .Cells("CantUd1").Value = _CantUd1
            .Cells("CantUd2").Value = _CantUd2

            .Cells("DsctoNeto").Value = _TotalDsctoNeto
            .Cells("DsctoBruto").Value = _TotalDsctoBruto

            .Cells("ValIvaLinea").Value = _TotalIva
            .Cells("ValIlaLinea").Value = _TotalIla
            .Cells("ValNetoLinea").Value = _TotalNeto
            .Cells("ValBrutoLinea").Value = _TotalBruto

            .Cells("PrecioNetoRealUd1").Value = _PrecioNetoRealUd1
            .Cells("PrecioNetoRealUd2").Value = _PrecioNetoRealUd2

            .Cells("SubTotal").Value = _Total

            .Cells("NroImpuestos").Value = _NroImpuestos

            If Fx_ProdConInfo(_Tipr) Then ' _Tipr = "FPN" Then
                .Cells("SumaKilos").Value = .Cells("Pesoubic").Value * .Cells("CantUd1").Value
            End If

            If _NumDsctos = 0 And _Descuento <> 0 Then

                Dim NewFila As DataRow
                NewFila = _Ds_Matriz_Documentos.Tables("Descuentos_Doc").NewRow

                NewFila.Item("Id") = _Id
                NewFila.Item("Podt") = _DescuentoPorc
                NewFila.Item("Vadt") = _Descuento
                NewFila.Item("Podt_Original") = _DescuentoPorc_Original
                _Ds_Matriz_Documentos.Tables("Descuentos_Doc").Rows.Add(NewFila)

                .Cells("NroDscto").Value = 1

            End If

            If _Tict = "D" Then

                If Not Fx_Validar_Descuentos_Globales(0, _Mostrar_Mensaje_Dscto_Global) Then
                    .Cells("ValVtaDescMax").Value = False
                End If

            End If

            If _Revisando_Situacion_Comercial Then

                Dim _Tiene_Dscto As Boolean = _Fila.Cells("Tiene_Dscto").Value

                Dim _PrecioNetoUd = _Fila.Cells("PrecioNetoUd").Value
                Dim _PrecioNetoUdLista = _Fila.Cells("PrecioNetoUdLista").Value
                Dim _PrecioBrutoUd = _Fila.Cells("PrecioBrutoUd").Value
                Dim _PrecioBrutoUdLista = _Fila.Cells("PrecioBrutoUdLista").Value

                Dim _ValNetoLinea = _Fila.Cells("ValNetoLinea").Value
                Dim _ValBrutoLinea = _Fila.Cells("ValBrutoLinea").Value

                Dim _PmLinea = _Fila.Cells("PmLinea").Value
                Dim _PmSucLinea = _Fila.Cells("PmSucLinea").Value

                Dim _Chk_Costo_Pm = True
                Dim _Chk_Costo_UC = False
                Dim _Chk_Costo_Lista = False


                Dim _UltCompraLinea As Double
                Dim _Costo_Lista As Double
                Dim _Lista_Costo As String

                Dim _i = 1

                If String.IsNullOrEmpty(_Tict) And Not String.IsNullOrEmpty(_Tipr) And Not _Prct Then
                    _UltCompraLinea = _Sql.Fx_Trae_Dato("MAEPREM", "PPUL0" & _UnTrans,
                                                        "EMPRESA = '" & ModEmpresa_Doc & "' AND KOPR = '" & _Codigo & "'")
                    _Costo_Lista = _Sql.Fx_Trae_Dato("TABPRE", "PP0" & _UnTrans & "UD",
                                                     "KOLT = '" & _Lista_Costo & "' And KOPR = '" & _Codigo & "'", True)
                ElseIf _Tict = "D" Then
                    _i = 0
                End If


                Dim _Costo As Double

                If _Chk_Costo_Pm Then

                    If _UnTrans = 1 Then
                        _Costo = _PmLinea
                    Else
                        _Costo = _PmLinea * _Rtu
                    End If

                ElseIf _Chk_Costo_UC Then
                    _Costo = _UltCompraLinea
                ElseIf _Chk_Costo_Lista Then
                    _Costo = _Costo_Lista
                End If

                Dim _Total_Costo_Linea As Double = _Costo * _Cantidad
                Dim _Margen_Porc, _Margen_Valor As Double

                If Math.Round(_PrecioNetoUd, 2) < Math.Round(_PrecioNetoUdLista, 2) Then
                    _Fila.Cells("Precio").Style.ForeColor = Rojo
                End If

                If _Tiene_Dscto Then
                    _Fila.Cells("DescuentoPorc").Style.ForeColor = Rojo
                    _Fila.Cells("DescuentoValor").Style.ForeColor = Rojo
                    _Fila.Cells("DsctoRealPorc").Style.ForeColor = Rojo
                    _Fila.Cells("DsctoRealValor").Style.ForeColor = Rojo
                End If

                _Margen_Valor = (_ValNetoLinea - _Total_Costo_Linea) * _i
                _Margen_Porc = ((_ValNetoLinea - _Total_Costo_Linea) / _ValNetoLinea) * _i

                _Fila.Cells("Total_Costo").Value = _Total_Costo_Linea
                _Fila.Cells("Margen_Valor").Value = _Margen_Valor
                _Fila.Cells("Margen_Porc").Value = _Margen_Porc


                Dim _DsctoRealPorc = _Fila.Cells("DsctoRealPorc").Value

                If _Margen_Valor < 0 Then
                    _Fila.Cells("Margen_Valor").Style.ForeColor = Rojo
                    _Fila.Cells("Margen_Porc").Style.ForeColor = Rojo
                Else
                    _Fila.Cells("Margen_Valor").Style.ForeColor = Verde
                    _Fila.Cells("Margen_Porc").Style.ForeColor = Verde
                End If

            End If

        End With

        If _Cl_DocListaSuperior.UsarVencListaPrecios Then
            _Cl_DocListaSuperior.Sb_EditarRegistro(_Fila.Index,
                                                   _Fila.Cells("Cantidad").Value,
                                                   _Fila.Cells("CantUd1").Value,
                                                   _Fila.Cells("CantUd2").Value,
                                                   _Fila.Cells("Precio").Value)
        End If

        If _Revisando_Situacion_Comercial Then
            Sb_Revisar_Margenes(True, False, False, "")
        End If

        Sb_Suma_Kilos()
        Sb_Marcar_Fila_Grilla(_Fila)
        Sb_Sumar_Totales()
        Sb_Mostrar_Datos_Producto_Activo(False)

    End Sub


    Function Fx_Validar_Descuentos_Globales(ByRef _Tiene_Dsctos_Superados As Boolean,
                                            _Mostrar_Alerta As Boolean) As Boolean

        Dim _Contador As Integer
        Dim _Contador_Item As Integer

        Dim _TotalNetoDoc As Double = _TblEncabezado.Rows(0).Item("TotalNetoDoc")
        Dim _TotalIvaDoc As Double = _TblEncabezado.Rows(0).Item("TotalIvaDoc")
        Dim _TotalIlaDoc As Double = _TblEncabezado.Rows(0).Item("TotalIlaDoc")
        Dim _TotalBrutoDoc As Double = _TblEncabezado.Rows(0).Item("TotalBrutoDoc")

        Dim _TotalNetoSDscto As Double = 0 ' Total neto de los productos
        Dim _TotalDsctoGlobal As Double = 0 ' Total neto (suma descuentos)
        Dim _DsctoPorcGlobal As Double

        Dim _Afecta_Precio_Real As Boolean
        Dim _NroConceptos As Integer
        Dim _NroConceptos_NoAfectaDsctoGlobal As Integer
        Dim _Conceptos_NoAfectaDsctoGlobal As Boolean

        For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows

            Dim _Codigo = _Fila.Cells("Codigo").Value
            Dim _Tict = _Fila.Cells("Tict").Value
            Dim _Prct As Boolean = _Fila.Cells("Prct").Value

            Dim _Id_Oferta As Integer = _Fila.Cells("Id_Oferta").Value
            Dim _Oferta As String = _Fila.Cells("Oferta").Value
            Dim _Es_Padre_Oferta As Integer = _Fila.Cells("Es_Padre_Oferta").Value
            Dim _Padre_Oferta As Integer = _Fila.Cells("Padre_Oferta").Value
            Dim _Aplica_Oferta As Boolean = _Fila.Cells("Aplica_Oferta").Value

            Dim _ValVtaDescMax As Boolean = _Fila.Cells("ValVtaDescMax").Value
            Dim _Espuntosvta As Boolean = _Fila.Cells("Espuntosvta").Value

            If _Tict <> "D" Then

                'If Not _Aplica_Oferta Or (_Aplica_Oferta And _Es_Padre_Oferta) Then
                _TotalNetoSDscto += Math.Round(NuloPorNro(_Fila.Cells("ValNetoLinea").Value, 0), 2)
                'End If

                If Not _Prct Then
                    _Contador_Item += 1
                End If

            ElseIf _Tict = "D" Then

                If Not _Espuntosvta Then

                    If _Aplica_Oferta Then

                        _TotalNetoSDscto += Math.Round(NuloPorNro(_Fila.Cells("ValNetoLinea").Value, 0), 2)

                    Else

                        Consulta_sql = "Select * From TABCT" & vbCrLf &
                                   "Inner Join " & _Global_BaseBk & "Zw_Conceptos On KOCT = Koct" & vbCrLf &
                                   "Where KOCT = '" & _Codigo & "'"
                        Dim _RowConcepto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                        If Not (_RowConcepto Is Nothing) Then
                            _Afecta_Precio_Real = _RowConcepto.Item("RECAPRRE")
                        End If

                        _NroConceptos += 1

                        If _RowConcepto.Item("NoAfectaDsctoGlobal") Then
                            _NroConceptos_NoAfectaDsctoGlobal += 1
                        End If

                        _TotalDsctoGlobal += Math.Round(NuloPorNro(_Fila.Cells("ValNetoLinea").Value, 0) * -1, 2)

                    End If

                End If

            End If

        Next

        Dim _Var_DsctoGlobal As Double
        Dim _Dscto_Parcilizado As Double

        If _TotalDsctoGlobal > 0 Then
            _DsctoPorcGlobal = 0
            _DsctoPorcGlobal = _TotalDsctoGlobal / _TotalNetoSDscto
            _Var_DsctoGlobal = (Math.Round(_DsctoPorcGlobal, 3))
            _DsctoPorcGlobal = Math.Round(100 * _DsctoPorcGlobal, 2)
            _Dscto_Parcilizado = _TotalDsctoGlobal / _Contador_Item
        End If

        'Datos.WriteXml(AppPath() & "\Data\" & RutEmpresa & "\filename.xml") 'Documento_vta
        Dim _Tiene_Dscto_Superado_Autorizado As Boolean
        Dim _CodFuncionario_Autoriza As String

        If _NroConceptos = _NroConceptos_NoAfectaDsctoGlobal Then
            _Conceptos_NoAfectaDsctoGlobal = True
        End If

        For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows

            Dim _Codigo = NuloPorNro(_Fila.Cells("Codigo").Value, "")

            If String.IsNullOrEmpty(_Codigo) Then Exit For

            Dim _Prct As Boolean = _Fila.Cells("Prct").Value
            Dim _Tict As String = _Fila.Cells("Tict").Value
            Dim _ImportanciaPorc As Double
            Dim _ImportanciaValor As Double

            Dim _DescuentoValor As Double = Math.Round(_Fila.Cells("DescuentoValor").Value, 3)
            Dim _NetoLinea As Double = Math.Round(_Fila.Cells("ValNetoLinea").Value, 3)
            Dim _BrutoLinea As Double = Math.Round(_Fila.Cells("ValBrutoLinea").Value, 3)

            Dim _CantUd1 As Double = _Fila.Cells("CantUd1").Value
            Dim _CantUd2 As Double = _Fila.Cells("CantUd2").Value
            Dim _NetoRealUd1 As Double
            Dim _NetoRealUd2 As Double

            Dim _DescuentoPorc As Double = _Fila.Cells("DescuentoPorc").Value
            Dim _DsctoMaximoLinea As Double = _Fila.Cells("DescMaximo").Value
            Dim _Rtu As Double = _Fila.Cells("Rtu").Value

            If Not _Prct Then

                _ImportanciaPorc = Math.Round(_NetoLinea / _TotalNetoSDscto, 5)
                _ImportanciaValor = Math.Round(_ImportanciaPorc * _TotalDsctoGlobal, 5)

                Dim _PrecioNetoUd1 As Double = Math.Round(_NetoLinea / _CantUd1, 3)
                _NetoRealUd1 = Math.Round(_PrecioNetoUd1 - (_PrecioNetoUd1 * _Var_DsctoGlobal), 3)

                If _Rtu = 1 Then
                    _NetoRealUd2 = _NetoRealUd1 * _Rtu
                    _NetoRealUd2 = _NetoRealUd1
                Else
                    _NetoRealUd2 = Math.Round((_NetoLinea / _CantUd2) - ((_NetoLinea / _CantUd2) * _Var_DsctoGlobal), 3)
                End If

                Dim _DsctoReal As Double = _DsctoPorcGlobal 'Math.Round((ImportanciaValor / NetoLinea) * 100, 2)
                _Fila.Cells("DsctoRealPorc").Value = _DsctoReal

                Dim _DsctoLinea As Double = NuloPorNro(_Fila.Cells("DescuentoPorc").Value, 0)

                _DsctoReal = Math.Round(100 * (1 - ((1 - (_DsctoLinea / 100.0)) * (1 - (_DsctoPorcGlobal / 100.0)))), 3)

                'If _DsctoLinea > 0 Then
                '    _DsctoReal = _Fila.Cells("DescuentoPorc").Value
                'End If

                If Not _Afecta_Precio_Real Then
                    If _NetoLinea > 0 Then
                        _NetoRealUd1 = Math.Round(_NetoLinea / _CantUd1, 5)
                        _NetoRealUd2 = Math.Round(_NetoLinea / _CantUd2, 5)
                    Else
                        _NetoRealUd1 = 0
                        _NetoRealUd2 = 0
                    End If
                End If

                _Fila.Cells("PrecioNetoRealUd1").Value = _NetoRealUd1
                _Fila.Cells("PrecioNetoRealUd2").Value = _NetoRealUd2

                Dim _DsctoRealValor As Double

                If ChkValores.Checked Then
                    _DsctoRealValor = Math.Round((_DsctoReal / 100) * _TotalNetoDoc, 1)
                Else
                    _DsctoRealValor = Math.Round((_DsctoReal / 100) * _TotalBrutoDoc)
                End If

                _Fila.Cells("DsctoRealPorc").Value = _DsctoReal
                _Fila.Cells("DsctoRealValor").Value = _DsctoRealValor

                Dim _Tiene_Dscto As Boolean = _Fila.Cells("Tiene_Dscto").Value = True
                Dim _ValVtaDescMax As Boolean = _Fila.Cells("ValVtaDescMax").Value = False

                If _DsctoReal > _DsctoMaximoLinea Then

                    Dim _CodFunAutoriza As String = _Fila.Cells("CodFunAutoriza").Value
                    Dim _CodVendedor As String = _Fila.Cells("CodVendedor").Value
                    Dim _CodPermiso As String = NuloPorNro(_Fila.Cells("CodPermiso").Value, "")
                    Dim _Valor_Dscto As Double

                    If _CodFunAutoriza = "xyz" Then _CodFunAutoriza = _CodVendedor 'FUNCIONARIO

                    Dim _Tbl As DataTable = Fx_Trae_Permiso_Bk(_CodFunAutoriza, "Bkp00039")

                    If CBool(_Tbl.Rows.Count) Then
                        _Valor_Dscto = _Tbl.Rows(0).Item("Valor_Dscto")
                    End If

                    Dim _Es_Padre_Oferta As Boolean = _Fila.Cells("Es_Padre_Oferta").Value
                    Dim _Aplica_Oferta As Boolean = _Fila.Cells("Aplica_Oferta").Value

                    If Not _Aplica_Oferta Or _Es_Padre_Oferta Then

                        If _Valor_Dscto >= _DsctoReal Then
                            _Fila.Cells("ValVtaDescMax").Value = False
                            _Fila.Cells("DsctoGlobalSuperado").Value = False
                            _Tiene_Dscto_Superado_Autorizado = True
                            _CodFuncionario_Autoriza = _CodFunAutoriza
                        Else

                            _Fila.Cells("ValVtaDescMax").Value = True
                            _Fila.Cells("DsctoGlobalSuperado").Value = True
                            _Contador += 1

                            Dim _Dec = Math.Round(_DescuentoPorc - Math.Round(_DsctoMaximoLinea, 0), 2)

                            If _Dec <= 0 And _Conceptos_NoAfectaDsctoGlobal Then
                                _Fila.Cells("ValVtaDescMax").Value = False
                                _Fila.Cells("DsctoGlobalSuperado").Value = False
                                _Contador -= 1
                            End If

                        End If

                    End If

                End If

            End If

        Next

        _Tiene_Dsctos_Superados = CBool(_Contador)
        _Descuento_Global_Superado = _Tiene_Dsctos_Superados

        If _Contador = 0 Then

            If _Tiene_Dscto_Superado_Autorizado Then

                For Each _FilaPer As DataRow In _TblPermisos.Rows
                    Dim _CodPermiso_Fila = _FilaPer.Item("CodPermiso")
                    If _CodPermiso_Fila = "Bkp00039" Then
                        _FilaPer.Item("Autorizado") = True
                        _FilaPer.Item("CodFuncionario_Autoriza") = _CodFuncionario_Autoriza
                        _FilaPer.Item("NomFuncionario_Autoriza") = _Sql.Fx_Trae_Dato("TABFU", "NOKOFU", "KOFU = '" & _CodFuncionario_Autoriza & "'")
                        _FilaPer.Item("Necesita_Permiso") = True
                        _FilaPer.Item("Permiso_Presencial") = True
                        Exit For
                    End If
                Next

            End If

            Return True

        Else

            If _Mostrar_Alerta Then
                MessageBoxEx.Show(Me, "Existen productos que superan el descuento máximo según lo establecido en la lista de precios",
                                  "Superado descuento máximo",
                                  MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                Sb_Marcar_Grilla()
            End If
            Return False

        End If

    End Function

    Function Fx_Validar_Descuentos_Individuales(ByRef _Tiene_Dsctos_Superados As Boolean,
                                                _Mostrar_Alerta As Boolean) As Boolean

        Dim _Contador = 0
        Dim _Contar_Dsctos_Superados = 0

        Dim _Tiene_Dscto_Superado_Autorizado As Boolean
        Dim _CodFuncionario_Autoriza As String

        For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows

            Fx_Revisar_Descuento_De_La_Fila(_Fila)

            Dim _Codigo = NuloPorNro(_Fila.Cells("Codigo").Value, "")

            Dim _CodFunAutoriza As String = _Fila.Cells("CodFunAutoriza").Value
            Dim _CodVendedor As String = _Fila.Cells("CodVendedor").Value

            Dim _CodPermiso As String = NuloPorNro(_Fila.Cells("CodPermiso").Value, "")

            Dim _DsctoRealPorc As Double
            Dim _Valor_Dscto As Double


            If _CodFunAutoriza = "xyz" Then _CodFunAutoriza = _CodVendedor 'FUNCIONARIO

            If String.IsNullOrEmpty(_Codigo) Then Exit For

            Dim _Tict = _Fila.Cells("Tict").Value
            Dim _DsctoMaximoLinea As Double = _Fila.Cells("DescMaximo").Value

            If String.IsNullOrEmpty(_Tict) And String.IsNullOrEmpty(_Codigo) = False Then

                Dim _Tiene_Dscto As Boolean = _Fila.Cells("Tiene_Dscto").Value
                _DsctoRealPorc = NuloPorNro(_Fila.Cells("DsctoRealPorc").Value, 0)

                If _Tiene_Dscto Then

                    Dim _Tbl As DataTable = Fx_Trae_Permiso_Bk(_CodFunAutoriza, _CodPermiso)

                    If CBool(_Tbl.Rows.Count) Then
                        _Valor_Dscto = _Tbl.Rows(0).Item("Valor_Dscto")
                    End If

                    Dim _Msj_DsctoReal = String.Empty

                    Dim _Dec = Math.Round(_DsctoRealPorc - Math.Round(_DsctoMaximoLinea, 0), 2)
                    If _Dec <= 0.05 Then _DsctoRealPorc = _DsctoMaximoLinea

                    If _DsctoRealPorc > _DsctoMaximoLinea Then

                        _Contar_Dsctos_Superados += 1

                        If _Valor_Dscto < _DsctoRealPorc Then
                            _Fila.Cells("ValVtaDescMax").Value = False ' Si es falso esta la linea permitida
                            _Contador += 1
                        Else
                            _Fila.Cells("ValVtaDescMax").Value = True
                        End If

                    End If

                End If

            End If

        Next

        _Tiene_Dsctos_Superados = CBool(_Contar_Dsctos_Superados)

        If _Contador = 0 Then
            Return True
        Else

            'Dim _CodFunAutoriza = NuloPorNro(Grilla_Encabezado.Rows(0).Cells("CodUsuario_Permiso_Dscto").Value, FUNCIONARIO)
            Dim _CodFunAutoriza = _TblDetalle.Rows(0).Item("CodVendedor") 'NuloPorNro(_CodVendedor, FUNCIONARIO)

            If _Global_Row_Configuracion_General.Item("Permisos_Descuentos_Por_Responzable") Then
                _CodFunAutoriza = FUNCIONARIO
            Else
                _CodFunAutoriza = _CodVendedor
            End If

            If Fx_Revisar_Permiso_Dscto_Global(_CodFunAutoriza, False) Then

                For Each _FilaPer As DataRow In _TblPermisos.Rows
                    Dim _CodPermiso_Fila = _FilaPer.Item("CodPermiso")
                    If _CodPermiso_Fila = "Bkp00039" Then
                        _FilaPer.Item("Autorizado") = True
                        _FilaPer.Item("CodFuncionario_Autoriza") = _CodFunAutoriza
                        _FilaPer.Item("NomFuncionario_Autoriza") = _Sql.Fx_Trae_Dato("TABFU", "NOKOFU", "KOFU = '" & _CodFunAutoriza & "'")
                        _FilaPer.Item("Necesita_Permiso") = True
                        _FilaPer.Item("Permiso_Presencial") = True
                        Exit For
                    End If
                Next

                Return True

            End If

            If _Mostrar_Alerta Then
                MessageBoxEx.Show(Me, "Existen productos que superan el descuento máximo según lo establecido en la lista de precios." & Environment.NewLine &
                                  "Debe solicitar permiso para realizar la venta",
                                  "Superado descuento máximo",
                                  MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
            End If
            Return False
        End If

    End Function

    Function Fx_Revisar_Descuento_De_La_Fila(ByRef _Fila As DataGridViewRow)

        With _Fila

            Dim _Valor_Dscto As Double
            Dim _CodFunAutoriza_Dscto = "xyz"
            Dim _CodPermiso_Dscto = "Bkp00014"


            Dim _Codigo = .Cells("Codigo").Value
            Dim _Cantidad = .Cells("Cantidad").Value
            Dim _Tict = .Cells("Tict").Value
            Dim _Precio = .Cells("Precio").Value

            Dim _DescuentoValor = .Cells("DescuentoValor").Value
            Dim _DescuentoPorc = .Cells("DescuentoPorc").Value


            Dim _DescMaximo = .Cells("DescMaximo").Value


            .Cells("DsctoRealPorc").Value = 0
            .Cells("DsctoRealValor").Value = 0


            If String.IsNullOrEmpty(_Tict) And String.IsNullOrEmpty(_Codigo) = False Then

                Dim _PrecioLista As Double

                If ChkValores.Checked Then
                    _PrecioLista = Math.Round(NuloPorNro(.Cells("PrecioNetoUdLista").Value, 0), 2)
                Else
                    _PrecioLista = NuloPorNro(.Cells("PrecioBrutoUdLista").Value, 0)
                End If

                Dim _Precio_Cn_Dscto As Double = (_Precio * _Cantidad) - _DescuentoValor
                Dim _Precio_NetoLista As Double = _PrecioLista * _Cantidad
                Dim _Valor_Dscto_Real As Double = Math.Round(_Precio_NetoLista - _Precio_Cn_Dscto, 2)

                Dim _Dscto_Real As Double = 0

                If _Valor_Dscto_Real > 0 Then
                    _Dscto_Real = Math.Round((_Valor_Dscto_Real / _Precio_NetoLista) * 100, 2)
                End If

                .Cells("Tiene_Dscto").Value = False
                .Cells("DsctoRealPorc").Value = _Dscto_Real
                .Cells("DsctoRealValor").Value = _Valor_Dscto_Real

                Dim _CodFunAutoriza As String = .Cells("CodFunAutoriza").Value
                Dim _CodVendedor As String = _Fila.Cells("CodVendedor").Value
                '_CodFunAutoriza = "xyz"
                If _Tido = "NVV" Then
                    If _CodVendedor <> FUNCIONARIO Then

                        If _Global_Row_Configuracion_General.Item("Permisos_Descuentos_Por_Responzable") Then
                            If _CodFunAutoriza = "xyz" Then _CodFunAutoriza = FUNCIONARIO
                        Else
                            If _CodFunAutoriza = "xyz" Then _CodFunAutoriza = _CodVendedor
                        End If

                        '_CodFunAutoriza = FUNCIONARIO
                    Else
                        If _CodFunAutoriza = "xyz" Then _CodFunAutoriza = _CodVendedor
                    End If
                Else
                    If _CodFunAutoriza = "xyz" Or String.IsNullOrEmpty(_CodFunAutoriza) Then _CodFunAutoriza = _CodVendedor
                End If

                If _Global_Row_Configuracion_General.Item("Permisos_Descuentos_Por_Responzable") Then
                    If _CodFunAutoriza = "xyz" Then _CodFunAutoriza = FUNCIONARIO
                Else
                    If _CodFunAutoriza = "xyz" Then _CodFunAutoriza = _CodVendedor
                End If

                .Cells("CodFunAutoriza").Value = _CodFunAutoriza

                If _Precio_Cn_Dscto < _Precio_NetoLista Then

                    Dim _Vizado As Boolean = Grilla_Encabezado.Rows(0).Cells("Vizado").Value

                    If _DescMaximo = 0 Then _DescMaximo = 0.5

                    Dim _Dec = Math.Round(_Dscto_Real - Math.Round(_DescMaximo, 0), 2)
                    If _Dec <= 0.5 Then _Dscto_Real = _DescMaximo

                    If _Dscto_Real > _DescMaximo Then

                        .Cells("Tiene_Dscto").Value = True

                        If _Vizado Then
                            .Cells("ValVtaDescMax").Value = True
                        Else
                            Dim _Mensaje = String.Empty
                            Dim _MsIcono As Object

                            Dim _Tbl As DataTable = Fx_Trae_Permiso_Bk(_CodFunAutoriza, _CodPermiso_Dscto)

                            If CBool(_Tbl.Rows.Count) Then
                                _Valor_Dscto = _Tbl.Rows(0).Item("Valor_Dscto")
                            End If

                            Dim _Msj_DsctoReal = String.Empty

                            If _Dscto_Real > _Valor_Dscto Then
                                .Cells("ValVtaDescMax").Value = False
                            Else
                                _CodFunAutoriza_Dscto = FUNCIONARIO
                                _MsIcono = MessageBoxIcon.Exclamation
                                .Cells("ValVtaDescMax").Value = True
                            End If

                            .Cells("DsctoRealPorc").Value = _Dscto_Real
                            .Cells("CodPermiso").Value = _CodPermiso_Dscto

                        End If
                    End If
                Else
                    .Cells("ValVtaDescMax").Value = True
                End If
            End If
            'FIN DSCTO
        End With

    End Function

    Function Fx_Revisar_Permiso_Dscto_Global(_CodAutoriza As String,
                                             _Mostrar_Mensaje As Boolean) As Boolean

        Dim _TotalDsctoReal_Porc As Double = Grilla_Encabezado.Rows(0).Cells("TotalDsctoReal_Porc").Value / 100

        Dim _Permiso = "Bkp00039"

        Consulta_sql = "Select * From " & _Global_BaseBk & "ZW_PermisosVsUsuarios
                        Where CodUsuario = '" & _CodAutoriza & "' And CodPermiso = '" & _Permiso & "'"
        Dim _RowPermiso As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        If Not (_RowPermiso Is Nothing) Then

            Dim _Valor_Dscto As Double = Math.Round(_RowPermiso.Item("Valor_Dscto") / 100, 4)

            If _Valor_Dscto >= _TotalDsctoReal_Porc Then

                Return True

            Else

                If _Mostrar_Mensaje Then
                    MessageBoxEx.Show(Me, "Descuento global según documento " & FormatPercent(_TotalDsctoReal_Porc, 2) & Environment.NewLine &
                                      "Descuento máximo permitido para el usuario: " & FormatPercent(_Valor_Dscto, 2),
                                      "PERMISO DENEGADO", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                End If

            End If

        End If

    End Function

    Function Fx_Buscar_Producto(ByRef _Codigo As String,
                                ByRef _Es_Concepto As Boolean,
                                _Seleccion_Multiple As Boolean,
                                ByRef _Tbl_Productos_Seleccionados_Multiple As DataTable,
                                ByRef _EsKit As Boolean) As DataRow

        _Codigo = _Codigo.Trim
        Dim _RowProducto As DataRow

        If _Es_Concepto Then _Seleccion_Multiple = False

        Dim _CodigoAlt As String
        Dim _CodEntidad = _TblEncabezado.Rows(0).Item("CodEntidad")
        Dim _CodSucEntidad = _TblEncabezado.Rows(0).Item("CodSucEntidad")

        Consulta_sql = "Select * From MAEPR Where KOPR = '" & _Codigo & "'"
        _RowProducto = _Sql.Fx_Get_DataRow(Consulta_sql)

        If IsNothing(_RowProducto) AndAlso _Global_Row_Configuracion_General.Item("BuscarProdConCodRapido") Then
            Consulta_sql = "Select * From MAEPR Where KOPRRA = '" & _Codigo & "'"
            _RowProducto = _Sql.Fx_Get_DataRow(Consulta_sql)
        End If

        If IsNothing(_RowProducto) AndAlso _Global_Row_Configuracion_General.Item("BuscarProdConCodTecnico") Then
            Consulta_sql = "Select * From MAEPR Where KOPRTE = '" & _Codigo & "'"
            _RowProducto = _Sql.Fx_Get_DataRow(Consulta_sql)
        End If

        If (_RowProducto Is Nothing) Then

            Consulta_sql = "Select De.*,Mp.*" & vbCrLf &
                           "From MAEDRES De" & vbCrLf &
                           "Inner Join MAEPR Mp On De.ELEMENTO = Mp.KOPR" & vbCrLf &
                           "Inner Join MAEERES Me On Me.CODIGO = De.CODIGO" & vbCrLf &
                           "Where Me.CODIGO = '" & _Codigo & "' And TIPORESE = 'COM'"
            _Tbl_Productos_Seleccionados_Multiple = _Sql.Fx_Get_DataTable(Consulta_sql)

            If CBool(_Tbl_Productos_Seleccionados_Multiple.Rows.Count) Then
                _Seleccion_Multiple = True
                _EsKit = True
            Else
                _Tbl_Productos_Seleccionados_Multiple = Nothing
            End If

        End If

        If (_RowProducto Is Nothing) And Not _EsKit Then

            Dim _RowTabcodal As DataRow

            If Not String.IsNullOrEmpty(_Codigo) Then

                _CodigoAlt = _Codigo
                Consulta_sql = "Select top 1 * From TABCODAL Where KOEN = '' And KOPRAL = '" & _CodigoAlt & "'"
                _RowTabcodal = _Sql.Fx_Get_DataRow(Consulta_sql)

                If _RowTabcodal Is Nothing Then
                    _CodigoAlt = _Codigo
                    Consulta_sql = "Select top 1 * From TABCODAL Where KOEN = '" & _CodEntidad & "' And KOPRAL = '" & _CodigoAlt & "'"
                    _RowTabcodal = _Sql.Fx_Get_DataRow(Consulta_sql)
                End If

                If Not (_RowTabcodal Is Nothing) Then

                    _Codigo = _RowTabcodal.Item("KOPR")
                    Consulta_sql = "Select * From MAEPR Where KOPR = '" & _Codigo & "'"
                    _RowProducto = _Sql.Fx_Get_DataRow(Consulta_sql)

                End If

            End If

            If IsNothing(_RowProducto) Then

                If _Global_Row_Configuracion_General.Item("Patentes_rvm") Then
                    If Not String.IsNullOrEmpty(_Patente_rvm) Then
                        If MessageBoxEx.Show(Me, "¿Desea continuar buscando productos para la patente " & _Patente_rvm & "?",
                                         "Buscar por patente", MessageBoxButtons.YesNo, MessageBoxIcon.Question) = DialogResult.No Then
                            _Patente_rvm = String.Empty
                        End If
                    End If
                End If

                Dim _Tipo_Lista As String
                Dim _Actualizar_Precios As Boolean

                Dim Fm As New Frm_BkpPostBusquedaEspecial_Mt

                Fm.Seleccionar_Multiple = _Seleccion_Multiple

                If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Compra Then

                    _Tipo_Lista = "C"
                    _Actualizar_Precios = False
                    Fm.Bloqueados = Frm_BkpPostBusquedaEspecial_Mt.Enum_Bloquear.Compras
                    Fm.Top20 = Frm_BkpPostBusquedaEspecial_Mt.Enum_Top20.Top_Compras

                ElseIf _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Venta Then

                    _Tipo_Lista = "P"
                    _Actualizar_Precios = True
                    Fm.Bloqueados = Frm_BkpPostBusquedaEspecial_Mt.Enum_Bloquear.Ventas
                    Fm.Top20 = Frm_BkpPostBusquedaEspecial_Mt.Enum_Top20.Top_Ventas

                Else

                    _Tipo_Lista = "P"
                    _Actualizar_Precios = True
                    Fm.Bloqueados = Frm_BkpPostBusquedaEspecial_Mt.Enum_Bloquear.Ventas
                    Fm.Top20 = Frm_BkpPostBusquedaEspecial_Mt.Enum_Top20.Top_Ventas

                End If

                Fm.Pro_CodEntidad = _CodEntidad
                Fm.Pro_CodSucEntidad = _CodSucEntidad
                Fm.Pro_Tipo_Lista = _Tipo_Lista
                Fm.Pro_Lista_Busqueda = _TblEncabezado.Rows(0).Item("ListaPrecios")
                Fm.Pro_Sucursal_Busqueda = Mod_Sucursal
                Fm.Pro_Bodega_Busqueda = Mod_Bodega
                Fm.Txtdescripcion.Text = _Codigo
                Fm.Pro_Mostrar_Info = True
                Fm.Pro_Actualizar_Precios = _Actualizar_Precios
                Fm.Pro_Mostrar_Clasificaciones = True
                Fm.Pro_Mostrar_Imagenes = True
                Fm.Patente_rvm = _Patente_rvm

                If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Compra Then
                    Fm.BtnCrearProductos.Visible = True
                End If

                If _Documento_Interno Then
                    Dim _No_Puede_Ver_Precios As Boolean = Fx_Tiene_Permiso(Me, "NO00001", , False)
                    If _No_Puede_Ver_Precios Then
                        Fm.Pro_Mostrar_Precios = False
                    End If
                End If

                Dim _Mostrar_Stock_Disponible As Boolean

                If _Post_Venta Or _Tido = "BLV" Or _Tido = "FCV" Or _Tido = "NVV" Or _Tido = "NVI" Then

                    Consulta_sql = "Select Top 1 Isnull(STOCK,'') As STOCK From TABTIDO Where TIDO = '" & _Tido & "'"
                    Dim _Row = _Sql.Fx_Get_DataRow(Consulta_sql)

                    _Mostrar_Stock_Disponible = Not String.IsNullOrEmpty(_Row.Item("STOCK"))

                    If _Post_Venta Then _Mostrar_Stock_Disponible = True

                End If

                Fm.Mostrar_Stock_Disponible = _Mostrar_Stock_Disponible
                Fm.Tido_Stock = _Tido
                Fm.Usar_Bodegas_NVI = (_Tido = "NVI")

                If SoloprodEnDoc_CLALIBPR Then

                    If _TblEncabezado.Rows(0).Item("TblTipoVenta") = "CLALIBPR" Then

                        Consulta_sql = "Select CAST( 1 AS bit) As Chk,'' As Codigo,'' As Descripcion " & vbCrLf &
                                       "Union" & vbCrLf &
                                       "Select CAST( 1 AS bit) AS Chk,KOCARAC as Codigo,NOKOCARAC as Descripcion From TABCARAC" & vbCrLf &
                                       "Where KOCARAC IN ('" & _TblEncabezado.Rows(0).Item("CodTipoVenta") & "')"
                        Dim _TblFiltro As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)
                        Fm.Tbl_Filtro_Clalibpr = _TblFiltro

                    End If

                End If

                Fm.ShowDialog(Me)

                _Patente_rvm = Fm.Patente_rvm

                If Fm.Seleccion_Multiple Then

                    _Tbl_Productos_Seleccionados_Multiple = Fm.Tbl_Productos_Seleccionados

                ElseIf Fm.Pro_Seleccionado Then

                    _Codigo = Fm.Codigo_Sel
                    _Es_Concepto = Fm.Es_Conceto
                    _RowProducto = Fm.Pro_RowProducto
                    ''Sb_Revisar_Bloqueo_Producto(_RowProducto)

                Else

                    _RowProducto = Nothing

                End If

            End If

        End If

        If Not _EsKit Then
            Sb_Revisar_Bloqueo_Producto(_RowProducto)
        End If

        Return _RowProducto

    End Function


    Sub Sb_Revisar_Bloqueo_Producto(ByRef _RowProducto As DataRow)

        If Not IsNothing(_RowProducto) Then

            Dim _Codigo As String = _RowProducto.Item("KOPR")
            Dim _Bloqueapr As String = _RowProducto.Item("BLOQUEAPR")
            Dim _Bloqueado As Boolean
            Dim _Msg As String = String.Empty

            Select Case _Tipo_Documento

                Case csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Compra
                    If _Bloqueapr = "C" Then _Msg = "Producto bloqueado para compras"
                    If _Bloqueapr = "T" Then _Msg = "Producto bloqueado para compras y ventas"
                Case csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Venta
                    If _Bloqueapr = "V" Then _Msg = "Producto bloqueado para ventas"
                    If _Bloqueapr = "T" Then _Msg = "Producto bloqueado para compras y ventas"
            End Select

            If Not String.IsNullOrEmpty(_Msg) Then
                _Bloqueado = True
            End If

            Dim _Row_ProdBloquCompra As DataRow

            If Not _Bloqueado Then

                Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Entidades_ProdExcluidos" & vbCrLf &
                               "Where CodEntidad = '" & _RowEntidad.Item("KOEN") & "' And CodSucEntidad = '" & _RowEntidad.Item("SUEN") & "' And Codigo = '" & _Codigo & "'"
                _Row_ProdBloquCompra = _Sql.Fx_Get_DataRow(Consulta_sql)

                If Not IsNothing(_Row_ProdBloquCompra) Then
                    _Msg = "Producto bloqueado para comprar a este proveedor." & vbCrLf &
                        "Motivo: " & _Row_ProdBloquCompra.Item("Motivo")
                    _Bloqueado = True
                End If

            End If

            If _Bloqueado Then
                MessageBoxEx.Show(Me, _Msg, "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                _RowProducto = Nothing
            End If

        End If

    End Sub

    Function Fx_Buscar_Entidad(_Formulario As Form,
                               _CodEntidad As String,
                               _CodSucEntidad As String,
                               _Buscar_Entidad As Boolean,
                               _Mostrar_Mensaje_Deuda As Boolean) As DataRow


        Dim _RowEntidad As DataRow
        Dim _TblEntidad As DataTable

        Dim _PreguntaClientePuntos As Boolean
        Dim _Cl_Puntos As New Cl_Puntos()
        _Cl_Puntos.Zw_PtsVta_Configuracion = _Cl_Puntos.Fx_Llenar_Zw_PtsVta_Configuracion(ModEmpresa_Doc)

        _PreguntaClientePuntos = _Cl_Puntos.Zw_PtsVta_Configuracion.Activo

        If _Buscar_Entidad Then

            Dim Fm As New Frm_BuscarEntidad_Mt(False)
            If _Tido = "FCV" Or _Tido = "COV" Or _Tido = "NVV" Or _Tido = "BLV" Or _Tido = "GDP" Then
                Fm.Rdb_Clientes.Checked = True
            End If
            Fm.Txtdescripcion.Text = _CodEntidad
            Fm.PreguntaClientePuntos = _PreguntaClientePuntos
            Fm.ShowDialog(_Formulario)
            _RowEntidad = Fm.Pro_RowEntidad

            Return _RowEntidad

        Else

            _TblEntidad = Fx_Traer_Datos_Entidad_Tabla(_CodEntidad, _CodSucEntidad)

            If CBool(_TblEntidad.Rows.Count) Then

                If _TblEntidad.Rows.Count = 1 Then
                    _RowEntidad = _TblEntidad.Rows(0)
                Else

                    Dim Fm_S As New Frm_BuscarEntidad_MtSuc
                    Fm_S._CodEntidad = _CodEntidad
                    Fm_S._Seleccionar = True
                    Fm_S.ShowDialog(_Formulario)

                    If Fm_S._Suc_Seleccionada Then
                        _RowEntidad = Fm_S._Tbl_SucursalSelec.Rows(0)
                    End If
                    Fm_S.Dispose()

                End If

            Else
                _RowEntidad = Fx_Buscar_Entidad(_Formulario, _CodEntidad, "", True, _Mostrar_Mensaje_Deuda)
            End If

        End If

        If Not (_RowEntidad Is Nothing) Then

            Dim _Bloqueada As Boolean

            If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Then

                VerSoloEntidadesDelVendedor = Fx_Tiene_Permiso(Me, "NO00021",, False)

                If VerSoloEntidadesDelVendedor Then

                    If _RowEntidad.Item("KOFUEN").ToString.Trim <> FUNCIONARIO.ToString.Trim Then

                        MessageBoxEx.Show(_Formulario, "Usted tiene restricción para ver documentos de clientes de otros vendedores." & vbCrLf &
                                  "Tienes el permiso (restricción) NO00021 asignado.",
                                  "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)

                        Return Nothing

                    End If

                Else

                    If Not _Global_Row_Configuracion_General.Item("SelectOtrosClientesPedirPermiso") Then

                        Dim _Mensaje As New LsValiciones.Mensajes

                        _Mensaje = Fx_EntidadEnGrupoVendedores(_RowEntidad, FUNCIONARIO, True)

                        If Not _Mensaje.EsCorrecto Then
                            MessageBoxEx.Show(Me, _Mensaje.Mensaje, "Validación", MessageBoxButtons.OK,
                              IIf(_Mensaje.EsCorrecto, MessageBoxIcon.Information, MessageBoxIcon.Stop))
                            Return Nothing
                        Else
                            _RowEntidad = _Mensaje.Tag
                        End If

                    End If

                End If


                If _Mostrar_Mensaje_Deuda Then

                    _Bloqueada = _RowEntidad.Item("BLOQUEADO")

                    If _Tido = "COV" Then

                        If _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Configuracion", "Las_Cotizaciones_No_Revisan_Permisos") Then

                            Dim _Las_Cotizaciones_No_Revisan_Permisos As Boolean = _Global_Row_Configuracion_General.Item("Las_Cotizaciones_No_Revisan_Permisos")

                            If _Las_Cotizaciones_No_Revisan_Permisos Then
                                _Bloqueada = False
                            End If

                        End If

                    End If

                    Dim _Koen = _RowEntidad.Item("Koen")
                    Dim _Suen = _RowEntidad.Item("Suen")

                    If _Bloqueada Then

                        If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Bkp00021", Nothing, _Koen, _Suen) Then
                            Return Nothing
                        End If

                    End If

                    If Not Fx_Entidad_Tiene_Deudas_CtaCte(_Formulario, _RowEntidad, False, False, _Bloqueada) Then

                        MessageBoxEx.Show(Me, "La entidad presenta morosidad" & Environment.NewLine &
                                          "Está situación será evaluada nuevamente al grabar el documento",
                                           "Validación",
                                            MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)

                    End If

                    If Fx_CreditoVigenteVencido(_RowEntidad) Then

                        MessageBoxEx.Show(Me, "La entidad presenta fecha de crédito vigente vencida" & Environment.NewLine &
                                          "Está situación será evaluada nuevamente al grabar el documento",
                                           "Validación",
                                            MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)

                    End If

                    If Not Fx_RevisarProtestos(True, _RowEntidad) Then
                        If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00103", Nothing, _Koen, _Suen) Then
                            Return Nothing
                        End If
                    End If

                End If

            End If

        End If

        If Not IsNothing(_RowEntidad) Then
            If _TblEncabezado.Rows(0).Item("Es_Electronico") And _Tido <> "BLV" Then
                If String.IsNullOrEmpty(_RowEntidad.Item("GIEN").ToString.Trim) Then
                    MessageBoxEx.Show(Me, "EL GIRO DE LA ENTIDAD NO PUEDE ESTAR VACIO" & vbCrLf & vbCrLf &
                                      "DEBE CORREGIR ESTOS DATOS ANTES DE EMITIR UN" & vbCrLf &
                                      "DOCUMENTO TRIBUTARIO ELECTRONICO", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                    _RowEntidad = Nothing
                End If
            End If
        End If

        Return _RowEntidad

    End Function

    Private Sub Grilla_Detalle_KeyDown(sender As System.Object, e As System.Windows.Forms.KeyEventArgs)

        Dim _DatosDeGrillaProcesados As Boolean = False

        Try

            Dim _Cabeza = Grilla_Detalle.Columns(Grilla_Detalle.CurrentCell.ColumnIndex).Name
            Dim _Fila As DataGridViewRow = Grilla_Detalle.CurrentRow

            Dim _Codigo As String = NuloPorNro(_Fila.Cells("Codigo").Value, "")
            Dim _Descripcion As String = NuloPorNro(_Fila.Cells("Descripcion").Value, "")
            Dim _Nuevo_Producto As Boolean = CBool(_Fila.Cells("Nuevo_Producto").Value)

            Dim _Sucursal As String = _Fila.Cells("Sucursal").Value
            Dim _Bodega As String = _Fila.Cells("Bodega").Value

            Dim _Oferta As String = _Fila.Cells("Oferta").Value
            Dim _Es_Padre_Oferta As Boolean = _Fila.Cells("Es_Padre_Oferta").Value
            Dim _Padre_Oferta As String = _Fila.Cells("Padre_Oferta").Value
            Dim _Aplica_Oferta As Boolean = _Fila.Cells("Aplica_Oferta").Value

            Dim _Id = _Fila.Cells("Id").Value
            Dim _Precio = NuloPorNro(_Fila.Cells("Precio").Value, 0)

            Dim _Tict = NuloPorNro(_Fila.Cells("Tict").Value, "")
            Dim _Prct = _Fila.Cells("Prct").Value
            Dim _Tipr = _Fila.Cells("Tipr").Value

            Dim _Rtu = _Fila.Cells("Rtu").Value

            ' Rescato el valor de la cantidad y el precio antes de modificarla
            _Cantidad_Origen = NuloPorNro(_Fila.Cells("Cantidad").Value, 0)
            _Precio_Origen = _Precio

            Dim _CantUd1 = _Fila.Cells("CantUd1").Value
            Dim _CantUd2 = _Fila.Cells("CantUd2").Value
            Dim _UdTrans = _Fila.Cells("UdTrans").Value
            Dim _UnTrans = _Fila.Cells("UnTrans").Value

            Dim _Ud01PR = _Fila.Cells("Ud01PR").Value
            Dim _Ud02PR = _Fila.Cells("Ud02PR").Value

            Dim _Operacion As String = NuloPorNro(_Fila.Cells("Operacion").Value, "")

            Dim _Stock_desde_WMS As Boolean = _Fila.Cells("Stock_desde_WMS").Value

            Dim _Tecla As Keys

            If IsNothing(e) Then
                _Tecla = Keys.Enter
            Else

                If e.KeyData = Keys.Control + Keys.V Then
                    'MessageBox.Show("Se ha pulsado la combinación de teclas Control+V")
                    Sb_Clonar_Fila(_Fila)
                    Return
                End If

                _Tecla = e.KeyValue
            End If

            Dim _Crear_CPr = _Fila.Cells("Crear_CPr").Value

            Dim _BloqEdiConcepDescuento As Boolean
            Dim _BloqEdiConcepRecargo As Boolean

            Try
                _BloqEdiConcepDescuento = _Global_Row_Configuracion_General.Item("BloqEdiConcepDescuento")
                _BloqEdiConcepRecargo = _Global_Row_Configuracion_General.Item("BloqEdiConcepRecargo")
            Catch ex As Exception
                _BloqEdiConcepDescuento = False
                _BloqEdiConcepRecargo = False
            End Try

            'If e.KeyData = e.KeyValue = Keys.ControlKey + e.KeyValue = Keys.V Then
            '    MsgBox("Presionados")
            'End If

            Select Case _Tecla

                Case Keys.Enter

                    If String.IsNullOrEmpty(_Codigo) Then
                        If _Cabeza = "Descripcion" Then
                            Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index).Cells("Codigo")
                            _Cabeza = "Codigo"
                        End If
                    End If

                    If _Cabeza <> "Codigo" And _Cabeza <> "CodFuncionario" And _Cabeza <> "Bodega" Then
                        If String.IsNullOrEmpty(_Codigo) Then
                            Beep()
                            Return
                        End If
                    End If

                    For Each _Fl As DataRow In _TblDetalle.Rows
                        If _Fl.Item("Espuntosvta") Then
                            MessageBoxEx.Show(Me, "Documento contiene concepto de puntos de fidelización" & vbCrLf &
                                                                      "Para poder editar debe quitar el concepto", "Validación", MessageBoxButtons.OK,
                                                                  MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, Me.TopMost)
                            Return
                        End If
                    Next

                    _Fila_Clonada = Fx_Clonar_Fila_Grilla(_Fila)

                    If _Bloquear_Edicion_Detalle Then
                        MessageBoxEx.Show(Me, "Documento bloquedo para su edición", "Validación",
                                          MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxButtons.OK, Me.TopMost)
                        Return
                    End If

                    Dim _Vizado As Boolean = Grilla_Encabezado.Rows(0).Cells("Vizado").Value

                    If _Vizado And
                        _Cabeza <> "DescuentoPorc" And
                        _Cabeza <> "DescuentoValor" And
                        _Cabeza <> "Descripcion" And
                        _Cabeza <> "Bodega" And
                        _Cabeza <> "Lincondest" Then
                        MessageBoxEx.Show(Me, "Documento Visado", "Validación",
                                          MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxButtons.OK, Me.TopMost)
                        Return
                    End If

                    If _Cabeza = "UdTrans" Then

                        Dim _Cantidad As Double = _Fila.Cells("Cantidad").Value

                        If CBool(_Cantidad) And Not String.IsNullOrEmpty(_Codigo) Then
                            Beep()
                            Return
                        End If

                    End If

                    If Fx_Tiene_Oferta(_Cabeza, _Fila) Then
                        e.SuppressKeyPress = False
                        e.Handled = True
                        Return
                    End If

                    Select Case _Cabeza

                        Case "Codigo", "Descripcion"

                            If _Tido <> "BLV" Then

                                If Not Fx_Revisar_encabezado() Then
                                    Return
                                End If

                            End If

                            If _Nuevo_Producto Then

                                If SoloprodEnDoc_CLALIBPR AndAlso
                                    String.IsNullOrWhiteSpace(_TblEncabezado.Rows(0).Item("TblTipoVenta")) AndAlso
                                        String.IsNullOrWhiteSpace(_TblEncabezado.Rows(0).Item("CodTipoVenta")) AndAlso
                                        Not PreVenta AndAlso Not SobreStock Then

                                    MessageBoxEx.Show(Me, "Los productos a vender solo deben ser de un tipo especifico de venta" & vbCrLf &
                                                      "a continuación deberá seleccionar el tipo.", "Tipo de venta", MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, True)

                                    Dim _Mensaje As LsValiciones.Mensajes = Fx_SolicitarTipoVenta()

                                    MessageBoxEx.Show(Me, _Mensaje.Mensaje, _Mensaje.Detalle, MessageBoxButtons.OK, _Mensaje.Icono, MessageBoxDefaultButton.Button1, True)

                                    If Not _Mensaje.EsCorrecto Then Return

                                End If

                                If PreVenta AndAlso Not Fx_ValidarSiTieneContenedor() Then
                                    Return
                                End If

                                If SobreStock AndAlso Not Fx_ValidarSiExistenProductosSobreStock() Then
                                    Return
                                End If

                                Dim _Validar_Lineas_X_Pagina As Boolean = Fx_Validar_Lineas_Por_Documento_VS_Formato(1)

                                If _Validar_Lineas_X_Pagina Then
                                    If String.IsNullOrEmpty(_Codigo) Then
                                        Grilla_Detalle.Columns(_Cabeza).ReadOnly = False
                                        Grilla_Detalle.BeginEdit(True)
                                    End If
                                End If

                            Else


                                Dim _Descripcion_Modificable As Boolean

                                If Convert.ToBoolean(_Prct) Then
                                    If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00079", Nothing, "", "", False) Then
                                        _Descripcion_Modificable = True
                                    End If
                                Else
                                    Dim _Prrg As Boolean = _Sql.Fx_Trae_Dato("MAEPR", "PRRG", "KOPR = '" & _Codigo & "'")
                                    _Descripcion_Modificable = (_Tipr = "SSN" Or _Prrg)
                                End If

                                If _Descripcion_Modificable Then

                                    Dim _Aceptar As Boolean
                                    Dim _Paso_DescripcionProductoLinea = _Descripcion.ToString.Trim
                                    _Aceptar = InputBox_Bk(Me, "Descripción modificable", "Descripción del producto", _Paso_DescripcionProductoLinea, False,, 50)

                                    If _Aceptar Then
                                        _Fila.Cells("Descripcion").Value = _Paso_DescripcionProductoLinea
                                        Sb_Mostrar_Datos_Producto_Activo(False)
                                    End If

                                End If

                            End If

                        Case "SubTotal"

                            Beep()
                            Return

                        Case "Moneda"

                            Dim _Moneda_Det As String = _Fila.Cells("Moneda").Value
                            Dim _Tipo_Cambio As Double = _Fila.Cells("Tipo_Cambio").Value

                            If _Moneda_Det = "" Then
                                Return
                            End If

                            If String.IsNullOrEmpty(_Codigo) Then
                                Beep()
                                Return
                            End If

                            If Convert.ToBoolean(_Prct) Then
                                Beep()
                                Return
                            End If

                            If _Revision_Remota Then
                                MessageBoxEx.Show(Me, "Solo puede editar los precios y descuentos", "Validación",
                                                  MessageBoxButtons.OK,
                                                  MessageBoxIcon.Warning,
                                                  MessageBoxDefaultButton.Button1, Me.TopMost)
                                Return
                            End If

                            Dim _Chk As New Controls.CheckBoxX
                            _Chk.Name = "Chk"
                            _Chk.Text = "Aplicar a todos los productos"
                            _Chk.Checked = False
                            _Chk.Visible = True

                            Dim _Acep As Boolean = InputBox_Bk(Me, "Tasa de cambio", "Modificar tasa de cambio",
                                                               _Tipo_Cambio, False, _Tipo_Mayus_Minus.Normal,, True,
                                                               _Tipo_Imagen.Money1, , _Tipo_Caracter.Moneda, False,, _Chk)

                            If Not _Acep Then
                                Return
                            End If

                            If _Chk.Checked Then

                                For Each _Fl As DataGridViewRow In Grilla_Detalle.Rows
                                    _Fl.Cells("Tipo_Cambio").Value = _Tipo_Cambio
                                    Sb_Procesar_Datos_De_Grilla(_Fl, "Cantidad", True, True)

                                Next

                            Else
                                _Fila.Cells("Tipo_Cambio").Value = _Tipo_Cambio
                                Sb_Procesar_Datos_De_Grilla(_Fila, "Cantidad", True, True)
                            End If

                            _DatosDeGrillaProcesados = True

                        Case "Cantidad"

                            If String.IsNullOrEmpty(_Codigo) Then
                                Beep()
                                Return
                            End If

                            If Convert.ToBoolean(_Prct) Then
                                Beep()
                                Return
                            End If

                            If _Revision_Remota Then
                                MessageBoxEx.Show(Me, "Solo puede editar los precios y descuentos", "Validación",
                                                  MessageBoxButtons.OK,
                                                  MessageBoxIcon.Warning,
                                                  MessageBoxDefaultButton.Button1, Me.TopMost)
                                Return
                            End If

                            'If Not CBool(_Precio) Then

                            '    Consulta_sql = "Select * From MAEPR Where KOPR = '" & _Codigo & "'"
                            '    Dim _Row_Producto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)
                            '    Sb_Traer_Producto_Grilla(_Fila, _Row_Producto, False, _UnTrans, False)

                            'End If


                            If _Stock_desde_WMS Then

                                Dim info As New TaskDialogInfo("Producto especial",
                                                eTaskDialogIcon.Information2,
                                                "Producto con stock desde WMS" & Environment.NewLine & "Peso Variable/Seriado",
                                                Environment.NewLine & "A continuación debera elegir las series para el despacho de estos productos",
                                                eTaskDialogButton.Ok,
                                                eTaskDialogBackgroundColor.Red,
                                                Nothing, Nothing, Nothing, Nothing, Nothing) 'Imagenes_16_16.Images.Item(0))

                                Dim result As eTaskDialogResult = TaskDialog.Show(info)

                                Dim _Aceptar As Boolean

                                Dim Fm As New Frm_Formulario_Stock_Desde_WMS_Seriados(_Ds_Matriz_Documentos, _Fila)
                                Fm.ShowDialog(Me)
                                _Aceptar = Fm.Pro_Aceptar

                                Dim _Cantidad As Double = Fm.Pro_Cant_Ud1

                                Fm.Dispose()
                                If _Aceptar Then
                                    _Fila.Cells("Cantidad").Value = _Cantidad
                                    Sb_Procesar_Datos_De_Grilla(_Fila, "Cantidad", True, True)
                                    _DatosDeGrillaProcesados = True
                                End If

                            Else

                                If _Rtu = 1 And Not _Aplica_Oferta Then

                                    If Fx_ProdConInfo(_Tipr) And Not _Crear_CPr Then
                                        If Not Fr_Alerta_Stock.Visible Then

                                            Fr_Alerta_Stock = New AlertCustom(_Codigo, _UnTrans)
                                            CType(Fr_Alerta_Stock, AlertCustom).Tido = _Tido
                                            ShowLoadAlert(Fr_Alerta_Stock, Me)

                                        End If
                                    End If

                                    Grilla_Detalle.Columns(_Cabeza).ReadOnly = False
                                    Grilla_Detalle.BeginEdit(True)

                                Else

                                    Dim _Aceptado As Boolean
                                    Dim _RtuVariable As Boolean = _Fila.Cells("RtuVariable").Value
                                    Dim _RevisarRtuVariable As Boolean = True

                                    If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Compra Then
                                        _RevisarRtuVariable = False
                                    End If

                                    If PreVenta AndAlso _Tido = "COV" Then

                                        ' Buscar el registro en _Cl_PreVenta_Producto con IdIndex = _Id y asignarlo a _Cl_PreVta
                                        Dim _Zw_PreVenta_StockProd As Zw_PreVenta_StockProd = _Ls_Cl_PreVenta.FirstOrDefault(Function(x) x.IdIndex = _Id)
                                        Dim _CantidadPallet As Double = _Zw_PreVenta_StockProd.Cantidad

                                        Dim FmPl As New Frm_Cantidades_PreVenta
                                        'FmPl.Zw_PreVenta_StockProd = _Zw_PreVenta_StockProd
                                        FmPl.Codigo = _Codigo
                                        FmPl.Rtu = _Rtu
                                        FmPl.Rtu_Ori = _Rtu
                                        FmPl.UnTrans = _UnTrans
                                        FmPl.Cantidad_Original = _CantidadPallet
                                        FmPl.Tido = _Tido
                                        FmPl.RevisarRtuVariable = False
                                        FmPl.Cantidad_Ud1 = _CantUd1
                                        FmPl.Cantidad_Ud2 = _CantUd2
                                        'FmPl.Aceptado
                                        ' FmPl.Zw_PreVenta_StockProd = _Zw_PreVenta_StockProd
                                        FmPl.TopMost = True
                                        FmPl.ShowDialog(Me)
                                        _Aceptado = FmPl.Aceptado
                                        FmPl.Dispose()

                                        If Not _Aceptado Then
                                            '_Zw_PreVenta_StockProd.Cantidad = _CantidadPallet
                                            Return
                                        End If

                                        _CantidadPallet = _Zw_PreVenta_StockProd.Cantidad
                                        _CantUd1 = _CantidadPallet * _Zw_PreVenta_StockProd.Ud1XPqte
                                        _CantUd2 = _CantUd1 / _Rtu

                                    End If

                                    Dim Fm As New Frm_Cantidades_Ud_Disintas(_Fila, _Tido)

                                    Fm.Cantidad_Ud1 = _CantUd1
                                    Fm.Cantidad_Ud2 = _CantUd2
                                    Fm.LblUnidad1.Text = _Ud01PR
                                    Fm.LblUnidad2.Text = _Ud02PR
                                    Fm.TopMost = True
                                    Fm.RtuVariable = _RtuVariable
                                    Fm.RevisarRtuVariable = _RevisarRtuVariable
                                    Fm.DesdeContenedor = PreVenta
                                    Fm.IdCont = _TblEncabezado.Rows(0).Item("IdCont")
                                    Fm.Chk_DesacRazTransf.Checked = _Fila.Cells("DesacRazTransf").Value

                                    If PreVenta AndAlso _Tido = "COV" Then
                                        Fm.Aceptado = True
                                    Else
                                        Fm.ShowDialog(Me)
                                    End If

                                    _RtuVariable = Fm.RtuVariable

                                    Dim _DesacRazTransf As Boolean = Fm.Chk_DesacRazTransf.Checked

                                    _Fila.Cells("RtuVariable").Value = _RtuVariable
                                    _Fila.Cells("DesacRazTransf").Value = _DesacRazTransf

                                    If _DesacRazTransf Then

                                        Dim _Msj As String = "Si no dispone del permiso necesario para guardar un documento con pesos " &
                                                             "variables y modificar la condición para desactivar la razón de transformación, " &
                                                             "se solicitará dicho permiso al finalizar el documento para completar la acción."

                                        Chk_Pickear.Checked = False

                                        If _Global_Row_Configuracion_General.Item("NuncaPickeaDocConRTUDesactivada") And Chk_Pickear.Enabled Then
                                            Chk_Pickear.Enabled = False
                                            _Msj += vbCrLf & vbCrLf & "Según la configuración General el sistema no permite Pickear documentos que tengan productos que tengan razón de transformación desactivada." & vbCrLf & "El checkbox de ""Pickear documento"" será deshabilitado."
                                        End If

                                        _Msj = Fx_AjustarTexto(_Msj, 80)

                                        If Not _AvisoCambioRTUVariable Then
                                            MessageBoxEx.Show(Me, _Msj, "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                                        End If

                                        _AvisoCambioRTUVariable = True

                                    End If

                                    If _RtuVariable And CBool(Fm.Cantidad_Ud1 + Fm.Cantidad_Ud2) Then
                                        _Fila.Cells("Rtu").Value = Math.Round(Fm.Cantidad_Ud1 / Fm.Cantidad_Ud2, 5)
                                    End If

                                    Dim _No_Permite_Superar_Cantidad_Original As Boolean
                                    Dim _Tidopa As String = _Fila.Cells("Tidopa").Value
                                    Dim _Nudopa As String = _Fila.Cells("Nudopa").Value

                                    Select Case _Tidopa

                                        Case "FCV", "BLV", "GDV", "GDP", "NVV"
                                            If _Tido <> _Tidopa Then
                                                _No_Permite_Superar_Cantidad_Original = True
                                            End If

                                    End Select

                                    Dim _Cantidad_Dori As Double = NuloPorNro(_Fila.Cells("CantUd1_Dori").Value, 0)

                                    If _Cabeza = "Cantidad" And _No_Permite_Superar_Cantidad_Original Or _Vizado Then

                                        If _Cantidad_Dori < Fm.Cantidad_Ud1 Then

                                            If Fr_Alerta_Stock.Visible Then
                                                Fr_Alerta_Stock.Close()
                                            End If

                                            MessageBoxEx.Show(Me, "No puede sobrepasar la cantidad indicada en el documento relacionado", "Validación",
                                                          MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)

                                            Return

                                        End If

                                    End If

                                    _Aceptado = Fm.Aceptado

                                    If Not _Aceptado Then
                                        Return
                                    End If

                                    _Fila.Cells("CantUd1").Value = Fm.Cantidad_Ud1
                                    _Fila.Cells("CantUd2").Value = Fm.Cantidad_Ud2

                                    If _UnTrans = 1 Then
                                        _Fila.Cells("Cantidad").Value = Fm.Cantidad_Ud1
                                    Else
                                        _Fila.Cells("Cantidad").Value = Fm.Cantidad_Ud2
                                    End If

                                    If Fr_Alerta_Stock.Visible Then
                                        Fr_Alerta_Stock.Close()
                                    End If

                                    Dim _TblMaedtli As DataTable = Fx_Crea_Tabla_Con_Filtro(_Ds_Matriz_Documentos.Tables("Descuentos_Doc"), "Id = " & _Id, "Id")

                                    _Fila.Cells("Recargo_Campo").Value = String.Empty
                                    _Fila.Cells("Recargo_Valor").Value = 0

                                    Sb_Procesar_Datos_De_Grilla(_Fila, "Cantidad", True, True)
                                    _DatosDeGrillaProcesados = True

                                    Dim _Cantidad = NuloPorNro(_Fila.Cells("Cantidad").Value, 0)

                                    If CBool(_Cantidad) Then

                                        If Not CBool(_TblMaedtli.Rows.Count) Then
                                            Sb_Traer_Descuentos_Seteados_Desde_Lista(_Fila)
                                            _TblMaedtli = Fx_Crea_Tabla_Con_Filtro(_Ds_Matriz_Documentos.Tables("Descuentos_Doc"), "Id = " & _Id, "Id")
                                        End If

                                        ' VOLVEMOS A RECALCULAR LOS DESCUENTOS
                                        If ChkValores.Checked Then
                                            _Precio = _Fila.Cells("ValNetoLinea").Value() + _Fila.Cells("DsctoNeto").Value()
                                        Else
                                            _Precio = _Fila.Cells("ValBrutoLinea").Value + _Fila.Cells("DsctoBruto").Value()
                                        End If

                                        Dim _Total_Descuento As Double = 0
                                        Dim _NroDsctos As Integer

                                        Eliminar_Campos(_Ds_Matriz_Documentos.Tables("Descuentos_Doc"), _Id)

                                        Dim _Decimal As Integer

                                        If ChkValores.Checked Then
                                            _Decimal = 1
                                        Else
                                            _Decimal = 0
                                        End If

                                        For Each _Fila_Dscto As DataRow In _TblMaedtli.Rows

                                            Dim _Podt As Double = _Fila_Dscto.Item("Podt_Original")
                                            Dim _Podt_Original As Double = Math.Round(_Fila_Dscto.Item("Podt_Original"), 5)
                                            Dim _Vadt As Double = Math.Round((_Podt / 100) * _Precio, 1)

                                            Dim _TblDsctos = _Ds_Matriz_Documentos.Tables("Descuentos_Doc").Select("Id = " & _Id)
                                            Dim _Valor = _Precio - _Total_Descuento

                                            If _Podt > 0 Then

                                                _Vadt = Math.Round((_Podt / 100) * _Valor, _Decimal)

                                                If Chk_Redondear_Cero.Checked Then _Vadt = Fx_Redondeo_Descuento(_Vadt, Chk_Redondear_Cero.Checked)

                                                _Podt = Math.Round((_Vadt / _Valor) * 100, 5)

                                                Dim NewFila As DataRow
                                                NewFila = _Ds_Matriz_Documentos.Tables("Descuentos_Doc").NewRow

                                                With NewFila
                                                    .Item("Id") = _Id
                                                    .Item("Podt") = _Podt
                                                    .Item("Vadt") = _Vadt
                                                    .Item("Podt_Original") = _Podt_Original
                                                    _Ds_Matriz_Documentos.Tables("Descuentos_Doc").Rows.Add(NewFila)
                                                End With

                                            End If

                                            _Total_Descuento += _Vadt
                                            _NroDsctos += 1

                                        Next

                                        _Total_Descuento = Math.Round(_Total_Descuento)

                                        _Fila.Cells("DescuentoValor").Value = Math.Round(_Total_Descuento, 0)
                                        _Fila.Cells("NroDscto").Value = _NroDsctos

                                        Dim _Recargo_Valor As Double = _Fila.Cells("Recargo_Valor").Value

                                        If CBool(_Recargo_Valor) Then
                                            Sb_Procesar_Datos_De_Grilla(_Fila, "Cantidad", False, False)
                                        End If

                                        If CBool(_Total_Descuento) Then
                                            Sb_Procesar_Datos_De_Grilla(_Fila, "DescuentoValor", False, False)
                                        End If

                                        _DatosDeGrillaProcesados = True

                                        '' Aca Incorporar funcion para OFERTAS

                                        If _Aplica_Oferta Then

                                            Sb_Editar_Oferta(_Fila)

                                        Else

                                            If Not String.IsNullOrEmpty(_Oferta) Then

                                                Consulta_sql = "Select * From MAEERES Where TIPORESE In ('OFE','OFD') And CODIGO = '" & _Codigo & "'"
                                                Dim _Row_Maeeres As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                                                Dim _Cantidad_Oferta As Double = _Row_Maeeres.Item("CANTIDAD")

                                                If _Cantidad_Oferta <= _Cantidad Then

                                                    Sb_Insertar_Oferta(_Fila)

                                                Else

                                                    _Fila.Cells("Aplica_Oferta").Value = False

                                                End If

                                            End If

                                        End If

                                    End If

                                End If

                                Sb_Recalcular_Descuentos(_Fila, False, False)

                                If String.IsNullOrEmpty(_Tict) Then

                                    Dim _Idmaeedo_Dori As Integer = _Fila.Cells("Idmaeedo_Dori").Value

                                    If Not _Aplica_Oferta And _Idmaeedo_Dori = 0 Then
                                        Sb_Borrar_Conceptos_Descuento()
                                    End If

                                End If

                            End If

                        Case "Precio"

                            If Convert.ToBoolean(_Prct) Then
                                Beep()
                                Return
                            End If

                            If _Cantidad_Origen = 0 Then
                                Beep()
                                ToastNotification.Show(Me, "FALTA CANTIDAD", My.Resources.cross,
                                                      1 * 1000, eToastGlowColor.Red, eToastPosition.MiddleCenter)
                                Return
                            End If

                            If String.IsNullOrEmpty(_Tict) Then

                                If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Then

                                    Dim _CodEntidad As String = _TblEncabezado.Rows(0).Item("CodEntidad")
                                    Dim _CodSucEntidad As String = _TblEncabezado.Rows(0).Item("CodSucEntidad")

                                    Dim _Permiso As String = "Bkp00012"

                                    If _Tido = "COV" Then
                                        _Permiso = "Doc00075"
                                    End If

                                    If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, _Permiso, _Ds_Matriz_Documentos, _CodEntidad, _CodSucEntidad, True) Then
                                        'MessageBoxEx.Show(Me, "Usted no posee permiso para realizar esta acción" & vbCrLf &
                                        '                  "Sin embargo podra hacer el cambio de precios, pero" & vbCrLf &
                                        '                  "se solicitara el permiso al grabar el documento",
                                        '                  "Cambiar precios del producto",
                                        '                  MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                                        Grilla_Detalle.Columns(_Cabeza).ReadOnly = False
                                        Grilla_Detalle.BeginEdit(True)
                                    End If

                                ElseIf _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Compra Then

                                    If Not String.IsNullOrEmpty(_Operacion) Then

                                        Dim _Aceptar As Boolean

                                        Dim Fm As New Frm_Formulario_Potencia(_Fila)
                                        Fm.ShowDialog(Me)
                                        _Aceptar = Fm.Aceptar
                                        Fm.Dispose()

                                        If _Aceptar Then
                                            Sb_Procesar_Datos_De_Grilla(_Fila, "Precio", False, False)
                                            _DatosDeGrillaProcesados = True
                                        End If

                                    Else
                                        Grilla_Detalle.Columns(_Cabeza).ReadOnly = False
                                        Grilla_Detalle.BeginEdit(True)
                                    End If
                                Else
                                    Grilla_Detalle.Columns(_Cabeza).ReadOnly = False
                                    Grilla_Detalle.BeginEdit(True)
                                End If
                                'Return
                            Else
                                Beep()
                                Return
                                'e.Cancel = True
                            End If

                        Case "DescuentoPorc", "DescuentoValor"

                            Dim _Tidopa = _Fila.Cells("Tidopa").Value
                            Dim _Idmaeddo_Dori = _Fila.Cells("Idmaeddo_Dori").Value

                            If _Cantidad_Origen = 0 And String.IsNullOrEmpty(_Tict) Then
                                Beep()
                                ToastNotification.Show(Me, "ThenFALTA CANTIDAD", My.Resources.cross,
                                                       1 * 1000, eToastGlowColor.Red, eToastPosition.MiddleCenter)
                                Return
                            End If

                            If _Precio = 0 And String.IsNullOrEmpty(_Tict) Then
                                Beep()
                                ToastNotification.Show(Me, "FALTA PRECIO", My.Resources.cross,
                                                       1 * 1000, eToastGlowColor.Red, eToastPosition.MiddleCenter)
                                Return
                            End If

                            If CBool(_Prct) Then

                                Dim _Permitir As Boolean
                                Dim _Koen = _TblEncabezado.Rows(0).Item("CodEntidad")
                                Dim _Suen = _TblEncabezado.Rows(0).Item("CodSucEntidad")

                                Consulta_sql = "Select * From TABCT" & vbCrLf &
                                               "Left Join " & _Global_BaseBk & "Zw_Conceptos On KOCT = Koct" & vbCrLf &
                                               "Where KOCT = '" & _Codigo & "'"
                                Dim _RowConcepto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                                If _Tict = "D" Then
                                    _Permitir = True
                                    If _BloqEdiConcepDescuento Or _RowConcepto.Item("NoPermitirModificarValor") Then
                                        _Permitir = Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00043", _Ds_Matriz_Documentos, _Koen, _Suen)
                                    End If
                                End If

                                If _Tict = "R" And _Cabeza = "DescuentoPorc" Then
                                    _Permitir = True
                                    If _BloqEdiConcepRecargo Or _RowConcepto.Item("NoPermitirModificarValor") Then
                                        _Permitir = Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00044", _Ds_Matriz_Documentos, _Koen, _Suen)
                                    End If
                                End If

                                If _Permitir Then

                                    Grilla_Detalle.Columns(_Cabeza).ReadOnly = False
                                    Grilla_Detalle.BeginEdit(True)

                                End If

                            Else

                                If Fx_Revisar_Si_Hay_Descuentos() = Enum_Descuento.Gloabales Then
                                    MessageBoxEx.Show(Me, "Exiten descuentos globales, no es posible modificar este campo",
                                                      "Acción denegada",
                                                      MessageBoxButtons.OK,
                                                      MessageBoxIcon.Stop,
                                                      MessageBoxDefaultButton.Button1, Me.TopMost)
                                    Return
                                End If

                                Dim _numRecord As Integer = _Ds_Matriz_Documentos.Tables("Descuentos_Doc").Compute("Count(Podt)",
                                                                                         "Id = " & _Id & " And Podt <> 0")


                                If _numRecord > 0 Then

                                    If ChkValores.Checked Then
                                        _Precio = _Fila.Cells("ValNetoLinea").Value
                                    Else
                                        _Precio = _Fila.Cells("ValBrutoLinea").Value
                                    End If

                                    'cambie esto OJO !!!
                                    _Precio += _Fila.Cells("DescuentoValor").Value - _Fila.Cells("Recargo_Valor").Value

                                    Dim _Cantidad As Double = NuloPorNro(_Fila.Cells("Cantidad").Value, 0)
                                    Dim _DescMaximo As Double = _Fila.Cells("DescMaximo").Value

                                    Dim _DsctoValor As Double
                                    Dim _NroDsctos As Integer

                                    Dim _No_Aplica_Redondeo As Boolean = _Fila.Cells("No_Aplica_Redondeo").Value
                                    Dim _Aplicar_Redondeo As Boolean = Chk_Redondear_Cero.Checked

                                    If _No_Aplica_Redondeo Then _Aplicar_Redondeo = False

                                    Dim Fm As New Frm_Formulario_Descuentos(_Ds_Matriz_Documentos, _Fila, _Precio)
                                    Fm.Pro_Redondear_Dscto = _Aplicar_Redondeo
                                    Fm.ShowDialog(Me)
                                    _DsctoValor = Fm.Pro_Total_Descuento
                                    _NroDsctos = Fm.Pro_NroDscto
                                    Fm.Dispose()

                                    If Not _Vizado Then

                                        _Fila.Cells("DescuentoValor").Value = _DsctoValor
                                        _Fila.Cells("NroDscto").Value = _NroDsctos

                                        If _DsctoValor = 0 Then
                                            Grilla_Detalle.EndEdit()
                                        End If

                                        Sb_Procesar_Datos_De_Grilla(_Fila, "DescuentoValor", True, True)
                                        _DatosDeGrillaProcesados = True

                                        If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Then

                                            Dim _desc = _Fila.Cells("DescuentoPorc").Value

                                            If _Tict = "D" Then

                                                Fx_Validar_Descuentos_Globales(False, True)

                                            End If

                                        End If

                                    End If

                                Else
                                    Grilla_Detalle.Columns(_Cabeza).ReadOnly = False
                                    Grilla_Detalle.BeginEdit(True)
                                End If
                            End If

                        Case "CodFuncionario"

                            If _Fila.Cells("Cantidad").Value = 0 Then

                                Dim _Koen = _RowEntidad.Item("KOEN")
                                Dim _Suen = _RowEntidad.Item("SUEN")

                                If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Bkp00040", _Ds_Matriz_Documentos, _Koen, _Suen) Then

                                    Dim _Kofuen As String = LTrim(_RowEntidad.Item("KOFUEN"))

                                    If _Global_Row_Configuracion_General.Item("PermisoEspecialCambioVendedorLinea") Then
                                        If Not String.IsNullOrEmpty(_TblDetalle.Rows(0).Item("Codigo")) Then
                                            MessageBoxEx.Show(Me, "Hay detalles en el documento, no puede cambiar al vendedor de la línea" & vbCrLf &
                                                              "Debe quitar el detalle y luego cambiar al vendedor", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                                            Return
                                        End If
                                        Sb_Cambiar_Vendedor(True)
                                        If _Kofuen <> _CodVendedor Then
                                            Dim _VendedorAsociado As String = _Sql.Fx_Trae_Dato("TABFU", "NOKOFU", "KOFU = '" & _Kofuen & "'").ToString.Trim
                                            MessageBoxEx.Show(Me, "El cambio de vendedor requiere un permiso especial, el cual puede ser otorgado" & vbCrLf &
                                                              "por el usuario " & _Kofuen & " - " & _VendedorAsociado & " o por cualquier otro usuario que cuente con el permiso correspondiente." & vbCrLf &
                                                              "Este permiso será evaluado al momento de grabar el documento.",
                                                              "Información", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                                        End If
                                    Else
                                        If _Kofuen <> _CodVendedor Then
                                            Sb_Cambiar_Vendedor(False)
                                        Else
                                            MessageBoxEx.Show(Me, "No es posible cambiar al vendedor asignado a la entidad",
                                                            "Validación",
                                                            MessageBoxButtons.OK,
                                                            MessageBoxIcon.Stop,
                                                            MessageBoxDefaultButton.Button1, Me.TopMost)
                                        End If
                                    End If

                                End If
                            Else
                                MessageBoxEx.Show(Me, "La cantidad debe estar en cero para poder cambiar el vendedor",
                                                  "Validación",
                                                  MessageBoxButtons.OK,
                                                  MessageBoxIcon.Stop,
                                                  MessageBoxDefaultButton.Button1, Me.TopMost)

                            End If

                        Case "Bodega"

                            Grilla_Detalle.Enabled = False

                            If String.IsNullOrEmpty(_Codigo) Then

                                Dim _Permiso_Bodega As String

                                If _Vizado Then
                                    _Permiso_Bodega = "Bkp00059"
                                Else
                                    _Permiso_Bodega = "Bkp00045"
                                End If

                                If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, _Permiso_Bodega, Nothing) Then

                                    Dim Fm_b As New Frm_SeleccionarBodega(Frm_SeleccionarBodega.Accion.Bodega)
                                    Fm_b.Pro_Empresa = ModEmpresa_Doc
                                    Fm_b.Pro_Sucursal = _Sucursal
                                    Fm_b.Pro_Bodega = _Bodega
                                    Fm_b.ShowDialog(Me)

                                    Dim _Bodega_Seleccionada = Fm_b.Pro_Seleccionado
                                    Dim _RowBodega = Fm_b.Pro_RowBodega
                                    Dim _Empresa_Sel = _RowBodega.Item("EMPRESA")
                                    Dim _Sucursal_Sel = _RowBodega.Item("KOSU")
                                    Dim _Bodega_Sel = _RowBodega.Item("KOBO")
                                    Dim _Permiso = "Bo" & _Empresa_Sel & _Sucursal & _Bodega

                                    Fm_b.Dispose()

                                    If Fm_b.Pro_Seleccionado Then

                                        _Fila.Cells("Sucursal").Value = _Sucursal_Sel
                                        _Fila.Cells("Bodega").Value = _Bodega_Sel
                                        Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index).Cells("Codigo")

                                    End If

                                End If

                            Else
                                Fx_Cambiar_Bodega_Linea_Activa(_Fila)
                            End If

                            Grilla_Detalle.Enabled = True
                            Grilla_Detalle.Focus()

                        Case "ValNetoLinea", "ValBrutoLinea"

                            If Convert.ToBoolean(_Prct) Then

                                If _Tict = "R" Then

                                    Dim _Recargo_Distribuido As Boolean = _Fila.Cells("Recargo_Distribuido").Value

                                    If _Tido = "OCC" And _Recargo_Distribuido Then

                                        Dim _Grabar As Boolean
                                        Dim _Valor_Recargo As Double = _Fila.Cells("ValNetoLinea").Value

                                        Dim Fm As New Frm_RecargosXProd(_Ds_Matriz_Documentos, _Fila)
                                        Fm.Valor_Recargo = _Valor_Recargo
                                        Fm.ShowDialog(Me)
                                        _Grabar = Fm.Grabar
                                        _Valor_Recargo = Fm.Valor_Recargo
                                        _Recargo_Distribuido = Fm.Recargo_Distribuido
                                        Fm.Dispose()

                                        If _Grabar Then
                                            _Fila.Cells("ValNetoLinea").Value = _Valor_Recargo
                                            _Fila.Cells("Recargo_Distribuido").Value = _Recargo_Distribuido
                                            Sb_Procesar_Datos_De_Grilla(_Fila, _Cabeza, False, False, True)
                                            _DatosDeGrillaProcesados = True
                                        End If

                                    Else

                                        Dim _Permitir = True

                                        If _BloqEdiConcepRecargo Then _Permitir = Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00044", Nothing)

                                        If _Permitir Then

                                            Grilla_Detalle.Columns(_Cabeza).ReadOnly = False
                                            Grilla_Detalle.BeginEdit(True)

                                        End If

                                    End If

                                End If

                            End If

                        Case "Centro_Costo"

                            Dim _Centro_Costo As String
                            Dim _DCentro_Costo As String

                            If Fx_Buscar_Centro_De_Costo(_Centro_Costo, _DCentro_Costo) Then

                                _Fila.Cells("Centro_Costo").Value = _Centro_Costo

                                If String.IsNullOrEmpty(Trim(_TblEncabezado.Rows(0).Item("Centro_Costo"))) Then

                                    If MessageBoxEx.Show(Me, "¿Desea incorporar el centro de costo: " & _DCentro_Costo & Environment.NewLine &
                                                        "en el encabezado del documento?", "Centro de costo", MessageBoxButtons.YesNo, MessageBoxIcon.Question,
                                                        MessageBoxDefaultButton.Button1, Me.TopMost) = DialogResult.Yes Then

                                        _TblEncabezado.Rows(0).Item("Centro_Costo") = _Centro_Costo

                                    End If

                                End If

                            End If

                        Case "Proyecto"

                            Dim _Proyecto As String
                            Dim _DProyecto As String

                            If Fx_Buscar_Proyecto(_Proyecto, _DProyecto) Then
                                _Fila.Cells("Proyecto").Value = _Proyecto
                            End If

                        Case "UdTrans"

                            If Not _Nuevo_Producto Then

                                Dim _Unidad1 As String = _Fila.Cells("Ud01PR").Value
                                Dim _Unidad2 As String = _Fila.Cells("Ud02PR").Value

                                Dim _Cantidad As Double = _Fila.Cells("Cantidad").Value
                                Dim _Cantidad_Ud1 = _Fila.Cells("CantUd1").Value
                                Dim _Cantidad_Ud2 = _Fila.Cells("CantUd2").Value

                                If Not CBool(_Cantidad) Then

                                    If _Rtu <> 1 Then

                                        'Dim _TipoDoc As String = String.Empty

                                        'If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Compra Then
                                        '    _TipoDoc = "Comprar"
                                        'ElseIf _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Then
                                        '    _TipoDoc = "Vender"
                                        'Else
                                        '    _TipoDoc = "Cant."
                                        'End If

                                        Grilla_Detalle.Focus()

                                        Dim _Seleccionada As Boolean

                                        Dim Fm As New Frm_Cantidades_Selec_Ud(_Fila.Cells("Ud01PR").Value, _Fila.Cells("Ud02PR").Value)
                                        Fm.ShowDialog(Me)
                                        _Seleccionada = Fm.Seleccionada
                                        _UnTrans = Fm.UnTrans
                                        Fm.Dispose()

                                        If _Seleccionada Then
                                            Sb_Cambiar_Unidad_De_Medida(_Fila, _UnTrans)
                                        End If

                                        Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index).Cells("Cantidad")

                                    End If

                                End If

                            End If

                        Case "Lincondest"

                            If Not CBool(_Prct) Then

                                If _Tido = "BLV" Or _Tido = "FCV" Then

                                    Dim _Tidopa As String = _Fila.Cells("Tidopa").Value

                                    If _Tidopa.Contains("G") Then

                                        MessageBoxEx.Show(Me, "Este documento proviene desde una guía de despacho, asi que este campo no tiene relevancia",
                                                          "Información", MessageBoxButtons.OK, MessageBoxIcon.Warning)

                                    Else

                                        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00040", Nothing) Then

                                            Dim _Lincondest = _Fila.Cells("Lincondest").Value
                                            Dim _Msg As String

                                            If _Lincondest Then
                                                _Msg = "NO"
                                            Else
                                                _Msg = "SI"
                                            End If

                                            If MessageBoxEx.Show(Me, "¿Confirma cambiar la condición para que la líena " & _Msg & " mueva stock físico?",
                                                     "Movimiento de Stock físico", MessageBoxButtons.YesNo, MessageBoxIcon.Question) = DialogResult.Yes Then
                                                _Fila.Cells("Lincondest").Value = Not _Lincondest
                                            End If

                                        End If

                                    End If

                                End If

                            End If

                        Case "FechaRecepcion"

                            Dim _Grabar As Boolean
                            Dim _FechaSeleccionada As DateTime

                            Dim Fm As New Frm_Seleccionar_Fecha

                            Fm.SolicitarConfirmacionDeFecha = False
                            Fm.ExigeFechaMinima = True
                            Fm.FechaMinima = Now.Date.AddDays(-1)

                            If IsNothing(_Fila.Cells("FechaRecepcion").Value) OrElse
                                String.IsNullOrWhiteSpace(_Fila.Cells("FechaRecepcion").Value?.ToString()) OrElse
                                Not IsDate(_Fila.Cells("FechaRecepcion").Value) Then
                                Fm.FechaDisplay = Now.Date
                            Else
                                Fm.FechaDisplay = _Fila.Cells("FechaRecepcion").Value
                            End If

                            Fm.Dtp_Fecha.Value = Fm.FechaDisplay
                            Fm.Dtp_Hora.Value = Now
                            Fm.MostraFormularioAlCentro = True
                            Fm.SeleccionarHora = False
                            Fm.ShowDialog(Me)

                            _Grabar = Fm.Grabar
                            _FechaSeleccionada = Fm.FechaSeleccionada
                            Fm.Dispose()

                            If _Grabar Then
                                _Fila.Cells("FechaRecepcion").Value = _FechaSeleccionada
                            End If

                            'Grilla_Detalle.Columns(_Cabeza).ReadOnly = False
                            'Grilla_Detalle.BeginEdit(True)

                    End Select

                    If Not IsNothing(e) Then
                        e.SuppressKeyPress = False
                        e.Handled = True
                    End If

                Case Keys.Delete

                    Dim _Eliminar_Fila As Boolean

                    If _Bloquear_Edicion_Detalle Then
                        MessageBoxEx.Show(Me, "Documento bloquedo para su edición", "Validación",
                                          MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxButtons.OK, Me.TopMost)
                        Return
                    End If

                    Select Case _Cabeza

                        Case "Centro_Costo", "Proyecto"

                            If _Nuevo_Producto Then
                                _Fila.Cells(_Cabeza).Value = String.Empty
                            Else
                                If Not String.IsNullOrEmpty(_Fila.Cells(_Cabeza).Value) Then
                                    If MessageBoxEx.Show(Me, "¿Esta seguro de querer quitar el " & Grilla_Detalle.Columns(_Cabeza).HeaderText & "?",
                                                         "Quitar " & Grilla_Detalle.Columns(_Cabeza).HeaderText,
                                                         MessageBoxButtons.YesNo, MessageBoxIcon.Question,
                                                         MessageBoxDefaultButton.Button1, Me.TopMost) = DialogResult.Yes Then
                                        _Fila.Cells(_Cabeza).Value = String.Empty
                                    End If
                                End If
                            End If

                        Case Else

                            If _Nuevo_Producto Then
                                Sb_Eliminar_Fila(_Fila, False)
                            Else

                                If _Revision_Remota Then
                                    Beep()
                                    Return
                                End If

                                Dim _Vizado As Boolean = Grilla_Encabezado.Rows(0).Cells("Vizado").Value

                                If _Vizado Then
                                    MessageBoxEx.Show(Me, "Documento Visado", "Validación",
                                          MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxButtons.OK, Me.TopMost)
                                    Return
                                End If

                                Dim _Cantidad As Double = NuloPorNro(_Fila.Cells("Cantidad").Value, 0)

                                If CBool(_Cantidad) Or CBool(_Prct) Then

                                    If MessageBoxEx.Show(Me, "¿Esta seguro de eliminar la(s) fila(s) seleccionada(s)?",
                                                         "Eliminar fila", MessageBoxButtons.YesNo, MessageBoxIcon.Question,
                                                         MessageBoxDefaultButton.Button1, Me.TopMost) = Windows.Forms.DialogResult.Yes Then

                                        If _Aplica_Oferta Then

                                            Dim _Row_Bx = _TblDetalle.Select("Padre_Oferta = '" & _Padre_Oferta & "'")

                                            If CBool(_Row_Bx.Length) Then

                                                If MessageBoxEx.Show(Me, "La eliminación del registro implica la eliminación del grupo de registros vinculados" & vbCrLf &
                                                                             "Total registros vinculados: " & _Row_Bx.Length & vbCrLf & vbCrLf &
                                                                             "¿Confirma la eliminación?", "Eliminar registro", MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation) = DialogResult.Yes Then

                                                    For Each _Fila_Eli As DataGridViewRow In Grilla_Detalle.Rows

                                                        'Dim _Id_Eli = _Fila_Eli.Cells("Id_DocDet").Value
                                                        Dim _Padre_Oferta_Eli = _Fila_Eli.Cells("Padre_Oferta").Value

                                                        If _Padre_Oferta = _Padre_Oferta_Eli Then

                                                            Dim _Index As Integer = _Fila_Eli.Index
                                                            _Fila_Eli.Cells("Oferta").Value = "Eliminar"

                                                            Eliminar_Campos(_Ds_Matriz_Documentos.Tables("Tbl_Wms"), _Index)

                                                        End If

                                                    Next

                                                    Dim dt As DataTable = DirectCast(Grilla_Detalle.DataSource, DataTable)

                                                    Dim rows() As DataRow = dt.Select("Id <> 0")

                                                    For Each row As DataRow In rows

                                                        Dim _Oferta_Eli As String = row.Item("Oferta")

                                                        If _Oferta_Eli = "Eliminar" Then
                                                            dt.Rows.Remove(row)
                                                        End If

                                                    Next

                                                    dt.AcceptChanges()

                                                    Dim _CodLista = _TblEncabezado.Rows(0).Item("ListaPrecios")

                                                    If Grilla_Detalle.RowCount = 0 Then
                                                        Sb_Nueva_Linea(_CodLista)
                                                        _TblDocumentos_Dori = Nothing
                                                    End If

                                                    Sb_Sumar_Totales()

                                                End If

                                            End If

                                        Else

                                            If Not String.IsNullOrEmpty(_Id) Then
                                                Eliminar_Campos(_Ds_Matriz_Documentos.Tables("Descuentos"), _Id)
                                            End If

                                            _Eliminar_Fila = True

                                            If _Crear_CPr Then
                                                Call Btn_Cpr_Eliminar_Producto_Click(Nothing, Nothing)
                                            Else
                                                Sb_Eliminar_Fila(_Fila, True)
                                                _DatosDeGrillaProcesados = True
                                            End If

                                            Sb_Recalcular_Descuentos(_Fila, False, False)

                                        End If


                                        If Grilla_Detalle.Rows.Count = 1 Then

                                            _Codigo = Grilla_Detalle.Rows(0).Cells("Codigo").Value

                                            If String.IsNullOrEmpty(_Codigo) Then

                                                If _Editar_documento Then

                                                    Dim Cerrar_Doc As New Clas_Cerrar_Documento
                                                    Consulta_sql = "Select * From MAEDDO Where IDMAEEDO = " & _Idmaeedo_Origen
                                                    Dim _Tbl_Origen As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)
                                                    Cerrar_Doc.Fx_Abrir_Documento(_Idmaeedo_Origen, _Tbl_Origen)

                                                    Dim _Row_Maeedo As DataRow = Cerrar_Doc.Pro_Row_Maeedo(_Idmaeedo_Origen)

                                                    Dim _Tido = _Row_Maeedo.Item("TIDO")
                                                    Dim _Nudo = _Row_Maeedo.Item("NUDO")

                                                    MessageBoxEx.Show(Me,
                                                    "El documento ligado será activado nuevamente, ya que se eliminaron todas las filas" & Environment.NewLine & Environment.NewLine &
                                                    "Documento: " & _Tido & " - " & _Nudo,
                                                    "Reactivación de documento ligado", MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, Me.TopMost)

                                                    _Idmaeedo_Origen = 0
                                                    _TblEncabezado.Rows(0).Item("Idmaeedo_Origen") = 0
                                                    _Editar_documento = False
                                                    Sb_Limpiar(ModModalidad_Doc)

                                                Else

                                                    _TblEncabezado.Rows(0).Item("CodUsuario_Permiso_Dscto") = String.Empty
                                                    _TblEncabezado.Rows(0).Item("Fun_Auto_Deuda_Ven") = String.Empty
                                                    _TblEncabezado.Rows(0).Item("Fun_Auto_Stock_Ins") = String.Empty
                                                    _TblEncabezado.Rows(0).Item("Fun_Auto_Cupo_Exe") = String.Empty
                                                    _TblEncabezado.Rows(0).Item("Fun_Auto_Fecha_Des") = String.Empty

                                                    '_Row_PermisosNecesarios.Item("Documento_Autorizado") = False
                                                    _TblEncabezado.Rows(0).Item("Vizado") = False

                                                    For Each _Row As DataGridViewRow In Grilla_Detalle.Rows
                                                        _Row.Cells("CodFunAutoriza").Value = FUNCIONARIO
                                                    Next

                                                    Sb_Marcar_Grilla()
                                                    Sb_Botones_Activos(False, False)

                                                End If

                                            End If

                                        End If

                                        Sb_Marcar_Grilla()

                                    End If

                                Else

                                    If _Crear_CPr Then
                                        Call Btn_Cpr_Eliminar_Producto_Click(Nothing, Nothing)
                                    Else
                                        Sb_Eliminar_Fila(_Fila, True)
                                        _DatosDeGrillaProcesados = True
                                    End If

                                End If

                            End If

                    End Select

                Case Keys.Escape
                    If _Revisando_Situacion_Comercial Then
                        Sb_Revisando_Situacion_Comercial(False)
                    End If
                    Dim a = 0
            End Select

        Catch ex As Exception
        Finally
            If _DatosDeGrillaProcesados Then
                Sb_RevisarListaSuperior()
            End If
        End Try

    End Sub

    Function Fx_Cantidad_PorPalletSobreStock(_IdIndex As Integer,
                                             _Rtu As Double) As LsValiciones.Mensajes

        Dim _Mensaje As New LsValiciones.Mensajes
        Dim _Aceptado As Boolean

        Try

            ' Buscar el registro en _Cl_PreVenta_Producto con IdIndex = _Id y asignarlo a _Cl_PreVta
            Dim _Zw_Prod_SobreStock As Zw_Prod_SobreStock = _Ls_Cl_SobreStock.FirstOrDefault(Function(x) x.IdIndex = _IdIndex)
            'Dim _CantidadPallet As Double = _Zw_Prod_SobreStock.Cantidad

            Dim Fm As New Frm_Cantidades_PreVenta
            Fm.Codigo = _Zw_Prod_SobreStock.Codigo
            Fm.Rtu = _Rtu
            Fm.Rtu_Ori = _Rtu
            Fm.UnTrans = 2
            Fm.Cantidad_Original = _Zw_Prod_SobreStock.Cantidad
            Fm.Tido = _Tido
            Fm.RevisarRtuVariable = False
            Fm.Cantidad = _Zw_Prod_SobreStock.Cantidad
            'FmPl.Cantidad_Ud1 = _CantUd1
            'FmPl.Cantidad_Ud2 = _CantUd2
            'FmPl.Aceptado
            ' FmPl.Zw_PreVenta_StockProd = _Zw_PreVenta_StockProd
            Fm.TopMost = True
            Fm.ShowDialog(Me)
            _Aceptado = Fm.Aceptado
            Fm.Dispose()

            If Not _Aceptado Then
                Throw New System.Exception("Documento no encontrado")
            End If

            '_CantidadPallet = _Zw_Prod_SobreStock.Cantidad
            '_CantUd1 = _CantidadPallet * _Zw_Prod_SobreStock.Ud1XPqte
            '_CantUd2 = _CantUd1 / _Rtu

            _Mensaje.EsCorrecto = True
            _Mensaje.Mensaje = "Cantidad actualizada correctamente"
            _Mensaje.Icono = MessageBoxIcon.Information
            _Mensaje.Detalle = "Cantidad por pallet sobre stock"
            _Mensaje.Tag = Fm

        Catch ex As Exception
            _Mensaje.EsCorrecto = False
            _Mensaje.Mensaje = ex.Message
            _Mensaje.Icono = MessageBoxIcon.Error
            _Mensaje.Detalle = "Cantidad por pallet sobre stock"
            _Mensaje.Tag = Nothing
        End Try

        Return _Mensaje

    End Function

    Function Fx_Revisar_encabezado() As Boolean

        If _RowEntidad Is Nothing Then
            MessageBoxEx.Show(Me, "Falta entidad en el documento",
                              "Validación",
                              MessageBoxButtons.OK,
                              MessageBoxIcon.Stop,
                              MessageBoxDefaultButton.Button1, Me.TopMost)
            Grilla_Encabezado.Focus()
            Grilla_Encabezado.CurrentCell = Grilla_Encabezado.Rows(0).Cells("CodEntidad")
            Return False
        End If

        If String.IsNullOrEmpty(_TblEncabezado.Rows(0).Item("NroDocumento").ToString.Trim) Then
            MessageBoxEx.Show(Me, "Debe indicar un número de documento", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Grilla_Encabezado.Focus()
            Grilla_Encabezado.CurrentCell = Grilla_Encabezado.Rows(0).Cells("NroDocumento")
            Return False
        End If

        If _Documento_Interno Then

            Dim _SucEntidad As String = _RowEntidad.Item("SUEN")

            If String.IsNullOrEmpty(_SucEntidad) Then

                Dim _Msg = String.Empty

                If _Tido = "GRI" Then
                    _Msg = "Debe seleccionar la GTI o GDI para crear este documento." & vbCrLf &
                           "Haga doble clic sobre el código del campo [Entidad] en el encabezado del documento"
                    If Fx_Tiene_Permiso(Me, "NO00013",, False) Then

                        Dim Cl_Permiso As New Class_Permiso_BakApp
                        Dim _Row_Permiso As DataRow = Cl_Permiso.Fx_Row_Traer_Permiso_Sistema("NO00013")
                        Dim _DescripcionPermiso As String = _Row_Permiso.Item("DescripcionPermiso")

                        _Msg = "Restricción: " & "NO00013 - " & _DescripcionPermiso & vbCrLf & vbCrLf & _Msg

                    Else
                        _Msg = String.Empty
                    End If
                End If

                If _Tido = "GTI" Then _Msg = "Debe indicar sucursal de destino del traslado."
                If _Tido = "NVI" Then _Msg = "Debe indicar la bodega que recibira los productos."

                If Not String.IsNullOrEmpty(_Msg) Then

                    MessageBoxEx.Show(Me, _Msg, "Validación",
                                      MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)

                    If _Tido = "NVI" Or _Tido = "GTI" Then
                        Grilla_Encabezado.CurrentCell = Grilla_Encabezado.Rows(0).Cells("CodSucEntidad")
                        Call Grilla_Encabezado_CellDoubleClick(Nothing, Nothing)
                    End If

                    Return False

                End If

            End If

        End If

        Return True

    End Function

    Function Fx_Tiene_Oferta(_Cabeza As String, _Fila As DataGridViewRow) As Boolean

        Dim _Es_Padre_Oferta As Boolean = _Fila.Cells("Es_Padre_Oferta").Value
        Dim _Codigo As String = _Fila.Cells("Codigo").Value
        Dim _Oferta As String = _Fila.Cells("Oferta").Value
        Dim _Padre_Oferta As String = _Fila.Cells("Padre_Oferta").Value
        Dim _Aplica_Oferta As Boolean = _Fila.Cells("Aplica_Oferta").Value

        If _Aplica_Oferta And _Cabeza <> "Lincondest" Then

            If Not String.IsNullOrEmpty(_Padre_Oferta) Then

                Dim _Msg As String

                If _Es_Padre_Oferta Then

                    If _Cabeza = "Cantidad" Or _Cabeza = "DescuentoPorc" Then
                        Return False
                    End If

                    _Msg = "Esta línea es base de un grupo de registros vinculados." & vbCrLf &
                        "No puede ser intervenida más que en su porcentaje de descuento y con el permiso correspondiente." & vbCrLf &
                        "Por la razón indicada si ésta debe ser " & vbCrLf &
                        "modificada en el camino es eliminar la línea y reingresarla." & vbCrLf &
                        "En ese caso se eliminaran automaticamente las líneas relacionadas"
                Else
                    _Msg = "La línea forma parte de un grupo de registros vinculados." & vbCrLf &
                        "No pude ser intervenida." & vbCrLf &
                        "Por la razón indicada si ésta debe ser " & vbCrLf &
                        "modificada en el camino es eliminar la línea y reingresarla." & vbCrLf &
                        "En ese caso se eliminaran automaticamente las líneas relacionadas"
                End If

                MessageBoxEx.Show(Me, _Msg, "Validación", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)

                Return True

            End If

        End If

    End Function

    Sub Sb_Insertar_Oferta(_Fila As DataGridViewRow)

        Dim _Id_Oferta As Integer = _Fila.Cells("Id").Value

        Dim _Codigo As String = _Fila.Cells("Codigo").Value
        Dim _Oferta As String = _Fila.Cells("Oferta").Value
        Dim _CodLista As String = _TblEncabezado.Rows(0).Item("ListaPrecios")
        Dim _Cant As Double = _Fila.Cells("Cantidad").Value
        Dim _CantUd1 As Double = _Fila.Cells("CantUd1").Value
        Dim _CantUd2 As Double = _Fila.Cells("CantUd2").Value

        If Not CBool(_Cant) Then
            Return
        End If

        Consulta_sql = "Select * From MAEERES Where TIPORESE In ('OFE','OFD') And CODIGO = '" & _Codigo & "'"
        Dim _Row_Maeeres As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        Dim _Listas As String = Replace(_Row_Maeeres.Item("LISTAS"), "TABPP", "")
        Dim _Listas_ar = Split(_Listas, "_")
        Dim _ListaPrecios As String = _TblEncabezado.Rows(0).Item("ListaPrecios")
        Dim _Puede_Insertar_Oferta As Boolean

        For Each _Flista As String In _Listas_ar

            If _Flista = _ListaPrecios Then
                _Puede_Insertar_Oferta = True
                Exit For
            End If

        Next

        If _Puede_Insertar_Oferta Then

            If MessageBoxEx.Show(Me, "¿Desea agregar al documento las ofertas del producto?",
                             "Agregar oferta", MessageBoxButtons.YesNo, MessageBoxIcon.Question,
                             MessageBoxDefaultButton.Button1, Me.TopMost) = Windows.Forms.DialogResult.Yes Then

                Dim _Cantidad_Oferta As Double = _Row_Maeeres.Item("CANTIDAD")
                Dim _Concepto As String = _Row_Maeeres.Item("CONCEPTO")

                Consulta_sql = "Select MAEDRES.*,MAEDRES.PORCDESC/100 As Porcentaje,NOKOPR,Case When UD01PR = UDAD Then 1 Else 2 End As UnTrans" & vbCrLf &
                               "From MAEDRES" & vbCrLf &
                               "Inner Join MAEPR On KOPR = ELEMENTO " & vbCrLf &
                               "Where CODIGO = '" & _Codigo & "'"

                Dim _Tbl_Maedres As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

                _Fila.Cells("Id_Oferta").Value = _Id_Oferta
                _Fila.Cells("Es_Padre_Oferta").Value = True
                _Fila.Cells("Padre_Oferta").Value = _Id_Oferta
                _Fila.Cells("Aplica_Oferta").Value = True
                _Fila.Cells("Cantidad_Oferta").Value = _Cantidad_Oferta
                _Fila.Cells("OPERACION").Value = "ofer"

                For Each _FElemento As DataRow In _Tbl_Maedres.Rows

                    Dim _Cantidad_E As Double = _FElemento.Item("CANTIDAD")
                    Dim _Elemento As String = _FElemento.Item("ELEMENTO")
                    Dim _UnTrans As Integer = _FElemento.Item("UnTrans")
                    Dim _Porcdesc As Double = _FElemento.Item("PORCDESC")

                    Dim _CantUd As Double

                    If _UnTrans = 1 Then
                        _CantUd = _CantUd1
                    Else
                        _CantUd = _CantUd2
                    End If

                    If _CantUd < _Cantidad_Oferta Then
                        Return
                    End If

                    Dim _Dif_Division As Double

                    _Dif_Division = Math.Floor(_CantUd / _Cantidad_Oferta)

                    Dim _Cantidad As Double = _Cantidad_E * _Dif_Division

                    Dim _New_Fila As DataGridViewRow

                    Sb_Nueva_Linea(_CodLista)

                    _New_Fila = Grilla_Detalle.Rows(Grilla_Detalle.Rows.Count - 1)

                    Dim _RowProducto As DataRow = Fx_Buscar_Producto(_Elemento, False, False, Nothing, False)

                    Sb_Traer_Producto_Grilla(_New_Fila, _RowProducto, False, _UnTrans, False)

                    _New_Fila.Cells("Id_Oferta").Value = _New_Fila.Cells("Id").Value
                    _New_Fila.Cells("Oferta").Value = _Oferta
                    _New_Fila.Cells("Padre_Oferta").Value = _Id_Oferta
                    _New_Fila.Cells("Cantidad").Value = _Cantidad
                    _New_Fila.Cells("Aplica_Oferta").Value = True
                    _New_Fila.Cells("Porcdesc_Oferta").Value = _Porcdesc
                    _New_Fila.Cells("Cantidad_Oferta").Value = _Cantidad_E

                    _New_Fila.Cells("OPERACION").Value = "ofer"

                    Sb_Procesar_Datos_De_Grilla(_New_Fila, "Cantidad", False, False)

                    If CBool(_Porcdesc) Then

                        Dim _TotalNeto As Double = _New_Fila.Cells("ValNetoLinea").Value
                        Dim _TotalBruto As Double = _New_Fila.Cells("ValBrutoLinea").Value

                        Dim _Hijo_Oferta As Integer = _New_Fila.Cells("Id").Value

                        Sb_Nueva_Linea(_CodLista)

                        _New_Fila = Grilla_Detalle.Rows(Grilla_Detalle.Rows.Count - 1)

                        Dim _Descuento As Double

                        Dim _No_Aplica_Redondeo As Boolean = _New_Fila.Cells("No_Aplica_Redondeo").Value
                        Dim _Aplicar_Redondeo As Boolean = Chk_Redondear_Cero.Checked

                        If _No_Aplica_Redondeo Then _Aplicar_Redondeo = False

                        If ChkValores.Checked Then
                            _Descuento = Math.Round((_Porcdesc / 100) * _TotalNeto, 2)
                        Else
                            _Descuento = Math.Round((_Porcdesc / 100) * _TotalBruto)
                        End If

                        Consulta_sql = "Select * From TABCT Where KOCT = '" & _Concepto & "'"
                        Dim _RowConcepto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                        Sb_Agregar_Concepto(_New_Fila, _RowConcepto)

                        _New_Fila.Cells("DescuentoValor").Value = _Descuento
                        _New_Fila.Cells("Id_Oferta").Value = _New_Fila.Cells("Id").Value
                        _New_Fila.Cells("Oferta").Value = _Oferta
                        _New_Fila.Cells("Padre_Oferta").Value = _Id_Oferta
                        _New_Fila.Cells("Hijo_Oferta").Value = _Hijo_Oferta
                        _New_Fila.Cells("Aplica_Oferta").Value = True
                        _New_Fila.Cells("OPERACION").Value = "ofer"

                        Sb_Procesar_Datos_De_Grilla(_New_Fila, "DescuentoValor", False, False)

                    End If

                Next

                Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(Grilla_Detalle.RowCount - 1).Cells("Codigo")

                Sb_Marcar_Grilla()

                ToastNotification.Show(Me, "DATOS INCORPORADOS CORRECTAMENTE", My.Resources.ok_button,
                                       2 * 1000, eToastGlowColor.Green, eToastPosition.MiddleCenter)

            Else

                _Fila.Cells("Aplica_Oferta").Value = False

            End If

        End If

    End Sub

    Sub Sb_Editar_Oferta(_Fila As DataGridViewRow)

        Dim _Id_Oferta As Integer = _Fila.Cells("Id_Oferta").Value

        Dim _Codigo As String = _Fila.Cells("Codigo").Value
        Dim _Oferta As String = _Fila.Cells("Oferta").Value
        Dim _CodLista As String = _TblEncabezado.Rows(0).Item("ListaPrecios")
        Dim _CantUd1 As Double = _Fila.Cells("CantUd1").Value
        Dim _CantUd2 As Double = _Fila.Cells("CantUd2").Value

        Dim _CantUd1_Dori As Double = _Fila.Cells("CantUd1_Dori").Value

        Dim _Cantidad_Oferta As Double = _Fila.Cells("Cantidad_Oferta").Value

        Dim _Row_Elementos = _TblDetalle.Select("Padre_Oferta = " & _Id_Oferta & " And Es_Padre_Oferta = 0 And Hijo_Oferta = 0", "Id")

        For Each _Fila1 As DataRow In _Row_Elementos

            Dim _Id_Oferta_Elemento As Integer = _Fila1.Item("Id_Oferta")
            Dim _Elemento As String = _Fila1.Item("Codigo")

            Dim _Cantidad As Double = _Fila1.Item("Cantidad_Oferta")
            Dim _Porcdesc As Double = _Fila1.Item("Porcdesc_Oferta")
            Dim _UnTrans As Integer = _Fila1.Item("UnTrans")

            Dim _Oferta1 = _Fila1.Item("Oferta")
            Dim _Padre_Oferta1 = _Fila1.Item("Padre_Oferta")
            Dim _Hijo_Oferta1 = _Fila1.Item("Hijo_Oferta")

            Dim _CantUd As Double

            If _UnTrans = 1 Then
                _CantUd = _CantUd1
            Else
                _CantUd = _CantUd2
            End If

            If _CantUd < _Cantidad_Oferta Then
                Return
            End If

            Dim _Dif_Division As Double

            _Dif_Division = Math.Floor(_CantUd / _Cantidad_Oferta)

            _Cantidad = _Cantidad * _Dif_Division

            For Each _Fila_Elemento As DataGridViewRow In Grilla_Detalle.Rows

                Dim _Id_Oferta_Hijo = _Fila_Elemento.Cells("Id_Oferta").Value

                If _Id_Oferta_Hijo = _Id_Oferta_Elemento Then

                    _Fila_Elemento.Cells("Cantidad").Value = _Cantidad
                    Sb_Procesar_Datos_De_Grilla(_Fila_Elemento, "Cantidad", False, False)

                    For Each _Fila_Descuentos As DataGridViewRow In Grilla_Detalle.Rows

                        Dim _Hijo_Oferta = _Fila_Descuentos.Cells("Hijo_Oferta").Value

                        If _Hijo_Oferta = _Id_Oferta_Elemento Then

                            Dim _Descuento As Double

                            Dim _No_Aplica_Redondeo As Boolean = _Fila_Descuentos.Cells("No_Aplica_Redondeo").Value
                            Dim _Aplicar_Redondeo As Boolean = Chk_Redondear_Cero.Checked
                            Dim _TotalNeto As Double = _Fila_Elemento.Cells("ValNetoLinea").Value
                            Dim _TotalBruto As Double = _Fila_Elemento.Cells("ValBrutoLinea").Value

                            If _No_Aplica_Redondeo Then _Aplicar_Redondeo = False

                            If ChkValores.Checked Then
                                _Descuento = Math.Round((_Porcdesc / 100) * _TotalNeto, 2)
                            Else
                                _Descuento = Math.Round((_Porcdesc / 100) * _TotalBruto)
                            End If

                            _Fila_Descuentos.Cells("DescuentoValor").Value = _Descuento
                            Sb_Procesar_Datos_De_Grilla(_Fila_Descuentos, "DescuentoValor", False, False)

                        End If

                    Next

                End If

            Next

        Next

        'ToastNotification.Show(Me, "DATOS ACTUALIZADOS CORRECTAMENTE", My.Resources.ok_button,
        '               2 * 1000, eToastGlowColor.Green, eToastPosition.BottomCenter)

    End Sub

    Sub Sb_Eliminar_Fila(_Fila As DataGridViewRow, _Sumar_Totales As Boolean)

        Dim _Index As Integer = _Fila.Index

        If _Fila.Cells("ModFechVto").Value Then
            Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, False, True, False)
            MessageBoxEx.Show(Me, "Los vencimientos originales se volvieron a reestablecer", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
        End If


        Grilla_Detalle.Rows.RemoveAt(_Index)

        Dim _CodLista = _TblEncabezado.Rows(0).Item("ListaPrecios")

        Eliminar_Campos(_Ds_Matriz_Documentos.Tables("Tbl_Wms"), _Index)
        Eliminar_Campos(_Ds_Matriz_Documentos.Tables("Maedcr"), _Index)

        If _Cl_DocListaSuperior.UsarVencListaPrecios Then
            _Cl_DocListaSuperior.Sb_EliminarRegistro(_Index)
            If Grilla_Detalle.RowCount = 0 Then
                _Cl_DocListaSuperior.Sb_EliminarTodos()
            End If
        End If

        Sb_Limpiar_Lista_CodBarras()

        If Grilla_Detalle.RowCount = 0 Then

            For Each _Fl As DataRow In _TblPermisos.Rows

                If _Fl.Item("Solicitar_Permiso_Al_Final") Then

                    _Fl.Item("CodPermiso") = String.Empty
                    _Fl.Item("DescripcionPermiso") = String.Empty
                    _Fl.Item("Necesita_Permiso") = False
                    _Fl.Item("Autorizado") = False
                    _Fl.Item("CodFuncionario_Autoriza") = String.Empty
                    _Fl.Item("NroRemota") = String.Empty
                    _Fl.Item("Permiso_Presencial") = False
                    _Fl.Item("Solicitado_Por_Cadena") = False
                    _Fl.Item("PermisoIndependiente") = False
                    _Fl.Item("Solicitar_Permiso_Al_Final") = False

                End If

            Next

            Sb_Nueva_Linea(_CodLista)
            _TblDocumentos_Dori = Nothing

        End If

        If _Sumar_Totales Then

            If Not Fx_Validar_Descuentos_Globales(False, False) Then
                Fx_Validar_Descuentos_Individuales(False, False)
            End If

            Sb_Sumar_Totales()

        End If

        If Grilla_Detalle.Rows.Count - 1 <= _Index Then _Index = Grilla_Detalle.Rows.Count - 1

        Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(_Index).Cells("Cantidad")

        If Grilla_Detalle.Rows(0).Cells("Nuevo_Producto").Value Then
            Btn_UtilizarDetalleOtroDoc.Tag = String.Empty
        End If

        Me.Refresh()
        Grilla_Detalle.RefreshEdit()

    End Sub

    Private Sub Sb_Limpiar_Lista_CodBarras()

        If CBool(_Ds_Matriz_Documentos.Tables("Tbl_Lector_Barra").Rows.Count) Then

            Dim _ListaRows As New List(Of DataRow)

            For Each _Rs As DataRow In _Ds_Matriz_Documentos.Tables("Tbl_Lector_Barra").Rows
                _ListaRows.Add(_Rs)
            Next

            For Each _Rs As DataRow In _ListaRows
                _Ds_Matriz_Documentos.Tables("Tbl_Lector_Barra").Rows.Remove(_Rs)
            Next

            If CBool(_ListaRows.Count) Then
                _ListaCodQRUnicosLeidos = New List(Of CodigosDeBarra.CodigosQRLeidos)
                _ListaCodConDocLeidos = New List(Of CodigosDeBarra.CodigosConDocLeidos)
            End If

        End If

    End Sub

    Private Sub Grilla_Detalle_CellEndEdit(sender As System.Object, e As System.Windows.Forms.DataGridViewCellEventArgs)

        Dim Fm_Espera As Object

        Try

            Me.Enabled = False

            Dim _Cabeza = Grilla_Detalle.Columns(Grilla_Detalle.CurrentCell.ColumnIndex).Name

            Dim _Fila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index)
            Dim _Indice As Integer = Grilla_Detalle.CurrentRow.Index

            Grilla_Detalle.Columns(_Cabeza).ReadOnly = True

            Select Case _Cabeza

                Case "Codigo"

                    Dim _Codigo As String = NuloPorNro(_Fila.Cells("Codigo").Value, "")

                    Consulta_sql = "Select * From TABCT" & vbCrLf &
                                   "Left Join " & _Global_BaseBk & "Zw_Conceptos On KOCT = Koct" & vbCrLf &
                                   "Where KOCT = '" & _Codigo & "'"
                    Dim _RowConcepto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                    If Not (_RowConcepto Is Nothing) Then 'CONCEPTO

                        Dim _Tict = _RowConcepto.Item("TICT")

                        If _Indice = 0 Then

                            If _Tict = "D" Then

                                MessageBoxEx.Show(Me, "No esta permitido ingresar un concepto de descuento antes que los productos",
                                              "Validación", MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, Me.TopMost)
                                _Fila.Cells("Codigo").Value = String.Empty
                                Exit Sub

                            End If

                        End If

                        Dim _Cl_Puntos As New Cl_Puntos
                        _Cl_Puntos.Zw_PtsVta_Configuracion = _Cl_Puntos.Fx_Llenar_Zw_PtsVta_Configuracion(ModEmpresa_Doc)

                        If Not IsNothing(_Cl_Puntos.Zw_PtsVta_Configuracion) AndAlso _Cl_Puntos.Zw_PtsVta_Configuracion.Concepto.Trim = _Codigo.Trim Then
                            MessageBoxEx.Show(Me, "CONCEPTO EXCLUSIVO PARA USO DE PUNTOS EN SISTEMA DE FIDELIZACION DE CLIENTES", "Validación",
                                              MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                            _Fila.Cells("Codigo").Value = String.Empty
                            Exit Sub
                        End If


                        Dim _Bloqueado As Boolean = _RowConcepto.Item("BLOQUEADO")

                        If _Bloqueado Then
                            Beep()
                            ToastNotification.Show(Me, "CONCEPTOR BLOQUEADO PARA USO", My.Resources.cross,
                                                   3 * 1000, eToastGlowColor.Red, eToastPosition.MiddleCenter)

                            _Fila.Cells("Codigo").Value = String.Empty
                            Exit Sub
                        Else

                            If Fx_Revisar_Si_Hay_Descuentos() = Enum_Descuento.Individuales Then

                                Beep()
                                ToastNotification.Show(Me, "HAY DESCUENTOS INDIVIDUALES." & Environment.NewLine &
                                                       "NO PUEDE INCORPORAR DESCUENTOS GLOBALES", My.Resources.cross,
                                                       3 * 1000, eToastGlowColor.Red, eToastPosition.MiddleCenter)

                                Grilla_Detalle.Rows.RemoveAt(_Indice)
                                Me.ActiveControl = Grilla_Detalle
                                Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(0).Cells("Codigo")
                                Return

                            Else

                                If _RowConcepto.Item("NoPermitirMismoConceptoEnDoc") Then
                                    For Each _Fl As DataRow In _TblDetalle.Rows
                                        If _Fl.Item("Codigo") = _Codigo And CBool(_Fl.Item("Prct")) Then
                                            MessageBoxEx.Show(Me, "Este concepto no esta permitido mas de una vez en el documento",
                                                      "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                                            _Fila.Cells("Codigo").Value = String.Empty
                                            Exit Sub
                                        End If
                                    Next
                                End If

                                If Not _Global_Row_Configuracion_General.Item("BloqCambNomCONCEPTOSEnDocumentos") Then
                                    InputBox_Bk(Me, "Descripción", "Concepto", _RowConcepto.Item("NOKOCT"), False,, 50)
                                End If

                                Dim _Mensaje As New LsValiciones.Mensajes

                                _Mensaje = _Cl_Documento.Fx_RevisarDescuentoPremium(_Codigo, _TblDetalle)

                                If _Mensaje.EsCorrecto And Not _Mensaje.Cancelado Then
                                    MessageBoxEx.Show(Me, _Mensaje.Mensaje, _Mensaje.Detalle, MessageBoxButtons.OK, _Mensaje.Icono)
                                Else
                                    If Not _Mensaje.Cancelado Then
                                        MessageBoxEx.Show(Me, _Mensaje.Mensaje, _Mensaje.Detalle, MessageBoxButtons.OK, _Mensaje.Icono)
                                        _Fila.Cells("Codigo").Value = String.Empty
                                        Exit Sub
                                    End If
                                End If

                                Sb_Agregar_Concepto(_Fila, _RowConcepto)

                                If _Mensaje.Tag Then
                                    _Fila.Cells("Condicionado").Value = True
                                End If

                                Dim _Koen = _TblEncabezado.Rows(0).Item("CodEntidad")

                                'Valor de concepto según la entidad
                                Dim _Valor_Concepto = FX_Traer_Valor_Concepto(_RowConcepto, _Koen)

                                If CBool(_Valor_Concepto) Then
                                    _Fila.Cells("DescuentoPorc").Value = _Valor_Concepto
                                    Sb_Procesar_Datos_De_Grilla(_Fila, "DescuentoPorc", False, True, True)
                                Else
                                    Fx_Validar_Descuentos_Globales(False, True)
                                End If

                                ' Esto es para que con un concepto especial el sistema cambie la fecha de vencimiento
                                ' automaticamente si es que el concepto tiene marcada la casilla ModFechVto de la tabla Zw_Conceptos

                                If _Tido = "BLV" Or _Tido = "FCV" Or _Tido = "NVV" Or _Tido = "GDV" Or _Tido = "GDP" Then

                                    If Not IsNothing(_RowConcepto) Then

                                        If _RowConcepto.Item("ModFechVto") Then

                                            _Fila.Cells("ModFechVto").Value = True

                                            Dim _ModFechVto_Dias1erVenci = _RowConcepto.Item("ModFechVto_Dias1erVenci")
                                            Dim _FechaEmision As Date = _TblEncabezado.Rows(0).Item("FechaEmision")

                                            _FechaEmision = DateAdd(DateInterval.Day, _ModFechVto_Dias1erVenci, _FechaEmision)
                                            _TblEncabezado.Rows(0).Item("Fecha_1er_Vencimiento") = _FechaEmision
                                            _TblEncabezado.Rows(0).Item("FechaUltVencimiento") = _FechaEmision
                                            _TblEncabezado.Rows(0).Item("Cuotas") = 0
                                            _TblEncabezado.Rows(0).Item("Dias_1er_Vencimiento") = _ModFechVto_Dias1erVenci
                                            _TblEncabezado.Rows(0).Item("Dias_Vencimiento") = _ModFechVto_Dias1erVenci

                                            MessageBoxEx.Show(Me, "Se cambia la fecha de vencimiento del documento a : " & FormatDateTime(_FechaEmision, DateFormat.ShortDate),
                                                      "Concepto especial", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)

                                        End If

                                    End If

                                End If

                                Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index).Cells("DescuentoPorc")

                            End If

                        End If

                    Else ' PRODUCTO

                        _Codigo = _Codigo.Trim

                        Dim _CodEntidad = _TblEncabezado.Rows(0).Item("CodEntidad")
                        Dim _Es_Concepto As Boolean
                        Dim _CodLista = _Fila.Cells("CodLista").Value

                        Dim _Tbl_Productos_Seleccionados_Multiple As DataTable
                        Dim _EsKit As Boolean = False

                        Dim _RowProducto As DataRow

                        If PreVenta And _Tido = "COV" Then

                            Dim _Cl_PreVenta_Producto As New PreVenta.Cl_PreVenta_Producto
                            _Cl_PreVenta_Producto = Fx_CargarProductoDesdeContenedor()

                            If Not _Cl_PreVenta_Producto.Mensaje.EsCorrecto Then
                                _Fila.Cells("Codigo").Value = String.Empty
                                Return
                            End If

                            _RowProducto = _Cl_PreVenta_Producto.RowProducto

                            Sb_Traer_Producto_A_La_Nueva_Fila(_Fila, _RowProducto, _Indice)

                            If Not String.IsNullOrEmpty(_Fila.Cells("Codigo").Value) Then
                                _Cl_PreVenta_Producto.Zw_PreVenta_StockProd.IdIndex = _Fila.Cells("Id").Value
                                _Ls_Cl_PreVenta.Add(_Cl_PreVenta_Producto.Zw_PreVenta_StockProd)
                                _Fila.Cells("Precio").Value = _Cl_PreVenta_Producto.Zw_PreVenta_StockProd.PrecioXUd1
                            End If

                            Return

                        End If

                        If SobreStock And _Tido = "NVV" Then

                            Dim _Mensaje As New LsValiciones.Mensajes
                            _Mensaje = Fx_CargarProductoDesdeSobreStock()

                            If Not _Mensaje.EsCorrecto Then
                                _Fila.Cells("Codigo").Value = String.Empty
                                Return
                            End If

                            Dim _Zw_Prod_SobreStock As Zw_Prod_SobreStock = _Mensaje.Tag

                            Consulta_sql = "Select * From MAEPR Where KOPR = '" & _Zw_Prod_SobreStock.Codigo & "'"
                            _RowProducto = _Sql.Fx_Get_DataRow(Consulta_sql)

                            Sb_Traer_Producto_A_La_Nueva_Fila(_Fila, _RowProducto, _Indice)

                            If Not String.IsNullOrEmpty(_Fila.Cells("Codigo").Value) Then
                                _Zw_Prod_SobreStock.IdIndex = _Fila.Cells("Id").Value
                                _Ls_Cl_SobreStock.Add(_Zw_Prod_SobreStock)
                                Dim _Valor_Dolar As Double = _TblEncabezado.Rows(0).Item("Valor_Dolar")
                                _Fila.Cells("Precio").Value = Math.Round(_Zw_Prod_SobreStock.PrecioXUd1 * _Valor_Dolar, 5)
                            End If

                            Return

                        End If

                        _RowProducto = Fx_Buscar_Producto(_Codigo, _Es_Concepto, True, _Tbl_Productos_Seleccionados_Multiple, _EsKit)

                        If Not (_RowProducto Is Nothing) Then

                            Sb_Traer_Producto_A_La_Nueva_Fila(_Fila, _RowProducto, _Indice)

                        ElseIf Not IsNothing(_Tbl_Productos_Seleccionados_Multiple) Then

                            Dim _CantKit = 1

                            If _EsKit Then

                                Dim _Aceptar As Boolean = InputBox_Bk(Me, "Registre cantidad para la receta",
                                                                      "Incorporación de productos según receta",
                                                                      _CantKit,
                                                                      False,,, True,
                                                                      _Tipo_Imagen.Product,, _Tipo_Caracter.Solo_Numeros_Enteros, False)

                                If Not _Aceptar Then
                                    _Fila.Cells("Codigo").Value = String.Empty
                                    Return
                                End If

                            End If

                            Fm_Espera = New Frm_Form_Esperar
                            Fm_Espera.BarraCircular.IsRunning = True
                            Fm_Espera.Show()

                            For Each _Fila_Npr As DataRow In _Tbl_Productos_Seleccionados_Multiple.Rows

                                Dim _Nuevo_Producto As Boolean = _Fila.Cells("Nuevo_Producto").Value

                                If Not _Nuevo_Producto Then

                                    Dim _Validar_Lineas_X_Pagina As Boolean = Fx_Validar_Lineas_Por_Documento_VS_Formato(0)

                                    If _Validar_Lineas_X_Pagina Then
                                        Sb_Nueva_Linea(_CodLista)
                                        _Fila = Grilla_Detalle.Rows(Grilla_Detalle.Rows.Count - 1)
                                    Else
                                        Exit For
                                    End If

                                End If

                                _RowProducto = _Fila_Npr
                                _Indice = _Fila.Index

                                Sb_Traer_Producto_A_La_Nueva_Fila(_Fila, _RowProducto, _Indice)

                                _Nuevo_Producto = _Fila.Cells("Nuevo_Producto").Value
                                Sb_Marcar_Fila_Grilla(_Fila)

                                If _EsKit Then

                                    _Fila.Cells("Cantidad").Value = _Fila_Npr.Item("CANTIDAD") * _CantKit
                                    Sb_Procesar_Datos_De_Grilla(_Fila, "Cantidad", True, True)

                                End If

                            Next

                            Return

                        Else

                            If _Es_Concepto Then
                                _Fila.Cells("Codigo").Value = _Codigo
                                Call Grilla_Detalle_CellEndEdit(Nothing, Nothing)
                                Return
                            Else
                                _Fila.Cells("Codigo").Value = String.Empty
                            End If

                        End If

                    End If

                Case "FechaRecepcion"

                    Dim _FechaEmision As Date = _Fila.Cells("FechaEmision").Value
                    Dim _FechaRecepcion As Date = _Fila.Cells("FechaRecepcion").Value

                    If _FechaRecepcion < _FechaEmision Then
                        MessageBoxEx.Show(Me, "La fecha de entrega no puede se menor que la fecha de creación del documento", "Validación",
                                          MessageBoxButtons.OK, MessageBoxIcon.Stop)
                        _Fila.Cells("FechaRecepcion").Value = _FechaEmision
                    End If

                Case Else

                    If _Cabeza = "Bodega" Then

                        Dim _Bodega_Clon As String = NuloPorNro(_Fila_Clonada.Cells(3).Value, Mod_Bodega)

                        Dim _Empresa As String
                        Dim _Sucursal As String
                        Dim _Bodega As String

                        Try
                            _Bodega = NuloPorNro(_Fila.Cells("Bodega").Value, "")
                        Catch ex As Exception
                            _Bodega = String.Empty
                        End Try


                        If _Bodega_Clon <> _Bodega Then

                            Dim _Volver_Bodega_Original As Boolean

                            Consulta_sql = "Select * From TABBO Where KOBO = '" & _Bodega & "'"
                            Dim _TblBodega As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

                            If CBool(_TblBodega.Rows.Count) Then

                                If _TblBodega.Rows.Count = 1 Then
                                    _Empresa = _TblBodega.Rows(0).Item("EMPRESA")
                                    _Sucursal = _TblBodega.Rows(0).Item("KOSU")
                                    _Bodega = _TblBodega.Rows(0).Item("KOBO")
                                Else

                                    Dim _RowBodega As DataRow

                                    Dim Fm_B As New Frm_SeleccionarBodega(Frm_SeleccionarBodega.Accion.Bodega)
                                    Fm_B.Pro_Empresa = ModEmpresa_Doc
                                    Fm_B.Pro_Sucursal = _Sucursal

                                    Fm_B.ShowDialog(Me)
                                    _RowBodega = Fm_B.Pro_RowBodega
                                    Dim _BodSelec As Boolean = Fm_B.Pro_Seleccionado
                                    Fm_B.Dispose()

                                    If _BodSelec Then
                                        _Empresa = _RowBodega.Item("EMPRESA")
                                        _Sucursal = _RowBodega.Item("KOSU")
                                        _Bodega = _RowBodega.Item("KOBO")
                                        _Fila.Cells("Sucursal").Value = _Sucursal
                                        _Fila.Cells("Bodega").Value = _Bodega
                                        Return
                                    Else
                                        _Volver_Bodega_Original = True
                                    End If

                                End If

                            Else
                                MessageBoxEx.Show(Me, "La bodega " & _Bodega & " no existe", "Validación", MessageBoxButtons.OK,
                                                  MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                                _Volver_Bodega_Original = True
                            End If

                            Dim _Permiso = "Bo" & _Empresa & _Sucursal & _Bodega

                            If Not _Volver_Bodega_Original Then
                                If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, _Permiso, Nothing) Then
                                    _Volver_Bodega_Original = True
                                End If
                            End If

                            If _Volver_Bodega_Original Then
                                _Fila.Cells("Bodega").Value = _Bodega_Clon
                            End If

                        End If

                    End If

                    If _Cabeza = "CodFuncionario" Then

                        Consulta_sql = "Select Top 1 * From TABFU Where KOFU = '" & _Fila.Cells("CodFuncionario").Value & "'"
                        Dim _RowVendedor As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                        If _RowVendedor Is Nothing Then

                            Beep()
                            ToastNotification.Show(Me, "NO EXISTE FUNCIONARIO", My.Resources.cross,
                                                   1 * 1000, eToastGlowColor.Red, eToastPosition.MiddleCenter)

                        Else

                            Dim _Kofuen As String = _RowVendedor.Item("KOFU")

                            If Trim(_CodVendedor) <> Trim(_Kofuen) Then

                                Dim _Permiso = "Lp-" & _Fila.Cells("CodLista").Value

                                If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, _Permiso, Nothing) Then
                                    _CodVendedor = _Kofuen

                                    Beep()
                                    ToastNotification.Show(Me, "VENDEDOR CAMBIADO" & Environment.NewLine &
                                                           "VENDEDOR: " & _CodVendedor & "-" & _RowVendedor.Item("NOKOFU"),
                                                           My.Resources.ok_button,
                                                           2 * 1000, eToastGlowColor.Green, eToastPosition.MiddleCenter)

                                End If

                            End If

                        End If

                        _Fila.Cells("CodFuncionario").Value = _CodVendedor
                        Return

                    End If

                    Dim _Codigo As String = _Fila.Cells("Codigo").Value
                    Dim _Cantidad As Double = NuloPorNro(_Fila.Cells("Cantidad").Value, 0)

                    Dim _UnTrans As Integer = NuloPorNro(_Fila.Cells("UnTrans").Value, 0)
                    Dim _Cantidad_Dori As Double = NuloPorNro(_Fila.Cells("CantUd" & _UnTrans & "_Dori").Value, 0)

                    Dim _Precio As Double = NuloPorNro(_Fila.Cells("Precio").Value, 0)

                    Dim _Tidopa As String = _Fila.Cells("Tidopa").Value
                    Dim _Nudopa As String = _Fila.Cells("Nudopa").Value

                    Dim _No_Permite_Superar_Cantidad_Original As Boolean

                    Select Case _Tidopa

                        Case "FCV", "BLV", "GDV", "GDP", "NVV"
                            If _Tido <> _Tidopa Then
                                _No_Permite_Superar_Cantidad_Original = True
                            End If

                    End Select

                    Dim _Vizado As Boolean = Grilla_Encabezado.Rows(0).Cells("Vizado").Value

                    If _Cabeza = "Cantidad" And _No_Permite_Superar_Cantidad_Original Or _Vizado Then

                        If _Cantidad_Dori < _Cantidad Then

                            If Fr_Alerta_Stock.Visible Then
                                Fr_Alerta_Stock.Close()
                            End If

                            MessageBoxEx.Show(Me, "No puede sobrepasar la cantidad indicada en el documento relacionado", "Validación",
                                              MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)

                            _Fila.Cells("Cantidad").Value = _Cantidad_Origen

                            Return

                        End If

                    End If

                    Dim _DscPorc = NuloPorNro(_Fila.Cells("DescuentoPorc").Value, 0)

                    If _Cabeza = "Cantidad" Or _Cabeza = "Precio" Then
                        If _Cantidad_Origen <> 0 Then
                            If _Cantidad = _Cantidad_Origen AndAlso _Precio_Origen = _Precio Then
                                If Fr_Alerta_Stock.Visible Then
                                    Fr_Alerta_Stock.Close()
                                End If
                                Return
                            End If
                        End If
                    End If

                    If _Cantidad < 0 Then _Cantidad = 0

                    Dim _Idmaeddo_Dori = Val(NuloPorNro(_Fila.Cells("Idmaeddo_Dori").Value, 0))

                    If CBool(_Idmaeddo_Dori) Then

                        If _Tido = "OCC" Then 'And _Editar_OCC Then

                            Dim _CantidadUd1 = _Fila.Cells("CantUd1").Value
                            Dim _CantidadUd2 = _Fila.Cells("CantUd2").Value
                            Dim _CDespUd1 = _Fila.Cells("CDespUd1").Value
                            Dim _CDespUd2 = _Fila.Cells("CDespUd2").Value

                            If Not CBool(_Cantidad) Then

                                _Fila.Cells("Cantidad").Value = _Cantidad_Origen
                                _Cantidad = _Cantidad_Origen

                                If Not CBool(_CDespUd1) Then

                                    ToastNotification.Show(Me, "FILA CERRADA", Imagenes_32x32.Images.Item("padlock.png"),
                                                           1 * 1000, eToastGlowColor.Red, eToastPosition.MiddleCenter)
                                End If

                                _Fila.Cells("Estado").Value = "C"
                                _Fila.Cells("CDespUd1").Value = _CantidadUd1
                                _Fila.Cells("CDespUd2").Value = _CantidadUd2
                                _Fila.DefaultCellStyle.ForeColor = Color.Gray
                                _Fila.Cells("Observa").Value = "Cerrado desde BakApp (Modificado)"

                            Else

                                If _Fila.DefaultCellStyle.ForeColor = Color.Gray Then
                                    ToastNotification.Show(Me, "FILA ABIERTA", Imagenes_32x32.Images.Item("padlock-open.png"),
                                                           1 * 1000, eToastGlowColor.Red, eToastPosition.MiddleCenter)
                                End If

                                _Fila.DefaultCellStyle.ForeColor = Color.Black
                                _Fila.Cells("Estado").Value = String.Empty
                                _Fila.Cells("CDespUd1").Value = 0
                                _Fila.Cells("CDespUd2").Value = 0
                                _Fila.Cells("Observa").Value = String.Empty
                            End If

                            If _Fila.DefaultCellStyle.ForeColor <> Color.Gray Then
                                _Fila.Cells(_Cabeza).Style.ForeColor = Color.DodgerBlue
                            End If

                        End If

                        If _Tidopa = "FCV" Or _Tidopa = "GDV" Or _Tidopa = "BLV" Or _Tidopa = "NVV" Or _Tidopa = "GDP" Then

                            Dim _DescuentoPorc_Clon As Double = _Fila_Clonada.Cells(15).Value
                            Dim _DescuentoValor_Clon As Double = _Fila_Clonada.Cells(16).Value

                            Dim _DescuentoPorc As Double = _Fila.Cells("DescuentoPorc").Value
                            Dim _DescuentoValor As Double = _Fila.Cells("DescuentoValor").Value

                            If CBool(_DescuentoPorc_Clon + _DescuentoPorc_Clon) Then

                                If _DescuentoPorc > _DescuentoPorc_Clon Or _DescuentoValor > _DescuentoValor_Clon Then
                                    _Fila.Cells("DescuentoPorc").Value = _DescuentoPorc_Clon
                                    _Fila.Cells("DescuentoValor").Value = _DescuentoValor_Clon

                                    MessageBoxEx.Show(Me, "Valor informado supera saldo de descuento acordado", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                                    Return
                                End If

                            End If

                        End If

                    End If

                    Dim _PrecioLista As Double

                    If ChkValores.Checked Then
                        _PrecioLista = Math.Round(NuloPorNro(_Fila.Cells("PrecioNetoUdLista").Value, 0), 0)
                    Else
                        _PrecioLista = NuloPorNro(_Fila.Cells("PrecioBrutoUdLista").Value, 0)
                    End If

                    Dim _DescMaximo = NuloPorNro(_Fila.Cells("DescMaximo").Value, 0)

                    Dim _Id = _Fila.Cells("Id").Value
                    Dim _TblMaedtli As DataTable = Fx_Crea_Tabla_Con_Filtro(_Ds_Matriz_Documentos.Tables("Descuentos_Doc"), "Id = " & _Id, "Id")

                    Sb_Procesar_Datos_De_Grilla(_Fila, _Cabeza, True, True)

                    _Cantidad = NuloPorNro(_Fila.Cells("Cantidad").Value, 0)

                    If CBool(_Cantidad) And CBool(_Precio) Then

                        If _Cabeza = "Cantidad" And _Idmaeddo_Dori = 0 Then

                            If Not CBool(_TblMaedtli.Rows.Count) Then
                                Sb_Traer_Descuentos_Seteados_Desde_Lista(_Fila)
                                _TblMaedtli = Fx_Crea_Tabla_Con_Filtro(_Ds_Matriz_Documentos.Tables("Descuentos_Doc"), "Id = " & _Id, "Id")
                            End If

                            Dim _Recargo_Valor As Double = _Fila.Cells("Recargo_Valor").Value

                            If CBool(_Recargo_Valor) Then
                                Sb_Procesar_Datos_De_Grilla(_Fila, "Cantidad", False, False)
                            End If

                        End If

                    End If

                    Dim _Tict = NuloPorNro(_Fila.Cells("Tict").Value, "")

                    If String.IsNullOrEmpty(_Tict) Then

                        Dim _Idmaeedo_Dori As Integer = _Fila.Cells("Idmaeedo_Dori").Value

                        If _Idmaeedo_Dori = 0 Then
                            Sb_Borrar_Conceptos_Descuento()
                        Else
                            Sb_Recalcular_Descuentos(_Fila, False, False)
                        End If

                    End If

                    If _Cabeza = "Cantidad" And
                        (_Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Or
                         _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Traslado_Interno Or
                         _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Nota_Venta_Interna Or
                         _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Despacho_Interna Or
                         _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Despacho_Devolucion Or
                         _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Despacho_Consignaciones_GPD_CON Or
                         _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Despacho_Prestamo_GDP_PRE Or
                         _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Devolucion_Consignaciones_GDD_CON Or
                         _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Devolucion_Prestamo_GDD_PRE) Then

                        Dim _Tipr = _Fila.Cells("Tipr").Value
                        Dim _Sucursal = _Fila.Cells("Sucursal").Value
                        Dim _Bodega = _Fila.Cells("Bodega").Value
                        Dim _ValStock = _Fila.Cells("ValVtaStockInf").Value
                        Dim _UdTrans = _Fila.Cells("UdTrans").Value

                        Sb_Revisar_Stock_Fila(_Fila)

                        If (_Cabeza = "DescuentoValor" Or _Cabeza = "DescuentoPorc") And _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Then

                            Dim _desc = _Fila.Cells("DescuentoPorc").Value

                            If _Tict = "D" Then

                                Fx_Validar_Descuentos_Globales(True, False)

                            Else

                                If _DescMaximo < _desc Then
                                    MessageBoxEx.Show(Me, "Descuento Máximo: " & Math.Round(_DescMaximo, 2) & " %" & Environment.NewLine &
                                                      "Descuento asignado: " & Math.Round(_desc, 2) & " %", "Descuento maximo superado",
                                                      MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                                End If

                            End If

                        End If

                    End If

                    If _Cabeza = "Cantidad" Or _Cabeza = "Precio" Then

                        _Cantidad = NuloPorNro(_Fila.Cells("Cantidad").Value, 0)

                        If CBool(_Cantidad) Then

                            ' VOLVEMOS A RECALCULAR LOS DESCUENTOS
                            If ChkValores.Checked Then
                                _Precio = _Fila.Cells("ValNetoLinea").Value() + _Fila.Cells("DsctoNeto").Value()
                            Else
                                _Precio = _Fila.Cells("ValBrutoLinea").Value + _Fila.Cells("DsctoBruto").Value()
                            End If

                            Dim _Total_Descuento As Double = 0
                            Dim _NroDsctos As Integer

                            Eliminar_Campos(_Ds_Matriz_Documentos.Tables("Descuentos_Doc"), _Id)

                            Dim _Decimal As Integer

                            If ChkValores.Checked Then
                                _Decimal = 1
                            Else
                                _Decimal = 0
                            End If

                            For Each _Fila_Dscto As DataRow In _TblMaedtli.Rows

                                Dim _Podt As Double = _Fila_Dscto.Item("Podt_Original")
                                Dim _Podt_Original As Double = Math.Round(_Fila_Dscto.Item("Podt_Original"), 5)
                                Dim _Vadt As Double = Math.Round((_Podt / 100) * _Precio, 1)

                                Dim _TblDsctos = _Ds_Matriz_Documentos.Tables("Descuentos_Doc").Select("Id = " & _Id)
                                Dim _Valor = _Precio - _Total_Descuento

                                If _Podt <> 0 Then

                                    _Vadt = Math.Round((_Podt / 100) * _Valor, _Decimal)

                                    If Chk_Redondear_Cero.Checked Then _Vadt = Fx_Redondeo_Descuento(_Vadt, Chk_Redondear_Cero.Checked)

                                    _Podt = Math.Round((_Vadt / _Valor) * 100, 5)

                                    Dim NewFila As DataRow
                                    NewFila = _Ds_Matriz_Documentos.Tables("Descuentos_Doc").NewRow
                                    With NewFila
                                        .Item("Id") = _Id
                                        .Item("Podt") = _Podt
                                        .Item("Vadt") = _Vadt
                                        .Item("Podt_Original") = _Podt_Original
                                        _Ds_Matriz_Documentos.Tables("Descuentos_Doc").Rows.Add(NewFila)
                                    End With

                                End If

                                _Total_Descuento += _Vadt
                                _NroDsctos += 1

                            Next

                            _Fila.Cells("DescuentoValor").Value = _Total_Descuento
                            _Fila.Cells("NroDscto").Value = _NroDsctos

                            If CBool(_Total_Descuento) Then Sb_Procesar_Datos_De_Grilla(_Fila, "DescuentoValor", False, False)

                        End If

                        Dim _Oferta = _Fila.Cells("Oferta").Value

                        If Not String.IsNullOrEmpty(_Oferta) Then

                            Sb_Insertar_Oferta(_Fila)

                        End If

                        ' FIN RECALCULO DE DESCUENTOS

                        If _Cabeza = "Cantidad" Then
                            If Fr_Alerta_Stock.Visible Then
                                Fr_Alerta_Stock.Close()
                            End If
                        End If

                    End If

                    If (_Cabeza = "DescuentoValor" Or
                        _Cabeza = "DescuentoPorc" Or
                        _Cabeza = "Precio") And _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Compra Then

                        Dim _Rtu As Double = _Fila.Cells("Rtu").Value

                        Dim _PrecioNeto As Double = _Fila.Cells("PrecioNetoUd").Value
                        Dim _PrecioBruto As Double = _Fila.Cells("PrecioBrutoUd").Value

                        Dim _PrecioNetoUd1 As Double
                        Dim _PrecioNetoUd2 As Double
                        Dim _PrecioBrutoUd1 As Double
                        Dim _PrecioBrutoUd2 As Double

                        If _UnTrans = 1 Then
                            _PrecioNetoUd1 = _PrecioNeto
                            _PrecioNetoUd2 = _PrecioNeto * _Rtu
                            _PrecioBrutoUd1 = _PrecioBruto
                            _PrecioBrutoUd2 = _PrecioBruto * _Rtu
                        ElseIf _UnTrans = 2 Then
                            _PrecioNetoUd1 = _PrecioNeto / _Rtu
                            _PrecioNetoUd2 = _PrecioNeto
                            _PrecioBrutoUd1 = _PrecioBruto / _Rtu
                            _PrecioBrutoUd2 = _PrecioBruto
                        End If

                        If _Precio_Costos_Desde = "PR" Then

                            If MessageBoxEx.Show(Me, "¿Desea actualizar la tabla de costos del proveedor?",
                                            "Actualizar lista de costos", MessageBoxButtons.YesNo,
                                            MessageBoxIcon.Question, MessageBoxDefaultButton.Button1, Me.TopMost) = Windows.Forms.DialogResult.Yes Then

                                Dim Fila = _Ds_Matriz_Documentos.Tables("Descuentos").Select("Id = " & _Indice)
                                Dim Dsctos(4) As String
                                Dim i As Integer

                                'Eliminar_Campos(Datos.Tables("Descuentos"), Id)

                                For i = 0 To 4
                                    Dsctos(i) = 0
                                Next

                                i = 0

                                For Each FF As DataRow In Fila

                                    Dim Orden As Integer = FF("Orden").ToString
                                    Dim PODT As Double = FF("Podt").ToString
                                    Dim VADT As Double = FF("Vadt").ToString

                                    If PODT > 0 Then
                                        Dsctos(i) = De_Num_a_Tx_01(PODT, False, 5)
                                    End If

                                    i += 1

                                Next

                            End If

                        End If

                        Sb_Sumar_Totales()

                    End If

                    If _Cabeza = "ValNetoLinea" And _Tido = "OCC" Then

                        Dim _Grabar As Boolean
                        Dim _Valor_Recargo As Double = _Fila.Cells("ValNetoLinea").Value
                        Dim _Recargo_Distribuido As Boolean = _Fila.Cells("Recargo_Distribuido").Value

                        If _Valor_Recargo = 0 And _Fila_Clonada.Cells(52).Value = 0 Then

                            Dim Fm As New Frm_RecargosXProd(_Ds_Matriz_Documentos, _Fila)
                            Fm.Valor_Recargo = _Valor_Recargo
                            Fm.ShowDialog(Me)
                            _Grabar = Fm.Grabar
                            _Recargo_Distribuido = Fm.Recargo_Distribuido
                            _Valor_Recargo = Fm.Valor_Recargo
                            Fm.Dispose()

                            If _Grabar Then
                                _Fila.Cells("ValNetoLinea").Value = _Valor_Recargo
                                _Fila.Cells("Recargo_Distribuido").Value = _Recargo_Distribuido
                                Sb_Procesar_Datos_De_Grilla(_Fila, _Cabeza, False, False, True)
                            End If

                        End If

                    End If

                    If String.IsNullOrEmpty(_Tict) Then

                        Dim _Idmaeedo_Dori As Integer = _Fila.Cells("Idmaeedo_Dori").Value

                        If _Idmaeedo_Dori = 0 Then
                            Sb_Borrar_Conceptos_Descuento()
                        Else
                            Sb_Recalcular_Descuentos(_Fila, False, False)
                        End If

                    End If

            End Select

            Sb_Limpiar_Lista_CodBarras()
            Sb_Marcar_Fila_Grilla(_Fila)

        Catch ex As Exception

        Finally
            Me.Enabled = True
            Me.Refresh()
            If Not IsNothing(Fm_Espera) Then
                Fm_Espera.Close()
                Fm_Espera.Dispose()
            End If
        End Try

    End Sub

    Function Fx_Existe_Producto_Seleccionado_WMS(_Empresa As String,
                                                 _Sucursal As String,
                                                 _Bodega As String,
                                                 _Codigo As String) As Boolean

        Dim _Tbl As DataTable = Fx_Crea_Tabla_Con_Filtro(_Ds_Matriz_Documentos.Tables("Tbl_Wms"), "1 > 0", "Id_Wms")

        If _Tbl.Rows.Count Then

            For Each _Fila As DataRow In _Tbl.Rows

                Dim _Emp = _Fila.Item("Empresa")
                Dim _Suc = _Fila.Item("Sucursal")
                Dim _Bod = _Fila.Item("Bodega")
                Dim _Cod = _Fila.Item("Codigo")

                If _Emp = _Empresa And _Suc = _Sucursal And _Bod = _Bodega And _Cod = _Codigo Then
                    Return True
                End If

            Next

        End If

    End Function

    Private Sub Grilla_Detalle_CellEnter(sender As System.Object, e As System.Windows.Forms.DataGridViewCellEventArgs)

        Dim _Fila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index)
        Dim _Id = _Fila.Cells("Id").Value
        Dim _Codigo = _Fila.Cells("Codigo").Value
        Dim _Descripcion = _Fila.Cells("Descripcion").Value
        Dim _Nuevo_Producto As Boolean = _Fila.Cells("Nuevo_Producto").Value

        Btn_Cambiar_IVA.Enabled = Not _Nuevo_Producto

        Dim _Vizado As Boolean = Grilla_Encabezado.Rows(0).Cells("Vizado").Value

        If _Vizado Then
            Btn_Cambiar_IVA.Enabled = False
        End If

        If _Id <> _Id_Activo Or String.IsNullOrEmpty(_Id_Activo) Then
            _Id_Activo = _Id
            Sb_Mostrar_Datos_Producto_Activo(True)
        End If

        If _Revision_Remota Then
            Btn_Cambiar_IVA.Enabled = False
        End If

    End Sub

    Private Sub Grilla_Detalle_MouseDown(sender As System.Object, e As System.Windows.Forms.MouseEventArgs)

        If e.Button = Windows.Forms.MouseButtons.Right Then

            With sender

                Dim Hitest As DataGridView.HitTestInfo = .HitTest(e.X, e.Y)

                If Hitest.Type = DataGridViewHitTestType.Cell Then
                    .CurrentCell = .Rows(Hitest.RowIndex).Cells(Hitest.ColumnIndex)
                Else
                    Return
                End If

                Dim _Nuevo_Producto As Boolean = .Rows(.CurrentRow.Index).Cells("Nuevo_Producto").Value
                Dim _Crear_CPr As Boolean = .Rows(.CurrentRow.Index).Cells("Crear_CPr").Value
                Dim _Prct As Boolean

                If Not _Nuevo_Producto Then

                    _Prct = .Rows(.CurrentRow.Index).Cells("Prct").Value

                    Dim _Cabeza = .Columns(.CurrentCell.ColumnIndex).Name

                    .ContextMenuStrip = Nothing

                    If _Cabeza <> "UdTrans" Then

                        If _Crear_CPr Then
                            ShowContextMenu(Menu_Contextual_Crear_Producto)
                        Else

                            Btn_Ver_Cardex_De_Inventario.Enabled = Not _Prct
                            Btn_Imagen_Sol_Bodega.Enabled = Not _Prct
                            Btn_Sol_Compra.Enabled = Not _Prct
                            Btn_Consolidar_Stock.Enabled = Not _Prct
                            Btn_Recargar_Producto.Enabled = (Not _Prct And _Tido = "OCC")
                            Btn_Clonar_Producto.Enabled = Not _Prct
                            Btn_Cambiar_Bodega.Enabled = Not _Bloquear_Edicion_Detalle

                            ShowContextMenu(Menu_Contextual_Producto)
                        End If

                    ElseIf _Cabeza = "UdTrans" Then

                        Call Grilla_Detalle_KeyDown(Grilla_Detalle, Nothing)

                    Else

                        Return

                    End If

                End If

            End With

        End If

    End Sub

    Private Sub Grilla_Detalle_EditingControlShowing(sender As System.Object, e As System.Windows.Forms.DataGridViewEditingControlShowingEventArgs)
        Dim validar As TextBox = CType(e.Control, TextBox)
        AddHandler validar.KeyPress, AddressOf Sb_Validar_Keypress
    End Sub

    Private Sub Sb_Validar_Keypress(sender As Object, e As System.Windows.Forms.KeyPressEventArgs)
        ' obtener indice de la columna

        'With sender

        Dim _Columna As Integer = Grilla_Detalle.CurrentCellAddress.X 'Current.ColumnIndex
        Dim _Fila As Integer = Grilla_Detalle.CurrentCellAddress.Y 'Current.ColumnIndex

        Dim _Cabeza = Grilla_Detalle.Columns(_Columna).Name
        Dim _Codigo = Grilla_Detalle.Rows(_Fila).Cells("Codigo").Value
        Dim _Descripcion = Grilla_Detalle.Rows(_Fila).Cells("Descripcion").Value

        ' comprobar si la celda en edición corresponde a la columna 1 o 2
        If _Cabeza = "Cantidad" Or _Cabeza = "Precio" Or _Cabeza = "DescuentoPorc" Or _Cabeza = "DescuentoValor" Then

            ' Obtener caracter  
            Dim _Caracter As Char = e.KeyChar

            ' referencia a la celda  
            Dim _Txt As TextBox = CType(sender, TextBox)

            If e.KeyChar = "."c Then
                ' si se pulsa la coma se convertirá en punto
                'e.Handled = True
                SendKeys.Send(",")
                e.KeyChar = ","c
                _Caracter = ","
            End If

            Dim _Caracter_Raro = ChrW(Keys.Back)
            Dim _EsNumero As Boolean = Char.IsNumber(_Caracter)

            ' comprobar si es un número con isNumber, si es el backspace, si el caracter  
            ' es el separador decimal, y que no contiene ya el separador  
            If (Char.IsNumber(_Caracter)) Or
               (_Caracter = ChrW(Keys.Back)) Or
               (_Caracter = ",") And
               (_Txt.Text.Contains(",") = False) Then
                e.Handled = False
            Else
                e.Handled = True
            End If

        End If

    End Sub

    Private Sub Frm_Formulario_Documento_KeyDown(sender As System.Object, e As System.Windows.Forms.KeyEventArgs)

        Dim _Tecla As Keys = e.KeyValue

        RemoveHandler Me.KeyDown, AddressOf Frm_Formulario_Documento_KeyDown

        Try

            Select Case _Tecla
                Case Keys.F4
                    Call BtnGrabar_Click(Nothing, Nothing)
                Case Keys.F5
                    Call BtnLimpiar_Click(Nothing, Nothing)
                'Sb_Limpiar_Documento()
                Case Keys.F6

                    If Fx_Revisar_si_tiene_registros() Then

                        Dim _CantUd1 As Double = 0
                        Dim _CantUd2 As Double = 0
                        Dim _Cantidad As Double = 0
                        Dim _Potencia As Double = 0
                        Dim _Flete As Double = 0
                        Dim _Prct As Boolean

                        For Each _Fila As DataRow In _TblDetalle.Rows

                            _Prct = _Fila.Item("Prct")

                            If Not _Prct Then

                                _Cantidad += _Fila.Item("Cantidad")
                                _CantUd1 += _Fila.Item("CantUd1")
                                _CantUd2 += _Fila.Item("CantUd2")

                                _Potencia = _Fila.Item("Potencia")
                                _Flete += Math.Round(_Potencia * _Fila.Item("CantUd1"), 0)

                            End If

                        Next

                        MessageBoxEx.Show(Me,
                                          "Total Cantidad Ud1: " & FormatNumber(_CantUd1, 2) & vbCrLf &
                                          "Total Cantidad Ud2: " & FormatNumber(_CantUd2, 2) & vbCrLf & vbCrLf &
                                          "Cantidad Transacción: " & FormatNumber(_Cantidad, 2) & vbCrLf & vbCrLf &
                                          "Suma de flete: " & FormatNumber(_Flete, 0), "Información adicional",
                                          MessageBoxButtons.OK, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, Me.TopMost)

                    End If

                Case Keys.F7
                    Call BtnProductosSolicitados_Click(Nothing, Nothing)
                'Sb_Solicitud_de_productos_a_bodega()
                Case Keys.F8
                'Sb_Revisar_situacion_comercial()
                Case Keys.F9
                    Call Btn_Cambiar_Tipo_Documento_Click(Nothing, Nothing)
                'Sb_Cambiar_Tipo_De_Documento()
                Case Keys.Down

                    Try
                        With Grilla_Detalle

                            Dim _Columna As Integer = .CurrentCellAddress.X
                            Dim _Fila As Integer = .CurrentCellAddress.Y

                            Dim _Nuevo_Producto As Boolean = .Rows(_Fila).Cells("Nuevo_Producto").Value

                            If Not _Revisando_Situacion_Comercial Then

                                If Not _Nuevo_Producto Then

                                    Dim _Filas As Integer = .Rows.Count - 1
                                    _Nuevo_Producto = .Rows(_Fila).Cells("Nuevo_Producto").Value

                                    If _Filas = _Fila Then

                                        Dim _Validar_Lineas_X_Pagina As Boolean = Fx_Validar_Lineas_Por_Documento_VS_Formato(0)

                                        If _Validar_Lineas_X_Pagina Then

                                            For Each _FL As DataRow In _TblDetalle.Rows
                                                If _FL.Item("Condicionado") Then
                                                    MessageBoxEx.Show(Me, "El documento cuenta con un descuento premium." & vbCrLf &
                                                                      "No es posible añadir más líneas.", "Validación",
                                                                      MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxButtons.OK, Me.TopMost)
                                                    Return
                                                End If
                                            Next

                                            If _Bloquear_Edicion_Detalle Then
                                                MessageBoxEx.Show(Me, "Documento bloquedo para su edición", "Validación",
                                              MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxButtons.OK, Me.TopMost)
                                                Return
                                            End If

                                            Dim _Vizado As Boolean = Grilla_Encabezado.Rows(0).Cells("Vizado").Value

                                            If _Vizado Then
                                                MessageBoxEx.Show(Me, "Documento Vizado", "Validación", MessageBoxButtons.OK,
                                                                  MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, Me.TopMost)
                                                Return
                                            End If

                                            For Each _Fl As DataRow In _TblDetalle.Rows
                                                If _Fl.Item("Espuntosvta") Then
                                                    MessageBoxEx.Show(Me, "Documento contiene concepto de puntos de fidelización" & vbCrLf &
                                                                      "Para poder editar debe quitar el concepto", "Validación", MessageBoxButtons.OK,
                                                                  MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, Me.TopMost)
                                                    Return
                                                End If
                                            Next

                                            Dim _Permitir As Boolean = True

                                            If Not _Post_Venta Then
                                                If Fx_Existen_Documentos_Relacionados() Then
                                                    If _Tido <> "NVV" Then
                                                        _Permitir = Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00023", _Ds_Matriz_Documentos) 'Fx_Tiene_Permiso(Me, "Doc00023")
                                                    End If
                                                End If
                                            End If

                                            If _Permitir Then

                                                Dim _CodLista As String = _TblEncabezado.Rows(0).Item("ListaPrecios")

                                                If _Cl_DocListaSuperior.ListaSuperiorUtilizada Then
                                                    _CodLista = _TblDetalle.Rows(_TblDetalle.Rows.Count - 1).Item("CodLista")
                                                End If

                                                Sb_Nueva_Linea(_CodLista)
                                                .CurrentCell = .Rows(_Fila + 1).Cells("Codigo")

                                            End If

                                        End If

                                    ElseIf _Fila + 1 = .Rows.Count - 1 And _Nuevo_Producto Then
                                        .CurrentCell = .Rows(_Filas).Cells("Codigo")
                                    End If

                                End If

                            End If

                        End With
                    Catch ex As Exception
                        'MsgBox(ex.Message)
                    Finally

                    End Try

            End Select

        Catch ex As Exception
        Finally
            AddHandler Me.KeyDown, AddressOf Frm_Formulario_Documento_KeyDown
        End Try

    End Sub

    Function Fx_Validar_Lineas_Por_Documento_VS_Formato(_Uno As Integer) As Boolean

        Dim _RowFormato As DataRow = Fx_Formato_Modalidad(Me, ModEmpresa_Doc, ModModalidad_Doc, _Tido, False)

        If Not (_RowFormato Is Nothing) Then

            Dim _NombreFormato As String = _RowFormato.Item("NombreFormato")

            Dim _NroLineasXpag As Integer = _RowFormato.Item("NroLineasXpag")
            Dim _Largo_Variable As Boolean = _RowFormato.Item("Largo_Variable")

            Dim _Filas = Grilla_Detalle.Rows.Count - _Uno

            If _Largo_Variable Then
                If Not CBool(_NroLineasXpag) Then
                    Return True
                End If
            End If

            If _NroLineasXpag > _Filas Then ' Or _Largo_Variable Then
                Return True
            Else
                MessageBoxEx.Show(Me, "No es posible ingresar más líneas en detalle" & Environment.NewLine &
                                  "Máximo de líneas por documento [" & _NroLineasXpag & "]",
                                  "Máximo de líneas", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
            End If
        Else
            Return True
        End If

    End Function

    Sub Sb_Ver_Informacion_Producto()

        Dim _Nuevo_Producto As Boolean

        Try
            _Nuevo_Producto = Grilla_Detalle.Rows(0).Cells("Nuevo_Producto").Value
        Catch ex As Exception
            _Nuevo_Producto = True
        End Try

        Dim _Index As Integer

        Try
            _Index = Grilla_Detalle.CurrentRow.Index
        Catch ex As Exception
            _Index = 0
        End Try

        If Fr_Alerta_Stock.Visible Then
            Fr_Alerta_Stock.Close()
        End If

        If _Nuevo_Producto Then
            Beep()
            ToastNotification.Show(Me, "NO EXISTE INFORMACION", My.Resources.cross,
                                   1 * 1000, eToastGlowColor.Red, eToastPosition.MiddleCenter)
        Else

            If Fx_Tiene_Permiso(Me, "Prod009") Then

                Dim _Endo As String = Trim(Grilla_Encabezado.Rows(0).Cells("CodEntidad").Value)
                Dim _Codigo = Grilla_Detalle.Rows(_Index).Cells("Codigo").Value

                Me.Cursor = Cursors.WaitCursor

                Dim Fm As Frm_EstadisticaProducto

                If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Or _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Nota_Venta_Interna Then
                    Fm = New Frm_EstadisticaProducto(_Codigo, _Endo, Frm_EstadisticaProducto.Tipo_Doc.Venta)
                ElseIf _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Compra Then
                    Fm = New Frm_EstadisticaProducto(_Codigo, _Endo, Frm_EstadisticaProducto.Tipo_Doc.Compra)
                Else
                    Fm = New Frm_EstadisticaProducto(_Codigo, _Endo, Frm_EstadisticaProducto.Tipo_Doc.Ninguno)
                End If
                Fm.Pro_Agrupar_Reemplazos = _Agrupar_Reemplazos
                Fm.ShowDialog(Me)
                Fm.Dispose()

                Me.Cursor = Cursors.Default
            End If

        End If
    End Sub

    Private Sub Btn_Ver_Informacion_Producto_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Ver_Informacion_Producto.Click
        Sb_Ver_Informacion_Producto()
    End Sub

    Sub Sb_Observacion_linea()

        Dim _Fila As DataGridViewRow

        Try
            _Fila = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index)
        Catch ex As Exception
            _Fila = Grilla_Detalle.Rows(0)
        End Try

        Dim _Id_DocDet = _Fila.Cells("Id_DocDet").Value
        Dim _Codigo = _Fila.Cells("Codigo").Value
        Dim _Descripcion = _Fila.Cells("Descripcion").Value

        Dim _Observa = NuloPorNro(_Fila.Cells("Observa").Value, "")
        Dim _Aceptado As Boolean

        If _Solo_Revisar_El_Documento Then

            MessageBoxEx.Show(Me, _Observa, "Observaciones de la línea", MessageBoxButtons.OK,
                              MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, Me.TopMost)

        Else

            _Aceptado = InputBox_Bk(Me, "Ingrese observación para la línea del documento",
                                           "Observación",
                                           _Observa,
                                           True,
                                           _Tipo_Mayus_Minus.Mayusculas,
                                           200,
                                           True,
                                           _Tipo_Imagen.Texto,
                                           True)

            If _Aceptado Then

                _Fila.Cells("Observa").Value = _Observa
                Consulta_sql = "Update " & _Global_BaseBk & "Zw_Casi_DocDet Set Observa = '" & _Observa & "' Where Id_DocDet = " & _Id_DocDet
                _Sql.Ej_consulta_IDU(Consulta_sql)

                ToastNotification.Show(Me, "DATOS ACTUALIZADOS CORRECTAMENTE", My.Resources.save,
                                         1 * 1000, eToastGlowColor.Green, eToastPosition.MiddleCenter)

            End If

        End If

    End Sub

    Private Sub Btn_Agregar_Observaciones_Linea_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Observaciones_Linea.Click
        Sb_Observacion_linea()
    End Sub

    Private Sub Btn_Copiar_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Copiar.Click

        With Grilla_Detalle

            Dim _Cabeza = .Columns(.CurrentCell.ColumnIndex).Name
            Dim _Texto_Cabeza = .Columns(.CurrentCell.ColumnIndex).HeaderText

            Dim Copiar = .Rows(.CurrentRow.Index).Cells(_Cabeza).Value
            Clipboard.SetText(Copiar)

            ToastNotification.Show(Me, _Texto_Cabeza & " esta en el portapapeles", Btn_Copiar.Image,
                                   2 * 1000, eToastGlowColor.Green, eToastPosition.MiddleCenter)

        End With

    End Sub

    Private Sub Btn_Imagen_Sol_Bodega_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Imagen_Sol_Bodega.Click

        Dim _Solicitar_Pro_Bodega As Boolean

        Dim _Fila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index)

        Dim _Codigo = _Fila.Cells("Codigo").Value
        Dim _Descripcion = _Fila.Cells("Descripcion").Value
        Dim _Sucursal = _Fila.Cells("Sucursal").Value
        Dim _Bodega = _Fila.Cells("Bodega").Value
        Dim _Ubicacion = _Fila.Cells("UbicacionBod").Value

        Dim Fm As New Frm_Imagenes_X_Producto(_Codigo)
        Fm.BtnSolicitarProductoBodega.Visible = _Post_Venta

        If Fm.Fx_Llenar_Grilla_Imagenes Then

            Fm.ShowDialog(Me)
            _Solicitar_Pro_Bodega = Fm.Pro_Solicitado_Bodega
            Fm.Dispose()

        Else

            MessageBoxEx.Show(Me, "NO EXITEN IMAGENES PARA EL PRODUCTO", "Imagen",
                              MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)

            If _Post_Venta Then

                If MessageBoxEx.Show(Me, "¿Desea pedir prestado el producto a la bodega?",
                                     "Solicitar producto a bodega", MessageBoxButtons.YesNo,
                                     MessageBoxIcon.Question, MessageBoxDefaultButton.Button1, Me.TopMost) = Windows.Forms.DialogResult.Yes Then

                    _Solicitar_Pro_Bodega = True
                End If

            End If

        End If

        If _Solicitar_Pro_Bodega Then
            Dim _Solicitar As New Clase_Solicita_Producto_Bodega
            _Solicitar.Sb_Solicitar_Producto(Me, _Codigo, FUNCIONARIO, ModEmpresa_Doc, _Sucursal, _Bodega, _Ubicacion)
            _Fila.Cells("Solicitado_bodega").Value = _Solicitar.Pro_Solicitado
            If _Solicitar.Pro_Solicitado Then
                Sb_Marcar_Grilla()
            End If
        End If

        Fm.Dispose()
        Me.Refresh()

    End Sub

    Private Sub Btn_Dejar_Doc_Stand_By_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Dejar_Doc_Stand_By.Click

        If _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Configuracion", "Pedir_Permiso_Para_Usar_Stanby") Then

            Dim _Pedir_Permiso_Para_Usar_Stanby As Boolean = _Global_Row_Configuracion_General.Item("Pedir_Permiso_Para_Usar_Stanby")

            If _Pedir_Permiso_Para_Usar_Stanby Then

                If Not Fx_Tiene_Permiso(Me, "Doc00049") Then
                    Return
                End If

            End If

        End If

        Sb_Borrar_Lineas_En_Blanco()

        Dim _Fila As DataGridViewRow

        Try
            _Fila = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index)
        Catch ex As Exception
            _Fila = Grilla_Detalle.Rows(0)
        End Try

        Dim _Vizado As Boolean = Grilla_Encabezado.Rows(0).Cells("Vizado").Value

        Dim _Codigo = _Fila.Cells("Codigo").Value
        Dim _Descripcion = _Fila.Cells("Descripcion").Value
        Dim _Sucursal = _Fila.Cells("Sucursal").Value
        Dim _Bodega = _Fila.Cells("Bodega").Value
        Dim _Ubicacion = _Fila.Cells("UbicacionBod").Value

        Dim _Reserva_NroOCC As Boolean = _TblEncabezado.Rows(0).Item("Reserva_NroOCC")


        If _Vizado Then
            MessageBoxEx.Show(Me, "Documento Vizado", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Warning,
                              MessageBoxDefaultButton.Button1, Me.TopMost)
            Return
        End If

        Dim _Permiso As Boolean = Fx_Revisar_si_tiene_registros(False)

        Dim _Sol As New Clase_Solicita_Producto_Bodega()

        If _Sol.Fx_Tiene_Prod_Solicitados_Bodega(Me, FUNCIONARIO) Then
            _Permiso = False
        End If

        Btn_Grabar_Doc_Stand_By.Enabled = _Permiso

        Btn_Revisar_Doc_Stand_By.Enabled = Not _Reserva_NroOCC
        Btn_Grabar_Doc_Reserva_OCC.Enabled = Not _Reserva_NroOCC
        Btn_Utilizar_Doc_Reserva_OCC.Enabled = Not _Reserva_NroOCC

        ShowContextMenu(Menu_Contextual_Stand_By)

    End Sub

    Function Fx_Revisar_si_tiene_registros(Optional _Mostrar_Mensaje As Boolean = True) As Boolean

        Dim _Cant_Lineas As Integer = _TblDetalle.Rows.Count

        If CBool(_Cant_Lineas) Then

            Dim _Nuevo_Producto As Boolean

            Try
                _Nuevo_Producto = Grilla_Detalle.Rows(0).Cells("Nuevo_Producto").Value
            Catch ex As Exception
                _Nuevo_Producto = True
            End Try

            If _Nuevo_Producto Then
                If _Mostrar_Mensaje Then
                    Beep()
                    ToastNotification.Show(Me, "NO HAY DATOS EN EL DOCUMENTO",
                                           My.Resources.cross,
                                           1 * 1000, eToastGlowColor.Red,
                                           eToastPosition.MiddleCenter)
                End If

                Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(0).Cells("Codigo")
                Grilla_Detalle.Focus()
            Else
                Return True
            End If

        End If

        'Return CBool(_IdCont)

    End Function

    Function Fx_ValidarSiTieneContenedor() As Boolean

        If Not PreVenta Then
            Return True
        End If

        Dim _IdCont As Integer = _TblEncabezado.Rows(0).Item("IdCont")
        Dim _Contenedor As String = _TblEncabezado.Rows(0).Item("Contenedor")

        If Not CBool(_IdCont) Then
            MessageBoxEx.Show(Me, "Documento no tiene contenedor" & vbCrLf &
                              "En una PRE-VENTA es obligatorio asociar un contenedor", "Validación", MessageBoxButtons.OK,
                              MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
        End If

        Return CBool(_IdCont)

    End Function

    Function Fx_ValidarSiExistenProductosSobreStock() As Boolean

        If Not SobreStock Then
            Return True
        End If

        Dim _TieneSobreStock As Integer = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_Prod_SobreStock", "Activo = 1")

        If Not CBool(_TieneSobreStock) Then
            MessageBoxEx.Show(Me, "No existen productos con Sobre Stock para la venta.", "Validación", MessageBoxButtons.OK,
                              MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
        End If

        Return CBool(_TieneSobreStock)

    End Function

    Private Sub Btn_Grabar_Doc_Stand_By_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Grabar_Doc_Stand_By.Click

        Sb_Borrar_Lineas_En_Blanco()

        If Fx_Revisar_si_tiene_registros(True) Then

            If PreVenta Then

                MessageBoxEx.Show(Me, "Este documento no se puede guardar en Stand-By" & Environment.NewLine &
                                  "Documento de tipo PRE-VENTA",
                                  "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                Return

            End If


            Dim _Existen_Productos_WMS As Integer

            For Each row As DataGridViewRow In Grilla_Detalle.Rows

                Dim _IdMaeddo_Dori As Integer = row.Cells("IdMaeddo_Dori").Value
                Dim _Stock_desde_WMS As Boolean = row.Cells("Stock_desde_WMS").Value

                If CBool(_IdMaeddo_Dori) Then

                    MessageBoxEx.Show(Me, "Este documento no se puede guardar en Stand-By" & Environment.NewLine &
                                      "Hay líneas ligadas desde otros documentos",
                                      "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                    Return
                End If

                If _Stock_desde_WMS Then
                    _Existen_Productos_WMS += 1
                End If

            Next

            If CBool(_Tbl_Maedcr.Rows.Count) Then

                MessageBoxEx.Show(Me, "Este documento no se puede guardar en Stand-By" & Environment.NewLine &
                                  "Hay líneas que tienen recargos asociados",
                                  "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                Return

            End If

            If CBool(_Existen_Productos_WMS) Then
                MessageBoxEx.Show(Me, "Existen productos extraídos desde WMS (Seriados/Peso variable)" & Environment.NewLine &
                                 "Estos productos no serán reservados." & Space(1) &
                                 "Una vez rescatados deberá reservar nuevamente las cantidades",
                                 "INFORMACION", MessageBoxButtons.OK, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, Me.TopMost)

            End If

            Dim _Crear_Doc As New Clase_Crear_Documento
            Dim _Id_DocEnc As Integer = _Crear_Doc.Fx_Crear_Documento_En_BakApp_Casi(_Ds_Matriz_Documentos, False, True)

            If _Revisar_Notificacion_Automatica_Remota Then
                Me.Close()
            Else
                If CBool(_Id_DocEnc) Then

                    Sb_Limpiar(ModModalidad_Doc)
                    ToastNotification.Show(Me, "DOCUMENTO GUARDADO CORRECTAMENTE EN LA NUBE", Btn_Grabar_Doc_Stand_By.Image,
                                          2 * 1000, eToastGlowColor.Green, eToastPosition.MiddleCenter)
                End If
            End If

        End If

    End Sub

    Private Sub Sb_Borrar_Lineas_En_Blanco()

        For Each row As DataGridViewRow In Grilla_Detalle.Rows

            Dim _Nuevo_Producto As Boolean = row.Cells("Nuevo_Producto").Value
            Dim _Codigo As String = NuloPorNro(row.Cells("Codigo").Value, "")

            If _Nuevo_Producto Or String.IsNullOrEmpty(Trim(_Codigo)) Then
                If Grilla_Detalle.Rows.Count > 1 Then
                    Grilla_Detalle.Rows.RemoveAt(row.Index)
                End If
            End If

        Next

    End Sub

    Private Sub Btn_Revisar_Doc_Stand_By_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Revisar_Doc_Stand_By.Click

        Dim Fm As New Frm_Formulario_Stand_By(
                      Frm_Formulario_Stand_By.Tipo_Visualizacion.Mostrar_solo_usuario_activo,
                      FUNCIONARIO)

        Fm.ShowDialog(Me)
        Dim _RowDocumento As DataRow = Fm._Row_Documento_Seleccionado

        If Not (_RowDocumento Is Nothing) Then

            _RevisandoBotonesActivos = True

            Dim _Id_DocEnc As Integer = _RowDocumento.Item("Id_DocEnc")
            Sb_Crear_Documento_Desde_Otros_Documentos_Casi_Bakapp(_Id_DocEnc)

            _RevisandoBotonesActivos = False

            If _Tido = "NVV" And Chk_Pickear.Checked Then
                Chk_Pickear.Visible = True
                Chk_Pickear.Enabled = True
            Else
                If _Global_Row_Configuracion_General.Item("NuncaPickeaDocConRTUDesactivada") Then
                    For Each _Fl As DataRow In _TblDetalle.Rows
                        If _Fl.Item("DesacRazTransf") And _Fl.Item("RtuVariable") Then
                            Chk_Pickear.Enabled = False
                            Exit For
                        End If
                    Next
                End If
            End If

            ToastNotification.Show(Me, "DOCUMENTO RECUPERADO CORRECTAMENTE", Btn_Revisar_Doc_Stand_By.Image,
                                  2 * 1000, eToastGlowColor.Green, eToastPosition.MiddleCenter)

        End If

    End Sub

    Public Sub Sb_Crear_Documento_Desde_Otros_Documentos_Casi_Bakapp(_Id_DocEnc As Integer,
                                                        Optional _Vizado As Boolean = False,
                                                        Optional ByRef _Documento_Tomado_Intertanto As Boolean = False)


        Sb_Nuevo_Doc(True)

        Consulta_sql = "Update " & _Global_BaseBk & "Zw_Casi_DocDet Set 
                        Idmaeedo_Dori =ISNULL(Ddo.IDMAEEDO,0),Idmaeddo_Dori = ISNULL(Ddo.IDMAEDDO,0),Tidopa = Isnull(Ddo.TIDO,''),
                        NudoPa = Isnull(Ddo.NUDO,'')
                        From " & _Global_BaseBk & "Zw_Casi_DocDet Det
                        Left Join MAEDDO Ddo On Ddo.IDMAEDDO = Det.Idmaeddo_Dori
                        Where Id_DocEnc = " & _Id_DocEnc
        _Sql.Ej_consulta_IDU(Consulta_sql)

        Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Casi_DocEnc Where Id_DocEnc = " & _Id_DocEnc & "
                        Select * From " & _Global_BaseBk & "Zw_Casi_DocDet Where Id_DocEnc = " & _Id_DocEnc & " Order by NroLinea" & "
                        Select * From " & _Global_BaseBk & "Zw_Casi_DocObs Where Id_DocEnc = " & _Id_DocEnc & "
                        Select * From " & _Global_BaseBk & "Zw_Casi_DocDsc Where Id_DocEnc = " & _Id_DocEnc & " Order by Nulido" & "
                        Select * From " & _Global_BaseBk & "Zw_Casi_DocPer Where Id_DocEnc = " & _Id_DocEnc & "
                        Select * From " & _Global_BaseBk & "Zw_Referencias_Dte Where Id_Doc = " & _Id_DocEnc & " And Kasi = 1" & "
                        Select * From " & _Global_BaseBk & "Zw_Casi_DocTag Where Id_DocEnc = " & _Id_DocEnc & " And Archirve = 'MAEEDO'" & " 
                        Select * From " & _Global_BaseBk & "Zw_Casi_DocTag Where Id_DocEnc = " & _Id_DocEnc & " And Archirve = 'MAEDDO'"

        Dim _Ds As DataSet = _Sql.Fx_Get_DataSet(Consulta_sql)

        _Ds_Documento_Origen = _Ds

        Dim _TblEncabezado_StBy As DataTable = _Ds.Tables(0)
        Dim _TblDetalle_StBy As DataTable = _Ds.Tables(1)
        Dim _TblObservaciones_StBy As DataTable = _Ds.Tables(2)
        Dim _TblDescuentos_StBy As DataTable = _Ds.Tables(3)
        Dim _TblPermisos_StBy As DataTable = _Ds.Tables(4)
        Dim _TblReferencias_Dte_Stby As DataTable = _Ds.Tables(5)
        Dim _TblTag_Edo As DataTable = _Ds.Tables(6)
        Dim _TblTag_Edd As DataTable = _Ds.Tables(7)

        Dim _Modalidad = _TblEncabezado_StBy.Rows(0).Item("Modalidad")
        Dim _NroDocumento As String

        Dim _CodEntidad As String
        Dim _CodSucEntidad As String
        Dim _CodLista As String

        Dim _CodFuncionario = _TblEncabezado_StBy.Rows(0).Item("CodFuncionario")

        If CBool(_TblEncabezado_StBy.Rows.Count) And CBool(_TblDetalle_StBy.Rows.Count) Then
            _CodEntidad = _TblEncabezado_StBy.Rows(0).Item("CodEntidad")
            _CodSucEntidad = _TblEncabezado_StBy.Rows(0).Item("CodSucEntidad")
        Else
            Return
        End If

        _Tido = _TblEncabezado_StBy.Rows(0).Item("TipoDoc")
        _Vizado = _TblEncabezado_StBy.Rows(0).Item("Vizado")


        With _TblEncabezado.Rows(0)

            If Not String.IsNullOrEmpty(_CodEntidad) Then
                _RowEntidad = Fx_Traer_Datos_Entidad(_CodEntidad, _CodSucEntidad)
            End If

            Grilla_Encabezado.Rows(0).Cells("TipoDoc").Value = _Tido

            Grilla_Encabezado.Rows(0).Cells("Vizado").Value = _Vizado

            If Not (_RowEntidad Is Nothing) Then

                Sb_RevListaSuperiosEntidad(False)

                Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, False, False, False)

                Sb_RevListaSuperiosEntidad_VtaCurso()

            End If

            .Item("Id_DocEnc") = _Id_DocEnc
            .Item("Modalidad") = _Modalidad
            .Item("Empresa") = _TblEncabezado_StBy.Rows(0).Item("Empresa")
            .Item("Sucursal") = _TblEncabezado_StBy.Rows(0).Item("Sucursal")

            _NroDocumento = _TblEncabezado_StBy.Rows(0).Item("NroDocumento")

            .Item("NroDocumento") = _NroDocumento
            .Item("CodEntidad") = NuloPorNro(_CodEntidad, String.Empty)
            .Item("CodSucEntidad") = NuloPorNro(_CodSucEntidad, String.Empty)
            .Item("Nombre_Entidad") = _TblEncabezado.Rows(0).Item("Nombre_Entidad")

            .Item("CodSucEntidadFisica") = _TblEncabezado_StBy.Rows(0).Item("CodSucEntidadFisica")
            .Item("CodSucEntidadFisica") = _TblEncabezado_StBy.Rows(0).Item("CodSucEntidadFisica")
            .Item("ListaPrecios") = _TblEncabezado_StBy.Rows(0).Item("ListaPrecios")
            _CodLista = .Item("ListaPrecios")

            .Item("CodFuncionario") = _CodFuncionario 'FUNCIONARIO

            If _Revision_Remota Then
                LabelX2.Text = "Funcionario solicita"
                Txt_Responsable.Text = " " & _Sql.Fx_Trae_Dato("TABFU", "NOKOFU", "KOFU = '" & _CodFuncionario & "'")
                .Item("NomFuncionario") = Txt_Responsable.Text
            Else
                .Item("NomFuncionario") = Trim(Nombre_funcionario_activo)
            End If

            .Item("FechaEmision") = _TblEncabezado_StBy.Rows(0).Item("FechaEmision")
            .Item("Fecha_1er_Vencimiento") = _TblEncabezado_StBy.Rows(0).Item("Fecha_1er_Vencimiento")
            .Item("FechaUltVencimiento") = _TblEncabezado_StBy.Rows(0).Item("FechaUltVencimiento")
            .Item("FechaRecepcion") = _TblEncabezado_StBy.Rows(0).Item("FechaRecepcion")
            .Item("Cuotas") = _TblEncabezado_StBy.Rows(0).Item("Cuotas")

            .Item("Dias_1er_Vencimiento") = _TblEncabezado_StBy.Rows(0).Item("Dias_1er_Vencimiento")
            .Item("Dias_Vencimiento") = _TblEncabezado_StBy.Rows(0).Item("Dias_Vencimiento")

            .Item("Moneda_Doc") = _TblEncabezado_StBy.Rows(0).Item("Moneda_Doc")
            .Item("TipoMoneda") = _TblEncabezado_StBy.Rows(0).Item("TipoMoneda")
            .Item("Valor_Dolar") = _TblEncabezado_StBy.Rows(0).Item("Valor_Dolar")


            LblMoneda.Tag = .Item("Moneda_Doc")
            LblMoneda.Text = .Item("Moneda_Doc")

            Dim _Vamo As Double = 1

            If LblMoneda.Tag.ToString.Trim <> "$" Then

                Consulta_sql = "Select TOP 1 * From MAEMO 
                            Where KOMO = '" & LblMoneda.Tag & "' And FEMO = '" & Format(.Item("FechaEmision"), "yyyyMMdd") & "' Order By IDMAEMO Desc"
                Dim _RowMoneda_Enc As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                _Vamo = _RowMoneda_Enc.Item("VAMO")

            End If

            _TblEncabezado.Rows(0).Item("Tasadorig_Doc") = _Vamo

            .Item("Centro_Costo") = _TblEncabezado_StBy.Rows(0).Item("Centro_Costo")

            Try
                .Item("Contacto_Ent") = _TblEncabezado_StBy.Rows(0).Item("Contacto_Ent")
            Catch ex As Exception
                .Item("Contacto_Ent") = String.Empty
            End Try

            Txt_Contacto.Text = _Sql.Fx_Trae_Dato("MAEENCON", "NOKOCON",
                                                  "KOEN = '" & _RowEntidad.Item("KOEN") & "' And RUTCONTACT = '" & _TblEncabezado.Rows(0).Item("Contacto_Ent") & "'")

            Dim _Fun_Auto_Deuda_Ven = _TblEncabezado_StBy.Rows(0).Item("Fun_Auto_Deuda_Ven")
            Dim _Fun_Auto_Stock_Ins = _TblEncabezado_StBy.Rows(0).Item("Fun_Auto_Stock_Ins")
            Dim _Fun_Auto_Cupo_Exe = _TblEncabezado_StBy.Rows(0).Item("Fun_Auto_Cupo_Exe")
            Dim _Fun_Auto_Sol_Compra = _TblEncabezado_StBy.Rows(0).Item("Fun_Auto_Sol_Compra")

            .Item("Fun_Auto_Deuda_Ven") = _Fun_Auto_Deuda_Ven
            .Item("Fun_Auto_Stock_Ins") = _Fun_Auto_Stock_Ins
            .Item("Fun_Auto_Cupo_Exe") = _Fun_Auto_Cupo_Exe
            .Item("Fun_Auto_Sol_Compra") = _Fun_Auto_Sol_Compra

            _SubTido = _TblEncabezado_StBy.Rows(0).Item("SubTido")

            .Item("SubTido") = _SubTido

            Dim _Reserva_NroOCC As Boolean = _TblEncabezado_StBy.Rows(0).Item("Reserva_NroOCC")
            Dim _Reserva_Idmaeedo As Integer = _TblEncabezado_StBy.Rows(0).Item("Reserva_Idmaeedo")

            .Item("Reserva_NroOCC") = _Reserva_NroOCC
            .Item("Reserva_Idmaeedo") = _Reserva_Idmaeedo

            .Item("RevFincred") = _TblEncabezado_StBy.Rows(0).Item("RevFincred")
            .Item("IdFincred") = _TblEncabezado_StBy.Rows(0).Item("IdFincred")
            .Item("MontoFincred") = _TblEncabezado_StBy.Rows(0).Item("MontoFincred")

            _TblEncabezado.Rows(0).Item("TblTipoVenta") = _TblEncabezado_StBy.Rows(0).Item("TblTipoVenta")
            _TblEncabezado.Rows(0).Item("CodTipoVenta") = _TblEncabezado_StBy.Rows(0).Item("CodTipoVenta")

            Dim _Descripcion As String = _Sql.Fx_Trae_Dato("TABCARAC", "NOKOCARAC", "KOTABLA = '" & _TblEncabezado.Rows(0).Item("TblTipoVenta") & "' And KOCARAC = '" & _TblEncabezado.Rows(0).Item("CodTipoVenta") & "'")

            If Not String.IsNullOrWhiteSpace(_Descripcion) Then
                Lbl_TipoVenta.Text = "Tipo de venta: " & _Descripcion
            End If

            _TblEncabezado.Rows(0).Item("Customizable") = _TblEncabezado_StBy.Rows(0).Item("Customizable")

            PreVenta = _TblEncabezado_StBy.Rows(0).Item("PreVenta")
            _TblEncabezado_StBy.Rows(0).Item("PreVenta") = PreVenta

            .Item("Pickear") = _TblEncabezado_StBy.Rows(0).Item("Pickear")

        End With

        Chk_Pickear.Visible = True
        Chk_Pickear.Enabled = True

        Chk_Pickear.Checked = _TblEncabezado_StBy.Rows(0).Item("Pickear")

        'If PreVenta Then

        '    Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Contenedor_DocTom Where Id_DocEnc = " & _Id_DocEnc
        '    Dim _Row As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        '    If Not IsNothing(_Row) Then

        '        Dim _Cl_Contenedor As New Cl_Contenedor

        '        _Zw_Contenedor = _Cl_Contenedor.Fx_Llenar_Contenedor(_Row.Item("IdCont"))
        '        _TblEncabezado.Rows(0).Item("IdCont") = _Zw_Contenedor.Id

        '    End If

        'End If


        Dim _Contador = 0

        For Each _Fila As DataRow In _TblDetalle_StBy.Rows

            _CodVendedor = _Fila.Item("CodVendedor")

            Dim _Id_DocDet = _Fila.Item("Id_DocDet")

            Dim _FechaEmision_Linea As Date = _Fila.Item("FechaEmision_Linea")
            Dim _FechaRecepcion_Linea As Date = _Fila.Item("FechaRecepcion_Linea")

            Dim _Codigo As String = _Fila.Item("Codigo")
            Dim _Descripcion As String = _Fila.Item("Descripcion")
            Dim _NroLinea As String = _Fila.Item("NroLinea")

            Dim _Prct As Boolean = _Fila.Item("Prct")
            Dim _Tict As String = _Fila.Item("Tict")

            Dim _CantComprar As Double = _Fila.Item("Cantidad")
            Dim _UnTrans As Integer = _Fila.Item("UnTrans")

            _CodLista = _Fila.Item("CodLista")

            Dim _Precio As Double = _Fila.Item("Precio")
            Dim _Potencia As Double = _Fila.Item("Potencia")

            Dim _Idmaeedo_Dori As String = _Fila.Item("Idmaeedo_Dori")
            Dim _Idmaeddo_Dori As String = _Fila.Item("Idmaeddo_Dori")

            Dim _Emprepa As String = Trim(_Fila.Item("Emprepa"))
            Dim _Tidopa As String = Trim(_Fila.Item("Tidopa"))
            Dim _Nudopa As String = Trim(_Fila.Item("Nudopa"))
            Dim _Endopa As String = Trim(_Fila.Item("Endopa"))
            Dim _Nulidopa As String = Trim(_Fila.Item("Nulidopa"))

            Dim _CantUd1_Dori As Double = _Fila.Item("CantUd1_Dori")
            Dim _CantUd2_Dori As Double = _Fila.Item("CantUd2_Dori")

            Dim _PorIva As Double = _Fila.Item("PorIva")
            Dim _PorIla As Double = _Fila.Item("PorIla")

            Dim _CodFunAutoriza As String = _Fila.Item("CodFunAutoriza")
            Dim _CodPermiso As String = _Fila.Item("CodPermiso")
            Dim _Tiene_Dscto As Boolean = _Fila.Item("Tiene_Dscto")
            Dim _Centro_Costo As String = _Fila.Item("Centro_Costo")
            Dim _Proyecto As String = _Fila.Item("Proyecto")

            Grilla_Encabezado.Rows(0).Cells("CodUsuario_Permiso_Dscto").Value = _CodFunAutoriza

            Dim _Observa As String = _Fila.Item("Observa")
            Dim _DescuentoPorc As Double = _Fila.Item("DescuentoPorc")

            Dim _Crear_CPr As Boolean = _Fila.Item("Crear_CPr")
            Dim _Id_CPr As Integer = _Fila.Item("Id_CPr")

            Dim _Row As DataGridViewRow = Grilla_Detalle.Rows(_Contador)
            Dim _Id = _Row.Cells("Id").Value


            Dim _Id_Oferta As Integer = _Fila.Item("Id_Oferta")
            Dim _Oferta As String = _Fila.Item("Oferta")
            Dim _Es_Padre_Oferta As Boolean = _Fila.Item("Es_Padre_Oferta")
            Dim _Padre_Oferta As Integer = _Fila.Item("Padre_Oferta")
            Dim _Hijo_Oferta As Integer = _Fila.Item("Hijo_Oferta")
            Dim _Aplica_Oferta As Boolean = Not String.IsNullOrEmpty(_Oferta)
            Dim _Cantidad_Oferta As Double = _Fila.Item("Cantidad_Oferta")
            Dim _Porcdesc_Oferta As Double = _Fila.Item("Porcdesc_Oferta")

            Dim _Tasadorig As Double = _Fila.Item("Tasadorig")
            Dim _FunValida_Compra As String = _Fila.Item("FunValida_Compra")
            Dim _Nmarca As String = _Fila.Item("Nmarca")
            Dim _RtuVariable As Boolean = _Fila.Item("RtuVariable")
            Dim _Espuntosvta As Boolean = _Fila.Item("Espuntosvta")
            Dim _ModFechVto As Boolean = _Fila.Item("ModFechVto")
            Dim _Condicionado As Boolean = _Fila.Item("Condicionado")
            Dim _DesacRazTransf As Boolean = _Fila.Item("DesacRazTransf")

            _Row.Cells("Id_DocDet").Value = _Id_DocDet
            _Row.Cells("CodLista").Value = _CodLista
            _Row.Cells("Nuevo_Producto").Value = False

            _Row.Cells("Espuntosvta").Value = _Espuntosvta
            _Row.Cells("ModFechVto").Value = _ModFechVto
            _Row.Cells("Condicionado").Value = _Condicionado
            _Row.Cells("DesacRazTransf").Value = _DesacRazTransf

            Dim _RowProducto As DataRow

            If _Crear_CPr Then

                Consulta_sql = "Select Top 1 * From " & _Global_BaseBk & "Zw_Prod_SolCreapr Where Id_CPr = " & _Id_CPr
                _RowProducto = _Sql.Fx_Get_DataRow(Consulta_sql)
                Sb_Traer_Producto_Grilla_Producto_A_Crear(_Row, _RowProducto)

                _Row.Cells("Crear_CPr").Value = _Crear_CPr
                _Row.Cells("Id_CPr").Value = _Id_CPr

            Else

                If _Prct Then 'ES CONCEPTO, DESDE TABCT

                    Consulta_sql = "Select * From TABCT Where KOCT = '" & _Codigo & "'"
                    Dim _RowConcepto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                    Sb_Agregar_Concepto(_Row, _RowConcepto)
                    Fx_Validar_Descuentos_Globales(False, Not _Revisar_Notificacion_Automatica_Remota)

                Else ' ES PRODUCTO, DESDE MAEPR

                    Consulta_sql = "Select Top 1 * From MAEPR Where KOPR = '" & _Codigo & "'"
                    _RowProducto = _Sql.Fx_Get_DataRow(Consulta_sql)
                    Sb_Traer_Producto_Grilla(_Row, _RowProducto, True, _UnTrans, False)
                    _Row.Cells("Descripcion").Value = _Descripcion

                End If

            End If

            Dim _Moneda = _Fila.Item("Moneda")
            Dim _Tipo_Moneda = _Fila.Item("Tipo_Moneda")
            Dim _Tipo_Cambio = _Fila.Item("Tipo_Cambio")

            _Row.Cells("Moneda").Value = _Moneda
            _Row.Cells("Tipo_Moneda").Value = _Tipo_Moneda
            _Row.Cells("Tipo_Cambio").Value = _Tipo_Cambio
            _Row.Cells("Tasadorig").Value = _Tasadorig

            _Row.Cells("FechaEmision").Value = _FechaEmision_Linea
            _Row.Cells("FechaRecepcion").Value = _FechaRecepcion_Linea

            _Row.Cells("Id_Oferta").Value = _Id_Oferta
            _Row.Cells("Oferta").Value = _Oferta
            _Row.Cells("Es_Padre_Oferta").Value = _Es_Padre_Oferta
            _Row.Cells("Padre_Oferta").Value = _Padre_Oferta
            _Row.Cells("Hijo_Oferta").Value = _Hijo_Oferta
            _Row.Cells("Aplica_Oferta").Value = _Aplica_Oferta
            _Row.Cells("Cantidad_Oferta").Value = _Cantidad_Oferta
            _Row.Cells("Porcdesc_Oferta").Value = _Porcdesc_Oferta

            If _Aplica_Oferta Then
                _Row.Cells("Operacion").Value = "ofer"
            End If

            _Row.Cells("FunValida_Compra").Value = _FunValida_Compra
            _Row.Cells("Nmarca").Value = _Nmarca
            _Row.Cells("RtuVariable").Value = _RtuVariable

            If _RtuVariable Then
                _Row.Cells("CantUd1").Value = _Fila.Item("CantUd1")
                _Row.Cells("CantUd2").Value = _Fila.Item("CantUd2")
                _Row.Cells("Rtu").Value = _Fila.Item("Rtu")
            End If

            Dim _Stock_desde_WMS As Boolean = _Row.Cells("Stock_desde_WMS").Value

            If _Stock_desde_WMS Then

                MessageBoxEx.Show(Me, "Producto: " & _Codigo & " - " & _Descripcion & Environment.NewLine & Environment.NewLine &
                                 "Este producto es extraído desde WMS (Seriados/Peso variable)" & Environment.NewLine &
                                 "Debe volver a reservar las cantidades." & Environment.NewLine &
                                 "Cantidad de referencia: " & _CantComprar,
                                 "INFORMACION", MessageBoxButtons.OK, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, Me.TopMost)

                Dim _Aceptar As Boolean

                Dim Fm As New Frm_Formulario_Stock_Desde_WMS_Seriados(_Ds_Matriz_Documentos, _Row)
                Fm.ShowDialog(Me)
                _Aceptar = Fm.Pro_Aceptar
                Dim _Cantidad As Double = Fm.Pro_Cant_Ud1
                Fm.Dispose()
                If _Aceptar Then
                    _CantComprar = _Cantidad
                Else
                    _CantComprar = 0
                End If

            End If

            _Row.Cells("Cantidad").Value = _CantComprar

            Dim _Precio_Old As Double = _Row.Cells("Precio").Value

            _Row.Cells("Idmaeedo_Dori").Value = _Idmaeedo_Dori
            _Row.Cells("Idmaeddo_Dori").Value = _Idmaeddo_Dori

            _Row.Cells("CantUd1_Dori").Value = _CantUd1_Dori
            _Row.Cells("CantUd2_Dori").Value = _CantUd2_Dori

            _Row.Cells("PorIva").Value = _PorIva
            _Row.Cells("PorIla").Value = _PorIla

            _Row.Cells("Emprepa").Value = _Emprepa
            _Row.Cells("Tidopa").Value = _Tidopa
            _Row.Cells("Nudopa").Value = _Nudopa
            _Row.Cells("Endopa").Value = _Endopa
            _Row.Cells("Nulidopa").Value = _Nulidopa

            _Row.Cells("Observa").Value = _Observa

            Dim _Operacion As String = String.Empty
            If _Potencia > 0 Then _Operacion = "RECA"

            _Row.Cells("Potencia").Value = _Potencia
            _Row.Cells("Operacion").Value = _Operacion

            Dim _Sucursal = _Fila.Item("Sucursal")
            Dim _Bodega = _Fila.Item("Bodega")

            _Row.Cells("Sucursal").Value = _Sucursal
            _Row.Cells("Bodega").Value = _Bodega

            _Row.Cells("Centro_Costo").Value = _Centro_Costo
            _Row.Cells("Proyecto").Value = _Proyecto


            If _Prct Then 'ES CONCEPTO, DESDE TABCT

                Dim _Campo As String
                Dim _Total_Campo As Double

                If ChkValores.Checked Then
                    If _Tict = "R" Then
                        _Campo = "ValNetoLinea"
                    ElseIf _Tict = "D" Then
                        _Campo = "DescuentoValor"
                    End If
                Else
                    If _Tict = "R" Then
                        _Campo = "ValBrutoLinea"
                    ElseIf _Tict = "D" Then
                        _Campo = "DescuentoValor"
                    End If
                End If

                _Total_Campo = _Fila.Item(_Campo)

                _Row.Cells(_Campo).Value = _Total_Campo

                Sb_Procesar_Datos_De_Grilla(_Row, _Campo, False, False)

            Else

                If Convert.ToBoolean(_CantComprar) Then

                    _Row.Cells("Precio").Value = _Precio

                    Sb_Procesar_Datos_De_Grilla(_Row, "Cantidad", False, False)

                    Dim _Mostrar_Mensaje As Boolean

                    If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Then
                        _Mostrar_Mensaje = True
                    End If

                    Dim _NroDscto = 0

                    If _DescuentoPorc > 0 Then

                        Dim _ValNetoLinea As Double = _Row.Cells("ValNetoLinea").Value
                        Dim _ValBrutoLinea As Double = _Row.Cells("ValBrutoLinea").Value

                        Dim _DescuentoValor As Double = 0

                        If _DescuentoPorc > 0 Then

                            Eliminar_Campos(_Ds_Matriz_Documentos.Tables("Descuentos_Doc"), _Id)

                            For Each _Fila_Dscto As DataRow In _TblDescuentos_StBy.Rows

                                Dim _Nulido_Dscto = _Fila_Dscto.Item("Nulido")

                                Dim _Podt As Double
                                Dim _Vadt As Double
                                Dim _Kodt As String

                                If _NroLinea = _Nulido_Dscto Then

                                    _Podt = NuloPorNro(_Fila_Dscto.Item("Podt"), 0)
                                    _Vadt = 0
                                    _Kodt = _Fila_Dscto.Item("Kodt")

                                    If _Podt > 0 Then

                                        If ChkValores.Checked Then
                                            _Vadt = Math.Round((_Podt / 100) * _ValNetoLinea, 1)
                                            If Chk_Redondear_Cero.Checked Then _Vadt = Fx_Redondeo_Descuento(_Vadt, Chk_Redondear_Cero.Checked)
                                            _Podt = Math.Round((_Vadt / _ValNetoLinea) * 100, 5)
                                            _ValNetoLinea -= _Vadt
                                        Else
                                            _Vadt = Math.Round((_Podt / 100) * _ValBrutoLinea)
                                            If Chk_Redondear_Cero.Checked Then _Vadt = Fx_Redondeo_Descuento(_Vadt, Chk_Redondear_Cero.Checked)
                                            _Podt = Math.Round((_Vadt / _ValBrutoLinea) * 100, 5)
                                            _ValBrutoLinea -= _Vadt
                                        End If

                                        _DescuentoValor += _Vadt

                                        Dim NewFila As DataRow
                                        NewFila = _Ds_Matriz_Documentos.Tables("Descuentos_Doc").NewRow
                                        With NewFila
                                            .Item("Id") = _Id
                                            .Item("Podt") = _Podt
                                            .Item("Vadt") = _Vadt
                                            .Item("Podt_Original") = _Podt
                                            _Ds_Matriz_Documentos.Tables("Descuentos_Doc").Rows.Add(NewFila)
                                        End With

                                        _NroDscto += 1

                                    End If

                                End If

                            Next

                            _Row.Cells("DescuentoValor").Value = _DescuentoValor
                            _Row.Cells("NroDscto").Value = _NroDscto

                            _Row.Cells("CodFunAutoriza").Value = _CodFunAutoriza
                            _Row.Cells("CodPermiso").Value = _CodPermiso

                            Sb_Procesar_Datos_De_Grilla(_Row, "DescuentoValor", False, False)

                        End If

                    End If

                End If

            End If


            _Row.Cells("CodVendedor").Value = _CodVendedor
            _Row.Cells("CodFuncionario").Value = _CodVendedor

            _Row.Cells("CodFunAutoriza").Value = _CodFunAutoriza
            _Row.Cells("CodPermiso").Value = _CodPermiso
            _Row.Cells("Tiene_Dscto").Value = _Tiene_Dscto

            _Contador += 1

            If _Contador <> _TblDetalle_StBy.Rows.Count Then
                Sb_Nueva_Linea(_CodLista)
            End If

        Next

        _TblObservaciones.Rows(0).Item("Observaciones") = _TblObservaciones_StBy.Rows(0).Item("Observaciones")
        _TblObservaciones.Rows(0).Item("Forma_pago") = _TblObservaciones_StBy.Rows(0).Item("Forma_pago")
        _TblObservaciones.Rows(0).Item("Orden_compra") = _TblObservaciones_StBy.Rows(0).Item("Orden_compra")

        _TblObservaciones.Rows(0).Item("Placa") = _TblObservaciones_StBy.Rows(0).Item("Placa")
        _TblObservaciones.Rows(0).Item("CodRetirador") = _TblObservaciones_StBy.Rows(0).Item("CodRetirador")

        For _i = 1 To 32

            Dim _Observacion As String = _TblObservaciones_StBy.Rows(0).Item("Obs" & _i)
            _TblObservaciones.Rows(0).Item("Obs" & _i) = Mid(_Observacion, 1, 80)

        Next

        For Each _Fila As DataRow In _TblReferencias_Dte_Stby.Rows

            Dim _Id_Ref = _Fila.Item("Id_Ref")
            Dim _Nudo = _Fila.Item("Nudo")
            Dim _NroLinRef = _Fila.Item("NroLinRef")
            Dim _TpoDocRef = _Fila.Item("TpoDocRef")
            Dim _FolioRef = _Fila.Item("FolioRef")
            Dim _RUTOt = _Fila.Item("RUTOt")
            Dim _IdAdicOtr = _Fila.Item("IdAdicOtr")
            Dim _FchRef = _Fila.Item("FchRef")
            Dim _CodRef = _Fila.Item("CodRef")
            Dim _RazonRef = _Fila.Item("RazonRef")

            _Class_Referencias_DTE.Fx_Row_Nueva_Referencia(_Id_Ref, 0, _Tido, _Nudo,
                                                           _NroLinRef, _TpoDocRef, _FolioRef, _RUTOt, _IdAdicOtr, _FchRef, _CodRef, _RazonRef)

        Next

        Dim FmTagEdo As New Frm_Anotaciones_Ver_Anotaciones(0, Frm_Anotaciones_Ver_Anotaciones.Tipo_Tabla.MAEEDO)
        FmTagEdo.Tbl_Mevento = _Tbl_Mevento_Edo
        FmTagEdo.Dispose()

        For Each _Fila As DataRow In _TblTag_Edo.Rows

            Dim _Archirve = _Fila.Item("Archirve")
            Dim _Kofu = _Fila.Item("Kofu")
            Dim _Fevento As Date = _Fila.Item("Fevento")
            Dim _Kotabla = _Fila.Item("Kotabla")
            Dim _Kocarac = _Fila.Item("Kocarac")
            Dim _Nokocarac = _Fila.Item("Nokocarac")
            Dim _Archise = _Fila.Item("Archirse")
            Dim _Idrse = _Fila.Item("Idrse")
            Dim _Horagrab = _Fila.Item("Horagrab")
            Dim _Fecharef = NuloPorNro(_Fila.Item("Fecharef"), _Fevento)
            Dim _Link = _Fila.Item("Link")
            Dim _Kofudest = _Fila.Item("Kofudest")

            FmTagEdo.Fx_Row_Nueva_Linea(0, _Archirve, 0, _Kofu, _Fevento, _Kotabla, _Kocarac, _Nokocarac, _Archise, _Idrse, _Fecharef, _Link, _Kofudest, _Horagrab)

        Next

        FmTagEdo.Dispose()

        Sb_Formato_Grilla_Detalle()

        Dim _Rev_Usuario_Solicita As Boolean

        If _Revision_Remota Then
            _Rev_Usuario_Solicita = _RowRemota_Notificacion.Item("Rev_Usuario_Solicita")
        End If

        Sb_Borrar_Lineas_En_Blanco()

        For Each _FlPer As DataRow In _TblPermisos_StBy.Rows

            Dim _CodPermiso = _FlPer.Item("CodPermiso")
            Dim _DescripcionPermiso = _FlPer.Item("DescripcionPermiso")
            Dim _Necesita_Permiso = _FlPer.Item("Necesita_Permiso")
            Dim _Autorizado = _FlPer.Item("Autorizado")
            Dim _CodFuncionario_Autoriza = Trim(_FlPer.Item("CodFuncionario_Autoriza"))
            Dim _NomFuncionario_Autoriza = Trim(_FlPer.Item("NomFuncionario_Autoriza"))
            Dim _NroRemota = _FlPer.Item("NroRemota")
            Dim _Permiso_Presencial = _FlPer.Item("Permiso_Presencial")
            Dim _Solicitado_Por_Cadena = _FlPer.Item("Solicitado_Por_Cadena")

            For Each _FlPer2 As DataRow In _TblPermisos.Rows

                Dim _CodPermiso2 = _FlPer2.Item("CodPermiso")

                If _CodPermiso = _CodPermiso2 Then

                    _FlPer2.Item("Necesita_Permiso") = _Necesita_Permiso
                    _FlPer2.Item("Autorizado") = _Autorizado
                    _FlPer2.Item("CodFuncionario_Autoriza") = _CodFuncionario_Autoriza
                    _FlPer2.Item("NomFuncionario_Autoriza") = _NomFuncionario_Autoriza
                    _FlPer2.Item("NroRemota") = _NroRemota
                    _FlPer2.Item("Permiso_Presencial") = _Permiso_Presencial
                    _FlPer2.Item("Solicitado_Por_Cadena") = _Solicitado_Por_Cadena

                    Exit For

                End If

            Next

        Next

        If Not _Solo_Revisar_El_Documento Then

            If _Revisar_Notificacion_Automatica_Remota And Not _Rev_Usuario_Solicita Then

                Dim _NroRemota = _RowRemota_Notificacion.Item("NroRemota")

                Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Casi_DocTom Where Id_DocEnc = " & _Id_DocEnc & " And NombreEquipo = '" & _NombreEquipo & "'"
                _Sql.Ej_consulta_IDU(Consulta_sql)

                Consulta_sql = "Select *,NOKOFU From " & _Global_BaseBk & "Zw_Casi_DocTom 
                                    Left Join TABFU On KOFU = CodFuncionario
                                Where Id_DocEnc = " & _Id_DocEnc
                Dim _Row_Tomado As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                If IsNothing(_Row_Tomado) Then

                    Consulta_sql = "Insert Into " & _Global_BaseBk & "Zw_Casi_DocTom (Id_DocEnc,CodFuncionario,Fecha_Hora,NombreEquipo,NroRemota) Values 
                                (" & _Id_DocEnc & ",'" & FUNCIONARIO & "',Getdate(),'" & _NombreEquipo & "','" & _NroRemota & "')
                                 Update " & _Global_BaseBk & "Zw_Notificaciones Set Mostrar = 0,Autorizado = 1,Rechazado = 1             
                                 Where NroRemota = '" & _NroRemota & "'"
                    _Sql.Ej_consulta_IDU(Consulta_sql)

                Else

                    _Documento_Tomado_Intertanto = True

                End If

            Else

                Dim _Stand_by As Boolean = _TblEncabezado_StBy.Rows(0).Item("Stand_by")

                Fx_Eliminar_Kasidoc_BakApp(_Id_DocEnc, _NombreEquipo, _Stand_by)

                Sb_Revisar_Si_Hay_Archivos_Adjuntos()

            End If

        End If

        Barra_Herramientas_Producto.Enabled = True

        If _Tido = "NVV" And _Cl_DocListaSuperior.UsarVencListaPrecios Then

            If CBool(_Cl_DocListaSuperior.LsDetalleLpSuperior.Count) Then
                If _TblDetalle.Rows(0).Item("CodLista").ToString.Trim = _Cl_DocListaSuperior.LsDetalleLpSuperior.Item(0).Lista.ToString.Trim Then
                    _Cl_DocListaSuperior.ListaSuperiorUtilizada = True
                End If
            End If

        End If

        Sb_Marcar_Grilla()
        Sb_Mostrar_Datos_Producto_Activo(False)

    End Sub

    Sub Sb_Traer_Documento_Minimizado()

        Dim _Ds_Minimizado As New Ds_Matriz_Documentos
        _Ds_Minimizado.Clear()
        _Ds_Minimizado.ReadXml(_Ruta_Documento_Bkp) ', XmlWriteMode.IgnoreSchema)

        Dim _Tido_Minimizado As String = _Ds_Minimizado.Tables("Encabezado_Doc").Rows(0).Item("TipoDoc")

        If _Tido <> _Tido_Minimizado Then
            Return
        End If

        If Not _Post_Venta Then

            Consulta_sql = "Select Top 1 * From TABTIDO Where TIDO = '" & _Tido & "'"
            Dim _RowTido As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            Me.Text = Trim(_RowTido.Item("NOTIDO"))
            Lbl_DocActual.Text = Me.Text

        End If

        _New_Idmaeedo = 0
        Dim _TipoValor = _Global_Row_Configuracion_Estacion.Item("Vnta_TipoValor_Bruto_Neto")

        _Ds_Matriz_Documentos.Clear()
        _Ds_Matriz_Documentos.ReadXml(_Ruta_Documento_Bkp) ', XmlWriteMode.IgnoreSchema)

        _TblEncabezado = _Ds_Matriz_Documentos.Tables("Encabezado_Doc")

        _Idmaeedo_Origen = _TblEncabezado.Rows(0).Item("Idmaeedo_Origen")

        Grilla_Encabezado.DataSource = _TblEncabezado

        Dim _CodEntidad As String = _TblEncabezado.Rows(0).Item("CodEntidad")
        Dim _CodSucEntidad As String = _TblEncabezado.Rows(0).Item("CodSucEntidad")

        _RowEntidad = Nothing
        _RowEntidad_Despacho = Nothing

        If _Documento_Interno Then

            Dim _Rten = Split(RutEmpresa, "-")

            Consulta_sql = "Select Top 1 * From MAEEN Where KOEN = '" & RutEmpresa & "' And TIPOSUC = 'P'"
            _RowEntidad = _Sql.Fx_Get_DataRow(Consulta_sql)

            If IsNothing(_RowEntidad) Then
                Consulta_sql = "Select Top 1 * From MAEEN Where KOEN LIKE '" & _Rten(0) & "%' AND RTEN = '" & _Rten(0) & "' And TIPOSUC = 'P'"
                _RowEntidad = _Sql.Fx_Get_DataRow(Consulta_sql)
            End If

            If IsNothing(_RowEntidad) Then
                Consulta_sql = "Select Top 1 * From MAEEN Where KOEN LIKE '" & _Rten(0) & "%' And TIPOSUC = 'P'"
                _RowEntidad = _Sql.Fx_Get_DataRow(Consulta_sql)
            End If

            If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Guia_Traslado_Interno Or
                   _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Nota_Venta_Interna Or
                   _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Recepcion_Interna Then
                _RowEntidad.Item("KOEN") = RutEmpresa
                _RowEntidad.Item("SUEN") = String.Empty
            End If

            If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Despacho_Interna Then
                _RowEntidad.Item("KOEN") = RutEmpresa
                _RowEntidad.Item("SUEN") = Mod_Sucursal
            End If

        Else

            _RowEntidad = Fx_Traer_Datos_Entidad(_CodEntidad, _CodSucEntidad)

        End If

        Txt_Nombre_Entidad.Text = " " & _RowEntidad.Item("NOKOEN").ToString.Trim

        If Not String.IsNullOrEmpty(Trim(_RowEntidad.Item("KOFUEN"))) Then
            _CodVendedor = _RowEntidad.Item("KOFUEN")
        End If

        Dim _CodEntidadFisica = _TblEncabezado.Rows(0).Item("CodEntidadFisica")
        Dim _CodSucEntidadFisica = _TblEncabezado.Rows(0).Item("CodSucEntidadFisica")

        If Not String.IsNullOrEmpty(_CodEntidadFisica) Then
            _RowEntidad_Despacho = Fx_Traer_Datos_Entidad(_CodEntidad, _CodSucEntidad)
            Lbl_Nombre_Entidad_Fisica.Text = " " & Trim(_RowEntidad_Despacho.Item("NOKOEN"))
        End If


        Fx_Revisar_Si_Hay_Descuentos()

        If _Post_Venta Then
            _Tido = "BLV"
            _RowEntidad = _RowEntidad_X_Defecto
        End If

        ' ESTO SIRVE PARA VINCULAR LA TABLA DE PASO DE LOS DESCUENTOS CON LA TABLA DE PASO DEL DETALLE
        Try
            Dim _ds As Object = _Ds_Matriz_Documentos
            Dim ParentCol As DataColumn = _Ds_Matriz_Documentos.Tables("Detalle_Doc").Columns("Id")
            Dim ChildCol As DataColumn = _Ds_Matriz_Documentos.Tables("Descuentos_Doc").Columns("Id")

            Dim _Dr As New DataRelation("Productos", ParentCol, ChildCol)
            _Dr.Nested = True
            _Ds_Matriz_Documentos.Relations.Add(_Dr)
        Catch ex As Exception

        End Try


        Try
            Dim _ds As Object = _Ds_Matriz_Documentos
            Dim ParentCol As DataColumn = _Ds_Matriz_Documentos.Tables("Detalle_Doc").Columns("Id")
            Dim ChildCol As DataColumn = _Ds_Matriz_Documentos.Tables("Impuestos_Doc").Columns("Id")
            Dim _Dr As New DataRelation("Productos_", ParentCol, ChildCol)
            _Dr.Nested = True
            _Ds_Matriz_Documentos.Relations.Add(_Dr)
        Catch ex As Exception

        End Try


        Try
            Dim _ds As Object = _Ds_Matriz_Documentos
            Dim ParentCol As DataColumn = _Ds_Matriz_Documentos.Tables("Detalle_Doc").Columns("Id")
            Dim ChildCol As DataColumn = _Ds_Matriz_Documentos.Tables("Tbl_Wms").Columns("Id")
            Dim _Dr As New DataRelation("Productos_", ParentCol, ChildCol)
            _Dr.Nested = True
            _Ds_Matriz_Documentos.Relations.Add(_Dr)
        Catch ex As Exception

        End Try

        _TblDetalle = _Ds_Matriz_Documentos.Tables("Detalle_Doc")
        Grilla_Detalle.DataSource = _TblDetalle 'Nothing

        '_Row_PermisosNecesarios = _Ds_Matriz_Documentos.Tables("Permisos_Necesarios_Doc").Rows(0)

        _TipoValor = _TblEncabezado.Rows(0).Item("DocEn_Neto_Bruto")

        If _TipoValor = "N" Then
            ChkValores.Checked = True
        ElseIf _TipoValor = "B" Then
            ChkValores.Checked = False
        End If

        ' Sb_Nueva_Linea(_ListaPrecios)

        LblDescripcion.Text = String.Empty
        Txt_Responsable.Text = " " & Nombre_funcionario_activo

        LblTotalNeto.Text = FormatNumber(0, 0)
        LblTotalIva.Text = FormatNumber(0, 0)
        LblTotalImpuestos.Text = FormatNumber(0, 0)
        LblTotalBruto.Text = FormatNumber(0, 0)

        Grilla_Encabezado.ClearSelection()

        Sb_Formato_Grilla_Encabezado()
        Sb_Formato_Grilla_Detalle()
        Sb_Sumar_Totales()
        Sb_Marcar_Grilla()

        Me.ActiveControl = Grilla_Detalle
        Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(0).Cells("Codigo")

    End Sub

    Private Sub Btn_Revisar_Situacion_Comercial_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Revisar_Situacion_Comercial.Click

        If Fx_Revisar_si_tiene_registros() Then

            If _Revisando_Situacion_Comercial Then

                Chk_Ver_Dscto_Maximo.Visible = (_Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Venta)
                Sb_Revisando_Situacion_Comercial(False)

            Else

                _Mostrar_Costos = Fx_Tiene_Permiso(Me, "Bkp00037", FUNCIONARIO, False)
                _Mostrar_Margen = Fx_Tiene_Permiso(Me, "Bkp00038", FUNCIONARIO, False)

                If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00084", Nothing, "", "") Then
                    Chk_Ver_Dscto_Maximo.Visible = False
                    Sb_Revisando_Situacion_Comercial(True)
                End If

            End If

        End If

        Me.Refresh()

    End Sub

    Sub Sb_Revisando_Situacion_Comercial(ByRef _Abrir_Revisar_Situacion_Comercial As Boolean)

        _Revisando_Situacion_Comercial = _Abrir_Revisar_Situacion_Comercial

        Sb_Botones_Activos(_Revisando_Situacion_Comercial, False)

        If _Revisando_Situacion_Comercial Then

            Sb_Borrar_Lineas_En_Blanco()

            Sb_Revisar_Margenes(Rdb_Costo_PM.Checked, Rdb_Costo_Uc.Checked, Rdb_Costo_Lista.Checked, Cmb_Lista_Costo.SelectedValue)

            Table_Totales_Comerciales.Visible = True
            Table_Metodo_Costeo_Comercial.Visible = True

            Sb_Formato_Grilla_Detalle_Revision_situacion_Comercial()

            Btn_Revisar_Situacion_Comercial.Image = My.Resources.Recursos_Documento._exit 'Imagenes_32x32.Images.Item("exit.png")
            Btn_Revisar_Situacion_Comercial.ImageAlt = My.Resources.Recursos_Documento.exit___copia 'Imagenes_32x32.Images.Item("exit.png")
            Btn_Revisar_Situacion_Comercial.Text = "Seguir con la gestión"

        Else

            Table_Totales_Comerciales.Visible = False
            Table_Metodo_Costeo_Comercial.Visible = False

            Sb_Formato_Grilla_Detalle()
            Sb_Marcar_Grilla()

        End If

        Lbl_Total_costo.Visible = _Mostrar_Costos
        Lbl_Total_Porc_Margen.Visible = _Mostrar_Margen
        Lbl_Total_Valor_Margen.Visible = _Mostrar_Margen

        If Not _Revision_Remota Then
            Btn_Revisar_Situacion_Comercial.Visible = True 'Not _Revisando_Situacion_Comercial
            Me.ControlBox = Not _Revisando_Situacion_Comercial
        End If

        Me.Refresh()

    End Sub

    Private Sub Sb_Rdb_CheckedChanged()
        Sb_Revisando_Situacion_Comercial(True)
    End Sub

    Sub Sb_Revisar_Margenes(_Chk_Costo_Pm As Boolean,
                            _Chk_Costo_UC As Boolean,
                            _Chk_Costo_Lista As Boolean,
                            _Lista_Costo As String)

        Dim _Total_Neto_Sdscto As Double
        Dim _Total_Bruto_Sdcto As Double

        Dim _Total_Dscto_Porc As Double
        Dim _Total_Dscto_Valor As Double

        Dim _Total_Neto As Double
        Dim _Total_Bruto As Double

        Dim _Sub_Total As Double

        Dim _Total_Margen_Porc, _Total_Margen_Valor, _Total_Costo As Double

        For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows

            Dim _Codigo As String = _Fila.Cells("Codigo").Value

            Dim _Cantidad = _Fila.Cells("Cantidad").Value
            Dim _UnTrans = _Fila.Cells("UnTrans").Value
            Dim _Precio = _Fila.Cells("Precio").Value
            Dim _DescuentoPorc = _Fila.Cells("DescuentoPorc").Value
            Dim _DescuentoValor = _Fila.Cells("DescuentoValor").Value
            Dim _PrecioNetoUd = _Fila.Cells("PrecioNetoUd").Value
            Dim _PrecioNetoUdLista = _Fila.Cells("PrecioNetoUdLista").Value
            Dim _PrecioBrutoUd = _Fila.Cells("PrecioBrutoUd").Value
            Dim _PrecioBrutoUdLista = _Fila.Cells("PrecioBrutoUdLista").Value
            Dim _Rtu = _Fila.Cells("Rtu").Value

            Dim _Tict As String = Trim(NuloPorNro(_Fila.Cells("Tict").Value, ""))
            Dim _Tipr As String = Trim(NuloPorNro(_Fila.Cells("Tipr").Value, ""))
            Dim _Prct As Boolean = NuloPorNro(_Fila.Cells("Prct").Value, False)

            Dim _PrecioNetoRealUd1 = _Fila.Cells("PrecioNetoRealUd1").Value
            Dim _PrecioNetoRealUd2 = _Fila.Cells("PrecioNetoRealUd2").Value

            Dim _Tiene_Dscto As Boolean = _Fila.Cells("Tiene_Dscto").Value

            Dim _CodLista = _Fila.Cells("CodLista").Value
            Dim _DescMaximo = _Fila.Cells("DescMaximo").Value
            Dim _PorIva = _Fila.Cells("PorIva").Value
            Dim _PorIla = _Fila.Cells("PorIla").Value
            Dim _ValNetoLinea = _Fila.Cells("ValNetoLinea").Value
            Dim _ValBrutoLinea = _Fila.Cells("ValBrutoLinea").Value

            Dim _PmLinea = _Fila.Cells("PmLinea").Value
            Dim _PmSucLinea = _Fila.Cells("PmSucLinea").Value

            Dim _UltCompraLinea As Double
            Dim _Costo_Lista As Double

            Dim _i = 1

            If String.IsNullOrEmpty(_Tict) And Not String.IsNullOrEmpty(_Tipr) And Not _Prct Then
                _UltCompraLinea = _Sql.Fx_Trae_Dato("MAEPREM", "PPUL0" & _UnTrans,
                                                    "EMPRESA = '" & ModEmpresa_Doc & "' AND KOPR = '" & _Codigo & "'")
                _Costo_Lista = _Sql.Fx_Trae_Dato("TABPRE", "PP0" & _UnTrans & "UD",
                                                 "KOLT = '" & _Lista_Costo & "' And KOPR = '" & _Codigo & "'", True)
            ElseIf _Tict = "D" Then
                _i = 0
            End If


            Dim _Costo As Double

            If Not _Prct Then

                If _Chk_Costo_Pm Then

                    If _UnTrans = 1 Then
                        _Costo = _PmLinea
                    Else
                        _Costo = _PmLinea * _Rtu
                    End If

                ElseIf _Chk_Costo_UC Then
                    _Costo = _UltCompraLinea
                ElseIf _Chk_Costo_Lista Then
                    _Costo = _Costo_Lista
                End If

            End If

            Dim _Total_Costo_Linea As Double = _Costo * _Cantidad
            Dim _Margen_Porc, _Margen_Valor As Double

            If Math.Round(_PrecioNetoUd, 2) < Math.Round(_PrecioNetoUdLista, 2) Then
                _Fila.Cells("Precio").Style.ForeColor = Rojo
            End If

            If _Tiene_Dscto Then

                _Fila.Cells("DescuentoPorc").Style.ForeColor = Rojo
                _Fila.Cells("DescuentoValor").Style.ForeColor = Rojo
                _Fila.Cells("DsctoRealPorc").Style.ForeColor = Rojo
                _Fila.Cells("DsctoRealValor").Style.ForeColor = Rojo

            End If

            'If _DocEn_Neto_Bruto = "N" Then

            _Margen_Valor = 0
            _Margen_Porc = 0

            If Convert.ToBoolean(_ValNetoLinea) Then

                _Margen_Valor = (_ValNetoLinea - _Total_Costo_Linea) * _i
                _Margen_Porc = ((_ValNetoLinea - _Total_Costo_Linea) / _ValNetoLinea) * _i

            End If

            'ElseIf _DocEn_Neto_Bruto = "B" Then
            '_Margen = (_ValBrutoLinea - _Total_Costo_Linea) / _ValBrutoLinea
            'End If

            'Total_Costo,CAST( 0 AS Float) AS Margen_Porc
            _Fila.Cells("Total_Costo").Value = _Total_Costo_Linea
            _Fila.Cells("Margen_Valor").Value = _Margen_Valor
            _Fila.Cells("Margen_Porc").Value = _Margen_Porc


            Dim _DsctoRealPorc = _Fila.Cells("DsctoRealPorc").Value


            _Total_Neto += _ValNetoLinea
            _Total_Bruto += _ValBrutoLinea

            _Total_Neto_Sdscto += _PrecioNetoUdLista * _Cantidad
            _Total_Bruto_Sdcto += _PrecioBrutoUdLista * _Cantidad


            _Total_Costo += _Total_Costo_Linea

            If _Margen_Valor < 0 Then
                _Fila.Cells("Margen_Valor").Style.ForeColor = Rojo
                _Fila.Cells("Margen_Porc").Style.ForeColor = Rojo
            Else
                _Fila.Cells("Margen_Valor").Style.ForeColor = Verde
                _Fila.Cells("Margen_Porc").Style.ForeColor = Verde
            End If

        Next

        _Total_Margen_Porc = (_Total_Neto - _Total_Costo) / _Total_Neto
        _Total_Margen_Valor = _Total_Neto - _Total_Costo

        If ChkValores.Checked Then
            _Total_Dscto_Valor = _Total_Neto_Sdscto - _Total_Neto
            _Total_Dscto_Porc = _Total_Dscto_Valor / _Total_Neto_Sdscto
            _Sub_Total = _Total_Neto_Sdscto
        Else 'If _DocEn_Neto_Bruto = "N" Then
            _Total_Dscto_Valor = _Total_Bruto_Sdcto - _Total_Bruto
            _Total_Dscto_Porc = _Total_Dscto_Valor / _Total_Bruto_Sdcto
            _Sub_Total = _Total_Bruto_Sdcto
        End If

        If _Total_Dscto_Porc < 0 Then
            _Total_Dscto_Porc = 0
        End If

        Dim _Dscto_Global As Double = Math.Round(_Total_Dscto_Porc, 4)

        _TblEncabezado.Rows(0).Item("Total_costo") = _Total_Costo
        _TblEncabezado.Rows(0).Item("Total_Porc_Margen") = _Total_Margen_Porc
        _TblEncabezado.Rows(0).Item("Total_Valor_Margen") = _Total_Margen_Valor
        _TblEncabezado.Rows(0).Item("Total_Porc_Dscto") = _Total_Dscto_Porc
        _TblEncabezado.Rows(0).Item("Total_Sub_Total_Neto") = _Sub_Total

        Lbl_Total_costo.Text = FormatNumber(_Total_Costo, 0)
        Lbl_Total_Porc_Margen.Text = FormatPercent(_Total_Margen_Porc, 2)
        Lbl_Total_Valor_Margen.Text = FormatNumber(_Total_Margen_Valor, 0)
        Lbl_Total_Porc_Dscto.Text = FormatPercent(_Total_Dscto_Porc, 2)
        Lbl_Total_Sub_Total_Neto.Text = FormatNumber(_Sub_Total, 0)

    End Sub

    Private Sub BtnProductosSolicitados_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Productos_Solicitados_Bodega.Click

        Dim _Fila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index)

        Dim _Codigo = _Fila.Cells("Codigo").Value
        Dim _Descripcion = _Fila.Cells("Descripcion").Value
        Dim _Sucursal = _Fila.Cells("Sucursal").Value
        Dim _Bodega = _Fila.Cells("Bodega").Value
        Dim _Ubicacion = _Fila.Cells("UbicacionBod").Value

        Dim _Sol As New Clase_Solicita_Producto_Bodega
        If Not _Sol.Fx_Tiene_Prod_Solicitados_Bodega(Me, FUNCIONARIO, False, True) Then
            'Sb_Marcar_Grilla()
            'Else
            Beep()
            ToastNotification.Show(Me, "NO TIENE SOLICITUD DE PRODUCTOS PENDIENTES", My.Resources.cross,
                                   1 * 1000, eToastGlowColor.Red, eToastPosition.MiddleCenter)
        End If

        Call Btn_Refrescar_Stock_X_Linea_Click(Nothing, Nothing)

        'Sb_Botones_Activos(False)

    End Sub

    Private Sub Btn_Cambiar_Tipo_Documento_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Cambiar_Tipo_Documento.Click

        If _Post_Venta Or _Tido_Original = "BLV" Then
            Fx_Cambiar_Tipo_Documentos_Post_Venta()
        End If

    End Sub

    Function Fx_Cambiar_Tipo_Documentos_Post_Venta() As Boolean

        Dim _Total_Documento As Double = LblTotalBruto.Tag

        Dim _CodEntidad_X_Defecto = _RowEntidad_X_Defecto.Item("KOEN")

        Sb_Grilla_Detalle_Eventos(False)
        Me.Enabled = False

        Try

            Dim _CodEntidad As String
            Dim _No_EntXDefecto As Boolean

            Dim _ListaPrecios = Trim(Grilla_Encabezado.Rows(0).Cells("ListaPrecios").Value)
            Dim _Valores_Old_Neto As Boolean = ChkValores.Checked

            Dim Fm As New Frm_Formulario_Cambiar_Doc_Venta(_Tido, _Post_Venta)
            Fm.BtnCotizacion.Enabled = Not _Desde_Prestahop
            Fm.ShowDialog(Me)

            Dim _Cambiar_Entidad = False

            If Fm.Pro_Tido_Seleccionado = Frm_Formulario_Cambiar_Doc_Venta.Enum_Documento.BLV Or
               Fm.Pro_Tido_Seleccionado = Frm_Formulario_Cambiar_Doc_Venta.Enum_Documento.COV Then

                If Fx_Tiene_Permiso(Me, "NO00003",, False) Then

                    If Not IsNothing(_RowEntidad) Then

                        Dim _CodEntidad_Doc = _RowEntidad.Item("KOEN")

                        If _CodEntidad_Doc.ToString.Trim = _CodEntidad_X_Defecto.ToString.Trim Then

                            MessageBoxEx.Show(Me, UCase("No puede hacer documentos con la entidad por defecto" & vbCrLf &
                                              "Debe seleccionar otra entidad para poder grabar el documento"), "Restricción N° NO00003",
                                              MessageBoxButtons.OK, MessageBoxIcon.Stop)
                            _No_EntXDefecto = True
                            _Cambiar_Entidad = True

                        End If

                    End If

                End If

            End If

            If Not _Cambiar_Entidad Then
                If Fm.Pro_Tido_Seleccionado.ToString = _Tido Then Return True
                If Fm.Pro_Tido_Seleccionado = Frm_Formulario_Cambiar_Doc_Venta.Enum_Documento.Ninguno Then Return False
            End If

            If _Tido = "BLV" Or _Tido = "COV" Then

                Dim _RowNuevaEntidad As DataRow

                If Fm.Pro_Tido_Seleccionado = Frm_Formulario_Cambiar_Doc_Venta.Enum_Documento.FCV Or
                    Fm.Pro_Tido_Seleccionado = Frm_Formulario_Cambiar_Doc_Venta.Enum_Documento.NVV Or _Cambiar_Entidad Then

                    Dim _Actualizar_Entidad As Boolean

                    If Not (_RowEntidad Is Nothing) Then

                        _CodEntidad = _RowEntidad.Item("KOEN")

                        If _CodEntidad_X_Defecto.ToString.Trim = _CodEntidad.ToString.Trim Then

                            If Not _Cambiar_Entidad Then
                                MessageBoxEx.Show(Me, "Debe seleccionar una entidad para el documento", "Validación",
                                              MessageBoxButtons.OK, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, Me.TopMost)
                            End If

                            _Actualizar_Entidad = True

                        End If

                    Else
                        _Actualizar_Entidad = True
                    End If

                    If _Actualizar_Entidad Then

                        _RowNuevaEntidad = Fx_Buscar_Entidad(Me, "", "", True, True)

                        If Not (_RowNuevaEntidad Is Nothing) Then

                            If _No_EntXDefecto Then

                                _CodEntidad = _RowNuevaEntidad.Item("KOEN")

                                If _CodEntidad_X_Defecto.ToString.Trim = _CodEntidad.ToString.Trim Then
                                    MessageBoxEx.Show(Me, "No puede usar esta entidad", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                                    Return False
                                End If

                            End If

                            _RowEntidad = _RowNuevaEntidad
                            Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, True)
                        Else
                            Return False
                        End If
                    End If

                End If

            End If

            _Tido = Fm.Pro_Tido_Seleccionado.ToString

            If _Tido = "BLV" Then

                If _Post_Venta Then
                    If IsNothing(_RowEntidad) Then
                        _RowEntidad = _RowEntidad_X_Defecto
                    End If
                    Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, False)
                End If

            End If

            If Not (_Tido Is Nothing) Then

                Sb_Borrar_Lineas_En_Blanco()

                Dim _Meardo = _Sql.Fx_Trae_Dato("TABTIDO", "MEARDO", "TIDO = '" & _Tido & "'")

                If _Meardo = "N" Then
                    ChkValores.Checked = True
                ElseIf _Meardo = "B" Then
                    ChkValores.Checked = False
                End If

                Sb_Formato_Grilla_Detalle()

                Dim _ListaPrecios_Actual = Trim(Grilla_Encabezado.Rows(0).Cells("ListaPrecios").Value)

                Dim _Quitar_descuentos As Boolean

                If _ListaPrecios <> _ListaPrecios_Actual Then

                    _Quitar_descuentos = True
                    Grilla_Encabezado.Rows(0).Cells("Vizado").Value = False

                    MessageBoxEx.Show(Me, "La lista de precios es distinta a la lista de origen" & Environment.NewLine &
                                      "Los descuentos asignados se quitaran", "Cambio en la lista de precios",
                                      MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, Me.TopMost)

                Else

                    _Quitar_descuentos = (Not _Post_Venta And _Tido = "FCV")

                End If


                Dim _Tiene_Registros As Boolean = Fx_Revisar_si_tiene_registros(False)

                If _Tiene_Registros Then

                    For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows

                        Dim _Id = _Fila.Cells("Id").Value
                        Dim _Codigo As String = _Fila.Cells("Codigo").Value
                        Dim _Descripcion As String = _Fila.Cells("Descripcion").Value

                        Dim _Cantidad = NuloPorNro(_Fila.Cells("Cantidad").Value, 0)
                        Dim _UnTrans = _Fila.Cells("UnTrans").Value

                        Dim _Prct As Boolean = _Fila.Cells("Prct").Value
                        Dim _Tipr As String = _Fila.Cells("Tipr").Value

                        Dim _PrecioNetoUd As Double = _Fila.Cells("PrecioNetoUd").Value
                        Dim _PrecioBrutoUd As Double = _Fila.Cells("PrecioBrutoUd").Value

                        Dim _DescuentoPorc As Double = _Fila.Cells("DescuentoPorc").Value
                        Dim _Tiene_Dscto As Boolean = NuloPorNro(_Fila.Cells("Tiene_Dscto").Value, False)
                        Dim _CodFunAutoriza As String = _Fila.Cells("CodFunAutoriza").Value

                        Dim _Potencia = _Fila.Cells("Potencia").Value
                        Dim _Operacion = _Fila.Cells("Operacion").Value

                        Dim _Id_Oferta = _Fila.Cells("Id_Oferta").Value
                        Dim _Oferta = _Fila.Cells("Oferta").Value
                        Dim _Es_Padre_Oferta = _Fila.Cells("Es_Padre_Oferta").Value
                        Dim _Padre_Oferta = _Fila.Cells("Padre_Oferta").Value
                        Dim _Hijo_Oferta = _Fila.Cells("Hijo_Oferta").Value
                        Dim _Aplica_Oferta = _Fila.Cells("Aplica_Oferta").Value
                        Dim _Cantidad_Oferta = _Fila.Cells("Cantidad_Oferta").Value
                        Dim _Porcdesc_Oferta = _Fila.Cells("Porcdesc_Oferta").Value

                        If _Prct Then

                            Consulta_sql = "Select * From TABCT Where KOCT = '" & _Codigo & "'"
                            Dim _RowConcepto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                            Sb_Agregar_Concepto(_Fila, _RowConcepto)

                        Else

                            Consulta_sql = "Select Top 1 * From MAEPR Where KOPR = '" & _Codigo & "'"
                            Dim _RowProducto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                            Sb_Traer_Producto_Grilla(_Fila, _RowProducto, True, _UnTrans, False)

                        End If

                        _Fila.Cells("Id_Oferta").Value = _Id_Oferta
                        _Fila.Cells("Oferta").Value = _Oferta
                        _Fila.Cells("Es_Padre_Oferta").Value = _Es_Padre_Oferta
                        _Fila.Cells("Padre_Oferta").Value = _Padre_Oferta
                        _Fila.Cells("Hijo_Oferta").Value = _Hijo_Oferta
                        _Fila.Cells("Aplica_Oferta").Value = _Aplica_Oferta
                        _Fila.Cells("Cantidad_Oferta").Value = _Cantidad_Oferta
                        _Fila.Cells("Porcdesc_Oferta").Value = _Porcdesc_Oferta

                        _Fila.Cells("Descripcion").Value = _Descripcion
                        _Fila.Cells("Cantidad").Value = _Cantidad

                        Sb_Procesar_Datos_De_Grilla(_Fila, "Cantidad", True, False)

                        If _Quitar_descuentos Then

                            _Fila.Cells("CodFunAutoriza").Value = "xyz"
                            _Fila.Cells("Tiene_Dscto").Value = False
                            Eliminar_Campos(_Ds_Matriz_Documentos.Tables("Descuentos"), _Id)

                        Else

                            If _Tiene_Dscto Or CBool(_DescuentoPorc) Then

                                If ChkValores.Checked Then
                                    _Fila.Cells("Precio").Value = _PrecioNetoUd
                                Else
                                    _Fila.Cells("Precio").Value = _PrecioBrutoUd
                                End If

                                _Fila.Cells("CodFunAutoriza").Value = _CodFunAutoriza
                                Sb_Procesar_Datos_De_Grilla(_Fila, "Precio", True, False)

                                If _DescuentoPorc > 0 Then

                                    _Fila.Cells("CodFunAutoriza").Value = _CodFunAutoriza
                                    _Fila.Cells("DescuentoPorc").Value = _DescuentoPorc
                                    Sb_Procesar_Datos_De_Grilla(_Fila, "DescuentoPorc", False, False)

                                End If

                            End If

                        End If

                    Next

                End If

                For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows

                    Dim _Es_Padre_Oferta = _Fila.Cells("Es_Padre_Oferta").Value

                    If _Es_Padre_Oferta Then
                        Sb_Editar_Oferta(_Fila)
                    End If

                Next

                Dim _NroDocumento = Traer_Numero_Documento(_Tido, , , , False)

                Grilla_Encabezado.Rows(0).Cells("NroDocumento").Value = _NroDocumento
                Grilla_Encabezado.Rows(0).Cells("TipoDoc").Value = _Tido

                'If _Post_Venta Then

                '    For Each _Fl As DataRow In _TblPermisos.Rows

                '        Dim _Permiso = _Fl.Item("CodPermiso")

                '        If _Fl.Item("CodPermiso") = "Bkp00012" Or _Fl.Item("CodPermiso") = "Doc00075" Then

                '            Dim _Cambiar_Permiso = False

                '            If _Permiso = "Bkp00012" And _Tido = "COV" Then
                '                _Permiso = "Doc00075"
                '                _Cambiar_Permiso = True
                '            End If

                '            If _Permiso = "Doc00075" And _Tido <> "COV" Then
                '                _Permiso = "Bkp00012"
                '                _Cambiar_Permiso = True
                '            End If

                '            If _Cambiar_Permiso Then

                '                _Fl.Item("CodPermiso") = String.Empty
                '                _Fl.Item("DescripcionPermiso") = String.Empty
                '                _Fl.Item("Necesita_Permiso") = False
                '                _Fl.Item("Autorizado") = False
                '                _Fl.Item("CodFuncionario_Autoriza") = String.Empty
                '                _Fl.Item("NroRemota") = String.Empty
                '                _Fl.Item("Permiso_Presencial") = False
                '                _Fl.Item("Solicitado_Por_Cadena") = False
                '                _Fl.Item("PermisoIndependiente") = False
                '                _Fl.Item("Solicitar_Permiso_Al_Final") = False

                '                _CodEntidad = _TblEncabezado.Rows(0).Item("CodEntidad")
                '                Dim _CodSucEntidad As String = _TblEncabezado.Rows(0).Item("CodSucEntidad")

                '                If Fx_Tiene_Permiso(Me, _Permiso,, False) Then
                '                    Fx_Incorporar_Permiso_Al_Documento(_TblPermisos, _Permiso, True, True, FUNCIONARIO, Nombre_funcionario_activo, "", True, True, False)
                '                Else
                '                    Fx_Incorporar_Permiso_Al_Documento(_TblPermisos, _Permiso, True, False, "", "", "", False, True, True)
                '                    MessageBoxEx.Show(Me, "Se solicitara permiso por modificar los precios de los productos", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                '                End If
                '                Exit For

                '            End If

                '        End If

                '    Next

                'End If



                Me.Refresh()

                'ToastNotification.Show(Me, "Archivo Xml guardado correctamente" & Environment.NewLine &
                '               "Ruta esta en el portapapeles", My.Resources.ok_button,
                '                        3 * 1000, eToastGlowColor.Green, eToastPosition.MiddleCenter)

                If Not _Post_Venta Then
                    Me.Text = _Sql.Fx_Trae_Dato("TABTIDO", "NOTIDO", "TIDO = '" & _Tido & "'").ToString.Trim
                    Lbl_DocActual.Text = Me.Text
                End If

                Me.ActiveControl = Grilla_Detalle
                Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(0).Cells("Codigo")

                Sb_Formato_Grilla_Encabezado()

                If _Total_Documento <> LblTotalBruto.Tag Then

                    MessageBoxEx.Show(Me, "Los valores pueden haber cambiado por factores de revisión en base al cliente seleccionado." & vbCrLf &
                                      "Por favor vuelva a revisar los precios y descuentos de los productos", "Valores cambiados",
                                      MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
                    Return False

                End If

                Return True

            End If

        Catch ex As Exception
            MessageBoxEx.Show(Me, ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
        Finally

            If _Tido = "BLV" Or _Tido = "FCV" Then
                If _Post_Venta Then
                    _TblEncabezado.Rows(0).Item("Es_ValeTransitorio") = 1
                End If
            Else
                _TblEncabezado.Rows(0).Item("Es_ValeTransitorio") = 0
            End If


            _TblEncabezado.Rows(0).Item("Es_Electronico") = Fx_Es_Electronico(_Tido)
            Sb_Grilla_Detalle_Eventos(True)
            Me.Enabled = True

        End Try

    End Function

    Private Sub BtnLimpiar_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Limpiar.Click

        Sb_Limpiar(ModModalidad_Doc, True)

        Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Casi_DocTom Where NombreEquipo = '" & _NombreEquipo & "'"
        _Sql.Ej_consulta_IDU(Consulta_sql)

    End Sub

    Sub Sb_Limpiar(_Modalidad As String,
                   Optional _Preguntar As Boolean = False,
                   Optional _Cambiar_Tido As Boolean = True)

        Dim _Limpiar As Boolean

        If _Preguntar Then

            Try

                Dim _Descripcion = NuloPorNro(Grilla_Detalle.Rows(0).Cells("Descripcion").Value, String.Empty)

                If Not String.IsNullOrEmpty(_Descripcion) Then

                    Dim dlg As System.Windows.Forms.DialogResult =
                      MessageBoxEx.Show(Me, "¿Esta seguro de querer limipar todo el documento?",
                             "Limpiar documento", MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1, Me.TopMost)

                    If dlg = System.Windows.Forms.DialogResult.Yes Then
                        _Limpiar = True
                    End If

                Else
                    _Limpiar = True
                End If


            Catch ex As Exception
                _Limpiar = True
            End Try
        Else
            _Limpiar = True
        End If


        If _Limpiar Then

            _Tido = _Tido_Original

            If Not Directory.Exists(AppPath() & "\Data\" & RutEmpresa & "\BkPost") Then
                System.IO.Directory.CreateDirectory(AppPath() & "\Data\" & RutEmpresa & "\BkPost")
            End If

            If Not Directory.Exists(AppPath() & "\Data\" & RutEmpresa & "\BkPost\DC_En_Construccion") Then
                System.IO.Directory.CreateDirectory(AppPath() & "\Data\" & RutEmpresa & "\BkPost\DC_En_Construccion")
            End If

            If Not Directory.Exists(AppPath() & "\Data\" & RutEmpresa & "\BkPost\DC_En_Construccion\Modalidad " & ModModalidad_Doc) Then
                System.IO.Directory.CreateDirectory(AppPath() & "\Data\" & RutEmpresa & "\BkPost\DC_En_Construccion\Modalidad " & ModModalidad_Doc)
            End If

            _Ruta_Documento_Bkp = AppPath() & "\Data\" & RutEmpresa & "\BkPost\DC_En_Construccion\Modalidad " & ModModalidad_Doc & "\DC_" & _Tido & ".xml"

            If CBool(_Idmaeedo_Origen) Then

                Dim Cerrar_Doc As New Clas_Cerrar_Documento
                Consulta_sql = "Select * From MAEDDO Where IDMAEEDO = " & _Idmaeedo_Origen
                Dim _Tbl_Origen As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)
                Cerrar_Doc.Fx_Abrir_Documento(_Idmaeedo_Origen, _Tbl_Origen)

            End If

            If Not IsNothing(_TblPermisos) Then

                For Each _Fl As DataRow In _TblPermisos.Rows

                    Dim _PermisoIndependiente As Boolean = _Fl.Item("PermisoIndependiente")
                    Dim _NroRemota As String = NuloPorNro(_Fl.Item("NroRemota"), "")

                    If _PermisoIndependiente And Not String.IsNullOrEmpty(_NroRemota) Then
                        Consulta_sql = "Update " & _Global_BaseBk & "Zw_Remotas Set Eliminada = 1, Observaciones = 'El documento no se grabo'" & vbCrLf &
                                       "Where NroRemota = '" & _NroRemota & "' And Idmaeedo = 0"
                        _Sql.Ej_consulta_IDU(Consulta_sql)
                    End If

                Next

            End If

            _Idmaeedo_Origen = 0
            _Editar_documento = False

            _CodVendedor = FUNCIONARIO

            ModModalidad_Doc = _Modalidad

            Dim _Mod As New Clas_Modalidades

            _Mod.Sb_Actualiza_Formatos_X_Modalidad()
            _Global_Row_Configuracion_General = _Mod.Fx_Sql_Trae_Modalidad(Clas_Modalidades.Enum_Modalidad.General, "")
            _Global_Row_Configuracion_Estacion = _Mod.Fx_Sql_Trae_Modalidad(Clas_Modalidades.Enum_Modalidad.Estacion, ModModalidad_Doc)
            _Mod.Sb_Actualizar_Variables_Modalidad(ModModalidad_Doc)

            If Not IsNothing(_Global_Frm_Menu) Then _Global_Frm_Menu.Refresh()

            Sb_Nuevo_Doc(_Cambiar_Tido)
            Sb_Botones_Activos(False, True)
            Sb_Revisar_Si_Hay_Archivos_Adjuntos()

            Grilla_Encabezado.Focus()
            If _Tido = "GRC" Or _Tido = "FCC" Or _Tido = "GRD" Then
                Grilla_Encabezado.CurrentCell = Grilla_Encabezado.Rows(0).Cells("NroDocumento")
            Else
                Grilla_Encabezado.CurrentCell = Grilla_Encabezado.Rows(0).Cells("CodEntidad")
            End If

        End If

        If _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Configuracion", "Conservar_Bodega_Sig_Linea_Venta") Then
            Chk_Conservar_Bodega_Sig_Linea_Venta.Checked = _Global_Row_Configuracion_Estacion.Item("Conservar_Bodega_Sig_Linea_Venta")
        Else
            Chk_Conservar_Bodega_Sig_Linea_Venta.Visible = False
        End If

    End Sub

    Function Fx_Limpiar(_Modalidad As String) As LsValiciones.Mensajes

        _Tido = _Tido_Original

        Dim _Mensaje As New LsValiciones.Mensajes

        Try

            If Not Directory.Exists(AppPath() & "\Data\" & RutEmpresa & "\BkPost") Then
                System.IO.Directory.CreateDirectory(AppPath() & "\Data\" & RutEmpresa & "\BkPost")
            End If

            If Not Directory.Exists(AppPath() & "\Data\" & RutEmpresa & "\BkPost\DC_En_Construccion") Then
                System.IO.Directory.CreateDirectory(AppPath() & "\Data\" & RutEmpresa & "\BkPost\DC_En_Construccion")
            End If

            If Not Directory.Exists(AppPath() & "\Data\" & RutEmpresa & "\BkPost\DC_En_Construccion\Modalidad " & ModModalidad_Doc) Then
                System.IO.Directory.CreateDirectory(AppPath() & "\Data\" & RutEmpresa & "\BkPost\DC_En_Construccion\Modalidad " & ModModalidad_Doc)
            End If

            _Ruta_Documento_Bkp = AppPath() & "\Data\" & RutEmpresa & "\BkPost\DC_En_Construccion\Modalidad " & ModModalidad_Doc & "\DC_" & _Tido & ".xml"

            'If CBool(_Idmaeedo_Origen) Then

            '    Dim Cerrar_Doc As New Clas_Cerrar_Documento

            '    Consulta_sql = "Select * From MAEDDO Where IDMAEEDO = " & _Idmaeedo_Origen
            '    Dim _Tbl_Origen As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql, False)

            '    Cerrar_Doc.Fx_Abrir_Documento(_Idmaeedo_Origen, _Tbl_Origen)

            'End If

            'If Not IsNothing(_TblPermisos) Then
            '    For Each _Fl As DataRow In _TblPermisos.Rows

            '        Dim _PermisoIndependiente As Boolean = _Fl.Item("PermisoIndependiente")
            '        Dim _NroRemota As String = NuloPorNro(_Fl.Item("NroRemota"), "")

            '        If _PermisoIndependiente And Not String.IsNullOrEmpty(_NroRemota) Then
            '            Consulta_sql = "Update " & _Global_BaseBk & "Zw_Remotas Set Eliminada = 1, Observaciones = 'El documento no se grabo'" & vbCrLf &
            '                           "Where NroRemota = '" & _NroRemota & "' And Idmaeedo = 0"
            '            _Sql.Ej_consulta_IDU(Consulta_sql)
            '        End If

            '    Next
            'End If

            _Idmaeedo_Origen = 0
            _Editar_documento = False

            _CodVendedor = FUNCIONARIO

            ModModalidad_Doc = _Modalidad

            Dim _Mod As New Clas_Modalidades

            _Mod.Sb_Actualiza_Formatos_X_Modalidad(False)
            _Global_Row_Configuracion_General = _Mod.Fx_Sql_Trae_Modalidad(Clas_Modalidades.Enum_Modalidad.General, "", False, ModEmpresa_Doc)
            _Global_Row_Configuracion_Estacion = _Mod.Fx_Sql_Trae_Modalidad(Clas_Modalidades.Enum_Modalidad.Estacion, ModModalidad_Doc, False, ModEmpresa_Doc)
            _Mod.Sb_Actualizar_Variables_Modalidad(ModModalidad_Doc, False, ModEmpresa_Doc)

            If Not IsNothing(_Global_Frm_Menu) Then _Global_Frm_Menu.Refresh()

            _Mensaje.Mensaje = Fx_Nuevo_Doc_Auto(False)

            If Not String.IsNullOrEmpty(_Mensaje.Mensaje) Then
                Throw New System.Exception(_Mensaje.Mensaje)
            End If

            _Mensaje.EsCorrecto = True

        Catch ex As Exception
            _Mensaje.Mensaje = ex.Message
            _Mensaje.EsCorrecto = False
        End Try

        Return _Mensaje

    End Function

    Private Sub Grilla_Encabezado_KeyDown(sender As System.Object, e As System.Windows.Forms.KeyEventArgs) Handles Grilla_Encabezado.KeyDown

        Dim _Cabeza = Grilla_Encabezado.Columns(Grilla_Encabezado.CurrentCell.ColumnIndex).Name
        Dim _Tecla As Keys = e.KeyValue

        If _Tecla = Keys.Enter Then

            SendKeys.Send("{F2}") 'RIGHt

            e.SuppressKeyPress = True
            e.Handled = True

            Call Grilla_Encabezado_CellDoubleClick(Nothing, Nothing)

        ElseIf _Tecla = Keys.Delete Then

            If _Cabeza = "Centro_Costo" Then

                If MessageBoxEx.Show(Me, "¿Esta seguro de querer quitar el Centro de costo?", "Quitar Centro de costo",
                                     MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1, Me.TopMost) = DialogResult.Yes Then
                    _TblEncabezado.Rows(0).Item("Centro_Costo") = String.Empty
                End If

            End If

        ElseIf _Tecla = Keys.Tab Then

            Grilla_Detalle.Focus()
            Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(0).Cells("Codigo")

            Grilla_Encabezado.ClearSelection()

            e.SuppressKeyPress = False
            e.Handled = True

        End If

    End Sub

    Private Sub Grilla_Encabezado_CellDoubleClick(sender As System.Object, e As System.Windows.Forms.DataGridViewCellEventArgs) Handles Grilla_Encabezado.CellDoubleClick

        Try

            Dim _FilaEnc As DataGridViewRow = Grilla_Encabezado.Rows(0)
            Dim _Cabeza = Grilla_Encabezado.Columns(Grilla_Encabezado.CurrentCell.ColumnIndex).Name

            _Fila_Clonada_Enc = Fx_Clonar_Fila_Grilla(_FilaEnc)

            Select Case _Cabeza

                Case "Sucursal", "Modalidad", "CodFuncionario", "ListaPrecios", "CodEntidad", "CodSucEntidad", "Centro_Costo", "NroDocumento", "FechaEmision"

                    If _Bloquear_Edicion_Detalle Then
                        MessageBoxEx.Show(Me, "Documento bloquedo para su edición", "Validación",
                                          MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxButtons.OK, Me.TopMost)
                        Return
                    End If

                    Dim _Vizado As Boolean = Grilla_Encabezado.Rows(0).Cells("Vizado").Value

                    If _Cabeza = "FechaEmision" Then

                        If _Vizado Then
                            If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00052", _Ds_Matriz_Documentos) Then
                                _Vizado = False
                            End If
                        Else

                            If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Venta Then
                                If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00090", Nothing) Then
                                    Return
                                End If
                            End If
                        End If

                    End If

                    If _Vizado Then
                        MessageBoxEx.Show(Me, "Documento Visado", "Validación",
                                          MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxButtons.OK, Me.TopMost)
                        Return
                    End If

                    If _Revision_Remota Then Return

                    Select Case _Cabeza

                        Case "Sucursal", "Modalidad"

                            Sb_Cambiar_Modalidad()

                        Case "CodFuncionario"

                        'Sb_Cambiar_Funcionario()

                        Case "CodEntidad"

                            Dim _CodEntidad_X_Defecto As String

                            If _Post_Venta Then
                                _CodEntidad_X_Defecto = _RowEntidad_X_Defecto.Item("KOEN")
                            End If

                            Dim _Actualizar_Entidad As Boolean

                            If _Post_Venta Then

                                If Not (_RowEntidad Is Nothing) Then

                                    Dim _CodEntidad = _RowEntidad.Item("KOEN")

                                    If Trim(_CodEntidad_X_Defecto) = Trim(_CodEntidad) Then
                                        _Actualizar_Entidad = True
                                    End If

                                Else

                                    If _Tido = "BLV" Then
                                        _Actualizar_Entidad = True
                                    Else
                                        Beep()
                                    End If

                                End If

                            Else

                                If (_RowEntidad Is Nothing) Then
                                    _Actualizar_Entidad = True
                                Else

                                    If Not Fx_Revisar_si_tiene_registros(False) And _Tido = "BLV" Then
                                        _Actualizar_Entidad = True
                                    Else

                                        If _Tido = "GRI" Then

                                            Dim _SucEntidad As String = _RowEntidad.Item("SUEN")

                                            If Not String.IsNullOrEmpty(_TblEncabezado.Rows(0).Item("CodSucEntidad")) And _Tido = "NVI" Then
                                                Return
                                            End If

                                            If String.IsNullOrEmpty(_TblEncabezado.Rows(0).Item("CodSucEntidad")) Then
                                                If Not CBool(_TblDetalle.Rows(0).Item("Nuevo_Producto")) Then
                                                    MessageBoxEx.Show(Me, "Ya existen registros en el detalle" & vbCrLf &
                                                                      "Debe limpiar el documento para poder hacer esta gestión", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                                                    Return
                                                End If
                                            End If

                                            Call Grilla_Encabezado_CellEndEdit(Nothing, Nothing)

                                        End If

                                        Beep()

                                    End If

                                End If

                            End If

                            If _Actualizar_Entidad Then

                                Try
                                    Grilla_Encabezado.Columns(_Cabeza).ReadOnly = False
                                    Grilla_Encabezado.BeginEdit(True)
                                Catch ex As Exception

                                End Try

                            End If

                        Case "ListaPrecios"

                            Dim _TipoMoneda = _TblEncabezado.Rows(0).Item("TipoMoneda")

                            If Not Fx_Revisar_encabezado() Then
                                Return
                            End If

                            If Fx_Cambiar_ListaPrecios(_TipoMoneda) Then

                                Dim _CodLista = _TblEncabezado.Rows(0).Item("ListaPrecios")

                                Consulta_sql = "Select * From TABPP Inner Join TABMO On MOLT = KOMO Where KOLT = '" & _CodLista & "'"
                                Dim _RowMoneda_Det As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                                For Each _Fila As DataRow In _TblDetalle.Rows

                                    Dim _Nuevo_Producto As Boolean = _Fila.Item("Nuevo_Producto")

                                    If _Nuevo_Producto Then

                                        _Fila.Item("CodLista") = _RowMoneda_Det.Item("KOLT")
                                        _Fila.Item("Moneda") = _RowMoneda_Det.Item("KOMO")
                                        _Fila.Item("Tipo_Cambio") = _RowMoneda_Det.Item("VAMO")
                                        _Fila.Item("Tipo_Moneda") = _RowMoneda_Det.Item("TIMO")
                                        _Fila.Item("Tasadorig") = _TblEncabezado.Rows(0).Item("Tasadorig_Doc")

                                    End If

                                Next

                                Sb_Mostrar_Datos_Producto_Activo(False)

                            End If

                        Case "CodSucEntidad"

                            If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Guia_Traslado_Interno Or
                               _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Nota_Venta_Interna Then

                                Dim _SucEntidad As String = _RowEntidad.Item("SUEN")

                                If Not String.IsNullOrEmpty(_TblEncabezado.Rows(0).Item("CodSucEntidad")) And _Tido = "NVI" Then
                                    Return
                                End If

                                If Not Fx_Incorporar_Sucursal_Recepcion() Then
                                    Return
                                End If

                                If _Tido = "GTI" Then
                                    Call Grilla_Encabezado_CellEndEdit(Nothing, Nothing)
                                End If

                                If _Tido = "NVI" Then

                                    'MessageBoxEx.Show(Me, "2.- Ahora debe ingresar la bodega desde donde se enviaran los productos" & vbCrLf &
                                    '                  "Bodega de origen", "Validación",
                                    '              MessageBoxButtons.OK, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, Me.TopMost)

                                    Dim Fm_Bd As New Frm_Seleccionar_Bodega_Grilla("")
                                    Fm_Bd.Text = "SELECCIONE LA BODGEA DE ORIGEN DE LOS PRODUCTOS (Bodega que despachara los productos)"
                                    Fm_Bd.Pro_Pedir_Permiso = False
                                    Fm_Bd.ShowDialog(Me)
                                    Dim _Row_Bodega_Destino As DataRow = Fm_Bd.Pro_Row_Bodega
                                    Fm_Bd.Dispose()

                                    If Not _Row_Bodega_Destino Is Nothing Then

                                        Dim _Empresa_Sel = _Row_Bodega_Destino.Item("EMPRESA")
                                        Dim _Sucursal_Sel = _Row_Bodega_Destino.Item("KOSU")
                                        Dim _Bodega_Sel = _Row_Bodega_Destino.Item("KOBO")

                                        If _Global_Row_Configuracion_Estacion.Item("NVIQuedaSUDOSucEnvia") Then
                                            _TblEncabezado.Rows(0).Item("Sucursal") = _Row_Bodega_Destino.Item("KOSU")
                                        End If

                                        Dim _Permiso = "BNVI" & _Empresa_Sel & _Sucursal_Sel & _Bodega_Sel

                                        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, _Permiso, Nothing) Then
                                            Grilla_Detalle.Rows(0).Cells("Sucursal").Value = _Row_Bodega_Destino.Item("KOSU")
                                            Grilla_Detalle.Rows(0).Cells("Bodega").Value = _Row_Bodega_Destino.Item("KOBO")
                                        End If

                                    Else

                                        Sb_Limpiar(ModModalidad_Doc)

                                    End If

                                End If

                            End If

                        Case "Centro_Costo"

                            Dim _Centro_Costo As String
                            Dim _DCentro_Costo As String

                            If Fx_Buscar_Centro_De_Costo(_Centro_Costo, _DCentro_Costo) Then

                                _TblEncabezado.Rows(0).Item("Centro_Costo") = _Centro_Costo

                                Dim _Nuevo_Producto As Boolean = _TblDetalle.Rows(0).Item("Nuevo_Producto")

                                If _Nuevo_Producto Then
                                    _TblDetalle.Rows(0).Item("Centro_Costo") = _Centro_Costo
                                Else

                                    If MessageBoxEx.Show(Me, "¿Desea incorporar el centro de costo: " & _DCentro_Costo & Environment.NewLine &
                                                         "en todas las filas?", "Centro de costo", MessageBoxButtons.YesNo, MessageBoxIcon.Question,
                                                          MessageBoxDefaultButton.Button1, Me.TopMost) = DialogResult.Yes Then

                                        For Each _Fila As DataRow In _TblDetalle.Rows
                                            _Fila.Item("Centro_Costo") = _Centro_Costo
                                        Next

                                    End If

                                End If

                            End If

                        Case "NroDocumento"

                            Dim _CodEntidad As String = _TblEncabezado.Rows(0).Item("CodEntidad")
                            Dim _Reserva_NroOCC As Boolean = _TblEncabezado.Rows(0).Item("Reserva_NroOCC")

                            If _Reserva_NroOCC Then

                                MessageBoxEx.Show(Me, "No se puede cambiar el número de este documento ya que es un número reservado", "Validación",
                                                  MessageBoxButtons.OK, MessageBoxIcon.Stop)
                                Return

                            End If

                            Dim _Existe_Campo As Boolean = _Sql.Fx_Exite_Campo("CONFIEST", _Tido)
                            Dim _NroDocumento As String = _TblEncabezado.Rows(0).Item("NroDocumento").ToString.Trim

                            If _Existe_Campo Then

                                Dim _Modalidad = _TblEncabezado.Rows(0).Item("Modalidad")
                                '_NroDocumento = Traer_Numero_Documento(_Tido, , _Modalidad,,, Me).ToString.Trim

                                _TblEncabezado.Rows(0).Item("NroDocumento") = _NroDocumento

                                'If Not String.IsNullOrEmpty(_NroDocumento) Then
                                '    If Not Fx_Tiene_Permiso(Me, "Bkp00061") Then
                                '        Return
                                '    End If
                                'End If

                            End If

                            'If Not String.IsNullOrEmpty(_CodEntidad.Trim) Then
                            _NroDocumento_Antes_De_Editar = _NroDocumento
                            'End If

                            Grilla_Encabezado.Columns(_Cabeza).ReadOnly = False
                            Grilla_Encabezado.BeginEdit(True)


                        Case "FechaEmision"

                            Grilla_Encabezado.Columns(_Cabeza).ReadOnly = False
                            Grilla_Encabezado.BeginEdit(True)

                    End Select

                Case "FechaUltVencimiento"

                    If Not _Documento_Interno Then
                        Me.Enabled = False
                        Sb_Revisar_CtaCte_De_La_Entidad(False)
                        Me.Enabled = True
                    End If

                Case "FechaRecepcion"

                    Dim _Documento_Autorizado = Fx_Documento_Autorizado()

                    Dim Fm_Obs As New Frm_Formulario_Observaciones(_Ds_Matriz_Documentos, _RowEntidad, _Tipo_Documento, _Documento_Autorizado)
                    Fm_Obs.Warning_Visado.Visible = False
                    Fm_Obs.Btn_Grabar_e_Imprimir.Visible = False
                    Fm_Obs.Btn_Solo_Grabar.Visible = False

                    If _Bloquear_Edicion_Detalle Then
                        Fm_Obs.DtpFechaEntrega.Enabled = False
                        Fm_Obs.TxtFormadepago.ReadOnly = True
                        Fm_Obs.TxtObservaciones.ReadOnly = True
                        Fm_Obs.TxtOrdendecompra.ReadOnly = True
                    End If

                    Fm_Obs.TieneOrdenDeDespacho = Not (IsNothing(_Cl_Despacho))
                    Fm_Obs.CambiarFechaEnDetalle = True
                    Fm_Obs.ShowDialog(Me)
                    Fm_Obs.Dispose()

                Case "Contacto_Ent"

                    Call Txt_Contacto_ButtonCustomClick(Nothing, Nothing)

                    'If Not Fx_Revisar_encabezado() Then
                    '    Return
                    'End If

                    'Dim _CodEntidad As String = _TblEncabezado.Rows(0).Item("CodEntidad")
                    'Dim _CodSucEntidad As String = _TblEncabezado.Rows(0).Item("CodSucEntidad")

                    'Dim Fm As New Frm_Crear_Entidad_Mt_Lista_contactos(True)
                    'Fm.Pro_CodEntidad = _CodEntidad
                    'Fm.Pro_SucEntidad = _CodSucEntidad
                    'Fm.ShowDialog(Me)
                    'If Fm.Pro_ContactoSeleccionado Then
                    '    _FilaEnc.Cells("Contacto_Ent").Value = Fm.Row_Contacto.Item("RUTCONTACT")
                    '    _FilaEnc.Cells("NomContacto_Ent").Value = Fm.Row_Contacto.Item("NOKOCON").ToString.Trim
                    '    Txt_Contacto.Text = Fm.Row_Contacto.Item("NOKOCON").ToString.Trim
                    'End If
                    'Fm.Dispose()

            End Select

        Catch ex As Exception
            MessageBoxEx.Show(Me, ex.Message, "Error!!", MessageBoxButtons.OK, MessageBoxIcon.Error, MessageBoxDefaultButton.Button1, Me.TopMost)
        Finally
            Me.Enabled = True
        End Try

    End Sub

    Function Fx_Buscar_Centro_De_Costo(ByRef _Centro_Costo As String,
                                       ByRef _DCentro_Costo As String) As Boolean

        Dim _Sql_Filtro_Condicion_Extra = "And EMPRESAS LIKE '%" & ModEmpresa_Doc & "%'"

        Dim _Filtrar As New Clas_Filtros_Random(Me)

        _Filtrar.Tabla = "TABLUG"
        _Filtrar.Campo = "LUVT"
        _Filtrar.Descripcion = "NOLUVT"

        If _Filtrar.Fx_Filtrar(Nothing,
                               Clas_Filtros_Random.Enum_Tabla_Fl._Otra, _Sql_Filtro_Condicion_Extra,
                               Nothing, False, True) Then

            Dim _Tbl_Operacion As DataTable = _Filtrar.Pro_Tbl_Filtro
            Dim _Row As DataRow = _Tbl_Operacion.Rows(0)

            _Centro_Costo = Trim(_Row.Item("Codigo"))
            _DCentro_Costo = Trim(_Row.Item("Descripcion"))

            Fx_Buscar_Centro_De_Costo = True

        End If

    End Function

    Function Fx_Buscar_Proyecto(ByRef _Proyecto As String, ByRef _DProyecto As String) As Boolean

        Dim _Sql_Filtro_Condicion_Extra = "And EMPRESAS LIKE '%" & ModEmpresa_Doc & "%'"

        Dim _Filtrar As New Clas_Filtros_Random(Me)

        _Filtrar.Tabla = "TPROYECT"
        _Filtrar.Campo = "PROYECTO"
        _Filtrar.Descripcion = "NOPROYECTO"

        If _Filtrar.Fx_Filtrar(Nothing,
                               Clas_Filtros_Random.Enum_Tabla_Fl._Otra, _Sql_Filtro_Condicion_Extra,
                               Nothing, False, True) Then

            Dim _Tbl_Operacion As DataTable = _Filtrar.Pro_Tbl_Filtro
            Dim _Row As DataRow = _Tbl_Operacion.Rows(0)

            _Proyecto = Trim(_Row.Item("Codigo"))
            _DProyecto = Trim(_Row.Item("Descripcion"))

            Fx_Buscar_Proyecto = True

        End If

    End Function

    Private Sub Grilla_Encabezado_CellEndEdit(sender As System.Object, e As System.Windows.Forms.DataGridViewCellEventArgs) Handles Grilla_Encabezado.CellEndEdit

        Dim _Tabular As Boolean

        Barra.Enabled = True
        Barra_Herramientas_Producto.Enabled = True

        Try
            Grilla_Encabezado.Enabled = False
            Grilla_Detalle.Enabled = False

            Dim _Permiso_NCV As String

            Dim _Fila As DataGridViewRow = Grilla_Encabezado.Rows(0)
            Dim _Cabeza = Grilla_Encabezado.Columns(Grilla_Encabezado.CurrentCell.ColumnIndex).Name

            Dim _FechaEmision As Date = _Fila.Cells("FechaEmision").Value
            Dim _Fecha_1er_Vencimiento As Date = _Fila.Cells("Fecha_1er_Vencimiento").Value
            Dim _FechaUltVencimiento As Date = _Fila.Cells("FechaUltVencimiento").Value
            Dim _Cuotas As Integer = _Fila.Cells("Cuotas").Value
            Dim _Dias_1er_Vencimiento As Integer = _Fila.Cells("Dias_1er_Vencimiento").Value
            Dim _Dias_Vencimiento As Integer = _Fila.Cells("Dias_Vencimiento").Value

            Consulta_sql = "Select * From TABTIDO Where TIDO = '" & _Tido & "'"
            Dim _RowTido As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)
            Dim _Tigedo = _RowTido.Item("TIGEDO")

            Dim _NroDocumento As String = NuloPorNro(_Fila.Cells("NroDocumento").Value, "")

            Dim _Requiere_Permiso_NCV As Boolean

            'Dim _Row_Usuario_Autoriza As DataRow
            'Dim _Permiso_Presencial As Boolean
            'Dim _NroRemota As String
            'Dim _CodFuncionario_Autoriza As String
            'Dim _NomFuncionario_Autoriza As String

            Dim _CodEntidad As String = NuloPorNro(_Fila.Cells("CodEntidad").Value, "")
            Dim _CodSucEntidad As String = NuloPorNro(_Fila.Cells("CodSucEntidad").Value, "").ToString.Trim


            If _Cabeza = "CodEntidad" Or (_Cabeza = "CodSucEntidad" And _Tido = "GTI") Then

                'Dim _CodEntidad As String = NuloPorNro(_Fila.Cells("CodEntidad").Value, "")
                'Dim _CodSucEntidad As String = NuloPorNro(_Fila.Cells("CodSucEntidad").Value, "").ToString.Trim

                If Not IsNothing(_RowEntidad) And _Cabeza = "CodEntidad" Then

                    Dim _Koen As String = _RowEntidad.Item("KOEN").ToString.Trim
                    Dim _Suen As String = _RowEntidad.Item("SUEN").ToString.Trim

                    If _Koen = _CodEntidad.Trim And _Suen = _CodSucEntidad.Trim Then

                        If Not String.IsNullOrEmpty(_Suen) Or _Tido <> "GRI" Then
                            Return
                        End If

                    End If

                End If

                If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Compra Then

                    Dim _Idmaeedo As Integer = _Sql.Fx_Trae_Dato("MAEEDO", "IDMAEEDO",
                                                                 "EMPRESA = '" & ModEmpresa_Doc & "' And TIDO = '" & _Tido & "' And NUDO = '" & _NroDocumento & "' And ENDO = '" & _CodEntidad & "'", True)

                    If Convert.ToBoolean(_Idmaeedo) Then

                        If MessageBoxEx.Show(Me, "El documento Nro: " & _Tido & "-" & _NroDocumento & " ya existe." & vbCrLf & vbCrLf &
                                              "¿Desea ver el documento?", "Validación",
                                              MessageBoxButtons.YesNo, MessageBoxIcon.Information) = DialogResult.Yes Then

                            Dim Fm As New Frm_Ver_Documento(_Idmaeedo, Frm_Ver_Documento.Enum_Tipo_Apertura.Desde_Random_SQL)
                            Fm.ShowDialog(Me)
                            Fm.Dispose()

                            Call BtnLimpiar_Click(Nothing, Nothing)

                        End If

                        Sb_Limpiar(ModModalidad_Doc)
                        Return

                    End If

                End If

                Dim _Tido_Relacionado As String = Mid(_CodEntidad, 1, 3).ToUpper
                Dim _Nudo_Relacionado As String = Mid(_CodEntidad, 4, 13)

                Dim _Row_Doc_Relacionado As DataRow

                If Not String.IsNullOrEmpty(_Tido_Relacionado) And Not String.IsNullOrEmpty(_Nudo_Relacionado) Then

                    _Nudo_Relacionado = Fx_Rellena_ceros(_Nudo_Relacionado, 10)

                    If CBool(_Idmaeedo_Relacionado) Then
                        Consulta_sql = "Select IDMAEEDO,TIDO,NUDO,ENDO,SUENDO From MAEEDO Where IDMAEEDO = " & _Idmaeedo_Relacionado
                    Else
                        Consulta_sql = "Select DISTINCT EDO.* From MAEEDO EDO
                                    INNER JOIN MAEDDO DDO ON EDO.IDMAEEDO = DDO.IDMAEEDO 
                                    Where EDO.EMPRESA = '" & ModEmpresa_Doc & "' And EDO.TIDO = '" & _Tido_Relacionado & "' AND EDO.NUDO = '" & _Nudo_Relacionado & "'"
                    End If

                    _Row_Doc_Relacionado = _Sql.Fx_Get_DataRow(Consulta_sql)

                    If Not IsNothing(_Row_Doc_Relacionado) Then

                        _Idmaeedo_Relacionado = _Row_Doc_Relacionado.Item("IDMAEEDO")

                        If _Tido = "FCV" AndAlso Not Fx_NvvHabilitada_Fac(Me, _Idmaeedo_Relacionado, "NVV") Then

                            _Fila.Cells("CodEntidad").Value = String.Empty
                            If _Cerrar_Al_Grabar Then
                                Me.Close()
                            End If
                            Return

                        End If

                        'If _Global_Row_Configuracion_General.Item("LasNVVDebenSerHabilitadasParaFacturar") And _Tido_Relacionado = "NVV" Then

                        '    Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Docu_Ent WITH (NOLOCK) Where Idmaeedo = " & _Row_Doc_Relacionado.Item("IDMAEEDO")
                        '    Dim _Row_Docu_Ent As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                        '    Dim _HabilitadaFac = False

                        '    If Not IsNothing(_Row_Docu_Ent) Then
                        '        _HabilitadaFac = _Row_Docu_Ent.Item("HabilitadaFac")
                        '    End If

                        '    If Not _HabilitadaFac Then
                        '        If _Global_Row_Configuracion_General.Item("HabilitarNVVConProdCustomizables") And Not _Row_Docu_Ent.Item("Customizable") Then
                        '            _HabilitadaFac = True
                        '        End If
                        '    End If

                        '    If Not _HabilitadaFac Then
                        '        _Fila.Cells("CodEntidad").Value = String.Empty
                        '        MessageBoxEx.Show(Me, "Esta nota de venta no esta habilitada para ser facturada." & vbCrLf &
                        '              "Según la configuración General las notas de venta deben ser habilitadas para que se puedan facturar",
                        '              "Validación NVV: " & _Nudo_Relacionado, MessageBoxButtons.OK, MessageBoxIcon.Stop)
                        '        If _Cerrar_Al_Grabar Then
                        '            Me.Close()
                        '        End If
                        '        Return
                        '    End If

                        'End If

                        _CodEntidad = _Row_Doc_Relacionado.Item("ENDO")
                        _CodSucEntidad = _Row_Doc_Relacionado.Item("SUENDO")
                        _Idmaeedo_Relacionado = _Row_Doc_Relacionado.Item("IDMAEEDO")

                    End If

                End If

                Dim _Mostrar_Mensaje_Deuda As Boolean

                Select Case _Tido
                    Case "FCV", "BLV", "COV", "NVV", "GDV"
                        _Mostrar_Mensaje_Deuda = True
                    Case Else
                        _Mostrar_Mensaje_Deuda = False
                End Select

                Dim _Cambiar_Vendedor As Boolean = True

                If Not IsNothing(_Row_Doc_Relacionado) Then

                    _Mostrar_Mensaje_Deuda = False
                    _Cambiar_Vendedor = False

                    Dim _Volver_A_Solicitar_Permiso_FCV_desde_NVV As Boolean = _Global_Row_Configuracion_General.Item("Volver_A_Solicitar_Permiso_FCV_desde_NVV")

                    If _Volver_A_Solicitar_Permiso_FCV_desde_NVV And _Row_Doc_Relacionado.Item("TIDO") = "NVV" Then
                        _Mostrar_Mensaje_Deuda = True
                    End If

                End If

                Dim _RowNuevaEntidad = _RowEntidad

                If _Tido <> "GRI" And _Tido <> "GTI" Then
                    _RowNuevaEntidad = Fx_Buscar_Entidad(Me, _CodEntidad, _CodSucEntidad, False, _Mostrar_Mensaje_Deuda)
                End If

                If Not (_RowNuevaEntidad Is Nothing) Then

                    _RowEntidad = _RowNuevaEntidad

                    Dim _No_Puede_Acceder As Boolean

                    If Not _Documento_Interno Then

                        Sb_RevListaSuperiosEntidad(True)

                        Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, True,, _Cambiar_Vendedor, _No_Puede_Acceder)

                        Sb_RevListaSuperiosEntidad_VtaCurso()

                    End If

                    If _Tido = "OCC" Or _Tido = "GRC" Or _Tido = "FCC" Then

                        If _Global_Row_Configuracion_Estacion.Item("Actualizar_Lista_De_Costos_Random_Desde_Bakapp") Then

                            Dim _Koen = _RowEntidad.Item("KOEN")
                            Dim _Suen = _RowEntidad.Item("SUEN")

                            If Not Fx_Actualizar_Lista_De_Costos_Random_Desde_Bakapp(Me, _Koen, _Suen) Then
                                MessageBoxEx.Show(Me, "No se puede generar el documento, ya que " & vbCrLf &
                                                  "esta condición es obligatoria para la modalidad " & ModModalidad_Doc,
                                                  "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop,
                                                  MessageBoxDefaultButton.Button1, Me.TopMost)
                                Sb_Limpiar(ModModalidad_Doc)
                                Return
                            End If

                        End If

                        'If PreVenta Then

                        '    If MessageBoxEx.Show(Me, "¿Desea asociar un Contenedor?", "Asociar Contenedor",
                        '                         MessageBoxButtons.YesNo, MessageBoxIcon.Question) = DialogResult.Yes Then

                        '        Sb_Asociar_Contenedor()

                        '    End If

                        'End If

                    End If

                    If _No_Puede_Acceder Then
                        Return
                    End If

                    Dim _Tbl_Documentos As DataTable
                    Dim _Idmaeedo As Integer

                    If Not _Post_Venta Then

                        Dim _Buscar_Documentos_Relacionados As Boolean

                        If Not IsNothing(_RowEntidad) Then

                            Dim _Koen As String = _RowEntidad.Item("KOEN").ToString.Trim
                            Dim _Suen As String = _RowEntidad.Item("SUEN").ToString.Trim

                            _Idmaeedo = _Sql.Fx_Trae_Dato("MAEEDO", "IDMAEEDO",
                                                                 "EMPRESA = '" & ModEmpresa_Doc & "' And TIDO = '" & _Tido & "' And NUDO = '" & _NroDocumento & "' And ENDO = '" & _Koen & "'", True)

                            If Convert.ToBoolean(_Idmaeedo) Then

                                If MessageBoxEx.Show(Me, "El documento Nro: " & _Tido & "-" & _NroDocumento & " ya existe." & vbCrLf & vbCrLf &
                                                  "¿Desea ver el documento?", "Validación",
                                                  MessageBoxButtons.YesNo, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, Me.TopMost) = DialogResult.Yes Then

                                    Dim Fm2 As New Frm_Ver_Documento(_Idmaeedo, Frm_Ver_Documento.Enum_Tipo_Apertura.Desde_Random_SQL)
                                    Fm2.ShowDialog(Me)
                                    Fm2.Dispose()

                                End If

                                Sb_Limpiar(ModModalidad_Doc)
                                Return

                            End If

                        End If

                        Dim _SuenRev = _RowEntidad.Item("SUEN")

                        If _Tido = "GRI" Then
                            _SuenRev = Mod_Sucursal
                        End If

                        Dim Fm As New Frm_Documentos_Relacionados(_Tido, _RowEntidad.Item("KOEN"), _SuenRev, _SubTido)
                        Fm.Idmaeedo = _Idmaeedo_Relacionado
                        Fm.Sb_Generar_Informe_Crear_Dataset()

                        If IsNothing(_Row_Doc_Relacionado) Then

                            _Buscar_Documentos_Relacionados = CBool(Fm.Pro_Tbl_Informe.Rows.Count)
                            If _Buscar_Documentos_Relacionados Then Fm.ShowDialog(Me)
                            _Buscar_Documentos_Relacionados = Fm.Pro_Seleccionar

                        Else

                            _Buscar_Documentos_Relacionados = True

                            If _Idmaeedo_Relacionado Then
                                Fm.Sb_Marcar_Una_Fila(_Idmaeedo_Relacionado)
                            Else
                                Fm.Sb_Marcar_Una_Fila(_Row_Doc_Relacionado.Item("TIDO"), _Row_Doc_Relacionado.Item("NUDO"))
                            End If

                        End If

                        _Tbl_Documentos = Fm.Pro_Tbl_Informe
                        Fm.Dispose()

                        Dim _Bodega_Destino As String = _TblEncabezado.Rows(0).Item("Bodega_Destino")

                        If _Buscar_Documentos_Relacionados Then

                            If _Tbl_Documentos.Rows.Count Then

                                For Each _Row As DataRow In _Tbl_Documentos.Rows
                                    Dim _Chk = _Row.Item("Chk")
                                    If _Chk Then
                                        _Idmaeedo = _Row.Item("IDMAEEDO")
                                        Exit For
                                    End If
                                Next

                                Dim _Fecha_hoy As Date = FormatDateTime(FechaDelServidor, DateFormat.ShortDate)

                                Dim _Msg = String.Empty

                                If _Tido = "NCV" Or _Tido = "GRD" Or (_Tido = "GDD" And _SubTido = "") Then

                                    Dim _Dias_Para_Hacer_NCV As Integer = _Global_Row_Configuracion_General.Item("Dias_Para_Hacer_NCV")
                                    Dim _Dias_Para_Hacer_NCV_Oblig As Integer = _Global_Row_Configuracion_General.Item("Dias_Para_Hacer_NCV_Oblig")

                                    If Convert.ToBoolean(_Dias_Para_Hacer_NCV) Then

                                        For Each _Row As DataRow In _Tbl_Documentos.Rows

                                            Dim _Chk = _Row.Item("Chk")

                                            If _Chk Then

                                                Dim _Tido_Doc = _Row.Item("TIDO")
                                                Dim _Nudo_Doc = _Row.Item("NUDO")
                                                Dim _Fecha_Doc As Date = FormatDateTime(_Row.Item("FEEMDO"), DateFormat.ShortDate)
                                                Dim _Dias_Transcurridos As Integer = DateDiff(DateInterval.Day, _Fecha_Doc, _Fecha_hoy)

                                                If _Dias_Transcurridos > _Dias_Para_Hacer_NCV_Oblig Then

                                                    Dim _MostrarAlerta = True

                                                    If _Tido = "GDD" And _Tido_Doc = "NCC" Then
                                                        _MostrarAlerta = False
                                                    End If

                                                    If _MostrarAlerta Then

                                                        Dim _Dias_Pasados = _Dias_Transcurridos - _Dias_Para_Hacer_NCV_Oblig

                                                        _Msg = "El documento " & _Tido_Doc & "-" & _Nudo_Doc & " tiene mas de " & FormatNumber(_Dias_Para_Hacer_NCV_Oblig, 0) & " día(s)" & Environment.NewLine &
                                                       "Está pasado en " & FormatNumber(_Dias_Pasados, 0) & " día(s) según su fecha de emisión (" & _Fecha_Doc & ")." & Environment.NewLine & Environment.NewLine &
                                                       "Recuerde que no se pueden hacer notas de crédito con documentos relacionados de mas de " & FormatNumber(_Dias_Para_Hacer_NCV_Oblig, 0) & " días desde su fecha de emisión." & Environment.NewLine &
                                                       "Esta norma esta estipulada por el SII"

                                                        MessageBoxEx.Show(Me, _Msg, "Validación",
                                                             MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)

                                                        _Requiere_Permiso_NCV = True
                                                        'Sb_Limpiar(Modalidad, True)
                                                        'Return

                                                    End If

                                                Else

                                                    If _Tido <> "GDD" AndAlso _Dias_Transcurridos > _Dias_Para_Hacer_NCV Then

                                                        Dim _Dias_Pasados = _Dias_Transcurridos - _Dias_Para_Hacer_NCV

                                                        _Msg = "El documento " & _Tido_Doc & "-" & _Nudo_Doc & " tiene mas de " & FormatNumber(_Dias_Para_Hacer_NCV, 0) & " día(s)" & Environment.NewLine &
                                                           "Está pasado en " & FormatNumber(_Dias_Pasados, 0) & " día(s) según su fecha de emisión (" & _Fecha_Doc & ")." & Environment.NewLine & Environment.NewLine &
                                                           "Recuerde que no se pueden hacer notas de crédito con documentos relacionados de mas de " & FormatNumber(_Dias_Para_Hacer_NCV, 0) & " días desde su fecha de emisión." & Environment.NewLine &
                                                           "Requiere de autorización"

                                                        MessageBoxEx.Show(Me, _Msg, "Validación",
                                                                 MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                                                        _Requiere_Permiso_NCV = True

                                                    End If

                                                End If

                                            End If

                                        Next

                                        'If _Requiere_Permiso_NCV Then

                                        '    If Fx_Tiene_Permiso(Me, "Doc00026",, False) Then
                                        '        Sb_Limpiar(Modalidad, True)
                                        '        Return
                                        '    End If

                                        'End If

                                    End If

                                End If

                                Dim _CampoPrecio As String

                                If ChkValores.Checked Then
                                    _CampoPrecio = "PPPRNE"
                                Else ' Bruto
                                    _CampoPrecio = "PPPRBR"
                                End If

                                If CBool(_Idmaeedo) Then

                                    Dim _Filtro_Idmaeedo As String
                                    _Filtro_Idmaeedo = Generar_Filtro_IN(_Tbl_Documentos, "Chk", "IDMAEEDO", False, True, "")

                                    If (_Tido = "NCV") Or (_Tido = "GDD" And _SubTido = String.Empty) Or (_Tido = "GRD") Then

                                        Consulta_sql = "Select * From MAEEDO Where IDMAEEDO = " & _Idmaeedo & "
                                                
                                                    Select MAEDDO.*,
                                                    CASE 
                                                        WHEN UDTRPR = 1 THEN 
                                                             CASE WHEN TIDO In ('GRD','NCV') THEN CAPRCO1-CAPREX1 
                                                             ELSE (CAPRAD1+CAPREX1)-CAPRNC1 
                                                             END 
												        ELSE 
                                                            CASE WHEN TIDO In ('GRD','NCV') THEN CAPRCO1-CAPREX1 
                                                            ELSE (CAPRAD2+CAPREX2)-CAPRNC2 
                                                        END 
                                                    END AS 'Cantidad',
		                                            CASE 
                                                        WHEN TIDO In ('GRD','NCV') THEN CAPRCO1-CAPREX1 
                                                        ELSE (CAPRAD1+CAPREX1)-CAPRNC1 
                                                    END AS 'CantUd1_Dori',
												    CASE 
                                                        WHEN TIDO In ('GRD','NCV') THEN CAPRCO2-CAPREX2 
                                                        ELSE (CAPRAD2+CAPREX2)-CAPRNC2 
                                                    END AS 'CantUd2_Dori',
                                                    CASE WHEN UDTRPR = 1 THEN " & _CampoPrecio & " ELSE " & _CampoPrecio & "*RLUDPR END AS 'Precio',
                                                    Isnull(Ofer.Id_Oferta,'') As Id_Oferta,
                                                    Isnull(Ofer.Oferta,'') As Oferta,
                                                    Isnull(Ofer.Es_Padre_Oferta,0) As Es_Padre_Oferta,
                                                    Isnull(Ofer.Padre_Oferta,0) As Padre_Oferta,
                                                    Isnull(Ofer.Hijo_Oferta,0) As Hijo_Oferta,
                                                    Isnull(Cantidad_Oferta,0) As Cantidad_Oferta,
                                                    Isnull(Porcdesc_Oferta,0) As Porcdesc_Oferta
                                                    From MAEDDO  WITH ( NOLOCK ) 
                                                    Left Join " & _Global_BaseBk & "Zw_Linea_Oferta Ofer On Ofer.Idmaeddo = IDMAEDDO
                                                    Where IDMAEEDO In " & _Filtro_Idmaeedo & " -- AND TICT = '' --AND ( ESLIDO<>'C' OR ESFALI='I' ) 
                                                    Order by IDMAEEDO,IDMAEDDO 
                                                    
                                                    Select * From MAEIMLI
                                                    Where IDMAEEDO In " & _Filtro_Idmaeedo & " 
                                                    
                                                    Select * From MAEDTLI
                                                    Where IDMAEEDO In " & _Filtro_Idmaeedo & " 
                                                    
                                                    Select TOP 1 * From MAEEDOOB Where IDMAEEDO = " & _Idmaeedo

                                    Else

                                        Consulta_sql = "Select * From MAEEDO Where IDMAEEDO = " & _Idmaeedo & "
                                
                                                        Select MAEDDO.*,CASE WHEN UDTRPR = 1 THEN CAPRCO1-CAPREX1 ELSE CAPRCO2-CAPREX2 END AS 'Cantidad',
                                                        CAPRCO1-CAPREX1 AS 'CantUd1_Dori',CAPRCO2-CAPREX2 AS 'CantUd2_Dori',
                                                        CASE WHEN UDTRPR = 1 THEN " & _CampoPrecio & " ELSE " & _CampoPrecio & "*RLUDPR END AS 'Precio',
                                                        Isnull(Ofer.Id_Oferta,'') As Id_Oferta,
                                                        Isnull(Ofer.Oferta,'') As Oferta,
                                                        Isnull(Ofer.Es_Padre_Oferta,0) As Es_Padre_Oferta,
                                                        Isnull(Ofer.Padre_Oferta,0) As Padre_Oferta,
                                                        Isnull(Ofer.Hijo_Oferta,0) As Hijo_Oferta,
                                                        Isnull(Cantidad_Oferta,0) As Cantidad_Oferta,
                                                        Isnull(Porcdesc_Oferta,0) As Porcdesc_Oferta
                                                        From MAEDDO WITH ( NOLOCK ) 
                                                        Left Join " & _Global_BaseBk & "Zw_Linea_Oferta Ofer On Ofer.Idmaeddo = IDMAEDDO
                                                        Where IDMAEEDO In " & _Filtro_Idmaeedo & "  AND ( ESLIDO<>'C' OR ESFALI='I' ) --AND TICT = ''
                                                        Order by IDMAEEDO,IDMAEDDO
                                
                                                        Select * From MAEIMLI
                                                        Where IDMAEEDO In " & _Filtro_Idmaeedo & " 

                                                        Select * From MAEDTLI
                                                        Where IDMAEEDO In " & _Filtro_Idmaeedo & " 

                                                        Select TOP 1 * From MAEEDOOB Where IDMAEEDO = " & _Idmaeedo

                                    End If


                                    Dim _Ds_Maeedo_Origen As DataSet = _Sql.Fx_Get_DataSet(Consulta_sql)

                                    If CBool(_Ds_Maeedo_Origen.Tables(1).Rows.Count) Then

                                        Dim _Fl As String = Generar_Filtro_IN(_Ds_Maeedo_Origen.Tables(1), "", "IDMAEEDO", False, False, "")

                                        Dim _Reg = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_Casi_DocDet", "Idmaeedo_Dori In " & _Fl)

                                        If CBool(_Reg) Then

                                            MessageBoxEx.Show(Me, "No es posible traer el detalle de alguno de los documentos asociados." & Environment.NewLine &
                                                      "Uno o más de los archivos asociados está ligado a un documento pendiente de solicitud de permiso remoto" & Environment.NewLine &
                                                      "Para poder ligar nuevamente cualquiera de esos documentos primero deben terminar esas gestiones",
                                                      "Validación BakApp", MessageBoxButtons.OK, MessageBoxIcon.Error, MessageBoxDefaultButton.Button1, Me.TopMost)

                                        Else

                                            Dim _NroDoc_Editado_Por_Usuario As Boolean = _NroDocumento_Editado_Por_Usuario

                                            If _Requiere_Permiso_NCV Then
                                                If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00026", Nothing, "", "") Then
                                                    Sb_Limpiar(ModModalidad_Doc, True)
                                                    Return
                                                End If
                                            Else
                                                Sb_Limpiar(ModModalidad_Doc)
                                            End If

                                            _NroDocumento_Editado_Por_Usuario = _NroDoc_Editado_Por_Usuario

                                            If _Tigedo = "E" Then
                                                _TblEncabezado.Rows(0).Item("NroDocumento") = _NroDocumento
                                            Else

                                                If _NroDocumento_Editado_Por_Usuario Then

                                                    Dim _NewNudo = Traer_Numero_Documento(_Tido, , ModModalidad_Doc,,, Me)

                                                    If _NroDocumento <> _NewNudo Then

                                                        _Reg = _Sql.Fx_Cuenta_Registros("MAEEDO", "TIDO = '" & _Tido & "' And NUDO = '" & _NroDocumento & "'")

                                                        If Not CBool(_Reg) Then

                                                            If MessageBoxEx.Show(Me, "¿Desea conservar el numero de documento?" & vbCrLf & vbCrLf &
                                                                                 "[Yes] = conserva el número: " & _NroDocumento & vbCrLf &
                                                                                 "[No ] = continua con la numeración normal número: " & _NewNudo,
                                                                             "Nro. de documento", MessageBoxButtons.YesNo, MessageBoxIcon.Question) = DialogResult.Yes Then
                                                                _TblEncabezado.Rows(0).Item("NroDocumento") = _NroDocumento
                                                            Else
                                                                _NroDocumento_Editado_Por_Usuario = False
                                                            End If

                                                        End If

                                                    End If

                                                End If

                                            End If

                                            _TblEncabezado.Rows(0).Item("Bodega_Destino") = _Bodega_Destino

                                            Dim _Bodega_Recepcion As String

                                            If _Tido = "GRD" Then

                                                Dim Fm_Bd As New Frm_Seleccionar_Bodega_Grilla("")
                                                Fm_Bd.Solo_Bodegas_Sucursal = True
                                                Fm_Bd.Pro_Pedir_Permiso = False
                                                Fm_Bd.Text = "INDIQUE LA BODEGA DE RECEPCION"
                                                Fm_Bd.ShowDialog(Me)
                                                Dim _Row_Bodega_Destino As DataRow = Fm_Bd.Pro_Row_Bodega
                                                Fm_Bd.Dispose()

                                                If Not _Row_Bodega_Destino Is Nothing Then

                                                    Dim _Empresa_Sel = _Row_Bodega_Destino.Item("EMPRESA")
                                                    Dim _Sucursal_Sel = _Row_Bodega_Destino.Item("KOSU")
                                                    _Bodega_Recepcion = _Row_Bodega_Destino.Item("KOBO")

                                                    Dim _Permiso = "Bo" & _Empresa_Sel & _Sucursal_Sel & _Bodega_Recepcion

                                                    If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, _Permiso, Nothing) Then
                                                        Sb_Limpiar(ModModalidad_Doc)
                                                    End If

                                                End If

                                            End If

                                            Sb_Crear_Documento_Desde_Otros_Documentos(Me, _Ds_Maeedo_Origen, False, True, _FechaEmision, False, False,, _Bodega_Recepcion)

                                            If _TblDetalle.Rows.Count = 1 Then
                                                If _TblDetalle.Rows(0).Item("Nuevo_Producto") Then
                                                    Sb_Limpiar(ModModalidad_Doc)
                                                End If
                                            End If

                                        End If

                                    Else
                                        MessageBoxEx.Show(Me, "Documento se encuentra cerrado completamente", "Documento cerrado",
                                                  MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                                    End If

                                End If

                            End If

                        End If

                        Grilla_Encabezado.ClearSelection()

                    End If

                Else

                    If Not (_RowEntidad Is Nothing) Then
                        _CodEntidad = _RowEntidad.Item("KOEN")
                    Else
                        _CodEntidad = String.Empty
                    End If

                    _Fila.Cells("CodEntidad").Value = _CodEntidad

                    Grilla_Encabezado.Enabled = True
                    'Grilla_Detalle.Enabled = False

                    Grilla_Encabezado.Focus()
                    Grilla_Encabezado.CurrentCell = Grilla_Encabezado.Rows(0).Cells(8) '("CodEntidad")

                End If

                Grilla_Detalle.Enabled = True

                Grilla_Detalle.Focus()
                Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(0).Cells("Codigo") '("CodEntidad")

                If Not IsNothing(_RowEntidad) AndAlso _Global_Row_Configuracion_General.Item("SelectOtrosClientesPedirPermiso") Then

                    Dim _Mensaje As New LsValiciones.Mensajes

                    _Mensaje = Fx_EntidadEnGrupoVendedores(_RowEntidad, FUNCIONARIO, True)

                    If Not _Mensaje.EsCorrecto Then

                        MessageBoxEx.Show(Me, _Mensaje.Mensaje, "Validación", MessageBoxButtons.OK,
                                          IIf(_Mensaje.EsCorrecto, MessageBoxIcon.Information, MessageBoxIcon.Stop))

                        MessageBoxEx.Show(Me, "A continuación debera seleccionar un vendedor del Grupo de vendedores asociados", "Validación",
                                          MessageBoxButtons.OK, MessageBoxIcon.Information)

                        Dim _CodV = Grilla_Detalle.Rows(0).Cells("CodVendedor").Value

                        Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(0).Cells("CodFuncionario")
                        Call Grilla_Detalle_KeyDown(Grilla_Detalle, Nothing)

                        If Grilla_Detalle.Rows(0).Cells("CodVendedor").Value = _CodV Then
                            MessageBoxEx.Show(Me, "No se selecciono ningún vendedor", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                            Call BtnLimpiar_Click(Nothing, Nothing)
                        End If

                    End If

                End If

            End If

            If _Cabeza = "NroDocumento" Then

                Dim _NroDocumento_New As String = Fx_Rellenar_NroDocumento_Ccaracteres(_Fila.Cells("NroDocumento").Value, 10) 'numero_(_Fila.Cells("NroDocumento").Value, 10)

                If _NroDocumento_Antes_De_Editar <> _NroDocumento_New Then

                    Dim _Idmaeedo As Integer

                    Dim _Existe_Campo = _Sql.Fx_Exite_Campo("CONFIEST", _Tido)

                    If _NroDocumento_New = "0000000000" And String.IsNullOrEmpty(_NroDocumento_Antes_De_Editar) And (_Tido = "GRC" Or _Tido = "FCC") Then
                        _Fila.Cells("NroDocumento").Value = String.Empty
                        Return
                    End If

                    Dim _Editar_COV As Boolean

                    If _Existe_Campo And _Tido <> "GRC" Then

                        _Idmaeedo = _Sql.Fx_Trae_Dato("MAEEDO",
                                      "IDMAEEDO",
                                      "EMPRESA = '" & ModEmpresa_Doc & "' And TIDO = '" & _Tido & "' And NUDO = '" & _NroDocumento_New & "'", True)

                        If CBool(_Idmaeedo) Then

                            _TblEncabezado.Rows(0).Item("NroDocumento") = _NroDocumento_Antes_De_Editar

                            If _Tido = "COV" Or _Tido = "NVV" Or _Tido = "FCV" Or _Tido = "GDV" Or _Tido = "GDP" Then

                                Dim _Msj As LsValiciones.Mensajes = Fx_FuncionarioPuedeVerDocumentoGrupo(_Idmaeedo, FUNCIONARIO)

                                If Not _Msj.EsCorrecto Then
                                    MessageBoxEx.Show(Me, _Msj.Mensaje, "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                                    Return
                                End If

                                If _Tido = "COV" Then

                                    Dim Rdb_VerDocumento As New Command
                                    Rdb_VerDocumento.Checked = True
                                    Rdb_VerDocumento.Name = "Rdb_VerDocumento"
                                    Rdb_VerDocumento.Text = "Ver documento"

                                    Dim Rdb_EditarDocumento As New Command
                                    Rdb_EditarDocumento.Checked = False
                                    Rdb_EditarDocumento.Name = "Rdb_EditarDocumento"
                                    Rdb_EditarDocumento.Text = "Editar documento"

                                    Dim _Opciones2() As Command = {Rdb_VerDocumento, Rdb_EditarDocumento}

                                    Dim _Info As New TaskDialogInfo("Buscar Cotización",
                                                      eTaskDialogIcon.Information2,
                                                      "El documento Nro: " & _Tido & "-" & _NroDocumento_New & " ya existe.",
                                                      "Eliga su opción",
                                                      eTaskDialogButton.Ok + eTaskDialogButton.Cancel _
                                                      , eTaskDialogBackgroundColor.Red, _Opciones2, Nothing, Nothing, Nothing, Nothing)

                                    Dim _Resultado As eTaskDialogResult = TaskDialog.Show(_Info)

                                    If _Resultado <> eTaskDialogResult.Ok Then
                                        Return
                                    End If

                                    If Rdb_EditarDocumento.Checked Then
                                        _Editar_COV = True
                                    End If

                                End If

                            Else

                                Dim _Pregunta = DialogResult

                                _Pregunta = MessageBoxEx.Show(Me, "El documento Nro: " & _Tido & "-" & _NroDocumento_New & " ya existe." & vbCrLf & vbCrLf &
                                            "¿Desea ver el documento?", "Validación",
                                            MessageBoxButtons.YesNo, MessageBoxIcon.Information)

                                If _Pregunta <> DialogResult.Yes Then
                                    Return
                                End If


                            End If

                            If _Editar_COV Then
                                Sb_Buscar_Documento("COV", _Editar_documento, _Idmaeedo)
                            Else
                                Dim Fm As New Frm_Ver_Documento(_Idmaeedo, Frm_Ver_Documento.Enum_Tipo_Apertura.Desde_Random_SQL)
                                Fm.ShowDialog(Me)
                                Fm.Dispose()
                            End If

                        Else

                            If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Bkp00061", Nothing) Then
                                _TblEncabezado.Rows(0).Item("NroDocumento") = _NroDocumento_New
                                _NroDocumento_Editado_Por_Usuario = True
                            Else
                                _TblEncabezado.Rows(0).Item("NroDocumento") = _NroDocumento_Antes_De_Editar
                            End If

                        End If

                    Else

                        Dim _Endo As String = _TblEncabezado.Rows(0).Item("CodEntidad")
                        Dim _Suendo As String = _TblEncabezado.Rows(0).Item("CodSucEntidad")

                        _Idmaeedo = _Sql.Fx_Trae_Dato("MAEEDO",
                                                      "IDMAEEDO",
                                                      "EMPRESA = '" & ModEmpresa_Doc & "' And TIDO = '" & _Tido & "' And NUDO = '" & _NroDocumento_New & "' And ENDO = '" & _Endo & "' And ESDO <> 'N'", True)

                        If CBool(_Idmaeedo) Then

                            If MessageBoxEx.Show(Me, "El documento Nro: " & _Tido & "-" & _NroDocumento_New & " ya existe." & vbCrLf & vbCrLf &
                                              "¿Desea ver el documento?", "Validación",
                                              MessageBoxButtons.YesNo, MessageBoxIcon.Information) = DialogResult.Yes Then

                                Dim Fm As New Frm_Ver_Documento(_Idmaeedo, Frm_Ver_Documento.Enum_Tipo_Apertura.Desde_Random_SQL)
                                Fm.ShowDialog(Me)
                                Fm.Dispose()

                            End If

                            Sb_Limpiar(ModModalidad_Doc)

                        Else

                            If Not String.IsNullOrEmpty(_Endo) Then

                                Sb_Limpiar(ModModalidad_Doc)

                            End If

                            _TblEncabezado.Rows(0).Item("NroDocumento") = _NroDocumento_New

                            Grilla_Encabezado.Enabled = True
                            'Grilla_Detalle.Enabled = False

                            Grilla_Encabezado.Focus()
                            Grilla_Encabezado.CurrentCell = Grilla_Encabezado.Rows(0).Cells(8) '("CodEntidad")

                            _Tabular = True

                        End If

                    End If

                End If

            End If

            If _Cabeza = "FechaEmision" Then

                Dim _FechaEmision_Old As Date = _Fila_Clonada_Enc.Cells(11).Value

                Dim _Mensaje As LsValiciones.Mensajes

                _Mensaje = Fx_Revisar_Tasa_Cambio(Me, _FechaEmision)

                If Not _Mensaje.EsCorrecto Then 'Not Fx_Revisar_Tasa_Cambio(Me, _FechaEmision) Then
                    _Fila.Cells("FechaEmision").Value = _FechaEmision_Old
                    Return
                End If


                If _Cuotas = 0 Then _Cuotas = 1

                Dim _Cuotas_(_Cuotas - 1) As Date

                'If Not _Aplicar_Venciminetos Then
                '    _Dias_1er_Vencimiento = 0
                'End If

                If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Venta Or
                   _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Compra Then

                    If CBool(_Dias_1er_Vencimiento) Then

                        _Fila.Cells("Dias_1er_Vencimiento").Value = _Dias_1er_Vencimiento
                        _Fila.Cells("Dias_Vencimiento").Value = _Dias_Vencimiento

                        If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Or _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Compra Then

                            Dim _FechasVenci As Date = _FechaEmision
                            Dim _dias As Integer

                            If _Dias_1er_Vencimiento > 0 Then

                                _dias = _Dias_1er_Vencimiento

                                For i = 1 To _Cuotas

                                    _FechasVenci = DateAdd(DateInterval.Day, _dias, _FechasVenci)
                                    _Cuotas_(i - 1) = _FechasVenci
                                    _dias = _Dias_Vencimiento

                                Next

                                _FechaUltVencimiento = _FechasVenci

                            Else

                                _Cuotas = 1

                            End If

                            _Fecha_1er_Vencimiento = _Cuotas_(0)

                        End If

                    Else

                        _Fecha_1er_Vencimiento = _FechaEmision
                        _FechaUltVencimiento = _FechaEmision
                        _Cuotas = 0
                        _Dias_1er_Vencimiento = 0
                        _Dias_Vencimiento = 0

                    End If

                    _Fila.Cells("FechaEmision").Value = _FechaEmision
                    _Fila.Cells("Fecha_1er_Vencimiento").Value = _Fecha_1er_Vencimiento
                    _Fila.Cells("FechaUltVencimiento").Value = _FechaUltVencimiento

                    Consulta_sql = "Select TOP 1 * From MAEMO Where KOMO = 'US$' AND FEMO = '" & Format(_FechaEmision, "yyyyMMdd") & "' Order by IDMAEMO DESC"
                    Dim _RowMoneda_USdolar = _Sql.Fx_Get_DataRow(Consulta_sql)

                    Dim _Vamo As Double = _RowMoneda_USdolar.Item("VAMO")

                    If Not IsNothing(_RowMoneda_USdolar) Then

                        _Fila.Cells("Valor_Dolar").Value = _Vamo

                        If Fx_Revisar_si_tiene_registros() Then

                            For Each _Fl As DataGridViewRow In Grilla_Detalle.Rows
                                _Fl.Cells("Tipo_Cambio").Value = _Vamo
                                'If _Tido <> "GRD" Then
                                '    Sb_Procesar_Datos_De_Grilla(_Fl, "Cantidad", True, True)
                                'End If
                            Next

                            MessageBoxEx.Show(Me, "Existían tasas de cambio en el detalle del documento" & vbCrLf &
                                              "Que fueron cambiadas debido al cambio de fecha y su tasa respectiva.", "Información",
                                              MessageBoxButtons.OK, MessageBoxIcon.Information)

                        End If

                    End If

                End If

            End If

            Grilla_Encabezado.Columns(_Cabeza).ReadOnly = True

            If PreVenta Then
                MessageBoxEx.Show(Me, "A continuación, deberá seleccionar el contenedor" & vbCrLf &
                                  "desde el cual se extraerán los productos.",
                                  "Contenedor", MessageBoxButtons.OK, MessageBoxIcon.Information)
                Call Btn_Contenedor_Asociar_Click(Nothing, Nothing)
            End If

        Catch ex As Exception
        Finally
            Grilla_Detalle.Enabled = True
            Grilla_Encabezado.Enabled = True
            Me.Cursor = Cursors.Default
            'For i = 0 To 3
            '    SendKeys.Send("Right")
            'Next
        End Try

    End Sub

    Private Sub Sb_Asociar_Contenedor()

        Dim Fm As New Frm_Contenedores
        Fm.ModoSeleccion_Compra = (_Tido = "OCC")
        Fm.ModoSeleccion_Venta = (_Tido = "COV")
        Fm.ShowDialog(Me)
        _Zw_Contenedor = Fm.Zw_Contenedor
        Fm.Dispose()

        If CBool(_Zw_Contenedor.IdCont) Then

            Dim _Cl_Contenedor As New Cl_Contenedor

            If _Cl_Contenedor.Fx_Tomar_Contenedor(_Zw_Contenedor).EsCorrecto Then

                _TblEncabezado.Rows(0).Item("IdCont") = _Zw_Contenedor.IdCont

                MessageBoxEx.Show(Me, "Contenedor asociado correctamente" & vbCrLf &
                                  "Contenedor: " & _Zw_Contenedor.Contenedor & " - " & _Zw_Contenedor.NombreContenedor,
                                  "Asociar contenedor", MessageBoxButtons.OK, MessageBoxIcon.Information)

            End If

        End If

    End Sub

    Private Sub Sb_RevListaSuperiosEntidad_VtaCurso()

        If _Tido <> "COV" And _Tido <> "NVV" Then
            Return
        End If

        Try

            If _Cl_DocListaSuperior.UsarVencListaPrecios Then

                Lbl_InfoVtaAcumMes.Visible = True

                Dim _Endo As String = _TblEncabezado.Rows(0).Item("CodEntidad")

                Dim _FechaActual As Date = FechaDelServidor()
                Dim _PrimerDiaDelMes As Date = Primerdiadelmes(_FechaActual)
                Dim _UltimoDiaDelMes As Date = ultimodiadelmes(_FechaActual)

                Dim _PreMayMinXHolding As Boolean = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Entidades", "PreMayMinXHolding", "CodEntidad = '" & _Endo & "'",,,, True)
                Dim _CodHolding As String = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Entidades", "CodHolding", "CodEntidad = '" & _Endo & "'")
                Dim _FiltroEntidades As String

                If Not _PreMayMinXHolding Then
                    _CodHolding = String.Empty
                End If

                Dim _MsjVtasHolding = String.Empty

                If String.IsNullOrWhiteSpace(_CodHolding) Then
                    _FiltroEntidades = "('" & _Endo & "')"
                Else
                    Consulta_sql = "Select CodEntidad From " & _Global_BaseBk & "Zw_Entidades Where CodHolding = '" & _CodHolding & "'"
                    Dim _Tbl As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)
                    _FiltroEntidades = Generar_Filtro_IN(_Tbl, "", "CodEntidad", False, False, "'")
                    _MsjVtasHolding = " (incluye ventas de todo el Holding)"
                End If

                Consulta_sql = "SELECT  CASE" & vbCrLf &
                               "WHEN TIDO = 'NVV' THEN SUM(PPPRNE * (CAPRCO1 - (CAPREX1 + CAPRAD1)))" & vbCrLf &
                               "WHEN TIDO = 'NCV' THEN SUM(VANELI) * -1" & vbCrLf &
                               "ELSE SUM(VANELI)" & vbCrLf &
                               "END AS VentaMesEnCurso" & vbCrLf &
                               "INTO #MesEnCurso" & vbCrLf &
                               "FROM MAEDDO " & vbCrLf &
                               "WHERE ENDO In " & _FiltroEntidades & vbCrLf &
                               "AND FEEMLI between '" & Format(_PrimerDiaDelMes, "yyyyMMdd") & "' And '" & Format(_UltimoDiaDelMes, "yyyyMMdd") & "'" & vbCrLf &
                               "AND TIDO IN ('FCV', 'NCV')" & vbCrLf &
                               "GROUP BY YEAR(FEEMLI), MONTH(FEEMLI), TIDO;" & vbCrLf &
                               "SELECT ISNULL(SUM(VentaMesEnCurso),0) AS 'VentaMesEnCurso'" & vbCrLf &
                               "FROM #MesEnCurso;" & vbCrLf &
                               "DROP TABLE #MesEnCurso;"

                Dim _Row As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                Dim _VentaMesEnCurso As Double = NuloPorNro(_Row.Item("VentaMesEnCurso"), 0)

                Lbl_InfoVtaAcumMes.Text = "Vta.Acumulada Mes: " & FormatNumber(_VentaMesEnCurso, 0) & _MsjVtasHolding

                Me.Refresh()

            End If
        Catch ex As Exception
            MessageBoxEx.Show(Me, ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error)
        End Try
    End Sub

    Private Sub Sb_RevListaSuperiosEntidad(_MostrarMensaje As Boolean)

        If _Tido <> "COV" And _Tido <> "NVV" Then
            Return
        End If

        Try

            If _Cl_DocListaSuperior.UsarVencListaPrecios Then

                _Cl_DocListaSuperior.ListaEntidad = Mid(_RowEntidad.Item("LVEN"), 6, 3) ' _TblEncabezado.Rows(0).Item("ListaPrecios")

                Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_ListaPreGlobal Where Lista = '" & _Cl_DocListaSuperior.ListaEntidad & "'"
                Dim _Row_ListaSuperior As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                If Not IsNothing(_Row_ListaSuperior) AndAlso Not _Row_ListaSuperior.Item("EsListaSuperior") Then
                    Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_ListaPreGlobal Where Lista = '" & _Row_ListaSuperior.Item("ListaSuperior") & "'"
                    _Row_ListaSuperior = _Sql.Fx_Get_DataRow(Consulta_sql)
                End If

                If IsNothing(_Row_ListaSuperior) Then
                    Return
                End If

                Dim _CodEntidad As String = _RowEntidad.Item("KOEN")
                Dim _CodSucEntidad As String = _RowEntidad.Item("SUEN")

                Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Entidades Where CodEntidad = '" & _CodEntidad & "' And CodSucEntidad = '" & _CodSucEntidad & "'"
                Dim _Row_EntidadBakapp As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                Dim _Row_ListaInferior As DataRow

                If Not _Row_ListaSuperior.Item("EsListaSuperior") Then
                    Return
                End If

                Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_ListaPreGlobal Where Lista = '" & _Row_ListaSuperior.Item("ListaInferior") & "'"
                _Row_ListaInferior = _Sql.Fx_Get_DataRow(Consulta_sql)

                Dim _ListaInferior As String = _Row_ListaSuperior.Item("ListaInferior").ToString.Trim
                Dim _ListaSuperior As String = _Row_ListaSuperior.Item("Lista").ToString.Trim

                If String.IsNullOrWhiteSpace(_ListaInferior) Then
                    Return
                End If

                If IsNothing(_Row_ListaInferior) Then
                    Return
                End If

                Dim _Msj As LsValiciones.Mensajes

                _Msj = _Cl_DocListaSuperior.Fx_RevisarSiCumpleConTenerListaSuperior(_CodEntidad, _ListaSuperior)

                If _Msj.EsCorrecto Then

                    If _Cl_DocListaSuperior.ListaEntidad = _ListaInferior Then

                        _TblEncabezado.Rows(0).Item("ListaPrecios") = _ListaSuperior
                        _Cl_DocListaSuperior.ListaEntidad = _ListaSuperior
                        _RowEntidad.Item("LVEN") = "TABPP" & _ListaSuperior
                        _TblDetalle.Rows(0).Item("CodLista") = _ListaSuperior

                        If _MostrarMensaje Then

                            Dim _Menje As String = Fx_AjustarTexto("Cliente cumple con la condición para usar la lista superior: " & _ListaSuperior, 100)

                            MessageBoxEx.Show(Me, _Menje, "Validación", MessageBoxButtons.OK, MessageBoxIcon.Information)

                        End If

                    End If

                Else

                    If _Cl_DocListaSuperior.ListaEntidad <> _ListaInferior Then

                        If _MostrarMensaje Then

                            Dim _Menje As String = Fx_AjustarTexto(_Msj.Mensaje, 100)

                            MessageBoxEx.Show(Me, _Menje, "Validación", MessageBoxButtons.OK, MessageBoxIcon.Warning)

                        End If

                    End If

                    _TblEncabezado.Rows(0).Item("ListaPrecios") = _ListaInferior
                    _Cl_DocListaSuperior.ListaEntidad = _ListaInferior
                    _RowEntidad.Item("LVEN") = "TABPP" & _ListaInferior
                    _TblDetalle.Rows(0).Item("CodLista") = _ListaInferior

                End If

            End If

        Catch ex As Exception
            MessageBoxEx.Show(Me, ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error)
        End Try

    End Sub

    Function Fx_Incorporar_Sucursal_Recepcion() As Boolean

        Dim _Row_Bodega_Destino As DataRow

        Dim Fm_Bd As New Frm_Seleccionar_Bodega_Grilla("")
        Fm_Bd.Pro_Pedir_Permiso = False
        Fm_Bd.Text = "SELECCIONE LA BODEGA DE DESTINO (Bodega que recibira los productos)"
        Fm_Bd.ShowDialog(Me)
        _Row_Bodega_Destino = Fm_Bd.Pro_Row_Bodega
        Fm_Bd.Dispose()

        If Not _Row_Bodega_Destino Is Nothing Then

            'Dim _Permiso = "Bo" & ModEmpresa_Doc & _Row_Bodega_Destino.Item("KOSU") & _Row_Bodega_Destino.Item("KOBO")

            'If Not Fx_Tiene_Permiso(Me, _Permiso) Then
            '    Return False
            'End If

            If _Global_Row_Configuracion_Estacion.Item("NVIQuedaSUDOSucRecibe") Then
                _TblEncabezado.Rows(0).Item("Sucursal") = _Row_Bodega_Destino.Item("KOSU")
            End If

            _RowEntidad.Item("SUEN") = _Row_Bodega_Destino.Item("KOSU")
            _TblEncabezado.Rows(0).Item("CodSucEntidad") = _Row_Bodega_Destino.Item("KOSU")
            _TblEncabezado.Rows(0).Item("Bodega_Destino") = _Row_Bodega_Destino.Item("KOBO")

            Return True

        End If

    End Function

    Sub Sb_Revisar_CtaCte_De_La_Entidad(_Mostrar_Vender_con_deuda_vencida As Boolean)

        Dim _TotalBruto As Double = _TblEncabezado.Rows(0).Item("TotalBrutoDoc")

        For Each _Fila As DataRow In _TblDetalle.Rows

            Dim _Tidopa = _Fila.Item("Tidopa")
            Dim _ValBrutoLinea = _Fila.Item("ValBrutoLinea")

            If _Tidopa = "NVV" Then
                _TotalBruto -= _ValBrutoLinea
            End If

        Next

        Dim _CodEntidad = Grilla_Encabezado.Rows(0).Cells("CodEntidad").Value
        Dim _CodSucEntidad = Grilla_Encabezado.Rows(0).Cells("CodSucEntidad").Value

        Dim _Vizado As Boolean = _TblEncabezado.Rows(0).Item("Vizado")

        If String.IsNullOrEmpty(Trim(_CodEntidad)) Then
            Beep()
            ToastNotification.Show(Me, "NO HAY ENTIDAD EN EL DOCUMENTO",
                                   My.Resources.cross,
                                   1 * 1000, eToastGlowColor.Red,
                                   eToastPosition.MiddleCenter)

            Return
        End If

        Dim _Row_Inf_Entidad As DataRow = Fx_Traer_Datos_Entidad(_CodEntidad, _CodSucEntidad)

        Dim _NOTRAEDEUD As Boolean '= _Row_Inf_Entidad.Item("NOTRAEDEUD")

        If Not IsNothing(_RowEntidad_X_Defecto) Then

            Dim _Koen_x_defecto = _RowEntidad_X_Defecto.Item("KOEN").ToString.Trim
            Dim _Suen_x_defecto = _RowEntidad_X_Defecto.Item("SUEN").ToString.Trim

            If _Koen_x_defecto = _CodEntidad And _Suen_x_defecto = _CodSucEntidad Then
                _NOTRAEDEUD = True
            End If

        End If

        If Not _NOTRAEDEUD Then

            Dim _EnCurso As Double

            If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Then
                _EnCurso = _TotalBruto
            Else
                _EnCurso = 0
            End If

            Dim Fm_D As New Frm_InfoEnt_Deudas_Doc_Comerciales(_Row_Inf_Entidad, _TotalBruto, 0, 0, 0, True)

            Dim _Fun_Auto_Deuda_Ven = NuloPorNro(_TblEncabezado.Rows(0).Item("Fun_Auto_Deuda_Ven"), "")
            Dim _Fun_Auto_Cupo_Exe = NuloPorNro(_TblEncabezado.Rows(0).Item("Fun_Auto_Cupo_Exe"), "")

            Fm_D.Pro_Fun_Auto_Deuda_Ven = _TblEncabezado.Rows(0).Item("Fun_Auto_Deuda_Ven")
            Fm_D.Pro_Fun_Auto_Cupo_Exe = _TblEncabezado.Rows(0).Item("Fun_Auto_Cupo_Exe")

            If String.IsNullOrEmpty(Fm_D.Pro_Fun_Auto_Deuda_Ven) Then
                Fm_D.Pro_Fun_Auto_Deuda_Ven = _TblEncabezado.Rows(0).Item("Codfuncionario")
            End If

            If String.IsNullOrEmpty(Fm_D.Pro_Fun_Auto_Cupo_Exe) Then
                Fm_D.Pro_Fun_Auto_Cupo_Exe = _TblEncabezado.Rows(0).Item("Codfuncionario")
            End If

            With _TblEncabezado.Rows(0) '_Fila

                Fm_D.Pro_FechaEmision = .Item("FechaEmision")
                Fm_D.Pro_Fecha_1er_Vencimiento = .Item("Fecha_1er_Vencimiento")
                Fm_D.Pro_FechaUltVencimiento = .Item("FechaUltVencimiento")
                Fm_D.Pro_Cuotas = .Item("Cuotas")
                Fm_D.Pro_Dias_1er_Vencimiento = .Item("Dias_1er_Vencimiento")
                Fm_D.Pro_Dias_Vencimiento = .Item("Dias_Vencimiento")

                'Fincred
                Fm_D.RevFincred = .Item("RevFincred")

                If _Vizado Or _Revision_Remota Then
                    Fm_D.Btn_CambCodPago.Enabled = False
                End If

                Fm_D.ShowDialog(Me)

                If Fm_D.Pro_Grabar_Vencimientos Then

                    .Item("FechaEmision") = Fm_D.Pro_FechaEmision
                    .Item("Fecha_1er_Vencimiento") = Fm_D.Pro_Fecha_1er_Vencimiento
                    .Item("FechaUltVencimiento") = Fm_D.Pro_FechaUltVencimiento
                    .Item("Cuotas") = Fm_D.Pro_Cuotas
                    .Item("Dias_1er_Vencimiento") = Fm_D.Pro_Dias_1er_Vencimiento
                    .Item("Dias_Vencimiento") = Fm_D.Pro_Dias_Vencimiento

                    'Fincred
                    '.Item("RevFincred") = Fm_D.RevFincred

                    If _Vizado Then

                        For Each _Fila_d As DataGridViewRow In Grilla_Detalle.Rows

                            Dim _Codigo As String = _Fila_d.Cells("Codigo").Value
                            Dim _Cantidad = _Fila_d.Cells("Cantidad").Value
                            Dim _UnTrans = _Fila_d.Cells("UnTrans").Value

                            Dim _PrecioNetoUd As Double = _Fila_d.Cells("PrecioNetoUd").Value
                            Dim _PrecioBrutoUd As Double = _Fila_d.Cells("PrecioBrutoUd").Value

                            Dim _DescuentoPorc As Double = _Fila_d.Cells("DescuentoPorc").Value
                            Dim _Tiene_Dscto As Boolean = NuloPorNro(_Fila_d.Cells("Tiene_Dscto").Value, False)
                            Dim _CodFunAutoriza As String = _Fila_d.Cells("CodFunAutoriza").Value

                            Consulta_sql = "Select Top 1 * From MAEPR Where KOPR = '" & _Codigo & "'"
                            Dim _RowProducto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                            Sb_Traer_Producto_Grilla(_Fila_d, _RowProducto, False)

                            _Fila_d.Cells("Cantidad").Value = _Cantidad

                            Sb_Procesar_Datos_De_Grilla(_Fila_d, "Cantidad", True, True)

                            If _Tiene_Dscto Then

                                If ChkValores.Checked Then
                                    _Fila_d.Cells("Precio").Value = _PrecioNetoUd
                                Else
                                    _Fila_d.Cells("Precio").Value = _PrecioBrutoUd
                                End If

                                Sb_Procesar_Datos_De_Grilla(_Fila_d, "Precio", True, True)

                                If _DescuentoPorc > 0 Then
                                    _Fila_d.Cells("DescuentoPorc").Value = _DescuentoPorc
                                    Sb_Procesar_Datos_De_Grilla(_Fila_d, "DescuentoPorc", True, True)
                                End If

                            End If

                        Next

                    End If

                End If

                Fm_D.Dispose()

            End With

        Else

            Beep()
            ToastNotification.Show(Me, "ESTA ENTIDAD NO AFECTA REVISION CTA. CORRIENTE",
                                 My.Resources.cross,
                                   2 * 1000, eToastGlowColor.Red,
                                   eToastPosition.MiddleCenter)

        End If

    End Sub

#Region "CAMBIAR DATOS DE ENCABEZADO"

#Region "CAMBIAR MODALIDAD"

    Sub Sb_Cambiar_Modalidad()

        If Not Fx_Revisar_si_tiene_registros(False) Then

            Dim _Modalidad_Seleccionada As String = ModModalidad_Doc

            Dim Frm_Modalidad As New Frm_Modalidades(True)
            Frm_Modalidad.ControlBox = True
            Frm_Modalidad.Cmb_Modalidades.Enabled = False
            Frm_Modalidad.ShowDialog(Me)
            If Frm_Modalidad.Modalidad_Seleccionada Then
                _Modalidad_Seleccionada = Mod_Modalidad
            End If
            Frm_Modalidad.Dispose()

            _Global_Frm_Menu.Refresh()

            If _Modalidad_Seleccionada <> ModModalidad_Doc Then

                ModModalidad_Doc = _Modalidad_Seleccionada
                Dim _RowFormato As DataRow = Fx_Formato_Modalidad(Me, ModEmpresa_Doc, ModModalidad_Doc, _Tido, True)

                Consulta_sql = "Select Top 1 * From CONFIEST WITH (NOLOCK) Where MODALIDAD = '" & ModModalidad_Doc & "'"
                Dim _Row_Modalidad As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                Dim _Empresa As String = _Row_Modalidad.Item("EMPRESA")
                Dim _Sucursal As String = _Row_Modalidad.Item("ESUCURSAL")
                Dim _Bodega As String = _Row_Modalidad.Item("EBODEGA")

                Dim _Permiso = "Bo" & _Empresa & _Sucursal & _Bodega
                If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, _Permiso, Nothing) Then
                    ModModalidad_Doc = _Modalidad_Seleccionada
                    MessageBoxEx.Show(Me, "LA MODALIDAD NO FUE CAMBIADA", "VALIDACION",
                                      MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                    Return
                End If

                If Not (_RowFormato Is Nothing) Then
                    '_Modalidad_Origen = Modalidad
                    Sb_Limpiar(ModModalidad_Doc)
                Else
                    ModModalidad_Doc = _Modalidad_Seleccionada
                End If

            End If

        Else
            Beep()
            ToastNotification.Show(Me, "DOCUMENTO CON DETALLE." & Environment.NewLine &
                                   "NO SE PUEDE CAMBIAR LA SUCURSAL O MODALIDAD", My.Resources.cross,
                                  2 * 1000, eToastGlowColor.Red, eToastPosition.MiddleCenter)
        End If

    End Sub

#End Region

#Region "CAMBIAR FUNCIONARIO"

    Sub Sb_Cambiar_Funcionario()

        Dim Frm_Login As New Frm_Login
        Frm_Login.ShowDialog()

        Dim UsuarioActivo = FUNCIONARIO

        If Frm_Login.CancelarLogin Then
            FUNCIONARIO = UsuarioActivo
            Exit Sub
        End If

        Frm_Login.Dispose()

        If _Global_Sesion Then

            Txt_Responsable.Text = " " & Nombre_funcionario_activo

            Dim Fm As New Frm_Modalidad_Mt
            Fm.ShowDialog(Me)
            Fm.Dispose()

            Grilla_Encabezado.Rows(0).Cells("CodFuncionario").Value = FUNCIONARIO
            Grilla_Encabezado.Rows(0).Cells("NomFuncionario").Value = Nombre_funcionario_activo
            Grilla_Encabezado.Rows(0).Cells("Sucursal").Value = Mod_Sucursal

            Select Case _Tipo_Documento
                Case csGlobales.Enum_Tipo_Documento.Venta, csGlobales.Enum_Tipo_Documento.Guia_Despacho
                    Grilla_Encabezado.Rows(0).Cells("ListaPrecios").Value = Mod_ListaPrecioVenta
                Case csGlobales.Enum_Tipo_Documento.Compra, csGlobales.Enum_Tipo_Documento.Guia_Recepcion
                    Grilla_Encabezado.Rows(0).Cells("ListaPrecios").Value = Mod_ListaPrecioCosto
            End Select

        End If

    End Sub

#End Region

#Region "CAMBIAR LISTA DE PRECIOS"

    Function Fx_Cambiar_ListaPrecios(_Timolt As String) As Boolean

        Dim _Vizado As Boolean = Grilla_Encabezado.Rows(0).Cells("Vizado").Value

        If _Vizado Then
            MessageBoxEx.Show(Me, "Documento Vizado", "Validación", MessageBoxButtons.OK,
                              MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, Me.TopMost)
            Return False
        End If

        If _Revision_Remota Then
            Return False
        End If

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Bkp00009", Nothing, "", "") Then

            'If Fx_Tiene_Permiso(Me, "Bkp00009") Then

            Dim Fm As Frm_SeleccionarListaPrecios 'Object

            Dim _Lista_Seleccionada As DataTable

            Select Case _Tipo_Documento

                Case csGlobales.Enum_Tipo_Documento.Compra,
                     csGlobales.Enum_Tipo_Documento.Guia_Recepcion,
                     csGlobales.Enum_Tipo_Documento.Guia_Traslado_Interno

                    Fm = New Frm_SeleccionarListaPrecios(Frm_SeleccionarListaPrecios.Enum_Tipo_Lista.Costo, False, True)


                Case csGlobales.Enum_Tipo_Documento.Venta,
                     csGlobales.Enum_Tipo_Documento.Guia_Despacho,
                     csGlobales.Enum_Tipo_Documento.Guia_Despacho_Devolucion

                    Fm = New Frm_SeleccionarListaPrecios(Frm_SeleccionarListaPrecios.Enum_Tipo_Lista.Precio, False, True)

            End Select

            Fm.NoPedirPermiso = True
            Fm.MostraTodasLasListas = True

            Fm.ShowDialog(Me)
            _Lista_Seleccionada = Fm.Pro_Tbl_Listas_Seleccionadas

            If Not (_Lista_Seleccionada Is Nothing) Then

                Dim _Tipo_Moneda As String = _Lista_Seleccionada.Rows(0).Item("Timolt")
                Dim _Kolt As String = _Lista_Seleccionada.Rows(0).Item("Lista")

                Dim _PermisoLc As String = Fm.Permiso

                If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, _PermisoLc, Nothing) Then
                    Return False
                End If

                If _Timolt <> _Tipo_Moneda Then
                    If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00036", Nothing) Then
                        Return False
                    End If
                End If

                Grilla_Encabezado.Rows(0).Cells("ListaPrecios").Value = _Kolt

                Fm.Dispose()

                Return True

            End If

        End If

    End Function

#End Region

#End Region


    Private Sub Btn_VerEntidadFisica_Click(sender As System.Object, e As System.EventArgs) Handles Btn_VerEntidadFisica.Click

        If Not (_RowEntidad_Despacho Is Nothing) Then
            Dim Fm As New Frm_InfoEnt_Informacion_General(_RowEntidad_Despacho)
            Fm.ShowDialog(Me)
            Fm.Dispose()
        Else
            MessageBoxEx.Show(Me, "Falta el entidad física", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
        End If

    End Sub

    Private Sub BtnGrabar_Click(sender As System.Object, e As System.EventArgs) Handles BtnGrabar.Click
        Sb_Grabar_Documento(_New_Idmaeedo, True)
    End Sub

    Sub Sb_Grabar_Documento(ByRef _Idmaeedo As Integer,
                            _Imprimir As Boolean)

        Try

            Me.Enabled = False

            If Me.Visible Then
                If Fr_Alerta_Stock.Visible Then
                    Fr_Alerta_Stock.Close()
                End If
            End If

            Dim _Vizado As Boolean
            Dim _Grabar_e_Imprimir As Boolean
            Dim _Grabar_Y_Pagar_Vale As Boolean
            Dim _Obliga_Despacho_BodDistintas As Boolean

            Sb_Borrar_Lineas_En_Blanco()
            Sb_Sumar_Totales()

            Call Btn_Refrescar_Stock_X_Linea_Click(Nothing, Nothing)

            Sb_Agregar_Conceptos_Asociados()

            If Not Fx_Validar_Lineas_Por_Documento_VS_Formato(1) Then
                Return
            End If

            If Not Fx_Revisar_si_tiene_registros() Then
                Return
            End If

            Dim _Validar_Cantidad As String = Fx_Validar_Cantidades_En_Documentos()

            If Not String.IsNullOrEmpty(_Validar_Cantidad) Then

                MessageBoxEx.Show(Me, "Existen productos con cantidad cero, debe corregir", "Validación",
                                  MessageBoxButtons.OK, MessageBoxIcon.Stop)
                Return
            End If

            If Not Fx_Validar_Precios_Cero_En_Documentos() Then
                Return
            End If

            If Not Fx_Validar_Fecha_Emision_Encabezado_Detalle() Then
                Return
            End If

            If Not Fx_Validar_Totales_En_Conceptos() Then
                Return
            End If

            If Not Fx_Revisar_Si_Tiene_OCC_Pendiente() Then
                Return
            End If

            If Not Fx_Revisar_Costo_Lista_Distinto_Costo_Proveedor() Then
                Return
            End If

            If Not Fx_Validar_Detalle_Asociado_Conceptos_DRA() Then
                Return
            End If

            If Not Fx_Validar_Restricciones_Por_Tipo_Documento_Y_Relacion() Then
                Return
            End If

            'VALIDACION FINCRED
            If Not Fx_Revisar_Fincred() Then
                Return
            End If

            If Not Fx_Revisar_MinimoCompra() Then
                Return
            End If

            _TblEncabezado.Rows(0).Item("Pickear") = Chk_Pickear.Checked

            If String.IsNullOrEmpty(_TblEncabezado.Rows(0).Item("NroDocumento").ToString.Trim) Then
                MessageBoxEx.Show(Me, "Debe indicar un número de documento", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                Return
            End If

            Dim _Fecha_Emision As Date = FormatDateTime(_TblEncabezado.Rows(0).Item("FechaEmision"), DateFormat.ShortDate)

            Dim _Permiso_Fac_Gdp = False

            For Each _Fila As DataRow In _TblDetalle.Rows

                Dim _Tidopa = _Fila.Item("Tidopa")
                Dim _Idmaeddo_Dori = _Fila.Item("Idmaeddo_Dori")
                Dim _Nudopa = _Fila.Item("Nudopa")

                If CBool(_Idmaeddo_Dori) Then

                    Dim _Existe_Idmaeddo_Dori As Boolean = CBool(_Sql.Fx_Cuenta_Registros("MAEDDO", "IDMAEDDO = " & _Idmaeddo_Dori))

                    If _Existe_Idmaeddo_Dori Then

                        Dim _Idmaeedo_Dori As Integer = _Sql.Fx_Trae_Dato("MAEDDO", "IDMAEEDO", "IDMAEDDO = " & _Idmaeddo_Dori)
                        Dim _Fecha_Dori As Date = FormatDateTime(_Sql.Fx_Trae_Dato("MAEEDO", "FEEMDO", "IDMAEEDO = " & _Idmaeedo_Dori), DateFormat.ShortDate)

                        Dim _Mes_Dori = _Fecha_Dori.Month
                        Dim _Mes_Emi = _Fecha_Emision.Month

                        If _Mes_Dori < _Mes_Emi Then

                            If False Then 'If _Tidopa = "GDV" Then

                                Dim _Info As New TaskDialogInfo("Validación del sistema",
                                          eTaskDialogIcon.Stop,
                                          "No puede facturar guías de despacho de ventas de un mes anterior",
                                          vbCrLf & "Se estaría facturando la guía Nro: " & _Nudopa,
                                          eTaskDialogButton.Ok _
                                          , eTaskDialogBackgroundColor.Red, Nothing, Nothing, Nothing, Nothing, Nothing)

                                Dim _Resultado As eTaskDialogResult = TaskDialog.Show(_Info)

                                Return

                            End If

                            If Not _Permiso_Fac_Gdp Then

                                If _Tidopa = "GDP" Or _Tidopa = "GDV" Then

                                    If MessageBoxEx.Show(Me, "Se estaría facturando la guía Nro: " & _Nudopa & " de un mes anterio al actual" & vbCrLf &
                                                "¿Desea facturar igualmente?",
                                                "Validación", MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation) = DialogResult.Yes Then

                                        _Permiso_Fac_Gdp = Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00039", _Ds_Matriz_Documentos)

                                        If Not _Permiso_Fac_Gdp Then
                                            Return
                                        End If
                                    Else
                                        Return
                                    End If

                                End If

                            End If

                        End If

                    End If

                End If

            Next

            Dim _Centro_Costo_Obligatorio_OCC As Boolean = _Global_Row_Configuracion_General.Item("Centro_Costo_Obligatorio_OCC")

            Dim _Centro_Costo = _TblEncabezado.Rows(0).Item("Centro_Costo")

            If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Compra Then

                If _Centro_Costo_Obligatorio_OCC Then
                    If String.IsNullOrEmpty(_Centro_Costo) Then
                        MessageBoxEx.Show(Me, "Falta el centro de costo del documento", "Validación", MessageBoxButtons.OK,
                                          MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)

                        Grilla_Encabezado.CurrentCell = Grilla_Encabezado.Rows(0).Cells("Centro_Costo")
                        Call Grilla_Encabezado_CellDoubleClick(Nothing, Nothing)

                        Return
                    End If
                End If

            End If

            Dim _NumRecord As Integer = 0

            If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Compra Then

                For Each _Fl As DataRow In _TblDetalle.Rows

                    Dim _Campo_DimComProy = _Global_Row_Configuracion_General.Item("Dimension_Compra_Prod_Proyec_Oblig")

                    Dim _Codigo = Trim(_Fl.Item("Codigo"))
                    Dim _Descripcion = Trim(_Fl.Item("Descripcion"))

                    If _Sql.Fx_Exite_Campo("PDIMEN", _Campo_DimComProy) Then

                        If Not String.IsNullOrEmpty(_Campo_DimComProy) Then

                            Dim _Proyecto As String = _Fl.Item("Proyecto")
                            Dim _Ctrl_Proy As Boolean = CBool(_Sql.Fx_Trae_Dato("PDIMEN", _Campo_DimComProy, "CODIGO = '" & _Codigo & "'", True))

                            If _Ctrl_Proy And String.IsNullOrEmpty(_Proyecto) Then

                                MessageBoxEx.Show(Me, "Falta el proyecto para el producto: " & _Codigo & " - " & _Descripcion, "Validación",
                                                  MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                                Return

                            End If

                        End If

                    End If

                    If _Centro_Costo_Obligatorio_OCC Then

                        Dim _Cc = _Fl.Item("Centro_Costo")

                        If String.IsNullOrEmpty(_Cc) Then
                            MessageBoxEx.Show(Me, "Falta el centro de costo en algunas filas del documento", "Validación", MessageBoxButtons.OK,
                                              MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                            Return
                        End If

                    End If

                Next

            End If

            Dim _Documento_Autorizado As Boolean

            Dim _Enviar_Solicitudes As Boolean
            Dim _Nro_RCadena As String

            Dim _Solicitar_Permiso_OCC_SOC As Boolean = _Global_Row_Configuracion_General.Item("Solicitar_Permiso_OCC_SOC")
            Dim _Usar_Validador_Prod_X_Compras As Boolean

            If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Or
                (_Tipo_Documento = csGlobales.Enum_Tipo_Documento.Compra And _Solicitar_Permiso_OCC_SOC) Or
                _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Traslado_Interno Or
                _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Nota_Venta_Interna Or
                _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Despacho_Interna Or
                _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Despacho_Devolucion Then

                If _Tido = "OCC" Then

                    If _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Configuracion", "Usar_Validador_Prod_X_Compras") Then
                        _Usar_Validador_Prod_X_Compras = _Global_Row_Configuracion_General.Item("Usar_Validador_Prod_X_Compras")
                    End If

                    If _Usar_Validador_Prod_X_Compras Then

                        Dim _Filtro_In = Generar_Filtro_IN(_TblDetalle, "", "Codigo", False, False, "'")

                        Consulta_sql = "Select KOPR,NOKOPR Into #Paso From MAEPR Where KOPR In " & _Filtro_In & "
                                    Select KOPR,NOKOPR From #Paso Where KOPR Not In 
                                    (Select Codigo From " & _Global_BaseBk & "Zw_Prod_Usuario_Validador " &
                                    "Where Empresa = '" & ModEmpresa_Doc & "' And Codigo In (Select KOPR From #Paso))
                                    Drop Table #Paso"
                        Dim _Tbl_Producto As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

                        Dim _Contador = 1

                        For Each _FlP As DataRow In _Tbl_Producto.Rows

                            Dim _Kopr As String = _FlP.Item("KOPR")
                            Dim _Nokopr As String = _FlP.Item("NOKOPR")

                            Dim _Msg = "El producto " & _Kopr.Trim & " - " & _Nokopr.Trim & " no tiene asignado un usuario validador en " & ModEmpresa_Doc & " - " & RazonEmpresa.Trim & "." & vbCrLf &
                                       "Comuníquese con el administrador de compras para asignar validador"

                            MessageBoxEx.Show(Me, _Msg, "Validación (Producto " & _Contador & " de " & _Tbl_Producto.Rows.Count & ")", MessageBoxButtons.OK, MessageBoxIcon.Stop)

                            _Contador += 1

                        Next

                        If CBool(_Tbl_Producto.Rows.Count) Then Return

                    End If

                End If

                If Not Fx_Validar_Al_Grabar_Productos_Solicitados_A_Bodega() Then
                    Return
                End If

                If Not _Vizado Then

                    If _Post_Venta Then

                        If _Desde_Prestahop Then

                            Dim _CodEntidad_X_Defecto = _RowEntidad_X_Defecto.Item("KOEN")
                            Dim _Actualizar_Entidad As Boolean

                            If Not (_RowEntidad Is Nothing) Then
                                Dim _CodEntidad = _RowEntidad.Item("KOEN")
                                If Trim(_CodEntidad_X_Defecto) = Trim(_CodEntidad) Then
                                    MessageBoxEx.Show(Me, "Debe seleccionar una entidad para el documento", "Validación",
                                              MessageBoxButtons.OK, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, Me.TopMost)

                                    _Actualizar_Entidad = True
                                End If
                            Else
                                _Actualizar_Entidad = True
                            End If

                            If _Actualizar_Entidad Then
                                Dim _RowNuevaEntidad = Fx_Buscar_Entidad(Me, "", "", True, True)
                                If Not (_RowNuevaEntidad Is Nothing) Then
                                    _RowEntidad = _RowNuevaEntidad
                                    Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, True)
                                Else
                                    Return
                                End If
                            End If

                        End If

                        If Not _Documento_Reciclado Then

                            If Not Fx_Cambiar_Tipo_Documentos_Post_Venta() Then

                                Sb_EliminarFilaPuntos()
                                Return

                            End If

                        End If

                    End If

                End If

                Sb_AgregarDsctoXPuntos()

                If Not Fx_AgregarPallet() Then
                    Return
                End If

                Sb_Actualizar_Permisos_Necesarios_Del_Documento_New()

                Dim _No_Permitir_Grabar_Con_Dscto_Superado As Boolean = _Global_Row_Configuracion_General.Item("No_Permitir_Grabar_Con_Dscto_Superado")

                If _No_Permitir_Grabar_Con_Dscto_Superado Then

                    For Each _Fl As DataRow In _TblPermisos.Rows

                        Dim _CodPermiso = _Fl.Item("CodPermiso")
                        Dim _Necesita_Permiso = _Fl.Item("Necesita_Permiso")

                        If _CodPermiso = "Bkp00014" And _Necesita_Permiso Then

                            MessageBoxEx.Show(Me, "No puede grabar el documento" & vbCrLf & "Existen productos con descuento superado" & vbCrLf & vbCrLf &
                                          "Condición establecida desde la configuración general", "Validación",
                                          MessageBoxButtons.OK, MessageBoxIcon.Stop)
                            Return

                        End If

                    Next

                End If

                _Documento_Autorizado = Fx_Documento_Autorizado()
                _Vizado = Grilla_Encabezado.Rows(0).Cells("Vizado").Value

                Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(0).Cells("Lincondest")

                If _Revision_Remota Then

                    _Documento_Autorizado = True

                    'Se reestablecen los stock para que cuando se cree definitivamente el documento en Random el sistema 
                    'actualizara el stock al crear el documento
                    Sb_Reestablecer_Stock_En_Zw_Prod_Stock(_Tido, _TblDetalle)

                Else

                    _Documento_Autorizado = Fx_Documento_Autorizado()

#Region "Revision de obligatoriedad de incorporar archivo adjunto al documento"

                    Dim _Permido_Adj = String.Empty

                    If _Tido = "BLV" Then _Permido_Adj = "NO00009"
                    If _Tido = "FCV" Then _Permido_Adj = "NO00010"
                    If _Tido = "NVV" Then _Permido_Adj = "NO00011"

                    If Not String.IsNullOrEmpty(_Permido_Adj) Then

                        If Fx_Tiene_Permiso(_Permido_Adj, FUNCIONARIO) Then

                            Consulta_sql = "Select Nombre_Archivo,Archivo,Fecha,CodFuncionario" & vbCrLf &
                                           "From " & _Global_BaseBk & "Zw_Casi_DocArc" & vbCrLf &
                                           "Where NombreEquipo = '" & _NombreEquipo & "' And En_Construccion = 1"
                            Dim _Tbl As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

                            If Not CBool(_Tbl.Rows.Count) Then

                                MessageBoxEx.Show(Me, "DEBE ADJUNTAR UN ARCHIVO PARA PODER GRABAR EL DOCUMENTO" & vbCrLf &
                                                  "ARCHIVO DE COMPROBANTE DE PAGO", "Restricción N° " & _Permido_Adj,
                                          MessageBoxButtons.OK, MessageBoxIcon.Stop)

                                Call Btn_Archivos_Adjuntos_Click(Nothing, Nothing)

                                Consulta_sql = "Select Nombre_Archivo,Archivo,Fecha,CodFuncionario" & vbCrLf &
                                               "From " & _Global_BaseBk & "Zw_Casi_DocArc" & vbCrLf &
                                               "Where NombreEquipo = '" & _NombreEquipo & "' And En_Construccion = 1"
                                _Tbl = _Sql.Fx_Get_DataTable(Consulta_sql)

                                If Not CBool(_Tbl.Rows.Count) Then
                                    Return
                                End If

                            End If

                        End If

                    End If

#End Region

                    'Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Configuracion_Formatos_X_Modalidad 
                    '                Where Empresa = '" & ModEmpresa_Doc & "' And Modalidad = '" & Modalidad & "' And TipoDoc = '" & _Tido & "'"
                    'Dim _Row_Formato_Modalidad As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                    If Not IsNothing(_Row_Formato_Modalidad) Then

                        Dim _Sugiere_Despacho As Boolean = _Row_Formato_Modalidad.Item("Sugiere_Despacho")
                        Dim _Obliga_Despacho As Boolean = _Row_Formato_Modalidad.Item("Obliga_Despacho")
                        _Obliga_Despacho_BodDistintas = _Row_Formato_Modalidad.Item("Obliga_Despacho_BodDistintas")

                        If _Sugiere_Despacho And Not _Obliga_Despacho Then

                            If IsNothing(_Cl_Despacho) Then

                                If MessageBoxEx.Show(Me, "¿Desea ingresar orden de despacho?", "Orden de despacho", vbYesNo, MessageBoxIcon.Question) = DialogResult.Yes Then
                                    Call Btn_Despacho_Click(Nothing, Nothing)
                                End If

                            End If

                        End If

                        If _Obliga_Despacho_BodDistintas And Not _Obliga_Despacho Then

                            For Each _Fl As DataRow In _TblDetalle.Rows

                                Dim _Suc = _Fl.Item("Sucursal")
                                Dim _Bod = _Fl.Item("Bodega")

                                If _Suc <> Mod_Sucursal Then
                                    _Obliga_Despacho = True
                                    Exit For
                                End If

                            Next

                        End If

                        If _Obliga_Despacho Then

                            Dim _Filtros_Despachos = Generar_Filtro_IN(_TblDetalle, "", "Idmaeedo_Dori", True, False)

                            Dim _Reg = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_Despachos_Doc", "Idrst In " & _Filtros_Despachos & " And Activo = 1")

                            If Not CBool(_Reg) Then

                                _Reg = 0

                                For Each _Fl As DataRow In _TblDetalle.Rows
                                    If Fx_ProdConInfo(_Fl.Item("Tipr")) Then
                                        _Reg = 1
                                        Exit For
                                    End If
                                Next

                                If CBool(_Reg) Then

                                    If IsNothing(_Cl_Despacho) Then

                                        Dim Msg = "DEBE INGRESAR LOS DATOS PARA EL DESPACHO O RETIRO"

                                        If _Obliga_Despacho_BodDistintas Then
                                            Msg = "EXISTEN PRODUCTOS CON BODEGAS DISTINTAS A LA DE LA SUCURSAL" & vbCrLf & Msg
                                        End If

                                        MessageBoxEx.Show(Me, Msg, "Orden de despacho", MessageBoxButtons.OK, MessageBoxIcon.Information)

                                    End If

                                    'Call Btn_Despacho_Click(Nothing, Nothing)

                                    ' Debo poner un validador que permita controlar que cuando se cierra el formulario de despacho con la X el sistema no pase a las 
                                    ' Observaciones sino que se quede en el formulario principal.

                                    Dim _FormularioCerradoSinGrabar As Boolean

                                    Sb_Despacho(Not _Obliga_Despacho_BodDistintas, _FormularioCerradoSinGrabar)

                                    If _FormularioCerradoSinGrabar Then Return

                                    If IsNothing(_Cl_Despacho) Then

                                        Dim _RowFlPer As DataRow() = _TblPermisos.Select("CodPermiso = 'ODp00010'")

                                        If Convert.ToBoolean(_RowFlPer.Count) Then

                                            Dim _FlPer2 As DataRow = _RowFlPer(0)

                                            Dim _CodFuncionario_Autoriza = _FlPer2.Item("CodFuncionario_Autoriza")
                                            Dim _NomFuncionario_Autoriza = _FlPer2.Item("NomFuncionario_Autoriza")

                                            MessageBoxEx.Show(Me, "Usted esta autorizado para no generar despachos por " & _CodFuncionario_Autoriza & " - " & _NomFuncionario_Autoriza.ToString.Trim, "Autorizado", MessageBoxButtons.OK, MessageBoxIcon.Information)

                                        Else

                                            Dim _CodEntidad As String = _TblEncabezado.Rows(0).Item("CodEntidad")
                                            Dim _CodSucEntidad As String = _TblEncabezado.Rows(0).Item("CodSucEntidad")

                                            If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "ODp00010", _Ds_Matriz_Documentos, _CodEntidad, _CodSucEntidad) Then
                                                Return
                                            End If

                                        End If

                                    Else
                                        Sb_Actualizar_Permisos_Necesarios_Del_Documento_New()
                                        _Documento_Autorizado = Fx_Documento_Autorizado()
                                        _Vizado = Grilla_Encabezado.Rows(0).Cells("Vizado").Value
                                    End If

                                End If

                            End If

                        End If

                    End If

                    Dim _Grabar_Obs As Boolean

                    Dim _Caja_Habilitada As Boolean

                    Try
                        _Caja_Habilitada = _Global_Row_EstacionBk.Item("Caja_Habilitada")
                    Catch ex As Exception
                        _Caja_Habilitada = False
                    End Try

                    Dim Fm_Obs As New Frm_Formulario_Observaciones(_Ds_Matriz_Documentos, _RowEntidad, _Tipo_Documento, _Documento_Autorizado)
                    Fm_Obs.Btn_Grabar_Observaciones.Visible = False
                    Fm_Obs.Pro_Class_Referencias_DTE = _Class_Referencias_DTE
                    Fm_Obs.Btn_Grabar_Pagar.Visible = (_Caja_Habilitada And _Post_Venta And (_Tido = "BLV" Or _Tido = "FCV"))
                    Fm_Obs.TieneOrdenDeDespacho = Not (IsNothing(_Cl_Despacho))
                    Fm_Obs.Chk_GrabaNVVCustomizable.Visible = (_Tido = "NVV" AndAlso _Global_Row_Configuracion_General.Item("HabilitarNVVConProdCustomizables"))
                    Fm_Obs.GrabaNVVCustomizable = _TblEncabezado.Rows(0).Item("Customizable")
                    Fm_Obs.ShowDialog(Me)

                    _Grabar_Obs = Fm_Obs.Pro_Grabar
                    _Class_Referencias_DTE = Fm_Obs.Pro_Class_Referencias_DTE
                    _Grabar_e_Imprimir = Not Fm_Obs.Solo_Grabar
                    _Grabar_Y_Pagar_Vale = Fm_Obs.Grabar_Y_Pagar_Vale

                    _TblEncabezado.Rows(0).Item("Customizable") = Fm_Obs.GrabaNVVCustomizable

                    Fm_Obs.Dispose()

                    If _Grabar_Obs Then
                        _Solicitar_Observaciones_Al_Grabar = False
                    Else

                        If Not IsNothing(_Cl_Despacho) Then
                            Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Chilexpress_Env Where IdDespacho = " & _Cl_Despacho.Id_Despacho
                            Dim _Row_Chilexpress As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                            If Not IsNothing(_Row_Chilexpress) Then

                                Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Chilexpress_Env Where IdDespacho = " & _Cl_Despacho.Id_Despacho
                                _Sql.Ej_consulta_IDU(Consulta_sql)

                                Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Despachos Where Id_Despacho = " & _Cl_Despacho.Id_Despacho
                                _Sql.Ej_consulta_IDU(Consulta_sql)

                                _Cl_Despacho = Nothing

                                MessageBoxEx.Show(Me, "Este documento se encontraba con una cotización a Chilexpress." & vbCrLf &
                                              "La orden se eliminara y si necesita volver hacer el despacho debe llenar nuevamente la solicitud." & vbCrLf &
                                              "No esta permitido salir y volver al documento cuando hay una orden de Chilexpress en proceso",
                                              "Validacón Chilexpress", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                                Dim _FilasEliminar As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.Rows.Count - 1)
                                Sb_Eliminar_Fila(_FilasEliminar, True)
                            End If
                        End If

                        Sb_EliminarFilaPuntos()
                        Sb_EliminarFilaPallet()

                        Return

                    End If


                    If _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Configuracion", "AlertaRevNVVConVtasMismoDia") Then

                        Dim _AlertaRevNVVConVtasMismoDia As Boolean = _Global_Row_Configuracion_Estacion.Item("AlertaRevNVVConVtasMismoDia")

                        If _AlertaRevNVVConVtasMismoDia And _Tido = "NVV" Then

                            Dim _CodProductoDoc As String = Generar_Filtro_IN(_TblDetalle, "", "Codigo", False, False, "'")
                            Dim _Feer As String = Format(_TblEncabezado.Rows(0).Item("FechaRecepcion"), "yyyyMMdd")

                            Consulta_sql = "Select Count(*) As Detalle From MAEDDO Ddo WITH (NOLOCK) Inner Join MAEEDO Edo WITH (NOLOCK) On Edo.IDMAEEDO = Ddo.IDMAEEDO" & vbCrLf &
                                   "Where Edo.ENDO = '" & _RowEntidad.Item("KOEN") & "' And Edo.SUENDO = '" & _RowEntidad.Item("SUEN") & "' " &
                                   "And Edo.FEER = '" & _Feer & "' And Ddo.KOPRCT In " & _CodProductoDoc &
                                   " And Ddo.TIPR In ('FPN','FPS','FNP','FIN') And Edo.TIDO In ('FCV','NVV','GDV','BLV')"
                            Dim _Row As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                            If Not IsNothing(_Row) Then

                                If CBool(_Row.Item("Detalle")) Then
                                    Dim _Msg1 As String '= "Existen documentos de venta con la misma fecha de despacho y a demás incluyen alguno de los productos a vender"
                                    _Msg1 = "Se han detectado documentos de venta con la misma fecha de despacho que incluyen algunos de los productos a vender"
                                    Dim _Msg2 = "¿DESEA SEGUIR CON LA GRABACION?" & vbCrLf & vbCrLf

                                    If Not Fx_Confirmar_Lectura(_Msg1, _Msg2, eTaskDialogIcon.Stop) Then
                                        Return
                                    End If
                                End If

                            End If

                        End If

                    End If


                    Sb_Actualizar_Permisos_Necesarios_Del_Documento_New()
                    _Documento_Autorizado = Fx_Documento_Autorizado()
                    _Vizado = Grilla_Encabezado.Rows(0).Cells("Vizado").Value

                    If Not _Documento_Autorizado Then

                        If _Tido = "OCC" Then

                            Dim _Entidad_Perefencial As Boolean = _RowEntidad.Item("PREFEN")

                            If _Entidad_Perefencial Then

                                Dim _Koen = _RowEntidad.Item("KOEN")
                                Dim _Suen = _RowEntidad.Item("SUEN")

                                Dim _Reg = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_TblInf_EntExcluidas",
                                                         "Funcionario = '' And Excluida = 'C' And Codigo = '" & _Koen & "' And Sucursal = '" & _Suen & "'")

                                If CBool(_Reg) Then

                                    Dim _No_Solicitar_Permiso_Entidad_Preferencial As Boolean = _Global_Row_Configuracion_Estacion.Item("No_Solicitar_Permiso_Entidad_Preferencial")

                                    If Not _No_Solicitar_Permiso_Entidad_Preferencial Then
                                        _No_Solicitar_Permiso_Entidad_Preferencial = _Global_Row_Configuracion_General.Item("No_Solicitar_Permiso_Entidad_Preferencial")
                                    End If

                                    If _No_Solicitar_Permiso_Entidad_Preferencial Then

                                        _Documento_Autorizado = True

                                        MessageBoxEx.Show(Me, "Entidad preferencial, no necesita permiso para su aprobación.", "Validación",
                                             MessageBoxButtons.OK, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, Me.TopMost)

                                    End If

                                End If

                            End If

                            If Not _Documento_Autorizado Then

                                Dim _Row_OCC As DataRow() = _TblPermisos.Select("CodPermiso = 'Comp0092'")

                                If Convert.ToBoolean(_Row_OCC.Count) Then

                                    Dim _Cl_Permisos_Asociados As New Cl_Permisos_Asociados(_Ds_Matriz_Documentos)

                                    Dim _Tiene_Jefes As Boolean

                                    _Enviar_Solicitudes = _Cl_Permisos_Asociados.Fx_Permisos_OCC(_Row_OCC(0), _Tiene_Jefes)

                                    If _Enviar_Solicitudes Then

                                        Dim _Msg = "El monto de la orden de compra excede su límite de aprobación" & vbCrLf &
                                               "La orden de compra quedará a espera de ser aprobada por su jefatura."

                                        If _Usar_Validador_Prod_X_Compras Then
                                            _Msg = "El monto de la orden de compra excede su límite de aprobación" & vbCrLf &
                                               "o existen productos que deben ser aprobados por el funcionario a cargo del articulo" & vbCrLf & vbCrLf &
                                               "La orden de compra quedará a espera de ser aprobada por su jefatura y/o funcionario a cargo de los productos a comprar."
                                        End If

                                        MessageBoxEx.Show(Me, _Msg, "Validación",
                                                  MessageBoxButtons.OK, MessageBoxIcon.Exclamation, MessageBoxDefaultButton.Button1, Me.TopMost)

                                        _Id_DocEnc = _Cl_Permisos_Asociados.Pro_Id_DocEnc
                                        Dim _Id_Enc = _Cl_Permisos_Asociados.Pro_Id_Enc
                                        _Nro_RCadena = _Cl_Permisos_Asociados.Pro_Nro_RCadena

                                        Sb_Cadena_Remota_Generar_Remota_y_Notificacion(_Id_Enc, _Id_DocEnc)

                                    Else

                                        MessageBoxEx.Show(Me, _Cl_Permisos_Asociados.Pro_Error & vbCrLf &
                                              "Informe esta situación al administrador del sistema", "Validación", MessageBoxButtons.OK,
                                                  MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)

                                        Return

                                    End If

                                End If

                            End If

                        Else

                            Sb_Cadena_Remota_Grabar_Documento_New(_Documento_Autorizado, _Enviar_Solicitudes, _Nro_RCadena)

                        End If

                        If _Enviar_Solicitudes Then

                            For Each _Fila As DataRow In _TblDetalle.Rows
                                _Fila.Item("Consolidar_Stock") = True
                            Next

                            ' Aca se cierran los documentos relacionados que vienen desde un permiso por cadena, ya que seria un caos encadenarlos

                            Dim _CAE_Doc As New Clas_Cerrar_Anular_Eliminar_Documento_Origen

                            If _Editar_documento Then

                                _CAE_Doc.Sb_Cerrar_Documentos_De_Origen(Me,
                                                                    Clas_Cerrar_Anular_Eliminar_Documento_Origen.Enum_Accion.Anular,
                                                                    _TblDocumentos_Dori,
                                                                    _Idmaeedo)

                            Else

                                _CAE_Doc.Sb_Cerrar_Documentos_De_Origen(Me,
                                                                    Clas_Cerrar_Anular_Eliminar_Documento_Origen.Enum_Accion.Cerrar,
                                                                    _TblDocumentos_Dori,
                                                                    _Idmaeedo)

                            End If

                            Sb_Nuevo_Doc(True)

                            MessageBoxEx.Show(Me, "Las solicitudes han sido enviadas con el Nro. : " & _Nro_RCadena,
                                          "Solicitud en cadena de permisos remotos",
                                          MessageBoxButtons.OK, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, Me.TopMost)


                            Me.ActiveControl = Grilla_Detalle
                            Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(0).Cells("Codigo")

                            If _Revisar_Notificacion_Automatica_Remota Then
                                _Grabar = True
                                Me.Close()
                            End If

                            Return

                        End If

                        Sb_Marcar_Grilla()
                        Sb_Botones_Activos(False, False)

                    End If

                End If

            Else

                _Documento_Autorizado = True

            End If

            If _Documento_Autorizado Then

                If _Tido = "GRC" Then

                    Dim _Crear_FCC_Desde_GRC_Vinculado_SII As Boolean = _Global_Row_Configuracion_Estacion.Item("Crear_FCC_Desde_GRC_Vinculado_SII")

                    If _Crear_FCC_Desde_GRC_Vinculado_SII Then

                        Dim _Periodo = Year(_TblEncabezado.Rows(0).Item("FechaEmision"))
                        Dim _Mes = Month(_TblEncabezado.Rows(0).Item("FechaEmision"))
                        Dim _NroDocumento = _TblEncabezado.Rows(0).Item("NroDocumento")
                        Dim _Endo = _TblEncabezado.Rows(0).Item("CodEntidad")

                        Dim _Monto_Total_Desde = De_Num_a_Tx_01(_TblEncabezado.Rows(0).Item("TotalBrutoDoc") - 5,, 5)
                        Dim _Monto_Total_Hasta = De_Num_a_Tx_01(_TblEncabezado.Rows(0).Item("TotalBrutoDoc") + 5,, 5)

                        Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Compras_en_SII 
                                        Where Tido = 'FCC' And Nudo = '" & _NroDocumento & "' And Endo = '" & _Endo & "' 
                                        And Monto_Total Between " & _Monto_Total_Desde & " And " & _Monto_Total_Hasta

                        Dim _Row_DTE As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                        If IsNothing(_Row_DTE) Then

                            MessageBoxEx.Show(Me, "No se encontro factura para esta guía en el SII" & vbCrLf &
                                          "Revise el numero de folio del documento u/o el monto." & vbCrLf &
                                          "Informe de esta situación a la administración", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)

                            If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00031", Nothing) Then
                                Return
                            End If

                        End If

                    End If

                End If

                If Not Fx_Grabar_Pistoleando() Then
                    Return
                End If

                If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Then

                    If Not Fx_Validar_Codigos_WMS() Then

                        MessageBoxEx.Show(Me, "Existen productos seriados que ya fueron reservados." & Environment.NewLine &
                                      "Favor revisar nuevamente las cantidades", "Validación",
                                      MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                        Return

                    End If

                End If

                Dim _Grabar_Con_Huella As Boolean = (Btn_Huella.Visible And Btn_Huella.Tag = 1)

                If _Grabar_Con_Huella Then

                    If Not Fx_Verificar_Con_Huella() Then
                        Return
                    End If

                End If

                Consulta_sql = "Select * From TABTIDO Where TIDO = '" & _Tido & "'"
                Dim _RowTido As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)
                Dim _Tigedo = _RowTido.Item("TIGEDO")

                Dim _Cambiar_NroDocumento As Boolean = (_Tigedo = "I")

                If _NroDocumento_Editado_Por_Usuario Or _Doc_Desde_Arch_Txt_Especial_Saime Then
                    _Cambiar_NroDocumento = False
                End If

                If _TblEncabezado.Rows(0).Item("Reserva_NroOCC") Then
                    _Cambiar_NroDocumento = False
                End If

                If _Editar_documento And _Tido = "COV" Then
                    _Cambiar_NroDocumento = False
                End If

                Dim _Mensaje As New LsValiciones.Mensajes

                _Mensaje = Fx_Grabar_Documento(_Solicitar_Observaciones_Al_Grabar,
                                               csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_de_Grabacion.Nuevo_documento,
                                               _Cambiar_NroDocumento,, _Grabar_e_Imprimir, _Grabar_Y_Pagar_Vale)

                _Idmaeedo = _Mensaje.Id


                If Not CBool(_Idmaeedo) Then
                    Sb_EliminarFilaPallet()
                End If

                ' GRABAR PERMISOS AUTORIZADOS PRECENCIALMENTE EN TABAL REMOTAS

                If _Mensaje.EsCorrecto Then ' Convert.ToBoolean(_Idmaeedo) Then

                    Consulta_sql = "Select * From MAEEDO Where IDMAEEDO = " & _Idmaeedo
                    Dim _Row_NeDocEnc As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                    ' Graba archivos adjuntos

                    If _Sql.Fx_Existe_Tabla(_Global_BaseBk & "Zw_Casi_DocArc") Then

                        ' Traspasamos los archivos adjuntos desde el documento Casi_Bakapp hacia el documento definitivo en Random

                        Consulta_sql = "Insert Into " & _Global_BaseBk & "Zw_Docu_Archivos (Idmaeedo, Nombre_Archivo, Archivo, Fecha, CodFuncionario)" & vbCrLf &
                                       "Select " & _Idmaeedo & ",Nombre_Archivo,Archivo,Fecha,CodFuncionario " & vbCrLf &
                                       "From " & _Global_BaseBk & "Zw_Casi_DocArc Where NombreEquipo = '" & _NombreEquipo & "' And En_Construccion = 1" & vbCrLf &
                                       "Delete " & _Global_BaseBk & "Zw_Casi_DocArc Where NombreEquipo = '" & _NombreEquipo & "' And En_Construccion = 1"
                        _Sql.Fx_Eje_Condulta_Insert_Update_Delte_TRANSACCION(Consulta_sql)

                    End If

                    If _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Configuracion", "InsertarPalletAuto") Then

                        If _Global_Row_Configuracion_Estacion.Item("InsertarPalletAuto") Then

                            If Not IsNothing(_Cl_Pallet) AndAlso _Cl_Pallet.Pallet Then
                                Dim _Horagrab As String = Hora_Grab_fx(False)
                                Consulta_sql = "Insert Into MEVENTO (ARCHIRVE,IDRVE,KOFU,FEVENTO,KOTABLA,KOCARAC,NOKOCARAC,HORAGRAB) Values " &
                                               "('MAEEDO'," & _Idmaeedo & ",'" & _Row_NeDocEnc.Item("KOFUDO") & "'" &
                                               ",Getdate(),'PALLETS','01'," & _Cl_Pallet.Cantidad & "," & _Horagrab & ")"
                                _Sql.Ej_consulta_IDU(Consulta_sql)
                            End If
                        End If

                    End If

                    'If PreVenta Then

                    '    Dim _Cl_Contenedor As New Cl_Contenedor
                    '    _Cl_Contenedor.Fx_Relacionar_Contenedor_Documento(_Idmaeedo, _Zw_Contenedor.Id)
                    '    _Cl_Contenedor.Fx_Soltar_Contenedor_Tomado(_Zw_Contenedor)

                    'End If

                    'Crear Orden de Despacho

                    Try

                        If Not IsNothing(_Cl_Despacho) Then

                            Dim _Id_Despacho = _Cl_Despacho.Id_Despacho

                            _Cl_Despacho = New Clas_Despacho(False)
                            _Cl_Despacho.Sb_Cargar_Despacho(_Id_Despacho)
                            _Cl_Despacho.Sb_Crear_Desdespacho_Desde_Permiso_Remoto_Aprobado(_New_Idmaeedo, _Obliga_Despacho_BodDistintas)

                            If _Grabar_Y_Pagar_Vale Then
                                _Cl_Despacho.Id_Despacho = _Cl_Despacho.Id_Despacho_Padre
                                _Cl_Despacho.Row_Despacho.Item("Id_Despacho_Padre") = _Cl_Despacho.Id_Despacho_Padre
                                _Cl_Despacho.Fx_Accion_Confirmacion("")
                            End If

                            Consulta_sql = "Update " & _Global_BaseBk & "Zw_Chilexpress_Env Set IdDespacho = " & _Cl_Despacho.Id_Despacho_Padre & vbCrLf &
                                           "Where IdDespacho = " & _Id_Despacho
                            _Sql.Fx_Ejecutar_Consulta(Consulta_sql)
                        End If

                        If _Tido = "GDV" Then

                            Dim _Kofudo = _Row_NeDocEnc.Item("KOFUDO")

                            Sb_Accion_Preparacion_Orden_Despacho(_Idmaeedo, _Kofudo)

                        End If

                        ' Activacion de Orden de Despacho

                        Sb_Activar_Orden_De_Despacho(_Idmaeedo)

                        '---------------------------------------

                    Catch ex As Exception
                        MessageBoxEx.Show(Me, ex.Message, "Error en gestión despacho", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                    End Try

                    _Grabar = True
                    Sb_Reservar_Movimientos_WMS(_Idmaeedo)
                    If _Tipo_de_Grabacion = csGlobales.Enum_Tipo_de_Grabacion.Nuevo_documento Then

                        Dim _Ruta_Ultimo_Documento_Bkp As String = AppPath() & "\Data\" & RutEmpresa & "\BkPost\Ult_" & _Tido & "_Bkp.xml"
                        _Ds_Matriz_Documentos.WriteXml(_Ruta_Ultimo_Documento_Bkp)
                    End If

                    Dim _Error_PDF As String

                    _Error_PDF = Fx_Guargar_PDF_Automaticamente_Por_Doc_Modalidad(_Idmaeedo, ModEmpresa_Doc, ModModalidad_Doc)

                    If Not String.IsNullOrEmpty(_Error_PDF) Then
                        MessageBoxEx.Show(Me, _Error_PDF, "Error al querer grabar PDF automático", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                    End If

                    If _Cerrar_Al_Grabar Then
                        Dim _Cl_Imprimir As New Cl_Enviar_Impresion_Diablito
                        _Cl_Imprimir.Fx_Enviar_Impresion_Al_Diablito(ModEmpresa_Doc, ModModalidad_Doc, _Idmaeedo)
                        If _Imprimir Then

                            If _Grabar_e_Imprimir Then
                                Sb_Imprimir_Documento(Me, _Idmaeedo, _Post_Venta, ModModalidad_Doc)
                            Else
                                Dim _Tido = _Row_NeDocEnc.Item("TIDO")
                                Dim _Nudo = _Row_NeDocEnc.Item("NUDO")
                                MessageBoxEx.Show(Me, _Tido & " - " & _Nudo & vbCrLf & vbCrLf &
                                                  "Grabada correctamente", "Grabar documento", MessageBoxButtons.OK, MessageBoxIcon.Information)

                            End If

                        End If

                        If Me.Visible Then
                            Me.Close()
                        End If
                    Else

                        If _Post_Venta Or _Editar_documento Then
                            Dim _CAE_Doc As New Clas_Cerrar_Anular_Eliminar_Documento_Origen
                            If (_Tido = "COV" Or _Tido = "OCC") Or
                                    (_Editar_documento And _Tido = "NVV") Or
                                    (_Editar_documento And _Tido = "COV") Then

                                If _Editar_documento And _Tido = "COV" Then

                                    _CAE_Doc.Sb_Cerrar_Documentos_De_Origen(Me,
                                                                            Clas_Cerrar_Anular_Eliminar_Documento_Origen.Enum_Accion.Eliminar,
                                                                            _TblDocumentos_Dori,
                                                                            _Idmaeedo)
                                Else

                                    _CAE_Doc.Sb_Cerrar_Documentos_De_Origen(Me,
                                                                            Clas_Cerrar_Anular_Eliminar_Documento_Origen.Enum_Accion.Anular,
                                                                            _TblDocumentos_Dori,
                                                                            _Idmaeedo)
                                End If
                            Else
                                _CAE_Doc.Sb_Cerrar_Documentos_De_Origen(Me,
                                                                            Clas_Cerrar_Anular_Eliminar_Documento_Origen.Enum_Accion.Cerrar,
                                                                            _TblDocumentos_Dori,
                                                                            _Idmaeedo)
                            End If

                            If Not IsNothing(_TblDocumentos_Dori) Then

                                For Each _Fila As DataRow In _TblDocumentos_Dori.Rows

                                    Dim _Id_Despacho = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Despachos_Doc", "Id_Despacho",
                                                                              "Archidrst = 'MAEEDO' And Idrst = " & _Fila.Item("IDMAEEDO"), True)

                                    Dim _Cl_Despacho As New Clas_Despacho(False)
                                    _Cl_Despacho.Id_Despacho = _Id_Despacho
                                    _Cl_Despacho.Fx_Anular_Documento()

                                Next

                            End If

                            _Idmaeedo_Origen = 0
                            _TblEncabezado.Rows(0).Item("Idmaeedo_Origen") = 0
                        End If
                        Dim _Modalidad_Formato = ModModalidad_Doc

                        If _Grabar_e_Imprimir Then

                            Dim _Vali As Boolean = (Not _Grabar_Y_Pagar_Vale And _Post_Venta)

                            If _Grabar_Y_Pagar_Vale Then
                                Try
                                    _Modalidad_Formato = _Global_Row_EstacionBk.Item("Modalidad_Caja")
                                    _Grabar_e_Imprimir = _Global_Row_EstacionBk.Item("ImprDespGrabarCaja")
                                Catch ex As Exception
                                    _Modalidad_Formato = ModModalidad_Doc
                                    _Grabar_e_Imprimir = True
                                End Try
                            End If
                            If _Grabar_e_Imprimir Then
                                Sb_Imprimir_Documento(Me, _Idmaeedo, _Vali, _Modalidad_Formato)
                            End If
                        Else

                            Dim _Tido = _Row_NeDocEnc.Item("TIDO")
                            Dim _Nudo = _Row_NeDocEnc.Item("NUDO")
                            Dim _SubTido = _Row_NeDocEnc.Item("SUBTIDO")

                            If Not _Post_Venta Or _Grabar_Y_Pagar_Vale Then

                                Dim _TidoNudoSubTido As String

                                If String.IsNullOrWhiteSpace(_SubTido) Then
                                    _TidoNudoSubTido = _Tido & " - " & _Nudo
                                Else
                                    _TidoNudoSubTido = _Tido & " - " & _Nudo & " (" & _SubTido & ")"
                                End If
                                MessageBoxEx.Show(Me, _TidoNudoSubTido & vbCrLf & vbCrLf &
                                                  "Grabada correctamente", "Grabar documento", MessageBoxButtons.OK, MessageBoxIcon.Information)
                            End If

                            Dim _Cl_Imprimir As New Cl_Enviar_Impresion_Diablito
                            _Cl_Imprimir.Fx_Enviar_Impresion_Al_Diablito(ModEmpresa_Doc, _Modalidad_Formato, _Idmaeedo)

                        End If

                        Sb_Limpiar(ModModalidad_Doc)

                    End If

                End If

            End If

        Catch ex As Exception
            MsgBox(ex.Message)
        Finally
            Me.Enabled = True
        End Try

    End Sub

    Private Sub Sb_EliminarFilaPuntos()

        If Not _Post_Venta Then
            Return
        End If

        'Throw New NotImplementedException()
        Dim _FilaElimina As DataGridViewRow

        For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows
            If _Fila.Cells("Espuntosvta").Value Then
                _FilaElimina = _Fila
                Exit For
            End If
        Next
        If Not IsNothing(_FilaElimina) Then
            Sb_Eliminar_Fila(_FilaElimina, True)
        End If

    End Sub

    Private Sub Sb_EliminarFilaPallet()

        If Not _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Configuracion", "InsertarPalletAuto") Then
            Return
        End If
        If Not _Global_Row_Configuracion_Estacion.Item("InsertarPalletAuto") Then
            Return
        End If
        Dim _TidoPalletAuto As String = _Global_Row_Configuracion_Estacion.Item("TidoPalletAuto")
        If Not _TidoPalletAuto.Contains(_Tido) Then '_Tido <> "FCV" And _Tido <> "GDV" And _Tido <> "BLV" Then
            Return
        End If
        _Cl_Pallet = New Pallet.Cl_Pallet

        'Throw New NotImplementedException()
        Dim _FilaElimina As DataGridViewRow

        For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows
            If _Fila.Cells("EsPallet").Value Then
                _FilaElimina = _Fila
                Exit For
            End If
        Next

        If Not IsNothing(_FilaElimina) Then
            Sb_Eliminar_Fila(_FilaElimina, True)
        End If

    End Sub

    Public Sub Sb_Activar_Orden_De_Despacho(_Idmaeedo As Integer)

        Dim _Filtro_Idmaeddo_Dori = Generar_Filtro_IN(_TblDetalle, "", "Idmaeddo_Dori", True, False, "")
        Consulta_sql = "Select Distinct Id_Despacho From " & _Global_BaseBk & "Zw_Despachos_Doc_Det 
                                        Where (Idmaeedo In (Select IDMAEEDO From MAEDDO WITH (NOLOCK) Where IDMAEDDO In " & _Filtro_Idmaeddo_Dori & ") Or Idmaeedo = " & _Idmaeedo & ")" & vbCrLf &
"And (CantCUd1 - (CantDUd1+CantEUd1+CantRUd1)) > 0"
        Dim _Tbl As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

        For Each _Fl As DataRow In _Tbl.Rows

            Dim _Id_Despacho = _Fl.Item("Id_Despacho")

            Dim _Cl_Despacho As New Clas_Despacho_Fx
            _Cl_Despacho.Sb_Actualizar_Despachos(_Id_Despacho)

        Next

    End Sub

    Function Fx_Verificar_Con_Huella() As Boolean

        Dim _Verificado As Boolean
        Dim _Graba_Sin_Huella As Boolean
        Dim _Row_Usuario As DataRow
        Dim _Kofu As String = FUNCIONARIO

        Dim _Lector_Huella As String = _Global_Row_EstacionBk.Item("Lector_Huella")


        Select Case _Lector_Huella

            Case "UareU_4500"

#Region "U.are.U 4500"

                Try
                    Dim Fm As New VerificationForm(Nothing)
                    Fm.Cerrar_Al_Confirmar = True
                    Fm.ShowDialog(Me)
                    _Verificado = Fm.Verificado
                    _Graba_Sin_Huella = Fm.Graba_Sin_Huella
                    _Row_Usuario = Fm.Row_Usuario
                    Fm.Dispose()
                Catch ex As Exception
                    'MessageBoxEx.Show(Me, ex.Message, "Error en lector de huellas", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                    _Graba_Sin_Huella = True
                End Try

#End Region

            Case "ZK4500"

#Region "ZK 4500"

                Dim _Huella As String
                Dim _Registrado As Boolean

                Dim Fm As New Frm_Huella_Identificar(Me, _Huella, False, False, Frm_Huella_Identificar.Enum_Accion.Buscar_Huella)
                If Fm.Pro_Conectado Then
                    Fm.ShowDialog(Me)
                    _Registrado = Fm.Pro_Verificado
                    _Row_Usuario = Fm.Pro_Row_Usuario
                    _Graba_Sin_Huella = Fm.Graba_Sin_Huella
                Else
                    _Graba_Sin_Huella = True
                End If
                Fm.Dispose()

#End Region

            Case Else
                MessageBoxEx.Show(Me, "Error al validar huellero", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
        End Select

        If _Graba_Sin_Huella Then

            Dim _CodEntidad As String = _TblEncabezado.Rows(0).Item("CodEntidad")
            Dim _CodSucEntidad As String = _TblEncabezado.Rows(0).Item("CodSucEntidad")

            If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00050", _Ds_Matriz_Documentos, _CodEntidad, _CodSucEntidad) Then
                Return False
            End If

            'If Not Fx_Tiene_Permiso(Me, "Doc00050") Then
            '    Return False
            'End If
        Else

            If IsNothing(_Row_Usuario) Then
                Return False
            End If

            _Kofu = _Row_Usuario.Item("KOFU")

        End If

        _TblEncabezado.Rows(0).Item("CodFuncionario") = _Kofu

        Return True

    End Function

    Sub Sb_Consolidar_Stock_Marcados()

        Dim _Filtro_Productos As String = Generar_Filtro_IN(_TblDetalle, "Consolidar_Stock", "Codigo", False, True, "'")

        If _Filtro_Productos <> "()" Then

            Dim Fm As New Frm_Consolidacion_Stock_PP(_Filtro_Productos)
            Fm.Pro_Ejecutar_Automaticamente = True
            Fm.BtnCancelar.Visible = False
            Fm.Chk_Reservar_Ventas_Pendientes_Bakapp.Enabled = False
            Fm.BtnProcesar.Enabled = False
            Fm.ShowDialog(Me)
            Fm.Dispose()

        End If

    End Sub

    Private Sub Sb_Accion_Preparacion_Orden_Despacho(_Idmaeedo As Integer, _Funcionario As String)

        Try

            Consulta_sql = "Select Distinct Id_Despacho,Idmaeedo From " & _Global_BaseBk & "Zw_Despachos_Doc_Det Where Idmaeedo In 
                                (Select IDMAEEDO From MAEDDO WITH (NOLOCK) Where IDMAEDDO in (Select IDRST From MAEDDO WITH (NOLOCK) Where IDMAEEDO = " & _Idmaeedo & "))
                                And Empresa = '" & ModEmpresa_Doc & "' And Sucursal = '" & Mod_Sucursal & "'"
            Dim _Tbl_Documentos As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

            For Each _Fila As DataRow In _Tbl_Documentos.Rows

                Dim _Id_Despacho As Integer = _Fila.Item("Id_Despacho")
                Dim _Preparado As Boolean
                Dim _Cl_Despacho As New Clas_Despacho(False)
                _Cl_Despacho.Sb_Cargar_Despacho(_Id_Despacho)

                If _Cl_Despacho.Fx_Se_Puede_Editar_La_Orden(Me) Then

                    If _Cl_Despacho.Fx_Tomar_Orden_Despacho(_Id_Despacho, _Funcionario) Then

                        Dim Fm As New Frm_Desp_03_Preparar_Armar_Bulto()
                        Fm.Text = "PREPARAR PEDIDO - ARMAR BULTO. Nro. Orden Despacho: " & _Cl_Despacho.Nro_Despacho
                        Fm.Despachos = _Cl_Despacho
                        Fm.ControlBox = False
                        Fm.ShowDialog(Me)
                        _Preparado = Fm.Preparado
                        Fm.Dispose()

                        If _Preparado Then

                            _Cl_Despacho.Sb_Cargar_Despacho(_Id_Despacho)

                            Dim _Cl_Imprimir_Despacho As New Clas_Imprimir_Despacho(_Cl_Despacho)
                            _Cl_Imprimir_Despacho.Sb_Imprimir_Letrero(Me)

                        End If

                    End If

                End If

            Next

        Catch ex As Exception

        End Try

        'End If

    End Sub

    'Private Function Fx_Accion_Preparacion_Orden_Despacho_Revisar_Entrega_Doc_Pagado(_Idmaeedo As Integer) As Boolean

    '    If Fx_Tiene_Permiso(Me, "ODp00005") Then

    '        Try

    '            Consulta_sql = "Select Distinct Id_Despacho,Idmaeedo From " & _Global_BaseBk & "Zw_Despachos_Doc_Det Where Idmaeedo In 
    '                            (Select IDMAEEDO From MAEDDO Where IDMAEDDO in (Select IDRST From MAEDDO Where IDMAEEDO = " & _Idmaeedo & "))
    '                            And Empresa = '" & ModEmpresa_Doc & "' And Sucursal = '" & Mod_Sucursal & "'"
    '            Dim _Tbl_Documentos As DataTable = _Sql.Fx_Get_Tablas(Consulta_sql)

    '            For Each _Fila As DataRow In _Tbl_Documentos.Rows

    '                Dim _Id_Despacho As Integer = _Fila.Item("Id_Despacho")
    '                Dim _Preparado As Boolean
    '                Dim _Cl_Despacho As New Clas_Despacho(False)
    '                _Cl_Despacho.Sb_Cargar_Despacho(_Id_Despacho)

    '                If _Cl_Despacho.Fx_Se_Puede_Editar_La_Orden(Me) Then

    '                    Dim _Entregar_Con_Doc_Pagados As Boolean = _Cl_Despacho.Tbl_Despacho.Rows(0).Item("Entregar_Con_Doc_Pagados")

    '                    If _Entregar_Con_Doc_Pagados Then

    '                        Dim _Saldo As Double = _Sql.Fx_Trae_Dato("MAEEDO", "Sum(VABRDO)-Sum(VAABDO)",
    '                                                   "IDMAEEDO In (Select Idrst From " & _Global_BaseBk & "Zw_Despachos_Doc Where Id_Despacho = " & _Cl_Despacho.Id_Despacho & ")", True)

    '                        If _Saldo > 1 Then
    '                            MessageBoxEx.Show(Me, "No puede entregar estos productos" & vbCrLf &
    '                                          "Existen documentos sin pagar", "Validación",
    '                                          MessageBoxButtons.OK, MessageBoxIcon.Stop)
    '                            Return False
    '                        End If

    '                    End If

    '                    If _Cl_Despacho.Fx_Tomar_Orden_Despacho(_Id_Despacho, FUNCIONARIO) Then

    '                        Dim Fm As New Frm_Desp_03_Preparar_Armar_Bulto()
    '                        Fm.Text = "PREPARAR PEDIDO - ARMAR BULTO. Nro. Orden Despacho: " & _Cl_Despacho.Nro_Despacho
    '                        Fm.Despachos = _Cl_Despacho
    '                        Fm.ShowDialog(Me)
    '                        _Preparado = Fm.Preparado
    '                        Fm.Dispose()

    '                        If _Preparado Then

    '                            _Cl_Despacho.Sb_Cargar_Despacho(_Id_Despacho)

    '                            Dim _Tipo_Envio = _Cl_Despacho.Row_Despacho.Item("Tipo_Envio").ToString.Trim

    '                            If _Tipo_Envio <> "RT" And _Tipo_Envio <> "RR" Then

    '                                Dim _Cl_Imprimir_Despacho As New Clas_Imprimir_Despacho(_Cl_Despacho)
    '                                _Cl_Imprimir_Despacho.Sb_Imprimir_Letrero(Me)

    '                            End If

    '                        End If

    '                    End If

    '                End If

    '            Next

    '        Catch ex As Exception

    '        End Try

    '    End If

    'End Function

    'Sub Sb_Actualizar_Vencimientos()

    '    Eliminar_Campos(_Ds_Matriz_Documentos.Tables("Vencimientos_Doc"), 1)

    '    Dim _TotalBrutoDoc As Double = Grilla_Encabezado.Rows(0).Cells("TotalBrutoDoc").Value

    '    Dim _FechaEmision As Date = Grilla_Encabezado.Rows(0).Cells("FechaEmision").Value
    '    Dim _Fecha_1er_Vencimiento As Date = Grilla_Encabezado.Rows(0).Cells("Fecha_1er_Vencimiento").Value
    '    Dim _FechaUltVencimiento As Date = Grilla_Encabezado.Rows(0).Cells("FechaUltVencimiento").Value
    '    Dim _Cuotas As Integer = Grilla_Encabezado.Rows(0).Cells("Cuotas").Value
    '    Dim _Dias_1er_Vencimiento As Integer = Grilla_Encabezado.Rows(0).Cells("Dias_1er_Vencimiento").Value
    '    Dim _Dias_Vencimiento As Integer = Grilla_Encabezado.Rows(0).Cells("Dias_Vencimiento").Value

    '    If _Cuotas = 0 Then _Cuotas = 1

    '    Dim _Cuotas_(_Cuotas - 1) As Date
    '    _Cuotas_(0) = _FechaUltVencimiento

    '    Dim _FechasVenci As Date = _FechaEmision
    '    Dim _dias As Integer

    '    Dim _Resultado As Double = _TotalBrutoDoc / _Cuotas
    '    Dim _Valor_Cuota As Double = Math.Round(_TotalBrutoDoc / _Cuotas, 0)

    '    If _Dias_1er_Vencimiento > 0 Then

    '        _dias = _Dias_1er_Vencimiento

    '        For i = 1 To _Cuotas

    '            _FechasVenci = DateAdd(DateInterval.Day, _dias, _FechasVenci)
    '            _Cuotas_(i - 1) = _FechasVenci
    '            _dias = _Dias_Vencimiento

    '        Next

    '        _FechaUltVencimiento = _FechasVenci

    '    Else

    '        _Cuotas = 1

    '    End If

    '    _Fecha_1er_Vencimiento = _Cuotas_(0)

    '    _TblEncabezado.Rows(0).Item("Fecha_1er_Vencimiento") = _Fecha_1er_Vencimiento
    '    _TblEncabezado.Rows(0).Item("FechaUltVencimiento") = _FechaUltVencimiento
    '    _TblEncabezado.Rows(0).Item("Cuotas") = _Cuotas
    '    _TblEncabezado.Rows(0).Item("Dias_1er_Vencimiento") = _Dias_1er_Vencimiento
    '    _TblEncabezado.Rows(0).Item("Dias_Vencimiento") = _Dias_Vencimiento

    'End Sub


    Sub Sb_Revisar_Stock_Fila(_Fila As DataGridViewRow,
                              Optional ByRef _Stock_Suficiente As Boolean = False,
                              Optional ByRef _Stock As Double = 0,
                              Optional ByRef _Stock_Disponible As Double = 0,
                              Optional _Mostrar_Alerta As Boolean = True,
                              Optional _Ofrecer_Bodegas As Boolean = True)

        Dim _Id = _Fila.Cells("Id").Value
        Dim _Tipr = _Fila.Cells("Tipr").Value
        Dim _Sucursal = _Fila.Cells("Sucursal").Value
        Dim _Bodega = _Fila.Cells("Bodega").Value
        Dim _ValStock = _Fila.Cells("ValVtaStockInf").Value
        Dim _UdTrans = _Fila.Cells("UdTrans").Value
        Dim _UnTrans = NuloPorNro(_Fila.Cells("UnTrans").Value, 1)
        Dim _Codigo = _Fila.Cells("Codigo").Value
        Dim _Tidopa = _Fila.Cells("Tidopa").Value
        Dim _Cantidad As Double
        Dim _RtuVariable As Boolean = _Fila.Cells("RtuVariable").Value
        Dim _Nmarca As String = _Fila.Cells("Nmarca").Value

        If _RtuVariable And _Nmarca = "¡" Then
            _UnTrans = 2
        End If

        For Each _Row As DataRow In _TblDetalle.Rows

            Dim _Cod = _Row.Item("Codigo")
            Dim _Suc = _Row.Item("Sucursal")
            Dim _Bod = _Row.Item("Bodega")
            Dim _I = _Row.Item("Id")

            If _Cod = _Codigo And _Suc = _Sucursal And _Bod = _Bodega Then
                _Cantidad += _Row.Item("CantUd" & _UnTrans) '_Row.Item("Cantidad")
            End If

        Next

        Dim _Revisar_Stock_Disponible As Boolean = True
        Dim _Campo_Formula_Stock = String.Empty

        Consulta_sql = "Select Top 1 * From TABTIDO Where TIDO = '" & _Tido & "'"
        Dim _RowTido As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        If Not IsNothing(_RowTido) Then
            _Campo_Formula_Stock = NuloPorNro(_RowTido.Item("STOCK"), "")
        End If

        If _Tido = "NVV" Or _Tido = "RES" Or _Tido = "PRO" Or _Tido = "NVI" Then

            _Revisar_Stock_Disponible = Not (String.IsNullOrEmpty(_Campo_Formula_Stock))

        End If

        If _Revisar_Stock_Disponible Then

            _Stock_Disponible = Fx_Stock_Disponible(_Tido, ModEmpresa_Doc, _Sucursal, _Bodega, _Codigo, _UnTrans, "STFI" & _UnTrans)

            If _Tidopa = "NVV" And _Tido <> "NVV" Then

                If _Campo_Formula_Stock.Contains("-C") Then
                    _Stock_Disponible += _Cantidad
                End If

            End If

        Else
            _Stock_Disponible = 1 + _Cantidad
        End If

        If _Revision_Remota Then
            _Stock_Disponible += _Cantidad
        End If

        _Stock = _Sql.Fx_Trae_Dato("MAEST", "STFI" & _UnTrans, "EMPRESA = '" & ModEmpresa_Doc &
                                   "' AND KOSU = '" & _Sucursal &
                                   "' AND KOBO = '" & _Bodega &
                                   "' AND KOPR = '" & _Codigo & "'", True)

        If _Tipr <> "SSN" Then

            Dim _Cantidad_Resul As Double = _Stock_Disponible - _Cantidad

            If _Stock_Disponible <= 0 Then

                _Stock_Suficiente = False

            Else

                If _Stock_Disponible - _Cantidad >= 0 Then
                    _Stock_Suficiente = True
                End If

            End If

            If Not _Stock_Suficiente Then

                Dim _CodFunAutoriza_Stock As String = _TblEncabezado.Rows(0).Item("Fun_Auto_Stock_Ins")

                'Código permiso vender sin stock "Bkp00015"

                If _Mostrar_Alerta Then

                    If _Ofrecer_Bodegas Then

                        Dim _Vnta_Ofrecer_Otras_Bod_Stock_Insuficiente As Boolean = _Global_Row_Configuracion_Estacion.Item("Vnta_Ofrecer_Otras_Bod_Stock_Insuficiente")

                        If _Vnta_Ofrecer_Otras_Bod_Stock_Insuficiente Then

                            Consulta_sql = "Select Distinct EMPRESA+KOSU+KOBO As Cod,* From TABBO
                                            Where EMPRESA+KOSU+KOBO
                                            In (Select SUBSTRING(CodPermiso, 3, 10)
                                                From " & _Global_BaseBk & "ZW_PermisosVsUsuarios
                                                    Where CodUsuario = '" & FUNCIONARIO & "' And 
                                                    CodPermiso In (Select CodPermiso From " & _Global_BaseBk & "ZW_Permisos Where CodFamilia = 'Bodega')) 
                                                    Or (EMPRESA = '" & ModEmpresa_Doc & "' And KOSU = '" & Mod_Sucursal & "' And KOBO = '" & Mod_Bodega & "')"

                            Dim _Tbl_Bodegas As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

                            Dim _Filtro As String = Generar_Filtro_IN(_Tbl_Bodegas, "", "Cod", False, False, "'")

                            _Filtro = "KOPR = '" & _Codigo & "' And EMPRESA+KOSU+KOBO In " & _Filtro

                            Dim _Stock_Consolidado As Double = _Sql.Fx_Trae_Dato("MAEST", "Sum(STFI1)", _Filtro)

                            If _Stock_Consolidado > 0 Then

                                Dim _Row_Bodega As DataRow

                                If Fx_Tiene_Permiso(Me, "Bkp00045") Then

                                    If Fr_Alerta_Stock.Visible Then
                                        Fr_Alerta_Stock.Close()
                                    End If

                                    _Cantidad = NuloPorNro(_Fila.Cells("Cantidad").Value, 0)

                                    Dim _Es_Venta As Boolean = (_Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Venta)

                                    Dim Fm As New Frm_Formulario_Cantidad_Stock_X_Bodega(_Codigo, _Cantidad, _Sucursal, _Es_Venta, _Tido)
                                    Fm.ShowDialog(Me)
                                    _Row_Bodega = Fm.Row_Bodega
                                    Fm.Dispose()

                                    If Not (_Row_Bodega Is Nothing) Then

                                        _Fila.Cells("Sucursal").Value = _Row_Bodega.Item("KOSU")
                                        _Fila.Cells("Bodega").Value = _Row_Bodega.Item("KOBO")
                                        Sb_Revisar_Stock_Fila(_Fila,,,, True, False)
                                        Exit Sub

                                    Else

                                        _Fila.Cells("Cantidad").Value = 0
                                        Return

                                    End If

                                End If

                            End If

                        End If

                    End If

                    If CBool(_Cantidad) Then

                        If _Tido = "COV" Then

                            If _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Configuracion", "Las_Cotizaciones_No_Revisan_Permisos") Then

                                Dim _Las_Cotizaciones_No_Revisan_Permisos As Boolean = _Global_Row_Configuracion_General.Item("Las_Cotizaciones_No_Revisan_Permisos")

                                If _Las_Cotizaciones_No_Revisan_Permisos Then
                                    Return
                                End If

                            End If

                        End If

                        If Fx_Tiene_Permiso(Me, "Bkp00015", _CodFunAutoriza_Stock, False) Then

                            MessageBoxEx.Show(Me, "¡Producto con Stock insuficiente!" & Environment.NewLine &
                                          "Stock en Bodega  " & _Bodega & ": " & _Stock & Environment.NewLine &
                                          "Cantidad vendida : " & _Cantidad & Environment.NewLine &
                                          "Diferencia: " & _Stock - _Cantidad & " " & _UdTrans,
                                          "Stock insuficiente", MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, Me.TopMost)

                        Else

                            MessageBoxEx.Show(Me, "¡Producto con Stock insuficiente!" & Environment.NewLine &
                                              "Stock en Bodega  " & _Bodega & ": " & _Stock & Environment.NewLine &
                                              "Cantidad vendida : " & _Cantidad & Environment.NewLine &
                                              "Diferencia: " & _Stock - _Cantidad & " " & _UdTrans & Environment.NewLine & Environment.NewLine &
                                              "¡No permite hacer ventas sin autorización!",
                                              "Stock insuficiente", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                        End If

                    End If

                End If

            End If

        End If

    End Sub

    Function Fx_Validar_Stock(_Mostrar_Alerta As Boolean,
                              ByRef _Tiene_Stock_Insuficiente As Boolean) As Boolean

        Dim _Permiso As Boolean

        Dim _Contador = 0

        Dim _Fun_Auto_Stock_Ins = _TblEncabezado.Rows(0).Item("Fun_Auto_Stock_Ins")

        For Each row As DataGridViewRow In Grilla_Detalle.Rows

            Dim _Nuevo_Producto As Boolean = row.Cells("Nuevo_Producto").Value

            If _Nuevo_Producto Then
                Continue For ' Salta al siguiente registro si es True
            End If

            Dim _Tipr = NuloPorNro(row.Cells("Tipr").Value, "")
            Dim _Tict = NuloPorNro(row.Cells("Tict").Value, "_")
            Dim _ValVtaStockInf = row.Cells("ValVtaStockInf").Value
            Dim _Codigo = row.Cells("Codigo").Value
            Dim _Cantidad As Double = 0

            Dim _Tidopa As String = row.Cells("Tidopa").Value

            If _Tidopa = "GDP" Or _Tidopa = "GDV" Then
                _ValVtaStockInf = True
            End If

            If String.IsNullOrEmpty(_Tict) And _Tipr <> "SSN" Then

                Dim _Stock_Disponible As Double
                Dim _Stock_Suficiente As Boolean = False
                Dim _StockBodega As Double

                Sb_Revisar_Stock_Fila(row, _Stock_Suficiente, _StockBodega, _Stock_Disponible, False, False)

                If Not _Stock_Suficiente Then
                    _Contador = 1
                    Exit For
                End If

            End If

        Next

        If _Contador = 0 Then
            _Permiso = True
        Else

            If _Revisar_Notificacion_Automatica_Remota Then
                If String.IsNullOrEmpty(_Fun_Auto_Stock_Ins) Then
                    _Fun_Auto_Stock_Ins = _TblEncabezado.Rows(0).Item("CodFuncionario")
                End If
            End If

            _Permiso = Fx_Tiene_Permiso(Me, "Bkp00015", _Fun_Auto_Stock_Ins, False)

            If Not _Permiso Then

                If _Mostrar_Alerta Then
                    MessageBoxEx.Show(Me, "Existe(n) " & _Contador & " producto(s) con Stock insuficiente" & Environment.NewLine &
                                      "Debe solicitar permiso para realizar la venta", "Validación",
                                      MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)

                End If

            End If

        End If

        _Tiene_Stock_Insuficiente = CBool(_Contador)

        Return _Permiso

    End Function

    Private Function Fx_Validar_Al_Grabar_Productos_Solicitados_A_Bodega() As Boolean

        Dim _Permiso As Boolean
        Dim _RowUsuario As DataRow

        Dim _Sol As New Clase_Solicita_Producto_Bodega

        If _Sol.Fx_Tiene_Prod_Solicitados_Bodega(Me, FUNCIONARIO) Then

            Dim Fm As New Frm_ValidarPermisoUsuario
            Fm.Text = "AUTORIZAR A VENDER CON PRODUCTOS PENDIENTES DE ENTREGAR A BODEGA"
            Fm.Pro_Cod_Permiso = "Bkp00026"
            Fm.ShowDialog(Me)
            _RowUsuario = Fm.Pro_Rows_Usuario_Autoriza
            _Permiso = Fm.Pro_Permiso_Aceptado
            Fm.Dispose()

            If _Permiso Then

                Dim _Kofu As String = _RowUsuario.Item("KOFU")

                Consulta_sql = "Update " & _Global_BaseBk & "Zw_Prod_SolBodega Set 
                                Funcionario_Autoriza_pasar = '" & _Kofu & "',FechaHora_Autoriza_pasar = Getdate()
                                Where Estado IN ('SOL','ENT') And Funcionario = '" & FUNCIONARIO & "'"

                If _Sql.Fx_Eje_Condulta_Insert_Update_Delte_TRANSACCION(Consulta_sql) Then
                    MessageBoxEx.Show(Me, "Autorizado para generar solo esta venta", "Autorización",
                                      MessageBoxButtons.OK, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, Me.TopMost)
                End If

            End If

        Else
            _Permiso = True
        End If

        Return _Permiso

    End Function

    Sub Sb_Revisar_Credito_Cliente()

        Dim _NOTRAEDEUD As Boolean = _RowEntidad.Item("NOTRAEDEUD")

        If _NOTRAEDEUD Then
            Return
        End If

        Dim _TotalBruto As Double = _TblEncabezado.Rows(0).Item("TotalBrutoDoc")

        Dim _EnCurso_Cheque,
            _EnCurso_Letra,
            _EnCurso_Pagare,
            _Encurso_Total As Double

        Dim _TieneDeudas As Boolean

        Dim Fm As New Frm_Pagos_Seleccion_Tipo_Pago(Frm_Pagos_Seleccion_Tipo_Pago.Enum_Cliente_Proveedor.TIDP_Cli)
        Fm.ShowDialog(Me)

        Dim _Revisar_Credito As Boolean

        Dim _Tidp, _Descripcion_Pago As String

        If Fm.Pro_Precio_Tidp_Seleccionado Then
            _Tidp = Fm.Pro_Row_Tidp.Item("TIDP")
            _Descripcion_Pago = Fm.Pro_Row_Tidp.Item("Descripcion")

            Select Case _Tidp

                Case "EFV", "TJV"
                    _Revisar_Credito = False
                Case "CHV"
                    _Encurso_Total = 0
                    _EnCurso_Cheque = _TotalBruto
                    _Revisar_Credito = True
                Case "LTV"
                    _Encurso_Total = 0
                    _EnCurso_Letra = _TotalBruto
                    _Revisar_Credito = True
                Case "PAV"
                    _Encurso_Total = 0
                    _EnCurso_Pagare = _TotalBruto
                    _Revisar_Credito = True
                Case "CTA"
                    _Encurso_Total = _TotalBruto
                    _Revisar_Credito = True
                Case Else
                    Return

            End Select
            Fm.Dispose()


            Dim Fm_D As New Frm_InfoEnt_Deudas_Doc_Comerciales(_RowEntidad,
                                                               _Encurso_Total,
                                                               _EnCurso_Cheque,
                                                               _EnCurso_Letra,
                                                               _EnCurso_Pagare,
                                                               True)

            If _Revisar_Credito Then

                Dim _Credito_Utilizado As Double

                Select Case _Tidp

                    Case "EFV", "TJV"
                        _Credito_Utilizado = 0
                    Case "CHV"
                        _Credito_Utilizado = Fm_D.Pro_Crch_Disponible
                    Case "LTV"
                        _Credito_Utilizado = Fm_D.Pro_Crlt_Disponible
                    Case "PAV"
                        _Credito_Utilizado = Fm_D.Pro_Crpa_Disponible
                    Case "CTA"
                        _Credito_Utilizado = Fm_D.Pro_Crto_Disponible
                    Case Else
                        Return
                End Select

                If _Credito_Utilizado < 0 Then

                    MessageBoxEx.Show(Me, "Supera el limite de crédito en " & _Descripcion_Pago & Environment.NewLine &
                                      "Sobregiro: " & FormatNumber(_Credito_Utilizado, 0) & Environment.NewLine & Environment.NewLine &
                                      "Debe informar esta situación en caja",
                                      "¡Advertencia!", MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, Me.TopMost)

                End If

            End If

        End If

    End Sub

#Region "GRABAR DOCUMENTO EN RANDOM"

    Function Fx_Grabar_Documento(_Solicitar_Observaciones As Boolean,
                                 Optional _TipoGrab As csGlobales.Enum_Tipo_de_Grabacion = csGlobales.Enum_Tipo_de_Grabacion.Nuevo_documento,
                                 Optional _Cambiar_NroDocumento As Boolean = True,
                                 Optional _Solicitar_Pago As Boolean = True,
                                 Optional ByRef _Grabar_e_Imprimir As Boolean = False,
                                 Optional _Grabar_Y_Pagar_Vale As Boolean = False,
                                 Optional _Mostrar_Mensaje As Boolean = True) As LsValiciones.Mensajes

        Dim _Mensaje As New LsValiciones.Mensajes

        _Mensaje.EsCorrecto = False
        _Mensaje.Detalle = "Problema al Grabar documento"
        _Mensaje.Id = 0
        _Mensaje.Icono = MessageBoxIcon.Stop

        Dim _Grabar As Boolean

        Sb_Borrar_Lineas_En_Blanco()

        Dim _Es_Electronico As Boolean = _TblEncabezado.Rows(0).Item("Es_Electronico")

        If _Tido = "NCV" Or _Tido = "FDV" Then

            If _Es_Electronico Then

                If Not _Class_Referencias_DTE.Fx_Insertar_Referencias_NCV_FDV(Me,
                                                                              _TblDetalle,
                                                                              _Tbl_Mevento_Edo,
                                                                              _RowEntidad) Then
                    Return _Mensaje

                End If

            End If

        End If

        If _Solicitar_Observaciones Then

            Dim _Documento_Autorizado = Fx_Documento_Autorizado()

            Dim Fm_Obs As New Frm_Formulario_Observaciones(_Ds_Matriz_Documentos, _RowEntidad, _Tipo_Documento, _Documento_Autorizado)
            Fm_Obs.Pro_Class_Referencias_DTE = _Class_Referencias_DTE
            Fm_Obs.ShowDialog(Me)
            _Grabar = Fm_Obs.Pro_Grabar
            _Class_Referencias_DTE = Fm_Obs.Pro_Class_Referencias_DTE
            _Grabar_e_Imprimir = Not Fm_Obs.Solo_Grabar
            Fm_Obs.Dispose()

        Else

            _Grabar = True

            If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Compra Then

                If _Tido = "FCC" And Not String.IsNullOrEmpty(_SubTido) Then

                    ' SUBTIDO
                    '-- 001 Sin derecho a credito fiscal y Sin documento contiene activo fijo
                    '-- 000 Documento contiene activo fijo y Sin derecho a credito fiscal
                    '-- 101 Conderecho a credito fiscal y documento contiene activo fijo
                    '-- 100 Con derecho a credito fiscal y sin documento contiene activo fijo
                    '-- ''  No incluye este documento en el libro de compras 

                    Dim d As DateTime? = Nothing
                    Dim boolNotSet As Boolean = d.HasValue

                    Dim _FechaEmision As Date = _TblEncabezado.Rows(0).Item("FechaEmision")

                    Dim _Periodo = _FechaEmision.Year & numero_(_FechaEmision.Month, 2) & Mod_Sucursal 'Now.Year & numero_(Now.Month, 2) & Mod_Sucursal '

                    Dim _Maxlibro As String = _Sql.Fx_Trae_Dato("MAEEDO", "MAX(LIBRO)",
                                                                "EMPRESA = '" & ModEmpresa_Doc & "' AND SUBSTRING(LIBRO,1,9)='" & _Periodo & "'  AND TIDO<>'BLC'")

                    If String.IsNullOrEmpty(_Maxlibro) Then _Maxlibro = _Periodo & "00000"

                    _Maxlibro = Replace(_Maxlibro, _Periodo, "")

                    Dim _Libro = _Periodo & Fx_Proximo_NroDocumento(_Maxlibro, 14)

                    _TblEncabezado.Rows(0).Item("Libro") = _Libro
                    _TblEncabezado.Rows(0).Item("Fecha_Tributaria") = Format(_FechaEmision.Date, "yyyyMMdd")

                End If

            End If

        End If

        If Not _Grabar Then

            _Mensaje.Mensaje = "Acción cancelada por el usurario"
            Return _Mensaje

        End If

        Dim _Nudo As String
        Dim _Modalidad_Origen = _TblEncabezado.Rows(0).Item("Modalidad")
        Dim _Empresa_Origen = _TblEncabezado.Rows(0).Item("Empresa")

        If _Cambiar_NroDocumento Then
            _Nudo = Traer_Numero_Documento(_Tido, , _Modalidad_Origen, _Mostrar_Mensaje,, Me, ModEmpresa_Doc)
            _TblEncabezado.Rows(0).Item("NroDocumento") = _Nudo
        Else
            _Nudo = _TblEncabezado.Rows(0).Item("NroDocumento")
        End If

        If String.IsNullOrEmpty(Trim(_Nudo)) Then

            _Mensaje.Mensaje = "No se pudo obtener el número de documento"
            Return _Mensaje

        End If

        Dim _Es_ValeTransitorio As Boolean

        If _Tido = "BLV" Or _Tido = "FCV" Then
            If _Post_Venta Then
                _Es_ValeTransitorio = True
                _TblEncabezado.Rows(0).Item("Es_ValeTransitorio") = 1
            End If
        Else
            _TblEncabezado.Rows(0).Item("Es_ValeTransitorio") = 0
        End If

        If _Tido = "OCC" Or _Tido = "COV" Or _Tido = "NVV" Then

            For Each _Rw As DataRow In _Ds_Matriz_Documentos.Tables("Detalle_Doc").Rows

                Dim _Tidopa = _Rw.Item("Tidopa")

                If _Tido = _Tidopa Then

                    _Rw.Item("Idmaeedo_Dori") = 0
                    _Rw.Item("Idmaeddo_Dori") = 0
                    _Rw.Item("CantUd1_Dori") = 0
                    _Rw.Item("CantUd2_Dori") = 0
                    _Rw.Item("Tidopa") = ""
                    _Rw.Item("NudoPa") = ""

                End If

            Next

        End If

        Dim _Validadar_Cantidad As String = Fx_Validar_Cantidades_En_Documentos()

        If Not String.IsNullOrEmpty(_Validadar_Cantidad) Then

            _Mensaje.Mensaje = _Validadar_Cantidad
            Return _Mensaje

        End If

        Dim _Es_TLV As Boolean

        Dim _Modalidad_Caja As String
        Dim _Caja_Habilitada As Boolean

        Try
            _Modalidad_Caja = _Global_Row_EstacionBk.Item("Modalidad_Caja")
            _Caja_Habilitada = _Global_Row_EstacionBk.Item("Caja_Habilitada")
        Catch ex As Exception
            _Modalidad_Caja = String.Empty
            _Caja_Habilitada = False
        End Try

        Dim _Mod As New Clas_Modalidades

        If _Grabar_Y_Pagar_Vale And _Caja_Habilitada And _Post_Venta Then

            ModModalidad_Doc = _Modalidad_Caja

            _Mod.Sb_Actualiza_Formatos_X_Modalidad()
            _Mod.Sb_Actualizar_Variables_Modalidad(ModModalidad_Doc)

            _TblEncabezado.Rows(0).Item("Modalidad") = _Modalidad_Caja
            _Nudo = Traer_Numero_Documento(_Tido, , _Modalidad_Caja,,, Me)
            _TblEncabezado.Rows(0).Item("NroDocumento") = _Nudo
            _TblEncabezado.Rows(0).Item("Es_ValeTransitorio") = 0
            _Es_ValeTransitorio = False
            _Es_Electronico = Fx_Es_Electronico(_Tido)
            _Tbl_Maedpce.Clear()

            If _Es_Electronico Then

                Dim _Directorio_GenDTE As String = _Global_Row_EstacionBk.Item("Directorio_GenDTE")
                Dim _NombreEquipo As String = _Global_Row_EstacionBk.Item("NombreEquipo")
                Dim _Nuevo_RunMonitor As Boolean = _Sql.Fx_Exite_Campo("CONFIGP", "VERSIONACT")
                Dim _Existe_Archivo_GenDTE As Boolean

                If _Nuevo_RunMonitor Then
                    If File.Exists(_Directorio_GenDTE & "\dte\bat\GenDTE.BAT") Then
                        _Existe_Archivo_GenDTE = True
                    End If
                Else
                    If File.Exists(_Directorio_GenDTE & "\GenDTE.BAT") Then
                        _Existe_Archivo_GenDTE = True
                    End If
                End If

                If Not _Existe_Archivo_GenDTE Then

                    If _Mostrar_Mensaje Then

                        MessageBoxEx.Show(Me, "No se puede grabar el documento definitivo, debe grabar solo el Vale transitorio." & vbCrLf &
                                      "No se encontro el archivo GenDTE.BAT en el directorio (" & _Directorio_GenDTE & ")" & vbCrLf &
                                      "Este archivo es necesario para la generación de documentos electrónicos en DTE RunMonitor" & vbCrLf &
                                      "Debe configurar esta salidad desde la configuración de esta estación",
                                      "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)

                    End If

                    ModModalidad_Doc = _Modalidad_Origen

                    _Mod.Sb_Actualiza_Formatos_X_Modalidad(_Mostrar_Mensaje)
                    _Mod.Sb_Actualizar_Variables_Modalidad(ModModalidad_Doc, _Mostrar_Mensaje)

                    _Nudo = Traer_Numero_Documento(_Tido, , _Modalidad_Origen,,, Me)
                    _TblEncabezado.Rows(0).Item("Modalidad") = _Modalidad_Origen
                    _TblEncabezado.Rows(0).Item("NroDocumento") = _Nudo
                    _TblEncabezado.Rows(0).Item("Es_ValeTransitorio") = 1

                    Return _Mensaje

                End If

            End If

        End If

        Dim _Documento_Pagado_O_Autorizado As Boolean
        Dim _Id_CashDro As Integer

        If Not _Post_Venta Or (_Caja_Habilitada And _Post_Venta And _Grabar_Y_Pagar_Vale) Then

            If _Tido = "FCV" Or _Tido = "BLV" Then

                Dim _Msj As LsValiciones.Mensajes = Fx_Revisar_Expiracion_Folio_SII(Me, _Tido, _Nudo, False, ModEmpresa_Doc, ModModalidad_Doc)

                If Not _Msj.EsCorrecto Then

                    If Not String.IsNullOrEmpty(_Nudo) Then

                        If _Mostrar_Mensaje Then
                            MessageBoxEx.Show(Me, _Msj.Mensaje, _Msj.Detalle, MessageBoxButtons.OK, _Msj.Icono)
                        End If

                        ModModalidad_Doc = _Modalidad_Origen

                        _Mod.Sb_Actualiza_Formatos_X_Modalidad(_Mostrar_Mensaje)
                        _Mod.Sb_Actualizar_Variables_Modalidad(ModModalidad_Doc, _Mostrar_Mensaje)

                        _Nudo = Traer_Numero_Documento(_Tido, , _Modalidad_Origen, _Mostrar_Mensaje,, Me)
                        _TblEncabezado.Rows(0).Item("Modalidad") = _Modalidad_Origen
                        _TblEncabezado.Rows(0).Item("NroDocumento") = _Nudo
                        _TblEncabezado.Rows(0).Item("Es_ValeTransitorio") = 1

                        _Mensaje.EsCorrecto = False
                        _Mensaje.Mensaje = _Msj.Mensaje
                        _Mensaje.Id = 0

                        Return _Mensaje

                    End If

                End If


                If _Solicitar_Pago Then

                    _Documento_Pagado_O_Autorizado = Fx_Pagar_Documento(_Es_TLV, _Es_Electronico, _Id_CashDro)

                    If Not _Documento_Pagado_O_Autorizado Then

                        If _Caja_Habilitada Then

                            ModModalidad_Doc = _Modalidad_Origen

                            _Mod.Sb_Actualiza_Formatos_X_Modalidad()
                            _Mod.Sb_Actualizar_Variables_Modalidad(ModModalidad_Doc)

                            _Nudo = Traer_Numero_Documento(_Tido, , _Modalidad_Origen,,, Me)
                            _TblEncabezado.Rows(0).Item("Modalidad") = _Modalidad_Origen
                            _TblEncabezado.Rows(0).Item("NroDocumento") = _Nudo
                            _TblEncabezado.Rows(0).Item("Es_ValeTransitorio") = 1

                        End If

                        _Mensaje.EsCorrecto = False
                        _Mensaje.Id = 0

                        Return _Mensaje

                    End If

                End If

            End If

        End If

        If Not String.IsNullOrWhiteSpace(_SubTido) Then
            _TblEncabezado.Rows(0).Item("SubTido") = _SubTido
        End If

        Dim _New_Doc As New Clase_Crear_Documento()

        Dim _Origen_Modificado_Intertanto As Boolean

        If PreVenta Then
            _New_Doc.Ls_Cl_PreVenta = _Ls_Cl_PreVenta
        End If

        For Each _Fl As DataRow In _TblDetalle.Rows
            _Fl.Item("Grupo") = _Sql.Fx_Trae_Dato("TABFUGD", "KOGRU", "KOFU = '" & _Fl.Item("CodVendedor") & "'",, False)
        Next

        If _TipoGrab = _Tipo_de_Grabacion.Nuevo_documento Then

            _Mensaje = _New_Doc.Fx_Crear_Documento(_Tido,
                                                    _Nudo,
                                                    _Es_ValeTransitorio,
                                                    _Es_Electronico,
                                                    _Ds_Matriz_Documentos,
                                                    _Es_Ajuste,
                                                    _Cambiar_NroDocumento,
                                                    _Origen_Modificado_Intertanto,
                                                    _Es_TLV,
                                                    _HoraAlFinalDelDia)

            If Not _Mensaje.EsCorrecto Then

                If _Mostrar_Mensaje Then
                    MessageBoxEx.Show(Me, _Mensaje.Mensaje, _Mensaje.Detalle, MessageBoxButtons.OK, _Mensaje.Icono)
                End If

                ModModalidad_Doc = _Modalidad_Origen

                _Mod.Sb_Actualiza_Formatos_X_Modalidad()
                _Mod.Sb_Actualizar_Variables_Modalidad(ModModalidad_Doc)

                Return _Mensaje

            End If


        ElseIf _TipoGrab = _Tipo_de_Grabacion.Editar_documento Then

            Dim _Idmaeddo_Dori = _TblEncabezado.Rows(0).Item("Idmaeedo_Origen")

            _Mensaje = _New_Doc.Fx_Editar_Documento(Me, _Idmaeddo_Dori, FUNCIONARIO, _Ds_Matriz_Documentos, _Origen_Modificado_Intertanto)

        End If

        Dim _Idmaeedo As Integer = _Mensaje.Id

        If CBool(_Idmaeedo) Then

            Consulta_sql = "Select * From MAEEDO Where IDMAEEDO = " & _Idmaeedo
            Dim _Row_Maeedo As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql, Not _Facturacion_Automatica)

            _New_Idmaeedo = _Idmaeedo

            If CBool(_TblEncabezado.Rows(0).Item("IdFincred")) Then

                Dim _IdFincred = _TblEncabezado.Rows(0).Item("IdFincred")

                Consulta_sql = "Update " & _Global_BaseBk & "Zw_Fincred_TramaRespuesta Set " &
                               "EnProceso = 0,Idmaeedo = " & _Idmaeedo & ",Tido = '" & _Tido & "',Nudo = '" & _Nudo & "'" & vbCrLf &
                               "Where Id = " & _IdFincred & vbCrLf &
                               "Update " & _Global_BaseBk & "Zw_Fincred_Documentos Set " &
                               "Nro_documento = " & _Idmaeedo & vbCrLf &
                               "Where Id_TR = " & _IdFincred
                _Sql.Ej_consulta_IDU(Consulta_sql, False)

            End If


            'Clonar OCC en otra base de datos

            If _Tido = "OCC" Then

                Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_DbExt_Conexion Where GrbOCC_Nuevas = 1"
                Dim _Tbl_DnExt As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

                For Each _Fl_Emp As DataRow In _Tbl_DnExt.Rows

                    Dim _Id_Conexion = _Fl_Emp.Item("Id")

                    Dim _Respuesta As New Bk_ExpotarDoc.Respuesta
                    Dim _Cl_ExportarDoc As New Bk_ExpotarDoc.Cl_ExpotarDoc
                    _Respuesta = _Cl_ExportarDoc.Fx_Importar_Documento(_New_Idmaeedo, _Id_Conexion, True, ModModalidad_Doc)

                    Dim _Msg As String

                    For Each _Inf As String In _Respuesta.Mensajes
                        _Msg += vbCrLf & _Inf
                    Next

                    Dim _Empresa = _Respuesta.RowEmpresa.Item("EMPRESA")
                    Dim _Razon = _Respuesta.RowEmpresa.Item("RAZON")

                    If _Mostrar_Mensaje Then

                        If _Respuesta.EsCorrecto Then
                            MessageBoxEx.Show(Me, "Se grabo correctamente la OCC en la empresa: " & _Empresa & " - " & _Razon & vbCrLf & _Msg,
                                              "Grabar Migrar OCC",
                                          MessageBoxButtons.OK, MessageBoxIcon.Information)
                        Else
                            MessageBoxEx.Show(Me, "Problema al grabar la OCC en la empresa: " & _Empresa & " - " & _Razon & vbCrLf & _Msg,
                                              "Validación",
                                          MessageBoxButtons.OK, MessageBoxIcon.Error)
                        End If

                    End If

                Next

            End If

            If Not _Post_Venta Or (_Caja_Habilitada And _Post_Venta) Then

                If Not IsNothing(_Tbl_Maedpce) Then

                    If CBool(_Tbl_Maedpce.Rows.Count) Then

                        If _Tido = "BLV" Or _Tido = "FCV" Then

                            Dim _Fecha_Asignacion_Pago = FechaDelServidor()

                            For Each _FilasPg As DataRow In _Tbl_Maedpce.Rows
                                _FilasPg.Item("DOCUENANTI") = _Tido & _Nudo
                            Next

                            Dim _Clas_Pagar As New Clas_Pagar
                            Dim _Idmaedpce As Integer

                            If _Sql.Fx_Exite_Campo("MAEDPCE", "LEY20956") Then
                                _Idmaedpce = _Clas_Pagar.Fx_Crear_Pago_MAEDPCE2(Me, _Idmaeedo, _Tbl_Maedpce, _Fecha_Asignacion_Pago)
                            Else
                                _Idmaedpce = _Clas_Pagar.Fx_Crear_Pago_MAEDPCE(Me, _Idmaeedo, _Tbl_Maedpce, _Fecha_Asignacion_Pago)
                            End If

                            ' Pagar Nota de credito
                            _Clas_Pagar.Fx_Pagar_NCV(Me, _Tbl_Maedpce, _Idmaeedo)

                            If _Grabar_Y_Pagar_Vale Then

                                _Nudo = _Sql.Fx_Trae_Dato("MAEEDO", "NUDO", "IDMAEEDO = " & _Idmaeedo)
                                Consulta_sql = "Update " & _Global_BaseBk & "Zw_CashDro_Operaciones Set " &
                                               "Tido = '" & _Tido & "'" &
                                               ",Nudo = '" & _Nudo & "'," &
                                               "Idmaedpce = " & _Idmaedpce & "," &
                                               "Idmaeedo = " & _Idmaeedo & "," &
                                               "Idmaeedo_H = " & _Idmaeedo & vbCrLf &
                                               "Where Id = " & _Id_CashDro
                                _Sql.Ej_consulta_IDU(Consulta_sql)

                            End If

                        End If

                    End If

                End If

            End If

            Dim _Tbl_Permisos_Doc As DataTable = _Ds_Matriz_Documentos.Tables("Permisos_Doc")

            Consulta_sql = String.Empty

            Dim _Vizado As Boolean = _TblEncabezado.Rows(0).Item("Vizado")

            If _Vizado Then

                Try

                    Consulta_sql = "Select Id_Rem From " & _Global_BaseBk & "Zw_Remotas 
	                                Where Idmaeedo In (Select IDMAEEDO From MAEDDO WITH (NOLOCK) Where IDMAEDDO In " &
                                    "(Select IDRST From MAEDDO WITH (NOLOCK) Where IDMAEEDO = " & _Idmaeedo & ")) And Eliminada = 0"

                    Dim _TblRemotasHr As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

                    Dim _NroRemota As String

                    For Each _Fila As DataRow In _TblRemotasHr.Rows

                        Dim _Id_Rem As Integer = _Fila.Item("Id_Rem")
                        Dim _Ult_NroRemota = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Remotas", "MAX(NroRemota)")

                        If String.IsNullOrEmpty(Trim(_Ult_NroRemota)) Then
                            _Ult_NroRemota = 1
                        Else
                            _Ult_NroRemota = Math.Round(Val(Mid(_Ult_NroRemota, 2, 10)) + 1, 0)
                        End If

                        _NroRemota = "R" & numero_(Val(_Ult_NroRemota), 9)

                        Consulta_sql = "Insert Into " & _Global_BaseBk & "Zw_Remotas (Empresa,NroRemota,CodFuncionario_Solicita,CodFuncionario_Autoriza,CodPermiso,Descripcion_Adicional,Permiso_Otorgado,Otorga,Id_Casi_DocEnc,Fecha_Solicita,Fecha_Otorga,CodEntidad,
                                CodSucEntidad,NomEntidad,TotalBruto,Espera_En_Linea,Eliminada,Observaciones,Id_Notificacion,Rev_Usuario_Solicita,Idmaeedo,RCadena,RCadena_Id_Enc,Padre_NroRemota,Crear_Doc_Def_Al_Grabar,
                                Nro_RCadena,Permiso_Presencial,Monto_Aprobacion,NombreEquipo_Auto,Heredado,Id_Rem_Heredado)

                                Select Empresa,'" & _NroRemota & "',CodFuncionario_Solicita,CodFuncionario_Autoriza,CodPermiso,Descripcion_Adicional,Permiso_Otorgado,Otorga,Id_Casi_DocEnc,Fecha_Solicita,Fecha_Otorga,CodEntidad,
                                CodSucEntidad,NomEntidad,TotalBruto,Espera_En_Linea,Eliminada,'Permiso heredado',Id_Notificacion,Rev_Usuario_Solicita," & _Idmaeedo & ",RCadena,RCadena_Id_Enc,Padre_NroRemota,Crear_Doc_Def_Al_Grabar,
                                Nro_RCadena,Permiso_Presencial,Monto_Aprobacion,NombreEquipo_Auto,1,Id_Rem
                                
                                From " & _Global_BaseBk & "Zw_Remotas 
                                Where Id_Rem = " & _Id_Rem & "
	                            --Where Idmaeedo In (Select IDMAEEDO From MAEDDO Where IDMAEDDO In " &
                                "--(Select IDRST From MAEDDO Where IDMAEEDO = " & _Idmaeedo & ")) And Eliminada = 0"

                        _Sql.Ej_consulta_IDU(Consulta_sql)

                    Next

                Catch ex As Exception

                End Try

            End If

            Consulta_sql = String.Empty

            For Each _Row As DataRow In _Tbl_Permisos_Doc.Rows

                Dim _CodPermiso = _Row.Item("CodPermiso")
                Dim _Necesita_Permiso = _Row.Item("Necesita_Permiso")
                Dim _Solicitado_Por_Cadena = _Row.Item("Solicitado_Por_Cadena")

                If _Necesita_Permiso Then

                    Dim _Autorizado = _Row.Item("Autorizado")
                    Dim _CodFuncionario_Autoriza = _Row.Item("CodFuncionario_Autoriza")
                    Dim _NroRemota = NuloPorNro(_Row.Item("NroRemota"), "")
                    Dim _Permiso_Presencial = _Row.Item("Permiso_Presencial")
                    Dim _Fecha_Otorga As DateTime? = Nothing

                    If _Solicitado_Por_Cadena Then

                        If Not String.IsNullOrEmpty(_NroRemota) Then

                            _Fecha_Otorga = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Remotas", "Fecha_Otorga", "NroRemota = '" & _NroRemota & "'")

                        End If

                    End If

                    If _Permiso_Presencial Or (_Solicitado_Por_Cadena And Not _Revision_Remota) Then

                        _NroRemota = Fx_Solicitar_Remota(FUNCIONARIO, _CodPermiso, "", 0,
                                             _RowEntidad.Item("KOEN"),
                                             _RowEntidad.Item("NOKOEN"), False, _RowEntidad.Item("SUEN"), _Permiso_Presencial,
                                             _Idmaeedo, _CodFuncionario_Autoriza, "", _Fecha_Otorga, _NroRemota)

                    End If

                    If Not String.IsNullOrEmpty(_NroRemota) Then

                        Consulta_sql += "Update " & _Global_BaseBk & "Zw_Remotas Set Idmaeedo = " & _Idmaeedo & Environment.NewLine &
                                        "Where NroRemota = '" & _NroRemota & "'" & Environment.NewLine

                    End If

                End If

            Next

            If Not String.IsNullOrEmpty(Consulta_sql) Then
                _Sql.Ej_consulta_IDU(Consulta_sql)
            End If

            'FIRMA ELECTRONICA 
            If _Es_Electronico Then

                If _Tido = "FCV" Or _Tido = "FDV" Or _Tido = "BLV" Or _Tido = "GTI" Or _Tido = "GDP" Or _Tido = "GDV" Or _Tido = "NCV" Or _Tido = "GDD" Then

                    Sb_Firmar_Documento_Electronico(Me, _Idmaeedo, _Tido, ModEmpresa_Doc, ModModalidad_Doc)

                End If

                Dim _Crear_FCC_Desde_GRC_Vinculado_SII As Boolean = _Global_Row_Configuracion_Estacion.Item("Crear_FCC_Desde_GRC_Vinculado_SII")

                If _Crear_FCC_Desde_GRC_Vinculado_SII Then

                    If _Tido = "GRC" Then

                        Consulta_sql = "Select * From MAEEDO Where IDMAEEDO = " & _Idmaeedo
                        Dim _Row_GRC As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                        If Not IsNothing(_Row_GRC) Then

                            Dim _Periodo = Year(_TblEncabezado.Rows(0).Item("FechaEmision")) 'Year(_Row_GRC.Item("FEEMDO"))
                            Dim _Mes = Month(_TblEncabezado.Rows(0).Item("FechaEmision")) ' Month(_Row_GRC.Item("FEEMDO"))

                            Dim _NroDocumento = _Row_GRC.Item("NUDO")
                            Dim _Endo = _TblEncabezado.Rows(0).Item("CodEntidad")
                            Dim _Monto_Total = De_Num_a_Tx_01(_TblEncabezado.Rows(0).Item("TotalBrutoDoc"),, 5)

                            Dim _Monto_Total_Desde = De_Num_a_Tx_01(_TblEncabezado.Rows(0).Item("TotalBrutoDoc") - 5,, 5)
                            Dim _Monto_Total_Hasta = De_Num_a_Tx_01(_TblEncabezado.Rows(0).Item("TotalBrutoDoc") + 5,, 5)

                            Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Compras_en_SII 
                                            Where Tido = 'FCC' And Nudo = '" & _NroDocumento & "' And Endo = '" & _Endo & "' And Monto_Total Between " & _Monto_Total_Desde & " And " & _Monto_Total_Hasta

                            Dim _Row_DTE As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                            If Not IsNothing(_Row_DTE) Then

                                Dim _Fecha_Emision As DateTime = FechaDelServidor() ' _Row_DTE.Item("Fecha_Docto")

                                Consulta_sql = "Select * From MAEEDO Where IDMAEEDO = " & _Idmaeedo & "
                                                Select *,CAse When UDTRPR = 1 Then CAPRCO1-CAPREX1 ELSE CAPRCO2-CAPREX2 End As 'Cantidad',
                                                CAPRCO1-CAPREX1 As 'CantUd1_Dori',CAPRCO2-CAPREX2 As 'CantUd2_Dori',
                                                CAse When UDTRPR = 1 Then PPPRNE ELSE PPPRNE*RLUDPR End As 'Precio',
                                                0 As Id_Oferta,'' As Oferta,0 As Es_Padre_Oferta,0 As Padre_Oferta,0 As Hijo_Oferta,0 As Cantidad_Oferta,0 As Porcdesc_Oferta
                                                From MAEDDO  With ( NOLOCK ) 
                                                Where IDMAEEDO = " & _Idmaeedo & "  AND ( ESLIDO<>'C' OR ESFALI='I' ) AND TICT = ''
                                                Order by IDMAEEDO,IDMAEDDO 
                                                Select * From MAEIMLI
                                                Where IDMAEEDO = " & _Idmaeedo & " 
                                                Select * From MAEDTLI
                                                Where IDMAEEDO = " & _Idmaeedo & " 
                                                Select TOP 1 * From MAEEDOOB Where IDMAEEDO = " & _Idmaeedo

                                'Falta revisar el campo SUBTIDO, ya que al parecer se guardan datos dependiendo del tipo de FCC por ejemplo si tiene derecho a credito fiscal
                                'Falta campo FECHATRIB = Fecha de ingreso

                                ' SUBTIDO
                                '-- 001 Sin derecho a credito fiscal y Sin documento contiene activo fijo
                                '-- 000 Documento contiene activo fijo y Sin derecho a credito fiscal
                                '-- 101 Conderecho a credito fiscal y documento contiene activo fijo
                                '-- 100 Con derecho a credito fiscal y sin documento contiene activo fijo
                                '-- '' -- No incluye este documento en el libro de compras 

                                Dim _Idmaeedo_FCC As Integer

                                Dim _Ds_Maeedo_Origen As DataSet = _Sql.Fx_Get_DataSet(Consulta_sql)

                                Dim Fm_Post As New Frm_Formulario_Documento("FCC", csGlobales.Enum_Tipo_Documento.Compra, False)
                                Fm_Post.Pro_SubTido = "100"
                                Fm_Post.Sb_Limpiar(ModModalidad_Doc)
                                Fm_Post.Pro_Nudo = _Nudo
                                Fm_Post.Sb_Crear_Documento_Desde_Otros_Documentos(Me, _Ds_Maeedo_Origen, False, False, _Fecha_Emision, False, False)
                                Fm_Post.Fx_Grabar_Documento(False, csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_de_Grabacion.Nuevo_documento, False)
                                _Idmaeedo_FCC = Fm_Post.Pro_Idmaeedo
                                Fm_Post.Dispose()

                                If Convert.ToBoolean(_Idmaeedo_FCC) Then

                                    Dim _Id = _Row_DTE.Item("Id")

                                    Consulta_sql = "Update " & _Global_BaseBk & "Zw_Compras_en_SII Set Idmaeedo = " & _Idmaeedo_FCC & " Where Id = " & _Id

                                    If _Sql.Ej_consulta_IDU(Consulta_sql) Then

                                        Consulta_sql = "Update " & _Global_BaseBk & "Zw_Compras_en_SII Set Libro = LIBRO, Vanedo = VANEDO,Vaivdo = VAIVDO,Vabrdo = VABRDO
                                            From MAEEDO Edo 
                                            Inner Join " & _Global_BaseBk & "Zw_Compras_en_SII Sii On Edo.IDMAEEDO = Sii.Idmaeedo
                                            Where Idmaeedo = " & _Idmaeedo_FCC
                                        _Sql.Ej_consulta_IDU(Consulta_sql)

                                    End If

                                End If

                            End If

                        Else

                            MessageBoxEx.Show(Me, "No se encontro coincidencia", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)

                        End If

                    End If

                End If

            End If


            'PUNTOS VENTA

            If _Tido = "FCV" Or _Tido = "BLV" Or _Tido = "NCV" Then

                Dim _Cl_Puntos As New Cl_Puntos()
                Dim _MsjPtos As LsValiciones.Mensajes
                Dim _PtsUsados As Double

                _Cl_Puntos.Zw_PtsVta_Configuracion = _Cl_Puntos.Fx_Llenar_Zw_PtsVta_Configuracion(ModEmpresa_Doc)

                If Not IsNothing(_Cl_Puntos.Zw_PtsVta_Configuracion) Then
                    For Each _Fila As DataRow In _TblDetalle.Rows
                        If _Cl_Puntos.Zw_PtsVta_Configuracion.Concepto = _Fila.Item("Codigo") Then
                            _PtsUsados = _Fila.Item("DescuentoValor")
                        End If
                    Next
                End If

                _MsjPtos = _Cl_Puntos.Fx_Grabar_Registro_Puntos(_New_Idmaeedo, _PtsUsados)

            End If

            'GENERA GRI DESDE PRODUCCION EXTERNA

            Dim _SqlQuery = String.Empty

            For Each _Codigos As CodigosDeBarra.CodigosQRLeidos In _ListaCodQRUnicosLeidos

                Dim _CodLeido As String = _Codigos.CodLeido
                Dim _Kopr As String = _Codigos.Codigo
                Dim _CodigoQR As String = _Codigos.CodigoQR
                Dim _Kopral As String = _Codigos.CodigoAlternativo

                _SqlQuery += "Insert Into " & _Global_BaseBk & "Zw_Prod_CodQRLogDoc (CodigoQR,Kopral,Tido,Nudo,Idmaeedo,Kopr,CodLeido) Values " &
                           "('" & _CodigoQR & "','" & _Kopral & "','" & _Tido & "','" & _Nudo & "'," & _Idmaeedo & ",'" & _Kopr & "','" & _CodLeido & "')" & vbCrLf

            Next

            For Each _Codigos As CodigosDeBarra.CodigosConDocLeidos In _ListaCodConDocLeidos

                Dim _CodLeido As String = _Codigos.CodLeido2
                Dim _Kopr As String = _Codigos.Codigo
                Dim _TidoOri As String = _Codigos.Tido
                Dim _NudoOri As String = _Codigos.Nudo
                Dim _CodigoQR As String = String.Empty
                Dim _Kopral As String = _Codigos.Kopral
                Dim _Nro_Tarja As String = _Codigos.Nro_Tarja
                Dim _Lote As String = _Codigos.Lote

                _SqlQuery += "Insert Into " & _Global_BaseBk & "Zw_Prod_CodQRLogDoc (CodigoQR,Kopral,Tido,Nudo,Idmaeedo,Kopr,CodLeido,TidoOri,NudoOri,Nro_Tarja,Lote) Values " &
                         "('" & _CodigoQR & "','" & _Kopral & "','" & _Tido & "','" & _Nudo & "'," & _Idmaeedo &
                         ",'" & _Kopr & "','" & _CodLeido & "','" & _TidoOri & "','" & _NudoOri & "','" & _Nro_Tarja & "','" & _Lote & "')" & vbCrLf

            Next

            If Not String.IsNullOrEmpty(_SqlQuery) Then
                _Sql.Ej_consulta_IDU(_SqlQuery, False)
            End If

            If _Doc_Desde_Arch_Txt_Especial_Saime Then

                Dim _Nombre_Archivo = _Nombre_Archivo_Txt_Especial_Saime

                Dim _Carpeta_Archivos_Txt As String
                Dim _Carpeta_Generados_Txt As String

                _Carpeta_Archivos_Txt = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Estaciones_Ruta_PDF",
                                             "Ruta_PDF",
                                             "Empresa = '" & ModEmpresa_Doc & "' " &
                                             "And NombreEquipo = '" & _NombreEquipo & "' " &
                                             "And Modalidad = '" & ModModalidad_Doc & "' And Tipo_Ruta = 'GRI_Ing'")

                _Carpeta_Generados_Txt = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Estaciones_Ruta_PDF",
                                              "Ruta_PDF",
                                              "Empresa = '" & ModEmpresa_Doc & "' " &
                                              "And NombreEquipo = '" & _NombreEquipo & "' " &
                                              "And Modalidad = '" & ModModalidad_Doc & "' And Tipo_Ruta = 'GRI_Gen'")

                If File.Exists(_Carpeta_Archivos_Txt & "\" & _Nombre_Archivo & ".txt") And Directory.Exists(_Carpeta_Generados_Txt) Then
                    File.Copy(_Carpeta_Archivos_Txt & "\" & _Nombre_Archivo & ".txt",
                                  _Carpeta_Generados_Txt & "\" & _Nombre_Archivo & ".txt")
                    File.Delete(_Carpeta_Archivos_Txt & "\" & _Nombre_Archivo & ".txt")
                End If

            End If

            'File.Copy(_Carpeta_Generados_Txt & "\" & _Nombre_Archivo & ".txt", _Carpeta_Archivos_Txt & "\" & _Nombre_Archivo & ".txt")
            'File.Delete(_Carpeta_Generados_Txt & "\" & _Nombre_Archivo & ".txt")

            Dim _FechaEmi As DateTime = FormatDateTime(_TblEncabezado.Rows(0).Item("FechaEmision"), DateFormat.ShortDate)
            Dim _FechaHoy As DateTime = FormatDateTime(FechaDelServidor, DateFormat.ShortDate)

            If _FechaEmi < _FechaHoy And Not NoConsolidarNuncaStock Then
                For Each _Fila As DataRow In _TblDetalle.Rows
                    _Fila.Item("Consolidar_Stock") = True
                Next
                Sb_Consolidar_Stock_Marcados()
            End If

            If _Tido = "FCV" Then
                Dim _Cl As New Cl_CambiarFechaVencimiento(_New_Idmaeedo)
                _Cl.Fx_CambioFechaConFincred()
            End If

        Else

            If _Origen_Modificado_Intertanto Then

                Sb_Limpiar(ModModalidad_Doc)

            Else

                _Class_Referencias_DTE.Sb_Eliminar_Referencias_NCV(_Tbl_Mevento_Edo)

            End If

        End If

        ModModalidad_Doc = _Modalidad_Origen

        _Mod.Sb_Actualiza_Formatos_X_Modalidad()
        _Mod.Sb_Actualizar_Variables_Modalidad(ModModalidad_Doc)

        Return _Mensaje

    End Function

#End Region

    Private Sub Btn_Observaciones_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Observaciones.Click

        Dim _Habilitar = True

        If _Revision_Remota Or _Solo_Revisar_El_Documento Then
            _Habilitar = False
        End If

        Dim _Documento_Autorizado = Fx_Documento_Autorizado()

        Dim Fm_Obs As New Frm_Formulario_Observaciones(_Ds_Matriz_Documentos, _RowEntidad, _Tipo_Documento, _Documento_Autorizado)
        Fm_Obs.Pro_Class_Referencias_DTE = _Class_Referencias_DTE
        Fm_Obs.Btn_Grabar_e_Imprimir.Visible = False
        Fm_Obs.TxtObservaciones.ReadOnly = Not _Habilitar
        Fm_Obs.DtpFechaEntrega.Enabled = _Habilitar
        Fm_Obs.TxtFormadepago.Enabled = _Habilitar
        Fm_Obs.TxtOrdendecompra.Enabled = _Habilitar

        Fm_Obs.Txt_Placa.ButtonCustom.Enabled = _Habilitar
        Fm_Obs.Txt_Placa.ButtonCustom2.Enabled = _Habilitar

        Fm_Obs.Txt_CodRetirador.ButtonCustom.Enabled = _Habilitar
        Fm_Obs.Txt_CodRetirador.ButtonCustom2.Enabled = _Habilitar

        Fm_Obs.Txt_Placa.Enabled = _Habilitar
        Fm_Obs.Txt_CodRetirador.Enabled = _Habilitar
        Fm_Obs.Btn_Solo_Grabar.Visible = False
        Fm_Obs.CambiarFechaEnDetalle = True
        Fm_Obs.TieneOrdenDeDespacho = Not (IsNothing(_Cl_Despacho))
        Fm_Obs.ShowDialog(Me)
        Fm_Obs.Dispose()

    End Sub

    Private Sub BtnConfImagenVale_Click(sender As System.Object, e As System.EventArgs)

        Dim _Autorizado As Boolean

        Dim Fm_Pass As New Frm_Clave_Administrador
        Fm_Pass.ShowDialog(Me)
        _Autorizado = Fm_Pass.Pro_Autorizado
        Fm_Pass.Dispose()

        If _Autorizado Then

            Dim OpenBuscarImagen As New OpenFileDialog
            If OpenBuscarImagen.ShowDialog() = System.Windows.Forms.DialogResult.OK Then

                Dim UbicImagen1 = OpenBuscarImagen.FileName

                Dim Archivo As String = AppPath() & "\Data\" & RutEmpresa & "\BkPost\ImgVale_Bkpost.xml"

                Dim exists = System.IO.File.Exists(Archivo)
                If exists Then
                    Kill(Archivo)
                End If


                Dim NewFila As DataRow
                NewFila = _DtsConfig.Tables("Ruta_Imagen").NewRow
                With NewFila
                    .Item("Archivo") = "Imagen Logo"
                    .Item("Ruta") = UbicImagen1
                    _DtsConfig.Tables("Ruta_Imagen").Rows.Add(NewFila)
                End With

                _DtsConfig.WriteXml(Archivo)
                _DtsConfig.Clear()

                MessageBoxEx.Show(Me, "Imagen seleccionada correctamente", "Logo Vale", MessageBoxButtons.OK, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, Me.TopMost)

            End If
        End If

    End Sub

    Private Sub Btn_Informe_Ventas_X_Vendedor_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Informe_Ventas_X_Vendedor.Click
        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Inf00010", Nothing, "", "") Then
            Dim Fm As New Frm_Inf_Ventas_X_Vendedor_01
            Fm.ShowDialog(Me)
            Fm.Dispose()
        End If
    End Sub

    Private Sub Btn_Doc_Desde_Cov_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Desde_COV_OCC.Click

        Select Case _Tido

            Case "BLV", "FCV", "NVV", "COV"

                If _Post_Venta Then

                    If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Bkp00010", Nothing, "", "") Then
                        Sb_Buscar_Documento("COV", _Editar_documento, "")
                    End If

                End If

            Case "OCC"

                Sb_Buscar_Documento("OCC", _Editar_documento, "")

        End Select

    End Sub

    Sub Sb_Buscar_Documento(_Tido_Buscar As String,
                            _Editar As Boolean,
                            _IdMaeedo As String)

        Try

            Sb_Grilla_Detalle_Eventos(False)

            'Dim _IdMaeedo As String

            If String.IsNullOrEmpty(_IdMaeedo) Then

                Dim _Fm As New Frm_BusquedaDocumento_Filtro(False)

                With _Fm

                    .Grupo_Funcionario.Enabled = False
                    .Pro_Sql_Filtro_Documentos_Extra = "And TIDO IN ('" & _Tido_Buscar & "')"
                    .Pro_TipoDoc_Seleccionado = Frm_BusquedaDocumento_Filtro._TipoDoc_Sel.Personalizado
                    .Rdb_Tipo_Documento_Uno.Checked = True
                    .Sb_LlenarCombo_FlDoc(Frm_BusquedaDocumento_Filtro._TipoDoc_Sel.Personalizado, _Tido_Buscar,
                                          "Where TIDO IN ('" & _Tido_Buscar & "')")
                    .Rdb_Estado_Vigente.Checked = True

                    If _Editar Then
                        .Pro_Mostrar_Solo_Datos_Usuario_Activo = _Editar
                    Else
                        .Rdb_Funcionarios_Todos.Checked = True
                    End If

                    .Grupo_Funcionario.Enabled = True
                    .Rdb_FEmision_EmitidosEntre.Checked = True

                    .ShowDialog(Me)

                    If Not (.Pro_Row_Documento_Seleccionado Is Nothing) Then
                        _IdMaeedo = .Pro_Row_Documento_Seleccionado.Item("IDMAEEDO")
                    End If

                    .Dispose()

                End With

            End If

            Dim _CampoPrecio As String

            If ChkValores.Checked Then ' Neto
                _CampoPrecio = "PPPRNE"
            Else ' Bruto
                _CampoPrecio = "PPPRBR"
            End If

            If Not String.IsNullOrEmpty(_IdMaeedo) Then

                Consulta_sql = "Select * From MAEEDO Where IDMAEEDO = " & _IdMaeedo & "
                                Select *,
                                CASE WHEN UDTRPR = 1 THEN CAPRCO1-CAPREX1 ELSE CAPRCO2-CAPREX2 END AS 'Cantidad',
                                CAPRCO1-CAPREX1 AS 'CantUd1_Dori',CAPRCO2-CAPREX2 AS 'CantUd2_Dori',
                                CASE WHEN UDTRPR = 1 THEN " & _CampoPrecio & " ELSE " & _CampoPrecio & "*RLUDPR END AS 'Precio'
                                From MAEDDO  WITH ( NOLOCK )  
                                Where IDMAEEDO=" & _IdMaeedo & " AND ( ESLIDO<>'C' OR ESFALI='I' ) AND TICT = '' Order by NULIDO
                                Select TOP 1 * From MAEEDOOB Where IDMAEEDO = " & _IdMaeedo

                Dim _Filtro_Idmaeedo = "(" & _IdMaeedo & ")"


                Consulta_sql = "Select * From MAEEDO Where IDMAEEDO = " & _IdMaeedo & "
                                
                                Select MAEDDO.*,CASE WHEN UDTRPR = 1 THEN CAPRCO1-CAPREX1 ELSE CAPRCO2-CAPREX2 END AS 'Cantidad',
                                CAPRCO1-CAPREX1 AS 'CantUd1_Dori',CAPRCO2-CAPREX2 AS 'CantUd2_Dori',
                                --CASE WHEN UDTRPR = 1 THEN " & _CampoPrecio & " ELSE " & _CampoPrecio & "*RLUDPR END AS 'Precio',
                                " & _CampoPrecio & " As 'Precio',
                                Isnull(Ofer.Id_Oferta,'') As Id_Oferta,
                                Isnull(Ofer.Oferta,'') As Oferta,
                                Isnull(Ofer.Es_Padre_Oferta,0) As Es_Padre_Oferta,
                                Isnull(Ofer.Padre_Oferta,0) As Padre_Oferta,
                                Isnull(Ofer.Hijo_Oferta,0) As Hijo_Oferta,
                                Isnull(Cantidad_Oferta,0) As Cantidad_Oferta,
                                Isnull(Porcdesc_Oferta,0) As Porcdesc_Oferta
                                From MAEDDO WITH ( NOLOCK ) 
                                Left Join " & _Global_BaseBk & "Zw_Linea_Oferta Ofer On Ofer.Idmaeddo = IDMAEDDO
                                Where IDMAEEDO In " & _Filtro_Idmaeedo & "  AND ( ESLIDO<>'C' OR ESFALI='I' ) --AND TICT = ''
                                Order by IDMAEEDO,IDMAEDDO
                                
                                Select * From MAEIMLI
                                Where IDMAEEDO In " & _Filtro_Idmaeedo & " 

                                Select * From MAEDTLI
                                Where IDMAEEDO In " & _Filtro_Idmaeedo & " 

                                Select TOP 1 * From MAEEDOOB Where IDMAEEDO = " & _IdMaeedo

                Dim _Ds_Maeedo_Origen As DataSet = _Sql.Fx_Get_DataSet(Consulta_sql)

                If CBool(_Ds_Maeedo_Origen.Tables(1).Rows.Count) Then

                    Dim _Fl As String = Generar_Filtro_IN(_Ds_Maeedo_Origen.Tables(1), "", "IDMAEEDO", False, False, "")

                    Dim _Reg As Integer = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_Casi_DocDet", "Idmaeedo_Dori In " & _Fl)

                    If CBool(_Reg) Then
                        MessageBoxEx.Show(Me, "No es posible traer el detalle de alguno de los documentos asociados." & Environment.NewLine &
                                          "Uno o más de los archivos asociados está ligado a un documento pendiente de solicitud de permiso remoto" & Environment.NewLine &
                                          "Para poder ligar nuevamente cualquiera de esos documentos primero deben terminar esas gestiones",
                                          "Validación BakApp", MessageBoxButtons.OK, MessageBoxIcon.Error, MessageBoxDefaultButton.Button1, Me.TopMost)

                    Else

                        If _Tido_Buscar = "COV" Then
                            _Tido = "BLV"
                        End If

                        Sb_Limpiar(ModModalidad_Doc)

                        _Idmaeedo_Origen = _IdMaeedo

                        Dim _Doc_Rescatado As Boolean

                        _Editar_documento = True


                        If _Tido = "NVV" Then

                            Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Remotas" & vbCrLf &
                                           "Where Idmaeedo = " & _Idmaeedo_Origen & " And CodPermiso = 'Bkp00057'"
                            Dim _Row_RemotaPdte As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                            If Not IsNothing(_Row_RemotaPdte) Then

                                Dim _RowMaeedo_Origen As DataRow = _Ds_Maeedo_Origen.Tables(0).Rows(0)
                                Dim _Feemdo2 As Date = FormatDateTime(_RowMaeedo_Origen.Item("FEEMDO"), DateFormat.ShortDate)
                                Dim _FechaEmision2 As Date = FormatDateTime(_TblEncabezado.Rows(0).Item("FechaEmision"), DateFormat.ShortDate)

                                If _Feemdo2 <> _FechaEmision2 Then
                                    If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00073", Nothing, "", "") Then
                                        Return
                                    End If
                                End If

                            End If

                            _Reg = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_Stmp_Enc", "Idmaeedo = " & _IdMaeedo)

                            Consulta_sql = "Select Top 1 * From " & _Global_BaseBk & "Zw_Stmp_Enc Where Idmaeedo = " & _IdMaeedo & " And Estado Not In ('NULO','NULA','NULL')"
                            Dim _Row As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                            If Not IsNothing(_Row) Then

                                If _Row.Item("Facturar") Then
                                    MessageBoxEx.Show(Me, "No se puede reactivar o cerrar esta nota de venta ya que esta en proceso de Picking", "Validación",
                                                      MessageBoxButtons.OK, MessageBoxIcon.Stop)
                                    Sb_Limpiar(ModModalidad_Doc)
                                    Return
                                End If

                            End If

                            If _Global_Row_Configuracion_General.Item("LasNVVDebenSerHabilitadasParaFacturar") Then

                                Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Docu_Ent WITH (NOLOCK) Where Idmaeedo = " & _IdMaeedo
                                Dim _Row_Docu_Ent As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                                Dim _HabilitadaFac = False

                                If Not IsNothing(_Row_Docu_Ent) Then
                                    _HabilitadaFac = _Row_Docu_Ent.Item("HabilitadaFac")
                                End If

                                If _HabilitadaFac Then

                                    If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00083", Nothing, "", "") Then  'Not Fx_Tiene_Permiso(Me, "Doc00083") Then
                                        Sb_Limpiar(ModModalidad_Doc)
                                        Return
                                    End If

                                End If

                            End If

                        End If

                        Dim _Mantener_Bodega_Origen As Boolean
                        Dim _Conservar_Nudo As Boolean

                        If (_Tido = "NVV" And _Tido_Buscar = "NVV") Or
                           (_Tido = "COV" And _Tido_Buscar = "COV") Or
                           (_Tido = "OCC" And _Tido_Buscar = "OCC") Then

                            ' CERRAMOS EL DOCUMENTO PARA PODER TRABAJAR CON SUS PRODUCTOS

                            Dim Cerrar_Doc As New Clas_Cerrar_Documento
                            Consulta_sql = "Select * From MAEDDO WITH (NOLOCK) Where IDMAEEDO = " & _Idmaeedo_Origen
                            Dim _Tbl_Origen As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)
                            Cerrar_Doc.Fx_Cerrar_Documento(_Idmaeedo_Origen, _Tbl_Origen)

                            If _Tido = "COV" And _Tido_Buscar = "COV" Then
                                _Mantener_Bodega_Origen = True
                                _Conservar_Nudo = True
                            End If

                        End If

                        Sb_Crear_Documento_Desde_Otros_Documentos(Me, _Ds_Maeedo_Origen, _Doc_Rescatado, True, Nothing, False,
                                                                  _Mantener_Bodega_Origen, _Conservar_Nudo)

                        If Not _Doc_Rescatado And _Editar Then

                            Sb_Limpiar(ModModalidad_Doc)

                            _Idmaeedo_Origen = 0
                            _Editar_documento = False
                        Else
                            _Editar_documento = True

                            If (_Tido = "COV" And _Tido_Buscar = "COV") Then
                                _TblEncabezado.Rows(0).Item("NroDocumento") = _Ds_Maeedo_Origen.Tables(0).Rows(0).Item("NUDO")
                            End If

                        End If

                        Sb_Marcar_Grilla()

                        _TblEncabezado.Rows(0).Item("Idmaeedo_Origen") = _Idmaeedo_Origen

                    End If

                Else
                    MessageBoxEx.Show(Me, "Documento se encuentra cerrado completamente", "Documento cerrado",
                                      MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                End If
            End If


        Catch ex As Exception
            MessageBoxEx.Show(ex.Message, "Problema", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
        Finally
            Sb_Grilla_Detalle_Eventos(True)
        End Try

    End Sub

    Sub Sb_Buscar_Documento_Eliminar_Reciclar(_Tido_Buscar As String, _Vales_Transitorios As Boolean)

        Try

            Dim _Filtro_Tido As String

            Sb_Grilla_Detalle_Eventos(False)

            Dim _IdMaeedo As String

            Dim _Fm As New Frm_BusquedaDocumento_Filtro(False)
            With _Fm

                .Grupo_Funcionario.Enabled = False

                If _Vales_Transitorios Then
                    .Pro_Sql_Filtro_Documentos_Extra = "And TIDO IN ('BLV','FCV') And NUDONODEFI = 1"
                    .Pro_Sql_Filtro_Otro_Filtro = "And NUDONODEFI = 1"
                    _Filtro_Tido = "Where TIDO In ('BLV','FCV')"
                Else
                    .Pro_Sql_Filtro_Documentos_Extra = "And TIDO IN ('" & _Tido_Buscar & "')"
                    _Filtro_Tido = "Where TIDO In ('" & _Tido_Buscar & "')"
                End If

                .Pro_TipoDoc_Seleccionado = Frm_BusquedaDocumento_Filtro._TipoDoc_Sel.Personalizado
                .Rdb_Tipo_Documento_Uno.Checked = True
                .Sb_LlenarCombo_FlDoc(Frm_BusquedaDocumento_Filtro._TipoDoc_Sel.Personalizado, _Tido_Buscar, _Filtro_Tido)
                .Rdb_Estado_Vigente.Checked = True

                'If _Editar Then
                .Pro_Mostrar_Solo_Datos_Usuario_Activo = True '_Editar
                'Else
                '.Rdb_Funcionarios_Todos.Checked = True
                'End If

                .Grupo_Funcionario.Enabled = True
                .Rdb_FEmision_EmitidosEntre.Checked = True

                .ShowDialog(Me)

                If Not (.Pro_Row_Documento_Seleccionado Is Nothing) Then
                    _IdMaeedo = .Pro_Row_Documento_Seleccionado.Item("IDMAEEDO")
                    _Tido = .Pro_Row_Documento_Seleccionado.Item("TIDO")

                    'If _Vales_Transitorios Then
                    '    _Tido_Original = _Tido
                    'End If

                End If

                .Dispose()

            End With


            Dim _CampoPrecio As String

            If ChkValores.Checked Then
                ' Neto
                _CampoPrecio = "PPPRNE"
            Else
                ' Bruto
                _CampoPrecio = "PPPRBR"
            End If

            If Not String.IsNullOrEmpty(_IdMaeedo) Then

                Consulta_sql = "Select * From MAEEDO Where IDMAEEDO = " & _IdMaeedo & "
                                Select *,
                                CASE WHEN UDTRPR = 1 THEN CAPRCO1-CAPREX1 ELSE CAPRCO2-CAPREX2 END AS 'Cantidad',
                                CAPRCO1-CAPREX1 AS 'CantUd1_Dori',CAPRCO2-CAPREX2 AS 'CantUd2_Dori',
                                CASE WHEN UDTRPR = 1 THEN " & _CampoPrecio & " ELSE " & _CampoPrecio & "*RLUDPR END AS 'Precio'
                                From MAEDDO  WITH ( NOLOCK )  
                                Where IDMAEEDO=" & _IdMaeedo & " AND ( ESLIDO<>'C' OR ESFALI='I' ) AND TICT = '' Order by NULIDO
                                Select TOP 1 * From MAEEDOOB Where IDMAEEDO = " & _IdMaeedo

                Dim _Filtro_Idmaeedo = "(" & _IdMaeedo & ")"


                Consulta_sql = "Select * From MAEEDO Where IDMAEEDO = " & _IdMaeedo & "
                                
                                Select MAEDDO.*,CASE WHEN UDTRPR = 1 THEN CAPRCO1-CAPREX1 ELSE CAPRCO2-CAPREX2 END AS 'Cantidad',
                                CAPRCO1-CAPREX1 AS 'CantUd1_Dori',CAPRCO2-CAPREX2 AS 'CantUd2_Dori',
                                --CASE WHEN UDTRPR = 1 THEN " & _CampoPrecio & " ELSE " & _CampoPrecio & "*RLUDPR END AS 'Precio',
                                " & _CampoPrecio & " As 'Precio',
                                Isnull(Ofer.Id_Oferta,'') As Id_Oferta,
                                Isnull(Ofer.Oferta,'') As Oferta,
                                Isnull(Ofer.Es_Padre_Oferta,0) As Es_Padre_Oferta,
                                Isnull(Ofer.Padre_Oferta,0) As Padre_Oferta,
                                Isnull(Ofer.Hijo_Oferta,0) As Hijo_Oferta,
                                Isnull(Cantidad_Oferta,0) As Cantidad_Oferta,
                                Isnull(Porcdesc_Oferta,0) As Porcdesc_Oferta
                                From MAEDDO WITH ( NOLOCK ) 
                                Left Join " & _Global_BaseBk & "Zw_Linea_Oferta Ofer On Ofer.Idmaeddo = IDMAEDDO
                                Where IDMAEEDO In " & _Filtro_Idmaeedo & "  AND ( ESLIDO<>'C' OR ESFALI='I' ) --AND TICT = ''
                                Order by IDMAEEDO,IDMAEDDO
                                
                                Select * From MAEIMLI
                                Where IDMAEEDO In " & _Filtro_Idmaeedo & " 

                                Select * From MAEDTLI
                                Where IDMAEEDO In " & _Filtro_Idmaeedo & " 

                                Select TOP 1 * From MAEEDOOB Where IDMAEEDO = " & _IdMaeedo

                Dim _Ds_Maeedo_Origen As DataSet = _Sql.Fx_Get_DataSet(Consulta_sql)

                If CBool(_Ds_Maeedo_Origen.Tables(1).Rows.Count) Then

                    Dim _Fl As String = Generar_Filtro_IN(_Ds_Maeedo_Origen.Tables(1), "", "IDMAEEDO", False, False, "")

                    Dim _Reg As Integer = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_Casi_DocDet", "Idmaeedo_Dori In " & _Fl)

                    If CBool(_Reg) Then
                        MessageBoxEx.Show(Me, "No es posible traer el detalle de alguno de los documentos asociados." & Environment.NewLine &
                                          "Uno o más de los archivos asociados está ligado a un documento pendiente de solicitud de permiso remoto" & Environment.NewLine &
                                          "Para poder ligar nuevamente cualquiera de esos documentos primero deben terminar esas gestiones",
                                          "Validación BakApp", MessageBoxButtons.OK, MessageBoxIcon.Error, MessageBoxDefaultButton.Button1, Me.TopMost)

                    Else

                        Sb_Limpiar(ModModalidad_Doc,, False)

                        _Idmaeedo_Origen = _IdMaeedo

                        Dim _Doc_Rescatado As Boolean

                        _Editar_documento = True

                        If (_Tido = "NVV" And _Tido_Buscar = "NVV") Or
                           (_Tido = "COV" And _Tido_Buscar = "COV") Or
                           (_Tido = "OCC" And _Tido_Buscar = "OCC") Or (_Post_Venta) Then

                            ' CERRAMOS EL DOCUMENTO PARA PODER TRABAJAR CON SUS PRODUCTOS

                            Dim Cerrar_Doc As New Clas_Cerrar_Documento
                            Consulta_sql = "Select * From MAEDDO WITH (NOLOCK) Where IDMAEEDO = " & _Idmaeedo_Origen
                            Dim _Tbl_Origen As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)
                            Cerrar_Doc.Fx_Cerrar_Documento(_Idmaeedo_Origen, _Tbl_Origen)

                        End If

                        Sb_Crear_Documento_Desde_Otros_Documentos(Me, _Ds_Maeedo_Origen, _Doc_Rescatado, True, Nothing, False, False)

                        If Not _Doc_Rescatado Then

                            Sb_Limpiar(ModModalidad_Doc)

                            _Idmaeedo_Origen = 0
                            _Editar_documento = False
                        Else
                            _Editar_documento = True
                        End If

                        Sb_Marcar_Grilla()

                        _TblEncabezado.Rows(0).Item("Idmaeedo_Origen") = _Idmaeedo_Origen

                    End If

                Else
                    MessageBoxEx.Show(Me, "Documento se encuentra cerrado completamente", "Documento cerrado",
                                      MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                End If

            End If


        Catch ex As Exception
            MessageBoxEx.Show(ex.Message, "Problema", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
        Finally
            Sb_Grilla_Detalle_Eventos(True)
        End Try

    End Sub

#Region "CREAR DOCUMENTO DESDE OTROS DOCUMENTOS RELACIONADOS"

    Public Sub Sb_Crear_Documento_Desde_Otros_Documentos(_Formulario As Form,
                                                         _Ds_Documento_de_Origen As DataSet,
                                                         ByRef _Doc_Rescatado As Boolean,
                                                         _Revisar_Permiso_Lista_Precio As Boolean,
                                                         _Fecha_Emision? As DateTime,
                                                         _No_Aplica_Redondeo As Boolean,
                                                         _Mantener_Bodega_Origen As Boolean,
                                                         Optional _Conservar_Nudo As Boolean = False,
                                                         Optional _Bodega_Recepcion As String = "",
                                                         Optional _Sucursal_Recepcion As String = "",
                                                         Optional _Usar_SucBodRecepcion As Boolean = False,
                                                         Optional _Usar_SucursalDocOrigen As Boolean = False)

        Try

            Me.Enabled = False

            Dim _Mostrar_Error As Boolean = Not _Facturacion_Automatica

            Dim _RowMaeedo_Origen As DataRow = _Ds_Documento_de_Origen.Tables(0).Rows(0)
            Dim _TblMaeddo_Origen As DataTable = _Ds_Documento_de_Origen.Tables(1)          'ENCABEZADO DEL PRIMER DOCUMENTO 
            Dim _TblMaeimli_Origen As DataTable = _Ds_Documento_de_Origen.Tables(2)         'IMPUESTOS DE LAS LINEAS DEL DOCUMENTO 
            Dim _TblMaedtli_Origen As DataTable = _Ds_Documento_de_Origen.Tables(3)         'DESCUENTOS DE LAS LINEAS DE LOS DOCUMENTOS  
            Dim _RowMaeedoOb_Origen As DataRow                                              'OBSERVACIONES DEL PRIMER DOCUMENTO 

            If CBool(_Ds_Documento_de_Origen.Tables(4).Rows.Count) Then
                _RowMaeedoOb_Origen = _Ds_Documento_de_Origen.Tables(4).Rows(0)
            Else

                Consulta_sql = "Delete MAEEDOOB Where IDMAEEDO = 0"
                _Sql.Ej_consulta_IDU(Consulta_sql, False)

                Consulta_sql = "Insert Into MAEEDOOB (IDMAEEDO) Values (0) 
                                Select * From MAEEDOOB Where IDMAEEDO = 0
                                Delete MAEEDOOB Where IDMAEEDO = 0"
                _RowMaeedoOb_Origen = _Sql.Fx_Get_DataRow(Consulta_sql, _Mostrar_Error)

            End If

            If _Usar_SucursalDocOrigen Then
                _TblEncabezado.Rows(0).Item("Sucursal") = _RowMaeedo_Origen.Item("SUDO")
            End If

            If _Tido <> "NCV" Then

                Dim _Id_DocEnc = _RowMaeedo_Origen.Item("IDMAEEDO")
                Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Referencias_Dte Where Id_Doc = " & _Id_DocEnc & " And Kasi = 0"

                Dim _TblReferencias_Dte_Stby = _Sql.Fx_Get_DataTable(Consulta_sql, _Mostrar_Error)

                For Each _Fila As DataRow In _TblReferencias_Dte_Stby.Rows

                    Dim _Id_Ref = _Fila.Item("Id_Ref")
                    Dim _Nudo = _Fila.Item("Nudo")
                    Dim _NroLinRef = _Fila.Item("NroLinRef")
                    Dim _TpoDocRef = _Fila.Item("TpoDocRef")
                    Dim _FolioRef = _Fila.Item("FolioRef")
                    Dim _RUTOt = _Fila.Item("RUTOt")
                    Dim _IdAdicOtr = _Fila.Item("IdAdicOtr")
                    Dim _FchRef = _Fila.Item("FchRef")
                    Dim _CodRef = _Fila.Item("CodRef")
                    Dim _RazonRef = _Fila.Item("RazonRef")

                    _Class_Referencias_DTE.Fx_Row_Nueva_Referencia(_Id_Ref, 0, _Tido, _Nudo,
                                                                   _NroLinRef, _TpoDocRef, _FolioRef, _RUTOt, _IdAdicOtr, _FchRef, _CodRef, _RazonRef)

                Next

                If _Documento_Reciclado Then

                    Consulta_sql = String.Empty

                    Dim _Filtro_Idmaeedo = Generar_Filtro_IN(_Ds_Documento_de_Origen.Tables(0), "", "IDMAEEDO", False, False, "")

                    Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Referencias_Dte Where Id_Doc In " & _Filtro_Idmaeedo & vbCrLf & vbCrLf &
                                   "Insert Into " & _Global_BaseBk & "Zw_Casi_DocArc (Nombre_Archivo,Archivo,Fecha,CodFuncionario,NombreEquipo,En_Construccion)" & vbCrLf &
                                   "Select Nombre_Archivo,Archivo,Fecha,CodFuncionario,'" & _NombreEquipo & "',1" & vbCrLf &
                                   "From " & _Global_BaseBk & "Zw_Docu_Archivos Where Idmaeedo In " & _Filtro_Idmaeedo & vbCrLf & vbCrLf &
                                   "Delete " & _Global_BaseBk & "Zw_Docu_Archivos Where Idmaeedo In " & _Filtro_Idmaeedo

                    If Not String.IsNullOrEmpty(Consulta_sql) Then
                        _Sql.Fx_Eje_Condulta_Insert_Update_Delte_TRANSACCION(Consulta_sql)
                    End If

                    Sb_Revisar_Si_Hay_Archivos_Adjuntos()

                End If

            End If

            Dim Fl = Generar_Filtro_IN(_TblMaeddo_Origen, "", "IDMAEEDO", False, False, "")

            If Fl <> "()" Then
                Consulta_sql = "Select IDMAEEDO From MAEEDO Where IDMAEEDO IN " & Fl
                _TblDocumentos_Dori = _Sql.Fx_Get_DataTable(Consulta_sql, _Mostrar_Error)
            End If

            Dim _Tido_Origen As String = _Tido

            _TblObservaciones.Rows(0).Item("Observaciones") = _RowMaeedoOb_Origen.Item("OBDO")

            Dim _CodEntidad As String
            Dim _CodSucEntidad As String
            Dim _Fecha_Del_Servidor = FormatDateTime(FechaDelServidor, DateFormat.ShortDate)

            If Not _Fecha_Emision.HasValue Then
                _Fecha_Emision = _Fecha_Del_Servidor
            End If

            Dim _RowEntidad_Doc As DataRow

            Dim _FechaDoc As Date = _Fecha_Emision
            Dim _Fecha_Actual As Date = _Fecha_Emision
            Dim _FechaEmision As Date = _Fecha_Emision
            Dim _Fecha_1er_Vencimiento As Date = _Fecha_Emision
            Dim _FechaUltVencimiento As Date = _Fecha_Emision
            Dim _Forma_pago As String = String.Empty
            Dim _Fecha_Recepcion As Date = NuloPorNro(_RowMaeedo_Origen.Item("FEER"), _Fecha_Emision)

            Dim _ModFechVto As Boolean
            Dim _ModFechVto_Dias1erVenci As Integer

            Dim _Centro_Costo As String

            Try
                _Centro_Costo = _RowMaeedo_Origen.Item("LUVTDO")
            Catch ex As Exception
                _Centro_Costo = String.Empty
            End Try

            If _Fecha_Recepcion < _Fecha_Emision Then
                _Fecha_Recepcion = _Fecha_Emision
            End If

            Try
                _Tido_Origen = _RowMaeedo_Origen.Item("TIDO")
            Catch ex As Exception
                _Tido_Origen = String.Empty
            End Try

            If Not String.IsNullOrEmpty(_Tido_Origen) Then

                _CodEntidad = _RowMaeedo_Origen.Item("ENDO")
                _CodSucEntidad = _RowMaeedo_Origen.Item("SUENDO")

                _RowEntidad_Doc = Fx_Traer_Datos_Entidad(_CodEntidad, _CodSucEntidad)

                If Not _Fecha_Emision.HasValue Then

                    _FechaDoc = FormatDateTime(_RowMaeedo_Origen.Item("FEEMDO"), DateFormat.ShortDate)
                    _Fecha_Actual = FormatDateTime(FechaDelServidor(), DateFormat.ShortDate)
                    _FechaEmision = _RowMaeedo_Origen.Item("FEEMDO")
                    _Fecha_1er_Vencimiento = _RowMaeedo_Origen.Item("FE01VEDO")
                    _FechaUltVencimiento = _RowMaeedo_Origen.Item("FEULVEDO")
                    _Fecha_Recepcion = _RowMaeedo_Origen.Item("FEER")

                End If

                _Forma_pago = _RowMaeedoOb_Origen.Item("CPDO")

                If Not (_RowEntidad_Doc Is Nothing) Then
                    _RowEntidad = _RowEntidad_Doc
                Else
                    _RowEntidad = _RowEntidad_X_Defecto
                End If

                _TblObservaciones.Rows(0).Item("Forma_pago") = _Forma_pago
                _TblObservaciones.Rows(0).Item("Orden_compra") = _RowMaeedoOb_Origen.Item("OCDO")
                _TblObservaciones.Rows(0).Item("Placa") = _RowMaeedoOb_Origen.Item("PLACAPAT")
                _TblObservaciones.Rows(0).Item("CodRetirador") = _RowMaeedoOb_Origen.Item("DIENDESP")

                For _i = 1 To 35
                    Dim _Observacion As String = _RowMaeedoOb_Origen.Item("TEXTO" & _i)
                    _TblObservaciones.Rows(0).Item("Obs" & _i) = Mid(_Observacion, 1, 80)
                Next

            End If

            Try
                _TblEncabezado.Rows(0).Item("Pickear") = _RowMaeedo_Origen.Item("Pickear")
            Catch ex As Exception
                _TblEncabezado.Rows(0).Item("Pickear") = False
            End Try

            If _Conservar_Nudo Then
                _TblEncabezado.Rows(0).Item("NroDocumento") = _RowMaeedo_Origen.Item("NUDO")
                _TblEncabezado.Rows(0).Item("Reserva_NroOCC") = True
            End If

            _TblEncabezado.Rows(0).Item("Centro_Costo") = _Centro_Costo

            _TblEncabezado.Rows(0).Item("FechaEmision") = _FechaEmision
            _TblEncabezado.Rows(0).Item("Fecha_1er_Vencimiento") = _Fecha_1er_Vencimiento
            _TblEncabezado.Rows(0).Item("FechaUltVencimiento") = _FechaUltVencimiento
            _TblEncabezado.Rows(0).Item("FechaRecepcion") = _Fecha_Recepcion

            _FechaDoc = _Fecha_Actual

            If _Fecha_Recepcion < _Fecha_Actual Then
                _TblEncabezado.Rows(0).Item("FechaRecepcion") = _Fecha_Actual
            End If

            If _Editar_documento Then
                _TblEncabezado.Rows(0).Item("FechaRecepcion") = _Fecha_Recepcion
                _TblEncabezado.Rows(0).Item("Moneda_Doc") = _RowMaeedo_Origen.Item("MODO")
                _TblEncabezado.Rows(0).Item("Valor_Dolar") = _RowMaeedo_Origen.Item("TAMODO")
                _TblEncabezado.Rows(0).Item("TipoMoneda") = _RowMaeedo_Origen.Item("TIMODO")
                LblMoneda.Tag = _RowMaeedo_Origen.Item("MODO")
                LblMoneda.Text = _RowMaeedo_Origen.Item("MODO")
            End If

            If _RowEntidad Is Nothing Then
                Return
            End If

            Dim _Dias_Coti As Integer = DateDiff(DateInterval.Day, _FechaDoc, Now.Date)
            Dim _Vencida As Boolean

            Dim _Dias_Venci_Coti As Integer = _Global_Row_Configuracion_Estacion.Item("Vnta_Dias_Venci_Coti")

            If _Post_Venta Then

                If _Tido_Origen = "COV" Then

                    If _Dias_Venci_Coti < _Dias_Coti Then

                        MessageBoxEx.Show(_Formulario, "La cotización tiene más de " & _Dias_Venci_Coti & " días, por lo tanto los valores ya expirarón." & Environment.NewLine &
                                          "El documento traera los valores según precio lista" & Environment.NewLine & Environment.NewLine &
                                          "Fecha cotización: " & FormatDateTime(_FechaDoc, DateFormat.LongDate),
                                          "Cotización vencida",
                                          MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, Me.TopMost)
                        _Vencida = True

                    End If

                End If

            End If

            If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Then

                Dim _Idmaeedo_Origen2 As Integer = _RowMaeedo_Origen.Item("IDMAEEDO")

                Consulta_sql = "Select FResp.*,Isnull(FDoc.Autorizacion,'RECHAZADO') As CodAutorizacion" & vbCrLf &
                               "From " & _Global_BaseBk & "Zw_Fincred_TramaRespuesta FResp" & vbCrLf &
                               "Left Join " & _Global_BaseBk & "Zw_Fincred_Documentos FDoc On FResp.Id = FDoc.Id_TR" & vbCrLf &
                               "Where (Idmaeedo = " & _Idmaeedo_Origen2 & ")"
                Dim _RowFincred As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql, _Mostrar_Error)

                Dim _Aplicar_Vencimientos As Boolean = True

                If Not IsNothing(_RowFincred) Then

                    Dim _Codigo_negacion_transaccion = _RowFincred.Item("Codigo_negacion_transaccion")
                    Dim _Descripcion_negacion = _RowFincred.Item("Descripcion_negacion")
                    Dim _CodAutorizacion = _RowFincred.Item("CodAutorizacion")

                    If _Codigo_negacion_transaccion <> 0 Or _CodAutorizacion = "RECHAZADO" Then
                        _Aplicar_Vencimientos = False
                    End If

                End If

                Dim _ListaOrigen As String = String.Empty

                Try
                    If _Global_Row_Configuracion_General.Item("ConservaListaDocOrigen") Then
                        _ListaOrigen = _RowMaeedo_Origen.Item("LISACTIVA").ToString.Trim.Replace("TABPP", "")
                    End If
                Catch ex As Exception
                    _ListaOrigen = String.Empty
                End Try

                Sb_RevListaSuperiosEntidad(True)

                Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, _Revisar_Permiso_Lista_Precio, _Aplicar_Vencimientos, False,, _ListaOrigen)

                Sb_RevListaSuperiosEntidad_VtaCurso()

            Else

                Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, False)

            End If

            _TblObservaciones.Rows(0).Item("Forma_pago") = _Forma_pago

            Try
                _TblEncabezado.Rows(0).Item("Contacto_Ent") = _RowMaeedo_Origen.Item("RUTCONTACT")
            Catch ex As Exception
                _TblEncabezado.Rows(0).Item("Contacto_Ent") = String.Empty
            End Try

            Txt_Contacto.Text = _Sql.Fx_Trae_Dato("MAEENCON", "NOKOCON", "KOEN = '" & _RowEntidad.Item("KOEN") & "' And RUTCONTACT = '" & _TblEncabezado.Rows(0).Item("Contacto_Ent") & "'")

            Dim _CodEntidadFisica As String
            Dim _CodSucEntidadFisica = String.Empty

            Try
                _CodEntidadFisica = _RowMaeedo_Origen.Item("ENDOFI")
            Catch ex As Exception
                _CodEntidadFisica = String.Empty
            End Try

            If _Sql.Fx_Exite_Campo("MAEEN", "SUENDOFI") Then
                _CodSucEntidadFisica = _RowMaeedo_Origen.Item("ENDOFI")
            End If

            _RowEntidad_Despacho = Fx_Traer_Datos_Entidad(_CodEntidadFisica, _CodSucEntidadFisica)

            If Not IsNothing(_RowEntidad_Despacho) Then

                Lbl_Nombre_Entidad_Fisica.Text = " " & _RowEntidad_Despacho.Item("NOKOEN").ToString.Trim
                _TblEncabezado.Rows(0).Item("CodEntidadFisica") = _CodEntidadFisica
                _TblEncabezado.Rows(0).Item("CodSucEntidadFisica") = _CodSucEntidadFisica
                _TblEncabezado.Rows(0).Item("Nombre_Entidad_Fisica") = _RowEntidad_Despacho.Item("NOKOEN").ToString.Trim

            End If

            Dim _CodResponsable As String

            Try
                _CodResponsable = _RowMaeedo_Origen.Item("KOFUDO")
            Catch ex As Exception
                _CodResponsable = FUNCIONARIO
            End Try

            Dim _Conservar_Responzable_Doc_Relacionado As Boolean = _Global_Row_Configuracion_General.Item("Conservar_Responzable_Doc_Relacionado")
            Dim _Preguntar_Si_Cambia_Responsable_Doc_Relacionado As Boolean = _Global_Row_Configuracion_General.Item("Preguntar_Si_Cambia_Responsable_Doc_Relacionado")
            Dim _Conservar_Responzable_Origen As Boolean

            Select Case _Tido

                Case "FCV", "BLV", "COV", "NVV"

                    _Conservar_Responzable_Origen = _Conservar_Responzable_Doc_Relacionado

                Case Else

                    _Conservar_Responzable_Doc_Relacionado = False
                    _CodResponsable = FUNCIONARIO

            End Select

            If _Conservar_Responzable_Origen Then

                If _CodResponsable <> FUNCIONARIO Then

                    If _Preguntar_Si_Cambia_Responsable_Doc_Relacionado Then

                        Dim _Nokofu = _Sql.Fx_Trae_Dato("TABFU", "NOKOFU", "KOFU = '" & _CodResponsable & "'", _Mostrar_Error)

                        If MessageBoxEx.Show(Me, "¿Desea conservar al usuario responsable del documento?" & Environment.NewLine & Environment.NewLine &
                                         "Responsable: " & _CodResponsable & " - " & Trim(_Nokofu), "Responsable distinto al usuario activo",
                                         MessageBoxButtons.YesNo, MessageBoxIcon.Question, MessageBoxDefaultButton.Button1, Me.TopMost) = Windows.Forms.DialogResult.No Then

                            If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Bkp00051", Nothing, "", "") Then
                                _Conservar_Responzable_Origen = False
                            End If

                        End If

                    End If

                End If

            End If

            If _Conservar_Responzable_Origen Then
                _TblEncabezado.Rows(0).Item("CodFuncionario") = _CodResponsable
            End If

            Dim _CodLista As String

            If _Lista_de_precios_de_proveedores Then

                Dim Lista_Precios_Proveedores As String = _Global_Row_Configuracion_General.Item("Lista_Precios_Proveedores")

                If Not String.IsNullOrEmpty(Lista_Precios_Proveedores.Trim) Then
                    _CodLista = Lista_Precios_Proveedores
                    _TblEncabezado.Rows(0).Item("ListaPrecios") = _CodLista
                End If

            End If

            Dim _Traer_Solo_Produtos_Bod_Suc = False
            Dim _Solo_Detalle_Bodegas_Con_Permiso_Usuario = Fx_Tiene_Permiso("NO00012", FUNCIONARIO)

            If _Tido.Contains("G") Or _Solo_Detalle_Bodegas_Con_Permiso_Usuario Then
                _Traer_Solo_Produtos_Bod_Suc = (_Tido <> "GRD") ' True)
                _Mantener_Bodega_Origen = False
            End If

            If _Editar_documento Then

                If _Sql.Fx_Exite_Campo("MAEEDO", "LISACTIVA") Then
                    _CodLista = Mid(_RowMaeedo_Origen.Item("LISACTIVA").ToString, 6, 3)
                Else

                    _CodLista = _TblMaeddo_Origen.Rows(0).Item("KOLTPR")

                    If _CodLista.ToString.Length > 3 Then
                        _CodLista = Mid(_CodLista, 6, 3)
                    End If

                End If

                _TblEncabezado.Rows(0).Item("ListaPrecios") = _CodLista

            End If


            _CodLista = _TblEncabezado.Rows(0).Item("ListaPrecios")

            Dim _Contador = 0

            Dim _Bodegas_Distinta As Boolean
            Dim _Bodegas_Modalidad = 0

            Dim Chk_Mantener_Bodegas_Origen As New Command
            Chk_Mantener_Bodegas_Origen.Checked = _Mantener_Bodega_Origen
            Chk_Mantener_Bodegas_Origen.Name = "Chk_Mantener_bodegas_Origen"
            Chk_Mantener_Bodegas_Origen.Text = "Mantiene la(s) bodega(s) original(es) del documento"

            Dim Chk_Cambiar_Bodegas As New Command
            Chk_Cambiar_Bodegas.Checked = False
            Chk_Cambiar_Bodegas.Name = "Chk_Cambiar_Bodegas"
            Chk_Cambiar_Bodegas.Text = "Se cambia(n) la(s) bodega(s) por la bodega " & Mod_Bodega

            Dim Chk_Traer_Solo_Produtos_Bod_Suc As New Command
            Chk_Traer_Solo_Produtos_Bod_Suc.Checked = _Traer_Solo_Produtos_Bod_Suc
            Chk_Traer_Solo_Produtos_Bod_Suc.Name = "Chk_Traer_Solo_Produtos_Bod_Suc"
            Chk_Traer_Solo_Produtos_Bod_Suc.Text = "Traer solo productos con la bodega de la sucursal"

            Dim _Opciones() As Command = {Chk_Mantener_Bodegas_Origen, Chk_Cambiar_Bodegas, Chk_Traer_Solo_Produtos_Bod_Suc}

            If _Tido <> "NCV" And _Tido <> "GRI" Then

                If Not String.IsNullOrEmpty(_Tido_Origen) Then

                    For Each Fila As DataRow In _TblMaeddo_Origen.Rows

                        Dim _Empresa As String = Fila.Item("EMPRESA")
                        Dim _Sucursal As String = Fila.Item("SULIDO")
                        Dim _Bodega As String = Fila.Item("BOSULIDO")

                        Dim _Suc_Bod_Ori As String = Trim(_Sucursal) & Trim(_Bodega)
                        Dim _Suc_Bod_Act As String = Trim(Mod_Sucursal) & Trim(Mod_Bodega)

                        If _Suc_Bod_Ori = _Suc_Bod_Act Then
                            _Bodegas_Modalidad += 1
                        Else
                            _Bodegas_Distinta = True
                        End If

                    Next

                    If _Tido = "GRD" And Not String.IsNullOrEmpty(_Bodega_Recepcion) Then
                        _Bodegas_Distinta = False
                    End If

                    If _Bodegas_Distinta Then

                        Dim _IdDorigen = _TblMaeddo_Origen.Rows(0).Item("IDMAEEDO")

                        If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta And Not _Post_Venta Then

                            If _Tido <> "NCV" And _Tido <> "NVV" Then

                                Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Remotas Where Idmaeedo = " & _IdDorigen
                                Dim _TblRemotas As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql, _Mostrar_Error)

                                If CBool(_TblRemotas.Rows.Count) Then
                                    Chk_Cambiar_Bodegas.Enabled = False
                                End If

                            End If

                        End If

                        If Not _Mantener_Bodega_Origen And Not _Solo_Detalle_Bodegas_Con_Permiso_Usuario Then

                            Dim _Info As New TaskDialogInfo("Validación del sistema",
                              eTaskDialogIcon.Shield,
                              "Bodegas distintas a la modalidad",
                              "el documento tiene por origen bodega(s) distinta(s) a la bodega de la modalidad" & Environment.NewLine &
                              "Marque su opción",
                              eTaskDialogButton.Ok + eTaskDialogButton.Cancel _
                              , eTaskDialogBackgroundColor.Red, _Opciones, Nothing, Nothing, Nothing, Nothing)

                            Dim _Resultado As eTaskDialogResult = TaskDialog.Show(_Info)

                            If _Resultado = eTaskDialogResult.Ok Then

                                If Chk_Traer_Solo_Produtos_Bod_Suc.Checked Then

                                    If Not CBool(_Bodegas_Modalidad) Then

                                        MessageBoxEx.Show(Me, "El documento no tiene bodegas relacionadas a esta modalidad", "Validación",
                                                          MessageBoxButtons.OK, MessageBoxIcon.Stop, Nothing, Me.TopMost)
                                        Return

                                    End If

                                End If

                                If Chk_Cambiar_Bodegas.Checked Then

                                    If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00056", Nothing, "", "") Then
                                        Return
                                    End If

                                End If

                                If Chk_Mantener_Bodegas_Origen.Checked Then

                                    If _Traer_Solo_Produtos_Bod_Suc Then

                                        If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00054", Nothing, "", "") Then
                                            Return
                                        End If

                                    End If

                                    MessageBoxEx.Show(Me, "Esta acción será evaluada línea a línea dependiendo si tiene permiso para utilizar la bodega original",
                                                  "Cambiar bodegas del documento de origen",
                                                  MessageBoxButtons.OK, MessageBoxIcon.Information,
                                                  MessageBoxDefaultButton.Button1, Me.TopMost)

                                End If

                            Else

                                Return

                            End If

                        End If

                    End If

                End If

            End If

            Dim _Feemdo_Origen As Date = _RowMaeedo_Origen.Item("FEEMDO")
            Dim _Feer_Origen As Date = NuloPorNro(_RowMaeedo_Origen.Item("FEER"), _Feemdo_Origen)
            Dim _Fecha_en_linea As Date = _Feemdo_Origen
            Dim _Conservar_Fecha_Origen As Boolean

            If _Tido = "GDV" And Not _TblEncabezado.Rows(0).Item("Es_Electronico") Then

                Dim _Fecha_Fila As Date = _Fecha_Del_Servidor
                Dim _Fechas_distintas = 0

                For Each _Fila As DataRow In _TblMaeddo_Origen.Rows

                    If _Fecha_Fila <> _Feemdo_Origen Then
                        _Fecha_Fila = _Feemdo_Origen
                        _Fechas_distintas += 1
                        If _Fechas_distintas > 1 Then
                            Exit For
                        End If
                    End If

                Next

                If _Fechas_distintas = 1 Then

                    Dim _ChkXDefecto = 0


                    If _Feemdo_Origen <> _Fecha_Del_Servidor Then

                        Dim _CriterioFechaGDVconFechaDistintaDocOrigen As Integer

                        _CriterioFechaGDVconFechaDistintaDocOrigen = _Global_Row_Configuracion_General.Item("CriterioFechaGDVconFechaDistintaDocOrigen")

                        If _CriterioFechaGDVconFechaDistintaDocOrigen = 0 Then
                            _CriterioFechaGDVconFechaDistintaDocOrigen = 1
                        End If

                        _ChkXDefecto = _CriterioFechaGDVconFechaDistintaDocOrigen

                        Dim Chk_Mantener_Fecha_Actual As New Command
                        Chk_Mantener_Fecha_Actual.Checked = (_CriterioFechaGDVconFechaDistintaDocOrigen = 1)
                        Chk_Mantener_Fecha_Actual.Name = "Chk_Mantener_Fecha_Actual"
                        Chk_Mantener_Fecha_Actual.Text = "Conservar fecha actual para el documento"

                        Dim Chk_Mantener_Fecha_Origien_EncDet As New Command
                        Chk_Mantener_Fecha_Origien_EncDet.Checked = (_CriterioFechaGDVconFechaDistintaDocOrigen = 2)
                        Chk_Mantener_Fecha_Origien_EncDet.Name = "Chk_Mantener_Fecha_Origien_EncDet"
                        Chk_Mantener_Fecha_Origien_EncDet.Text = "Fecha de despacho igual a la fecha del documento de origen" & vbCrLf &
                                                                 "Fecha: " & _Feemdo_Origen & " en Encabezado y Detalle"

                        Dim Chk_Mantener_Fecha_Origien_SolDet As New Command
                        Chk_Mantener_Fecha_Origien_SolDet.Checked = (_CriterioFechaGDVconFechaDistintaDocOrigen = 3)
                        Chk_Mantener_Fecha_Origien_SolDet.Name = "Chk_Mantener_Fecha_Origien_SolDet"
                        Chk_Mantener_Fecha_Origien_SolDet.Text = "Fecha de despacho igual a la fecha del documento de origen" & vbCrLf &
                                                                 "Fecha: " & _Feemdo_Origen & " solo en Detalle"

                        Dim _Opciones2() As Command = {Chk_Mantener_Fecha_Actual, Chk_Mantener_Fecha_Origien_EncDet, Chk_Mantener_Fecha_Origien_SolDet}

                        Dim _Info As New TaskDialogInfo("Validación del sistema",
                                          eTaskDialogIcon.Help,
                                          "Fecha del documento distinta de la fecha actual",
                                          "el documento de origen tiene una fecha distinta a la fecha actual" & Environment.NewLine &
                                          "Marque su opción",
                                          eTaskDialogButton.Ok _
                                          , eTaskDialogBackgroundColor.Red, _Opciones2, Nothing, Nothing, Nothing, Nothing)

                        Dim _Resultado As eTaskDialogResult = TaskDialog.Show(_Info)

                        Dim _ObjetoChk As Object
                        Dim _PedirPermisoChk As Boolean = _Global_Row_Configuracion_General.Item("CriterioFechaGDVconFechaDistintaDocOrigenObligatorio")

                        If _PedirPermisoChk Then

                            _PedirPermisoChk = False

                            If Not Chk_Mantener_Fecha_Actual.Checked And _ChkXDefecto = 1 Then
                                _ObjetoChk = Chk_Mantener_Fecha_Actual : _PedirPermisoChk = True
                            End If

                            If Not Chk_Mantener_Fecha_Origien_EncDet.Checked And _ChkXDefecto = 2 Then
                                _ObjetoChk = Chk_Mantener_Fecha_Origien_EncDet : _PedirPermisoChk = True
                            End If

                            If Not Chk_Mantener_Fecha_Origien_SolDet.Checked And _ChkXDefecto = 3 Then
                                _ObjetoChk = Chk_Mantener_Fecha_Origien_SolDet : _PedirPermisoChk = True
                            End If

                            If _PedirPermisoChk Then
                                If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00077", Nothing) Then
                                    Chk_Mantener_Fecha_Actual.Checked = False
                                    Chk_Mantener_Fecha_Origien_EncDet.Checked = False
                                    Chk_Mantener_Fecha_Origien_SolDet.Checked = False
                                    CType(_ObjetoChk, Command).Checked = True
                                    MessageBoxEx.Show(Me, "El comportamiento seguira siendo la opción " & _ChkXDefecto & vbCrLf &
                                                  CType(_ObjetoChk, Command).Text, "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                                End If
                            End If

                        End If

                        If Chk_Mantener_Fecha_Actual.Checked Then
                            _Conservar_Fecha_Origen = False
                        End If

                        If Chk_Mantener_Fecha_Origien_EncDet.Checked Then
                            _TblEncabezado.Rows(0).Item("FechaEmision") = _Feemdo_Origen
                            _TblEncabezado.Rows(0).Item("Fecha_1er_Vencimiento") = _Feemdo_Origen
                            _TblEncabezado.Rows(0).Item("FechaUltVencimiento") = _Feemdo_Origen
                            _TblEncabezado.Rows(0).Item("FechaRecepcion") = _Feemdo_Origen
                            _Conservar_Fecha_Origen = True
                        End If

                        If Chk_Mantener_Fecha_Origien_SolDet.Checked Then
                            _Conservar_Fecha_Origen = True
                        End If


                    End If

                End If

            End If

            Dim _Merardo_Ori As String

            Try
                _Merardo_Ori = _RowMaeedo_Origen.Item("MEARDO")
            Catch ex As Exception

                If ChkValores.Checked Then
                    _Merardo_Ori = "N"
                Else
                    _Merardo_Ori = "B"
                End If

            End Try

            For Each _Fila As DataRow In _TblMaeddo_Origen.Rows

                Dim _Codigo As String = _Fila.Item("KOPRCT")
                Dim _Descripcion As String = _Fila.Item("NOKOPR")
                Dim _Prct As Boolean = _Fila.Item("PRCT")
                Dim _Tict As String = _Fila.Item("TICT")
                Dim _Tipr As String = _Fila.Item("TIPR")

                'Sb_Agregar_Concepto
                Dim _Cantidad As Double = _Fila.Item("Cantidad")

                Dim _UnTrans As Integer = _Fila.Item("UDTRPR")
                Dim _Precio As Double = _Fila.Item("Precio")

                Dim _PrecioNetoUdLista As Double
                Dim _PrecioBrutoUdLista As Double

                _CodLista = _Fila.Item("KOLTPR")

                If _CodLista.ToString.Length > 3 Then
                    _CodLista = Mid(_Fila.Item("KOLTPR"), 6, 3)
                End If

                Dim _Potencia As Double = _Fila.Item("POTENCIA")

                Dim _Idmaeddo_Dori As String = _Fila.Item("IDMAEDDO")
                Dim _Idmaeedo_Dori As String = _Fila.Item("IDMAEEDO")
                Dim _Nulido As String = _Fila.Item("NULIDO")
                Dim _CantUd1_Dori As Double = _Fila.Item("CantUd1_Dori")
                Dim _CantUd2_Dori As Double = _Fila.Item("CantUd2_Dori")

                '_Aplica_Oferta

                Dim _Id_Oferta As Integer = _Fila.Item("Id_Oferta")
                Dim _Oferta As String = _Fila.Item("Oferta")
                Dim _Es_Padre_Oferta As Boolean = _Fila.Item("Es_Padre_Oferta")
                Dim _Padre_Oferta As Integer = _Fila.Item("Padre_Oferta")
                Dim _Hijo_Oferta As Integer = _Fila.Item("Hijo_Oferta")
                Dim _Aplica_Oferta As Boolean = Not String.IsNullOrEmpty(_Oferta)
                Dim _Cantidad_Oferta As Double = _Fila.Item("Cantidad_Oferta")
                Dim _Porcdesc_Oferta As Double = _Fila.Item("Porcdesc_Oferta")

                Try
                    _CodVendedor = _Fila.Item("KOFULIDO")
                Catch ex As Exception
                    _CodVendedor = FUNCIONARIO
                End Try

                Dim _Emprepa As String = _Fila.Item("EMPRESA")
                Dim _Tidopa As String = _Fila.Item("TIDO")
                Dim _Nudopa As String = _Fila.Item("NUDO")
                Dim _Endopa As String = _Fila.Item("ENDO")
                Dim _Nulidopa As String = _Fila.Item("NULIDO")

                If _Tidopa = _Tido Then
                    _Idmaeddo_Dori = 0
                    _Idmaeedo_Dori = 0
                End If


                'TIMOPPPR,MOPPPR,TAMOPPPR
                Dim _Moneda_Det As String
                Dim _Tipo_Moneda_Det As String
                Dim _Tipo_Cambio_Det As Double

                If CBool(_Idmaeedo_Dori) Or _Editar_documento Then
                    _Moneda_Det = _Fila.Item("MOPPPR")
                    _Tipo_Moneda_Det = _Fila.Item("TIMOPPPR")
                    _Tipo_Cambio_Det = _Fila.Item("TAMOPPPR")
                End If

                If _Documento_Reciclado Then

                    _Idmaeddo_Dori = 0
                    _Idmaeedo_Dori = 0
                    _Nulido = String.Empty
                    _CantUd1_Dori = 0
                    _CantUd2_Dori = 0

                    _Emprepa = String.Empty
                    _Tidopa = String.Empty
                    _Nudopa = String.Empty
                    _Endopa = String.Empty
                    _Nulidopa = String.Empty

                End If

                Dim _Observa As String = _Fila.Item("OBSERVA")
                Dim _DescuentoPorc As Double

                Try
                    _DescuentoPorc = _Fila.Item("PODTGLLI")
                Catch ex As Exception
                    _DescuentoPorc = 0
                End Try

                If _DescuentoPorc = 0 Then

                    Try
                        _DescuentoPorc = _Fila.Item("Desc1")
                    Catch ex As Exception
                        _DescuentoPorc = 0
                    End Try

                End If

                If (_Tido = "NCV" Or _Tido = "GRD") And _Tido_Origen = "BLV" Then
                    If _Merardo_Ori = "B" And ChkValores.Checked Then
                        _DescuentoPorc = 0
                    End If
                End If

                Dim _CodFunAutoriza = _Fila.Item("KOFUAULIDO").ToString.Trim
                Dim _CodPermiso = _Fila.Item("KOOPLIDO")

                If _Tido = _Fila.Item("TIDO") Then
                    _CodFunAutoriza = String.Empty
                    _CodPermiso = String.Empty
                End If

                Dim _New_Fila As DataGridViewRow = Grilla_Detalle.Rows(_Contador)

                _New_Fila.Cells("CodLista").Value = _CodLista

                Dim _Centro_Costo_Linea As String

                Try
                    _Centro_Costo_Linea = _Fila.Item("LUVTLIDO")
                Catch ex As Exception
                    _Centro_Costo_Linea = _TblEncabezado.Rows(0).Item("Centro_Costo")
                End Try


                Dim _Empresa As String
                Dim _Sucursal As String
                Dim _Bodega As String

                _Empresa = _Fila.Item("EMPRESA")
                _Sucursal = _Fila.Item("SULIDO")
                _Bodega = _Fila.Item("BOSULIDO")

                If _Tido = "NCV" Or _Tido = "GDD" Or _Tido = "GRI" Then

                    _Empresa = ModEmpresa_Doc
                    _Sucursal = Mod_Sucursal
                    _Bodega = Mod_Bodega

                End If

                If _Tido = "GRD" And Not String.IsNullOrEmpty(_Bodega_Recepcion) Then

                    _Empresa = ModEmpresa_Doc
                    _Sucursal = Mod_Sucursal
                    _Bodega = _Bodega_Recepcion

                End If

                If _Usar_SucBodRecepcion Then

                    _Sucursal = _Sucursal_Recepcion
                    _Bodega = _Bodega_Recepcion

                End If

                If _Conservar_Fecha_Origen Then

                    _FechaEmision = _Feemdo_Origen
                    _Fecha_Recepcion = _Feer_Origen
                    _New_Fila.Cells("FechaEmision").Value = _FechaEmision
                    _New_Fila.Cells("FechaRecepcion").Value = _Fecha_Recepcion

                End If

                If _Editar_documento Then
                    _Fecha_Recepcion = _Fila.Item("FEERLI")
                End If

                Dim _Suc_Bod_Ori As String = Trim(_Sucursal) & Trim(_Bodega)
                Dim _Suc_Bod_Act As String = Trim(Mod_Sucursal) & Trim(Mod_Bodega)

                Dim _Insertar_Producto As Boolean = Convert.ToBoolean(_Cantidad)

                If _Suc_Bod_Ori <> _Suc_Bod_Act And Not _Usar_SucBodRecepcion Then

                    Dim _Permiso = "Bo" & _Empresa & _Sucursal & _Bodega

                    If _Mantener_Bodega_Origen Or _Tido = "NVI" Then

                        _New_Fila.Cells("Sucursal").Value = _Sucursal
                        _New_Fila.Cells("Bodega").Value = _Bodega

                    Else

                        If Chk_Mantener_Bodegas_Origen.Checked Then

                            If Fx_Tiene_Permiso(Me, _Permiso, , False) Then

                                _New_Fila.Cells("Sucursal").Value = _Sucursal
                                _New_Fila.Cells("Bodega").Value = _Bodega

                            Else

                                MessageBoxEx.Show(Me, "Se mantiene la bodega " & Mod_Bodega,
                                          "No puede usar bodega " & _Bodega,
                                          MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)

                            End If

                        End If

                    End If

                    If Chk_Traer_Solo_Produtos_Bod_Suc.Checked Then
                        _Insertar_Producto = False
                    End If

                ElseIf _Usar_SucBodRecepcion Then

                    _New_Fila.Cells("Sucursal").Value = _Sucursal
                    _New_Fila.Cells("Bodega").Value = _Bodega

                End If

                If _Insertar_Producto Then

                    If _Prct Then ' Es Concepto

                        Consulta_sql = "Select * From TABCT" & vbCrLf &
                                       "Left Join " & _Global_BaseBk & "Zw_Conceptos On KOCT = Koct" & vbCrLf &
                                       "Where KOCT = '" & _Codigo & "'"
                        Dim _RowConcepto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql, _Mostrar_Error)

                        Sb_Agregar_Concepto(_New_Fila, _RowConcepto)

                        Dim _Cl_Puntos As New Cl_Puntos
                        _Cl_Puntos.Zw_PtsVta_Configuracion = _Cl_Puntos.Fx_Llenar_Zw_PtsVta_Configuracion(ModEmpresa_Doc)

                        If Not IsNothing(_Cl_Puntos.Zw_PtsVta_Configuracion) AndAlso _Cl_Puntos.Zw_PtsVta_Configuracion.Concepto = _Codigo Then
                            _New_Fila.Cells("Espuntosvta").Value = True
                        End If

                        If _RowConcepto.Item("ModFechVto") Then

                            If Not _ModFechVto Then
                                _ModFechVto = True
                                _ModFechVto_Dias1erVenci = _RowConcepto.Item("ModFechVto_Dias1erVenci")
                                _New_Fila.Cells("ModFechVto").Value = True
                            End If

                        End If

                    Else

                        Consulta_sql = "Select * From MAEPR Where KOPR = '" & _Codigo & "'"
                        Dim _RowProducto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql, _Mostrar_Error)

                        Sb_Traer_Producto_Grilla(_New_Fila, _RowProducto, True, _UnTrans, False)

                        _New_Fila.Cells("CantUd1").Value = _CantUd1_Dori
                        _New_Fila.Cells("CantUd2").Value = _CantUd2_Dori

                        Dim _Nmarca As String = _RowProducto.Item("NMARCA")

                        If _Nmarca = "¡" Or _New_Fila.Cells("Rtu").Value <> _Fila.Item("RLUDPR") Then

                            _New_Fila.Cells("Rtu").Value = _Fila.Item("RLUDPR")
                            _New_Fila.Cells("RtuVariable").Value = True

                            _New_Fila.Cells("CantUd1").Value = _CantUd1_Dori
                            _New_Fila.Cells("CantUd2").Value = _CantUd2_Dori

                        End If

                    End If

                    If Not String.IsNullOrEmpty(_Tidopa.Trim) Then
                        Try
                            _PrecioNetoUdLista = _Fila.Item("PPPRNELT")
                        Catch ex As Exception
                            _PrecioNetoUdLista = _New_Fila.Cells("PrecioNetoUdLista").Value
                        End Try
                        Try
                            _PrecioBrutoUdLista = _Fila.Item("PPPRBRLT")
                        Catch ex As Exception
                            _PrecioBrutoUdLista = _New_Fila.Cells("PrecioBrutoUdLista").Value
                        End Try
                        _New_Fila.Cells("PrecioNetoUdLista").Value = _PrecioNetoUdLista
                        _New_Fila.Cells("PrecioBrutoUdLista").Value = _PrecioBrutoUdLista
                    End If

                    Dim _Id As Integer = _New_Fila.Cells("Id").Value

                    _New_Fila.Cells("Descripcion").Value = _Descripcion

                    _New_Fila.Cells("CodFuncionario").Value = _CodVendedor
                    _New_Fila.Cells("CodVendedor").Value = _CodVendedor
                    _New_Fila.Cells("Centro_Costo").Value = _Centro_Costo_Linea

                    If String.IsNullOrEmpty(_CodFunAutoriza) Then
                        _CodFunAutoriza = _CodVendedor
                    End If

                    If _Tido = _Fila.Item("TIDO") Then
                        _CodFunAutoriza = "xyz"
                    End If

                    _New_Fila.Cells("CodFunAutoriza").Value = _CodFunAutoriza

                    _New_Fila.Cells("Codigo").Value = _Codigo
                    _New_Fila.Cells("Cantidad").Value = _Cantidad

                    _New_Fila.Cells("CantUd1_Dori").Value = _CantUd1_Dori
                    _New_Fila.Cells("CantUd2_Dori").Value = _CantUd2_Dori

                    _New_Fila.Cells("FechaEmision").Value = _FechaEmision
                    _New_Fila.Cells("FechaRecepcion").Value = _Fecha_Recepcion

                    Dim _Precio_Old As Double = _New_Fila.Cells("Precio").Value

                    If _Precio = 0 Then
                        _Precio = _Precio_Old
                    End If

                    If CBool(_Idmaeedo_Dori) Or _Editar_documento Then
                        ' Se ingresa el tipo de moneda del documento de origen
                        _New_Fila.Cells("Moneda").Value = _Moneda_Det
                        _New_Fila.Cells("Tipo_Moneda").Value = _Tipo_Moneda_Det
                        _New_Fila.Cells("Tipo_Cambio").Value = _TblEncabezado.Rows(0).Item("Valor_Dolar")
                        _New_Fila.Cells("Tasadorig").Value = _Tipo_Cambio_Det

                    End If

                    If _Vencida Then
                        _DescuentoPorc = 0
                    Else
                        _New_Fila.Cells("Precio").Value = _Precio
                    End If

                    _New_Fila.Cells("No_Aplica_Redondeo").Value = _No_Aplica_Redondeo

                    _New_Fila.Cells("Idmaeedo_Dori").Value = _Idmaeedo_Dori
                    _New_Fila.Cells("Idmaeddo_Dori").Value = _Idmaeddo_Dori

                    _New_Fila.Cells("Emprepa").Value = _Emprepa
                    _New_Fila.Cells("Tidopa").Value = _Tidopa
                    _New_Fila.Cells("Nudopa").Value = _Nudopa
                    _New_Fila.Cells("Endopa").Value = _Endopa
                    _New_Fila.Cells("Nulidopa").Value = _Nulidopa

                    _New_Fila.Cells("Observa").Value = Trim(_Observa)

                    Dim _Tipa_Mid = Mid(_Tidopa, 1, 1)
                    Dim _Tido_Mid = Mid(_Tido, 1, 1)

                    If _Tipa_Mid = "G" And _Tido_Mid <> "G" Then
                        _New_Fila.Cells("Lincondest").Value = False
                    End If

                    Dim _Operacion As String = String.Empty
                    If _Potencia > 0 Then _Operacion = "RECA"

                    _New_Fila.Cells("Potencia").Value = _Potencia
                    _New_Fila.Cells("Operacion").Value = _Operacion

                    _New_Fila.Cells("Id_Oferta").Value = _Id_Oferta
                    _New_Fila.Cells("Oferta").Value = _Oferta
                    _New_Fila.Cells("Es_Padre_Oferta").Value = _Es_Padre_Oferta
                    _New_Fila.Cells("Padre_Oferta").Value = _Padre_Oferta
                    _New_Fila.Cells("Hijo_Oferta").Value = _Hijo_Oferta
                    _New_Fila.Cells("Aplica_Oferta").Value = _Aplica_Oferta
                    _New_Fila.Cells("Cantidad_Oferta").Value = _Cantidad_Oferta
                    _New_Fila.Cells("Porcdesc_Oferta").Value = _Porcdesc_Oferta

                    If _Aplica_Oferta Then
                        _New_Fila.Cells("Operacion").Value = "ofer"
                    End If

                    Dim _Stock_desde_WMS As Boolean

                    Try
                        _Stock_desde_WMS = _New_Fila.Cells("Stock_desde_WMS").Value
                    Catch ex As Exception
                        _Stock_desde_WMS = False
                    End Try

                    Dim _DesdePickeo As Boolean
                    Dim _RtuVariable As Boolean = NuloPorNro(_New_Fila.Cells("RtuVariable").Value, False)

                    Try
                        _DesdePickeo = _Fila.Item("DesdePickeo")
                    Catch ex As Exception
                        _DesdePickeo = False
                    End Try

                    _New_Fila.Cells("RtuVariable").Value = _RtuVariable

                    If Not _Prct Then

                        If _DesdePickeo Then

                            _New_Fila.Cells("Cantidad").Value = _Cantidad
                            _New_Fila.Cells("CantUd1").Value = _Fila.Item("CantUd1_Pickea")
                            _New_Fila.Cells("CantUd2").Value = _Fila.Item("CantUd2_Pickea")

                            If _Fila.Item("TIPR") = "SSN" Then
                                _New_Fila.Cells("CantUd1").Value = _Cantidad
                                _New_Fila.Cells("CantUd2").Value = _Cantidad
                            End If

                        End If

                    End If

                    If _Stock_desde_WMS Then

                        Dim _Condicion_WMS As String = " Update #Paso1 Set Chk = 1 Where Idmaeddo_Reserva = " & _Idmaeddo_Dori

                        Dim _Tbl_Series_WMS As DataTable

                        Dim Fm As New Frm_Formulario_Stock_Desde_WMS_Seriados(_Ds_Matriz_Documentos, _New_Fila)
                        _Tbl_Series_WMS = Fm.Fx_Crear_Tabla_Series_WMS(_Condicion_WMS)

                        Dim _Cantidad_Reservada_WMS As Double = NuloPorNro(_Tbl_Series_WMS.Compute("Sum(Stock_Ud1)", "Chk = True"), 0)

                        Fm.Sb_Llenar_Tabla_Paso(_Id, _Tbl_Series_WMS)

                        If _Cantidad_Reservada_WMS <> _Cantidad Then

                            MessageBoxEx.Show(Me, "Producto: " & _Codigo & " - " & _Descripcion & Environment.NewLine & Environment.NewLine &
                              "Las cantidades reservadas anteriomente con este documento fueron utilizadas por otra nota de venta" & Environment.NewLine &
                              "Devera reservar nuevamente los productos con sus cantidades desde WMS", "VALIDACION",
                              MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, Me.TopMost)

                            Dim _Aceptar As Boolean

                            Fm.ShowDialog(Me)
                            _Aceptar = Fm.Pro_Aceptar
                            _Cantidad_Reservada_WMS = Fm.Pro_Cant_Ud1
                            Fm.Dispose()
                            If _Aceptar Then
                                _New_Fila.Cells("Cantidad").Value = _Cantidad
                            Else
                                _New_Fila.Cells("Cantidad").Value = 0
                            End If

                        End If

                        Fm.Dispose()

                    End If

                    Dim _NroDscto As Integer = 0

                    If _Prct Then ' Es Concepto

                        Dim _Campo As String
                        Dim _Campo_Bk As String
                        Dim _Total_Campo As Double

                        If _Tict = "R" Then
                            If ChkValores.Checked Then
                                _Campo = "VADTNELI"
                                _Campo_Bk = "ValNetoLinea"
                            Else
                                _Campo = "VADTBRLI"
                                _Campo_Bk = "ValBrutoLinea"
                            End If
                        ElseIf _Tict = "D" Then
                            If ChkValores.Checked Then
                                _Campo = "VADTNELI"
                            Else
                                _Campo = "VADTBRLI"
                            End If
                            _Campo_Bk = "DescuentoValor"
                        End If

                        Dim _Caprco1 As Double = _Fila.Item("CAPRCO1")
                        Dim _Caprad1 As Double = _Fila.Item("CAPRAD1")
                        Dim _Caprex1 As Double = _Fila.Item("CAPREX1")
                        Dim _Caprnc1 As Double = _Fila.Item("CAPRNC1")

                        _Total_Campo = _Caprco1 - (_Caprex1 + _Caprad1)

                        If _Tido = "GRD" And _Tidopa <> "BLV" Then
                            _Total_Campo = _Caprco1 - _Caprex1
                        End If

                        If _Tidopa = "BLV" And (_Tido = "NCV" Or _Tido = "GRD") Then

                            _Total_Campo = _Fila.Item("VADTBRLI")
                            Dim _ImpuestosLinea As Double = 1 + ((_Fila.Item("POIVLI") + _Fila.Item("POIMGLLI")) / 100)
                            _Total_Campo = Math.Round(_Total_Campo / _ImpuestosLinea, 2)
                            _DescuentoPorc = _Fila.Item("PODTGLLI")

                        End If

                        If _Tido = "NCV" And _Tidopa <> "BLV" Then
                            _Total_Campo = (_Caprex1 + _Caprad1) - _Caprnc1
                        End If

                        _New_Fila.Cells(_Campo_Bk).Value = _Total_Campo

                        Sb_Procesar_Datos_De_Grilla(_New_Fila, _Campo_Bk, False, False)

                        _New_Fila.Cells("DescuentoPorc").Value = _DescuentoPorc

                    Else

                        If _Precio > 0 Then

                            Dim _TblMaedtli As DataTable = Fx_Crea_Tabla_Con_Filtro(_Ds_Matriz_Documentos.Tables("Descuentos_Doc"), "Id = " & _Id, "Id")

                            Dim _Volver_A_Solicitar_Permiso_FCV_desde_NVV As Boolean = _Global_Row_Configuracion_General.Item("Volver_A_Solicitar_Permiso_FCV_desde_NVV")

                            If _Volver_A_Solicitar_Permiso_FCV_desde_NVV Then
                                _CodFunAutoriza = "xyz"
                            End If

                            If String.IsNullOrEmpty(_CodFunAutoriza) Then
                                _CodFunAutoriza = _CodVendedor
                            End If

                            _New_Fila.Cells("CodFunAutoriza").Value = _CodFunAutoriza

                            Sb_Procesar_Datos_De_Grilla(_New_Fila, "Cantidad", False, False)

                            If _Lista_de_precios_de_proveedores Then

                                If Not CBool(_TblMaedtli.Rows.Count) Then

                                    Sb_Traer_Descuentos_Seteados_Desde_Lista(_New_Fila)

                                End If

                            Else

                                Dim _ValNetoLinea As Double = _New_Fila.Cells("ValNetoLinea").Value
                                Dim _ValBrutoLinea As Double = _New_Fila.Cells("ValBrutoLinea").Value

                                Dim _DescuentoValor As Double = 0

                                If _DescuentoPorc > 0 Then

                                    Eliminar_Campos(_Ds_Matriz_Documentos.Tables("Descuentos_Doc"), _Id)

                                    Dim _Podt As Double
                                    Dim _Vadt As Double
                                    Dim _Kodt As String

                                    If CBool(_TblMaedtli_Origen.Rows.Count) Then

                                        For Each _Fila_Dscto As DataRow In _TblMaedtli_Origen.Rows

                                            Dim _Idmaeedo_Dscto = _Fila_Dscto.Item("IDMAEEDO")
                                            Dim _Nulido_Dscto = _Fila_Dscto.Item("NULIDO")

                                            If _Nulido = _Nulido_Dscto And (_Idmaeedo_Dori = _Idmaeedo_Dscto Or _Conservar_Nudo) Then

                                                _Podt = NuloPorNro(_Fila_Dscto.Item("PODT"), 0)
                                                _Vadt = 0 ' NuloPorNro(_Fila_Dscto.Item("VADT"), 0)
                                                _Kodt = _Fila_Dscto.Item("KODT")

                                                If _Podt > 0 Then

                                                    If ChkValores.Checked Then
                                                        _Vadt = Math.Round((_Podt / 100) * _ValNetoLinea, 1)
                                                        If Chk_Redondear_Cero.Checked Then _Vadt = Fx_Redondeo_Descuento(_Vadt, Chk_Redondear_Cero.Checked)
                                                        _Podt = Math.Round((_Vadt / _ValNetoLinea) * 100, 5)
                                                        _ValNetoLinea -= _Vadt
                                                    Else
                                                        _Vadt = Math.Round((_Podt / 100) * _ValBrutoLinea)
                                                        If Chk_Redondear_Cero.Checked Then _Vadt = Fx_Redondeo_Descuento(_Vadt, Chk_Redondear_Cero.Checked)
                                                        _Podt = Math.Round((_Vadt / _ValBrutoLinea) * 100, 5)
                                                        _ValBrutoLinea -= _Vadt
                                                    End If

                                                    _DescuentoValor += _Vadt

                                                    Dim NewFila As DataRow
                                                    NewFila = _Ds_Matriz_Documentos.Tables("Descuentos_Doc").NewRow
                                                    With NewFila
                                                        .Item("Id") = _Id
                                                        .Item("Podt") = _Podt
                                                        .Item("Vadt") = _Vadt
                                                        .Item("Podt_Original") = _Podt
                                                        _Ds_Matriz_Documentos.Tables("Descuentos_Doc").Rows.Add(NewFila)
                                                    End With

                                                    _NroDscto += 1

                                                End If

                                            End If

                                        Next

                                    Else

                                        Try
                                            _Podt = NuloPorNro(_Fila.Item("PODTGLLI"), 0)
                                        Catch ex As Exception
                                            _Podt = NuloPorNro(_Fila.Item("Desc1"), 0)
                                        End Try

                                        _Vadt = 0
                                        _Kodt = "D_SIN_TIPO"

                                        If ChkValores.Checked Then

                                            _Vadt = Math.Round((_Podt / 100) * _ValNetoLinea, 1)
                                            If Chk_Redondear_Cero.Checked Then _Vadt = Fx_Redondeo_Descuento(_Vadt, Chk_Redondear_Cero.Checked)
                                            _Podt = Math.Round((_Vadt / _ValNetoLinea) * 100, 5)
                                            _ValNetoLinea -= _Vadt

                                        Else

                                            _Vadt = Math.Round((_Podt / 100) * _ValBrutoLinea)
                                            If Chk_Redondear_Cero.Checked Then _Vadt = Fx_Redondeo_Descuento(_Vadt, Chk_Redondear_Cero.Checked)
                                            _Podt = Math.Round((_Vadt / _ValBrutoLinea) * 100, 5)
                                            _ValBrutoLinea -= _Vadt

                                        End If

                                        _DescuentoValor += _Vadt

                                        Dim NewFila As DataRow
                                        NewFila = _Ds_Matriz_Documentos.Tables("Descuentos_Doc").NewRow
                                        With NewFila
                                            .Item("Id") = _Id
                                            .Item("Podt") = _Podt
                                            .Item("Vadt") = _Vadt
                                            .Item("Podt_Original") = _Podt
                                            _Ds_Matriz_Documentos.Tables("Descuentos_Doc").Rows.Add(NewFila)
                                        End With

                                        _NroDscto = 1

                                    End If

                                End If

                                _DescuentoValor = Math.Round(_DescuentoValor, 0)

                                _New_Fila.Cells("DescuentoValor").Value = _DescuentoValor
                                _New_Fila.Cells("NroDscto").Value = _NroDscto

                                If CBool(_DescuentoValor) Then Sb_Procesar_Datos_De_Grilla(_New_Fila, "DescuentoValor", False, False)

                            End If

                        End If

                    End If

                    _Contador += 1

                    If _Contador <> _TblMaeddo_Origen.Rows.Count Then
                        Sb_Nueva_Linea(_CodLista)
                    End If

                End If

            Next

            Sb_Borrar_Lineas_En_Blanco()

            If _Contador = 0 Then _Contador = 1

            Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(_Contador - 1).Cells("Codigo")

            _Doc_Rescatado = True

            Dim _Idmaeedo_Dorigen = _TblMaeddo_Origen.Rows(0).Item("IDMAEEDO")
            Dim _Tido_Dorigen = _TblMaeddo_Origen.Rows(0).Item("TIDO")

            Dim _Vizado = 0
            Dim _No_Visar As Boolean

            _TblEncabezado.Rows(0).Item("Vizado") = False

            If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta And Not _Post_Venta Then

                Dim _Volver_A_Solicitar_Permiso_FCV_desde_NVV As Boolean = _Global_Row_Configuracion_General.Item("Volver_A_Solicitar_Permiso_FCV_desde_NVV")

                If (_Tido <> "NCV" And _Tido <> "NVV") And (Not _Volver_A_Solicitar_Permiso_FCV_desde_NVV And _Tido_Dorigen = "NVV") Then

                    Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Remotas Where Idmaeedo = " & _Idmaeedo_Dorigen & " And Eliminada = 0 "
                    Dim _Tbl_Remotas As DataTable

                    If CBool(_Idmaeedo_Dorigen) Then

                        _Tbl_Remotas = _Sql.Fx_Get_DataTable(Consulta_sql, _Mostrar_Error)

                        For Each _FilaR As DataRow In _Tbl_Remotas.Rows

                            Dim _CodPermiso = _FilaR.Item("CodPermiso")
                            Dim _CodFuncionario_Autoriza = _FilaR.Item("CodFuncionario_Autoriza")
                            Dim _NomFuncionario_Autoriza = Trim(_Sql.Fx_Trae_Dato("TABFU", "NOKOFU", "KOFU = '" & _CodFuncionario_Autoriza & "'", _Mostrar_Error))
                            Dim _NroRemota = _FilaR.Item("NroRemota")

                            If (_CodPermiso = "Bkp00019" Or _CodPermiso = "Doc00103") And _Volver_A_Solicitar_Permiso_FCV_desde_NVV Then
                                _CodPermiso = "XXX"
                            End If

                            Dim _RowFlPer As DataRow() = _TblPermisos.Select("CodPermiso = '" & _CodPermiso & "'")

                            If Convert.ToBoolean(_RowFlPer.Count) Then

                                Dim _FlPer2 As DataRow = _RowFlPer(0)

                                Dim _CodPermiso_Ot = _FlPer2.Item("CodPermiso")
                                _FlPer2.Item("Necesita_Permiso") = True
                                _FlPer2.Item("Autorizado") = True
                                _FlPer2.Item("CodFuncionario_Autoriza") = _CodFuncionario_Autoriza
                                _FlPer2.Item("NomFuncionario_Autoriza") = _NomFuncionario_Autoriza
                                _FlPer2.Item("NroRemota") = _NroRemota
                                _FlPer2.Item("Solicitado_Por_Cadena") = True

                                _Vizado += 1

                            End If

                        Next

                        _TblEncabezado.Rows(0).Item("Vizado") = CBool(_Vizado)

                        Sb_Actualizar_Permisos_Necesarios_Del_Documento_New()

                    End If

                End If

            End If

            Dim _Ven_Distinto As Boolean = False

            For Each _Fila As DataRow In _TblDetalle.Rows

                Dim _CodFuncionario = _Fila.Item("CodFuncionario").ToString.Trim
                Dim _Idmaeddo_Dori = _Fila.Item("Idmaeddo_Dori")

                For Each _Fila_Dori As DataRow In _TblMaeddo_Origen.Rows

                    Dim _Idmaeddo = _Fila_Dori.Item("IDMAEDDO")
                    Dim _Kofulido = _Fila_Dori.Item("KOFULIDO").ToString.Trim

                    If _Idmaeddo = _Idmaeddo_Dori Then

                        If _Kofulido <> _CodFuncionario Then
                            _Ven_Distinto = True
                        End If

                        Exit For

                    End If

                Next

                If _Ven_Distinto Then
                    Exit For
                End If

            Next

            If _TblDetalle.Rows.Count = 1 And _Solo_Detalle_Bodegas_Con_Permiso_Usuario Then
                If _TblDetalle.Rows(0).Item("Nuevo_Producto") Then
                    MessageBoxEx.Show(Me, "Documento se encuentra cerrado completamente para la bodega de esta sucursal", "Documento cerrado",
                                      MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                End If
            End If

            If _Ven_Distinto Then
                MessageBoxEx.Show(Me, "¡Se encontraron filas que no coinciden con el código original del vendedor!", "Validación",
                                                        MessageBoxButtons.OK, MessageBoxIcon.Stop)
            End If

            Dim _Filad = Grilla_Detalle.Rows(0)


            If _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Configuracion", "ListaDesdeSustentatorio", _Mostrar_Error) Then
                If _Global_Row_Configuracion_General.Item("ListaDesdeSustentatorio") Then
                    If _Tido = "GDV" Or _Tido = "FCV" Or _Tido = "BLV" Then
                        _TblEncabezado.Rows(0).Item("ListaPrecios") = _CodLista
                    End If
                End If
            End If

            If _Tido <> "NCV" And _Tido <> "GRD" Then
                Sb_Recalcular_Descuentos(_Filad, False, False)
            End If

            If _ModFechVto Then

                'Dim _FechaEmision As Date = _TblEncabezado.Rows(0).Item("FechaEmision")

                _FechaEmision = DateAdd(DateInterval.Day, _ModFechVto_Dias1erVenci, _FechaEmision)
                _TblEncabezado.Rows(0).Item("Fecha_1er_Vencimiento") = _FechaEmision
                _TblEncabezado.Rows(0).Item("FechaUltVencimiento") = _FechaEmision
                _TblEncabezado.Rows(0).Item("Cuotas") = 0
                _TblEncabezado.Rows(0).Item("Dias_1er_Vencimiento") = _ModFechVto_Dias1erVenci
                _TblEncabezado.Rows(0).Item("Dias_Vencimiento") = _ModFechVto_Dias1erVenci

                MessageBoxEx.Show(Me, "Se cambia la fecha de vencimiento del documento a : " & FormatDateTime(_FechaEmision, DateFormat.ShortDate),
                                  "Concepto especial", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)

            End If

            If _Tido = "NVV" And _Cl_DocListaSuperior.UsarVencListaPrecios Then

                If CBool(_Cl_DocListaSuperior.LsDetalleLpSuperior.Count) Then
                    If _TblDetalle.Rows(0).Item("CodLista").ToString.Trim = _Cl_DocListaSuperior.LsDetalleLpSuperior.Item(0).Lista.ToString.Trim Then
                        _Cl_DocListaSuperior.ListaSuperiorUtilizada = True
                    End If
                End If

            End If


            Sb_Marcar_Grilla()
            Sb_Revisar_Si_Hay_Archivos_Adjuntos()

        Catch ex As Exception
            _Doc_Rescatado = False
            If Not _Facturacion_Automatica Then
                MsgBox(ex.Message)
            End If
        Finally
            Me.Enabled = True
        End Try

    End Sub

    Function Fx_Validar_Fecha_Emision_Encabezado_Detalle() As Boolean

        Dim _Fecha_Actual As Date = FormatDateTime(Now, DateFormat.ShortDate)
        Dim _FechaEmision As Date = FormatDateTime(_TblEncabezado.Rows(0).Item("FechaEmision"), DateFormat.ShortDate)

        Dim _Preguntar As Boolean
        Dim _Msg = String.Empty

        Consulta_sql = "Select Top 1 * From TABTIDO Where TIDO = '" & _Tido & "'"
        Dim _Row_Tabtido As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        Dim _Signo = String.Empty
        Dim _Fiad As Integer = _Row_Tabtido.Item("FIAD")
        Dim _Fico As Integer = _Row_Tabtido.Item("FICO")

        If CBool(_Fiad) Or CBool(_Fico) Then
            _Msg = "El documento implica movimiento físico y la fecha no es del día actual." & Environment.NewLine
        End If

        For Each _Fila As DataRow In _TblDetalle.Rows

            If _Tido = "OCC" Or _Tido = "COV" Or _Tido = "NVV" Or _Tido = "NVI" Then
                _Fila.Item("FechaEmision") = _FechaEmision
            End If

            Dim _FechaEmision_Fila As Date = _Fila.Item("FechaEmision")

            Dim _Fenc = _FechaEmision.ToShortDateString
            Dim _Fdet = _FechaEmision_Fila.ToShortDateString

            If _Fenc <> _Fdet Then
                _Preguntar = True
                Exit For
            End If

        Next

        If Not _Preguntar Then
            Return True
        End If

        Dim Chk_Grabar_Fecha_Actual As New Command
        Chk_Grabar_Fecha_Actual.Checked = False
        Chk_Grabar_Fecha_Actual.Name = "Chk_Grabar_Fecha_Actual"
        Chk_Grabar_Fecha_Actual.Text = "Grabar el documento indicando la fecha actual " & Environment.NewLine & "en las líneas (" & _Fecha_Actual & ")"

        Dim Chk_Fecha_Encabezado As New Command
        Chk_Fecha_Encabezado.Checked = False
        Chk_Fecha_Encabezado.Name = "Chk_Fecha_Encabezado_En_Lineas"
        Chk_Fecha_Encabezado.Text = "Poner igualmente la fecha del documento " & Environment.NewLine & "en las líneas (" & _FechaEmision & ")"

        Dim Chk_Fecha_Dejar_Tal_Cual As New Command
        Chk_Fecha_Dejar_Tal_Cual.Checked = False
        Chk_Fecha_Dejar_Tal_Cual.Visible = (_Tido = "GDV" And Not _TblEncabezado.Rows(0).Item("Es_Electronico"))
        Chk_Fecha_Dejar_Tal_Cual.Name = "Chk_Fecha_Dejar_Tal_Cual"
        Chk_Fecha_Dejar_Tal_Cual.Text = "Dejar el documento así tal cual esta " & Environment.NewLine & " (Recomendado para GDV ""virtual"")"

        Dim _Opciones() As Command = {Chk_Fecha_Dejar_Tal_Cual, Chk_Grabar_Fecha_Actual, Chk_Fecha_Encabezado}

        Dim _Info As New TaskDialogInfo("Validación de fechas",
                              eTaskDialogIcon.Bulb,
                              "Fechas de encabezado y detalle no coinciden.",
                              _Msg &
                              "Marque su opción",
                              eTaskDialogButton.Ok + eTaskDialogButton.Cancel _
                              , eTaskDialogBackgroundColor.Red, _Opciones, Nothing, Nothing, Nothing, Nothing)

        Dim _Redultado As eTaskDialogResult = TaskDialog.Show(_Info)

        If _Redultado = eTaskDialogResult.Ok Then

            Dim _Fecha As Date

            If Chk_Grabar_Fecha_Actual.Checked Then
                _Fecha = _Fecha_Actual
            ElseIf Chk_Fecha_Encabezado.Checked Then
                _Fecha = _FechaEmision
            ElseIf Chk_Fecha_Dejar_Tal_Cual.Checked Then
                Return True
            Else
                MessageBoxEx.Show(Me, "No se selecciono ninguna opción", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                Return False
            End If

            For Each _Fila As DataRow In _TblDetalle.Rows
                _Fila.Item("FechaEmision") = _Fecha
            Next

            Return True

        End If

    End Function

    Function Fx_Valor_Descuento_De_La_Linea(_Podt As Double, _Precio As Double, _Redondear_Dscto As Boolean) As Double

        'Sb_Sumar_Totales()

        '_Valor = _Precio - _Total_Descuento
        Dim _Vadt As Double

        If _Podt > 0 Then

            _Vadt = Math.Round((_Podt / 100) * _Precio, 1)

            If _Redondear_Dscto Then _Vadt = Fx_Redondeo_Descuento(_Vadt, _Redondear_Dscto)

            _Podt = Math.Round((_Vadt / _Precio) * 100, 5)

        Else

            _Vadt = 0

        End If

        Return _Vadt

    End Function

    Private Function Fx_Row_Permiso_Remoto(_Id_Enc As Integer, _CodPermiso As String) As DataRow

        Consulta_sql = "Select Id_Enc,Id_Det,Isnull(Rm.CodFuncionario_Autoriza,'') As CodFuncionario_Autoriza,
                        Rd.Nro_RCadena,Orden,Rd.CodPermiso,Descripcion,Rd.NroRemota,New_Id_DocEnc
                        From " & _Global_BaseBk & "Zw_Remotas_En_Cadena_02_Det Rd
                        Left Join " & _Global_BaseBk & "Zw_Remotas Rm On Rd.NroRemota = Rm.NroRemota
                        Where Id_Enc = " & _Id_Enc & " And Rd.CodPermiso = '" & _CodPermiso & "'"

        Fx_Row_Permiso_Remoto = _Sql.Fx_Get_DataRow(Consulta_sql)

    End Function

    Sub Sb_Insertar_Filas_De_Documento_Relacionado(_Fila As DataRow,
                                                   _Index_Fila As Integer,
                                                   _Mantener_bodega_origen As Boolean,
                                                   _Vencida As Boolean)

        Dim _Codigo As String = _Fila.Item("KOPRCT").ToString

        Consulta_sql = "Select Top 1 * From MAEPR Where KOPR = '" & _Codigo & "'"
        Dim _RowProducto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        Dim _Cantidad As Double = _Fila.Item("Cantidad")

        Dim _UnTrans As Integer = _Fila.Item("UDTRPR")
        Dim _Precio As Double = _Fila.Item("Precio")
        Dim _Potencia As Double '=_Fila.Item("POTENCIA")

        Dim _Idmaeddo_Dori As String
        Dim _Idmaeedo_Dori As String
        Dim _CantUd1_Dori As Double
        Dim _CantUd2_Dori As Double


        _Idmaeddo_Dori = _Fila.Item("IDMAEDDO")
        _Idmaeedo_Dori = _Fila.Item("IDMAEEDO")
        _CantUd1_Dori = _Fila.Item("CantUd1_Dori")
        _CantUd2_Dori = _Fila.Item("CantUd2_Dori")
        _Potencia = _Fila.Item("POTENCIA")

        Try
            _CodVendedor = _Fila.Item("KOFULIDO")
        Catch ex As Exception
            _CodVendedor = FUNCIONARIO
        End Try


        Dim _Tidopa As String = _Fila.Item("TIDO")
        Dim _Nudopa As String = _Fila.Item("NUDO")

        Dim _Observa As String = _Fila.Item("OBSERVA")
        Dim _DescuentoPorc As Double

        Try
            _DescuentoPorc = _Fila.Item("PODTGLLI")
        Catch ex As Exception
            _DescuentoPorc = 0
        End Try


        Dim _New_Fila As DataGridViewRow = Grilla_Detalle.Rows(_Index_Fila)

        Sb_Traer_Producto_Grilla(_New_Fila, _RowProducto, True)

        Dim _Empresa As String
        Dim _Sucursal As String
        Dim _Bodega As String

        'If String.IsNullOrEmpty(_Tido_Origen) Then
        '_Empresa = ModEmpresa_Doc
        '_Sucursal = Mod_Sucursal
        '_Bodega = Mod_Bodega
        'Else
        _Empresa = _Fila.Item("EMPRESA")
        _Sucursal = _Fila.Item("SULIDO")
        _Bodega = _Fila.Item("BOSULIDO")
        'End If

        Dim _Suc_Bod_Ori As String = Trim(_Sucursal) & Trim(_Bodega)
        Dim _Suc_Bod_Act As String = Trim(Mod_Sucursal) & Trim(Mod_Bodega)


        If _Suc_Bod_Ori <> _Suc_Bod_Act Then
            Dim _Permiso = "Bo" & _Empresa & _Sucursal & _Bodega
            If _Mantener_bodega_origen Then
                If Fx_Tiene_Permiso(Me, _Permiso, , False) Then
                    _New_Fila.Cells("Sucursal").Value = _Sucursal
                    _New_Fila.Cells("Bodega").Value = _Bodega
                Else
                    MessageBoxEx.Show(Me, "Se mantiene la bodega " & Mod_Bodega,
                                      "No puede usar bodega " & _Bodega,
                                      MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                End If
            End If
        End If

        Dim _Id As Integer = _New_Fila.Cells("Id").Value
        Dim _Descripcion As String = _New_Fila.Cells("Descripcion").Value

        _New_Fila.Cells("CodFuncionario").Value = _CodVendedor
        _New_Fila.Cells("CodVendedor").Value = _CodVendedor
        _New_Fila.Cells("Codigo").Value = _Codigo
        _New_Fila.Cells("Cantidad").Value = _Cantidad

        _New_Fila.Cells("CantUd1_Dori").Value = _CantUd1_Dori
        _New_Fila.Cells("CantUd2_Dori").Value = _CantUd2_Dori

        Dim _Precio_Old As Double = _New_Fila.Cells("Precio").Value

        If _Vencida Then
            _DescuentoPorc = 0
        Else
            _New_Fila.Cells("Precio").Value = _Precio
        End If

        _New_Fila.Cells("Idmaeedo_Dori").Value = _Idmaeedo_Dori
        _New_Fila.Cells("Idmaeddo_Dori").Value = _Idmaeddo_Dori

        _New_Fila.Cells("Tidopa").Value = _Tidopa
        _New_Fila.Cells("Nudopa").Value = _Nudopa
        _New_Fila.Cells("Observa").Value = _Observa

        Dim _Operacion As String = String.Empty
        If _Potencia > 0 Then _Operacion = "RECA"

        _New_Fila.Cells("Potencia").Value = _Potencia
        _New_Fila.Cells("Operacion").Value = _Operacion

        Dim _Stock_desde_WMS As Boolean

        Try
            _Stock_desde_WMS = _New_Fila.Cells("Stock_desde_WMS").Value
        Catch ex As Exception
            _Stock_desde_WMS = False
        End Try

        If _Stock_desde_WMS Then

            Dim _Condicion_WMS As String = " Update #Paso1 Set Chk = 1 Where Idmaeddo_Reserva = " & _Idmaeddo_Dori

            Dim _Tbl_Series_WMS As DataTable

            Dim Fm As New Frm_Formulario_Stock_Desde_WMS_Seriados(_Ds_Matriz_Documentos, _New_Fila)
            _Tbl_Series_WMS = Fm.Fx_Crear_Tabla_Series_WMS(_Condicion_WMS)

            Dim _Cantidad_Reservada_WMS As Double = NuloPorNro(_Tbl_Series_WMS.Compute("Sum(Stock_Ud1)", "Chk = True"), 0)

            Fm.Sb_Llenar_Tabla_Paso(_Id, _Tbl_Series_WMS)

            If _Cantidad_Reservada_WMS <> _Cantidad Then

                MessageBoxEx.Show(Me, "Producto: " & _Codigo & " - " & _Descripcion & Environment.NewLine & Environment.NewLine &
                                  "Las cantidades reservadas anteriomente con este documento fueron utilizadas por otra nota de venta" & Environment.NewLine &
                                  "Devera reservar nuevamente los productos con sus cantidades desde WMS", "VALIDACION",
                                  MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, Me.TopMost)

                Dim _Aceptar As Boolean

                Fm.ShowDialog(Me)
                _Aceptar = Fm.Pro_Aceptar
                _Cantidad_Reservada_WMS = Fm.Pro_Cant_Ud1
                Fm.Dispose()
                If _Aceptar Then
                    _New_Fila.Cells("Cantidad").Value = _Cantidad
                Else
                    _New_Fila.Cells("Cantidad").Value = 0
                End If

            End If

            Fm.Dispose()

        End If

        If _Precio > 0 Then
            Sb_Procesar_Datos_De_Grilla(_New_Fila, "Cantidad", True, True)
            If _DescuentoPorc > 0 Then
                _New_Fila.Cells("DescuentoPorc").Value = Math.Round(_DescuentoPorc, 2)
                Sb_Procesar_Datos_De_Grilla(_New_Fila, "DescuentoPorc", False, True)
            End If
        End If


    End Sub

#End Region

    Public Sub Sb_Crear_Documento_Interno_Con_Tabla(_Formulario As Form,
                                                    _Tbl_Detalle_Externo As DataTable,
                                                    _FechaEmision As Date,
                                                    _Campo_Codigo As String,
                                                    _Campo_Cantidad As String,
                                                    _Campo_Precio As String,
                                                    _Observaciones As String,
                                                    _Aplica_Descuentos As Boolean,
                                                    _Aplicar_Precio_De_Listas As Boolean,
                                                    Optional _NroDocumento As String = "",
                                                    Optional _AgregarDscotSeteados As Boolean = False,
                                                    Optional _Progreso_Porc As Object = Nothing,
                                                    Optional _Progreso_Cont As Object = Nothing,
                                                    Optional _CantLineas As Integer = 0,
                                                    Optional _LblEstatus As Object = Nothing,
                                                    Optional _MarcarGrilla As Boolean = True,
                                                    Optional _Revisar_Descuentos As Boolean = True,
                                                    Optional _FechaRecepcion As Date? = Nothing,
                                                    Optional _Cambiar_Vendedor As Boolean = True,
                                                    Optional _Conservar_Lista_Entidad As Boolean = False)

        _TblObservaciones.Rows(0).Item("Observaciones") = _Observaciones

        Dim _Kolt As String = String.Empty

        If _Conservar_Lista_Entidad Then
            _Kolt = _RowEntidad.Item("LVEN").ToString.Replace("TABPP", "")
        End If

        Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, False, False, _Cambiar_Vendedor)

        If _Conservar_Lista_Entidad Then

            _TblEncabezado.Rows(0).Item("ListaPrecios") = _Kolt
            _TblDetalle.Rows(0).Item("CodLista") = _Kolt

            Consulta_sql = "Select * From TABPP Inner Join TABMO On MOLT = KOMO Where KOLT = '" & _Kolt & "'"
            Dim _RowMoneda_Det = _Sql.Fx_Get_DataRow(Consulta_sql)

            _TblDetalle.Rows(0).Item("CodLista") = _RowMoneda_Det.Item("KOLT")
            _TblDetalle.Rows(0).Item("Moneda") = _RowMoneda_Det.Item("KOMO")
            _TblDetalle.Rows(0).Item("Tipo_Cambio") = _RowMoneda_Det.Item("VAMO")
            _TblDetalle.Rows(0).Item("Tipo_Moneda") = _RowMoneda_Det.Item("TIMO")
            _TblDetalle.Rows(0).Item("Tasadorig") = _TblEncabezado.Rows(0).Item("Tasadorig_Doc")

        End If

        Dim _TipoValor = _Sql.Fx_Trae_Dato("TABTIDO", "MEARDO", "TIDO = '" & _Tido & "'")

        If _TipoValor = "N" Then
            ChkValores.Checked = True
        ElseIf _TipoValor = "B" Then
            ChkValores.Checked = False
        End If

        If Not String.IsNullOrEmpty(_NroDocumento) Then
            _TblEncabezado.Rows(0).Item("NroDocumento") = _NroDocumento
        End If

        'If IsNothing(_FechaRecepcion) Then
        '    _FechaRecepcion = _FechaEmision
        'End If

        If Not _FechaRecepcion.HasValue OrElse _FechaRecepcion.Value = Date.MinValue Then
            _FechaRecepcion = _FechaEmision
        End If

        _TblEncabezado.Rows(0).Item("FechaEmision") = _FechaEmision
        _TblEncabezado.Rows(0).Item("Fecha_1er_Vencimiento") = _FechaEmision
        _TblEncabezado.Rows(0).Item("FechaUltVencimiento") = _FechaEmision
        _TblEncabezado.Rows(0).Item("FechaRecepcion") = _FechaRecepcion
        _TblEncabezado.Rows(0).Item("FechaMaxRecepcion") = _FechaEmision
        _TblEncabezado.Rows(0).Item("Cuotas") = 0
        _TblEncabezado.Rows(0).Item("Dias_1er_Vencimiento") = 0
        _TblEncabezado.Rows(0).Item("Dias_Vencimiento") = 0
        _TblObservaciones.Rows(0).Item("Forma_pago") = String.Empty

        Dim _CodLista = _TblEncabezado.Rows(0).Item("ListaPrecios")

        Dim _Contador = 0
        Dim _Cont_Filas = 0

        Dim tiempoPorProducto As Double

        For Each Fila As DataRow In _Tbl_Detalle_Externo.Rows

            Dim _Codigo As String = Fila.Item(_Campo_Codigo).ToString
            Dim _Descripcion As String
            Dim _Prct As Boolean

            Try
                _Prct = Fila.Item("Prct")
            Catch ex As Exception
                _Prct = False
            End Try

            Dim _RowProducto As DataRow
            Dim _RowConcepto As DataRow

            If _Prct Then

                Consulta_sql = "Select Top 1 * From TABCT Where KOCT = '" & _Codigo & "'"
                _RowConcepto = _Sql.Fx_Get_DataRow(Consulta_sql)

                _Descripcion = _RowConcepto.Item("NOKOCT").ToString.Trim

            Else

                Consulta_sql = "Select Top 1 * From MAEPR Where KOPR = '" & _Codigo & "'"
                _RowProducto = _Sql.Fx_Get_DataRow(Consulta_sql)

                _Descripcion = _RowProducto.Item("NOKOPR").ToString.Trim

            End If

            Dim _Cantidad As Double = Fila.Item(_Campo_Cantidad)

            If _Codigo = "7801620009694" Then
                Dim a = 0
            End If

            If CBool(_Cantidad) Then

                ' Iniciar el cronómetro
                Dim stopwatch As Stopwatch = System.Diagnostics.Stopwatch.StartNew()

                Dim _UnTrans As Integer = 1
                Dim _Precio As Double = Fila.Item(_Campo_Precio)

                Dim _Observa As String
                Dim _DescuentoPorc As Double

                If _Aplica_Descuentos Then

                    Dim _Desc1 As Double = Fila.Item("Desc1")
                    Dim _Desc2 As Double = Fila.Item("Desc2")
                    Dim _Desc3 As Double = Fila.Item("Desc3")
                    Dim _Desc4 As Double = Fila.Item("Desc4")
                    Dim _Desc5 As Double = Fila.Item("Desc5")

                    _DescuentoPorc = 100 * (1 - ((1 - (_Desc1 / 100.0)) *
                                                      (1 - (_Desc2 / 100.0)) *
                                                      (1 - (_Desc3 / 100.0)) *
                                                      (1 - (_Desc4 / 100.0)) *
                                                      (1 - (_Desc5 / 100.0))))

                    _DescuentoPorc = Math.Round(_DescuentoPorc, 2)

                Else
                    _DescuentoPorc = 0
                End If

                Dim _New_Fila As DataGridViewRow = Grilla_Detalle.Rows(_Cont_Filas)

                _New_Fila.Cells("FechaEmision").Value = _FechaEmision

                If _Prct Then
                    Sb_Agregar_Concepto(_New_Fila, _RowConcepto)
                Else
                    Sb_Traer_Producto_Grilla(_New_Fila, _RowProducto, True)
                End If

                Dim _Sucursal As String
                Dim _Bodega As String

                Try
                    _Sucursal = Fila.Item("Sucursal")
                    _New_Fila.Cells("Sucursal").Value = _Sucursal
                Catch ex As Exception

                End Try

                Try
                    _Bodega = Fila.Item("Bodega")
                    _New_Fila.Cells("Bodega").Value = _Bodega
                Catch ex As Exception

                End Try

                _New_Fila.Cells("Codigo").Value = _Codigo
                _New_Fila.Cells("Cantidad").Value = _Cantidad

                Dim _Precio_Old As Double = _New_Fila.Cells("Precio").Value

                If Not _Aplicar_Precio_De_Listas Then
                    _New_Fila.Cells("Precio").Value = _Precio
                End If

                If _New_Fila.Cells("Precio").Value = 0 Then
                    _New_Fila.Cells("Precio").Value = 1
                End If

                _New_Fila.Cells("Observa").Value = _Observa

                _New_Fila.Cells("Potencia").Value = 0
                _New_Fila.Cells("Operacion").Value = String.Empty

                Try
                    _New_Fila.Cells("CodFuncionario").Value = Fila.Item("Kofulido")
                Catch ex As Exception

                End Try

                If _New_Fila.Cells("Precio").Value > 0 Then

                    If _Prct Then

                        Dim _Campo
                        Dim _Campo_Bk

                        If ChkValores.Checked Then
                            _Campo = "VADTNELI"
                            _Campo_Bk = "ValNetoLinea"
                        Else
                            _Campo = "VADTBRLI"
                            _Campo_Bk = "ValBrutoLinea"
                        End If

                        _New_Fila.Cells("Cantidad").Value = 0
                        _New_Fila.Cells("Precio").Value = 0
                        _New_Fila.Cells(_Campo_Bk).Value = _Precio

                        Sb_Procesar_Datos_De_Grilla(_New_Fila, _Campo_Bk, False, False, True)

                    Else

                        Sb_Procesar_Datos_De_Grilla(_New_Fila, "Cantidad", False, False, , _Revisar_Descuentos)

                        If _DescuentoPorc > 0 Then
                            _New_Fila.Cells("DescuentoPorc").Value = Math.Round(_DescuentoPorc, 2)
                            Sb_Procesar_Datos_De_Grilla(_New_Fila, "DescuentoPorc", False, False, , _Revisar_Descuentos)
                        Else

                            If _AgregarDscotSeteados Then
                                Sb_Agregar_DsctoSeteadoPorLinea(_New_Fila)
                            End If

                        End If

                    End If

                End If

                Sb_Nueva_Linea(_CodLista)

                _Cont_Filas += 1

                stopwatch.Stop()
                Dim aa = stopwatch.ElapsedMilliseconds

                tiempoPorProducto = aa / 1000.0

            End If

            ' Define el tiempo estimado por producto en segundos
            tiempoPorProducto = 0.333

            ' Calcula el número de productos restantes
            Dim productosRestantes As Integer = _CantLineas - _Contador

            ' Calcula el tiempo restante en segundos
            Dim tiempoRestante As Integer = productosRestantes * tiempoPorProducto

            '' Muestra el tiempo restante en una etiqueta (Label)
            'If Not IsNothing(_LblTiempoRestante) Then
            '    _LblTiempoRestante.Text = "Tiempo restante: " & tiempoRestante.ToString() & " segundos"
            'End If
            ' Crear un TimeSpan a partir del tiempo en segundos
            Dim tiempo As TimeSpan = TimeSpan.FromSeconds(tiempoRestante)

            ' Obtener horas, minutos y segundos
            Dim horas As Integer = tiempo.Hours
            Dim minutos As Integer = tiempo.Minutes
            Dim segundos As Integer = tiempo.Seconds


            If Not IsNothing(_LblEstatus) Then
                System.Windows.Forms.Application.DoEvents()
                _LblEstatus.Text = "Tiempo restante: " & tiempo.ToString() & ", Producto: " & _Codigo.ToString.Trim & ", " & _Descripcion
            End If

            If Not IsNothing(_Progreso_Porc) AndAlso Not IsNothing(_Progreso_Cont) AndAlso CBool(_CantLineas) Then

                System.Windows.Forms.Application.DoEvents()
                _Progreso_Porc.Value = ((_Contador * 100) / _CantLineas)
                _Progreso_Cont.Value += 1

            End If

            _Contador += 1

            If Cancelar Then
                Return
            End If

        Next

        If _MarcarGrilla Then
            Sb_Marcar_Grilla()
        End If

    End Sub

    Public Sub Sb_Crear_Documento_Interno_Con_Tabla_PDARandomMovil(_Tbl_Detalle_Externo As DataTable,
                                                                   _FechaEmision As Date,
                                                                   _Campo_Codigo As String,
                                                                   _Campo_Cantidad As String,
                                                                   _Campo_Precio As String,
                                                                   _Observaciones As String,
                                                                   _Aplica_Descuentos As Boolean,
                                                                   _Aplicar_Precio_De_Listas As Boolean,
                                                                   Optional _NroDocumento As String = "",
                                                                   Optional _AgregarDscotSeteados As Boolean = False,
                                                                   Optional _Progreso_Porc As Object = Nothing,
                                                                   Optional _Progreso_Cont As Object = Nothing,
                                                                   Optional _CantLineas As Integer = 0,
                                                                   Optional _LblEstatus As Object = Nothing,
                                                                   Optional _MarcarGrilla As Boolean = True,
                                                                   Optional _Revisar_Descuentos As Boolean = True)

        _TblObservaciones.Rows(0).Item("Observaciones") = _Observaciones

        Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, False, False)

        If Not String.IsNullOrEmpty(_NroDocumento) Then
            _TblEncabezado.Rows(0).Item("NroDocumento") = _NroDocumento
        End If

        _TblEncabezado.Rows(0).Item("FechaEmision") = _FechaEmision
        _TblEncabezado.Rows(0).Item("Fecha_1er_Vencimiento") = _FechaEmision
        _TblEncabezado.Rows(0).Item("FechaUltVencimiento") = _FechaEmision
        _TblEncabezado.Rows(0).Item("FechaRecepcion") = _FechaEmision
        _TblEncabezado.Rows(0).Item("FechaMaxRecepcion") = _FechaEmision
        _TblEncabezado.Rows(0).Item("Cuotas") = 0
        _TblEncabezado.Rows(0).Item("Dias_1er_Vencimiento") = 0
        _TblEncabezado.Rows(0).Item("Dias_Vencimiento") = 0
        _TblObservaciones.Rows(0).Item("Forma_pago") = String.Empty

        Dim _CodLista = _TblEncabezado.Rows(0).Item("ListaPrecios")

        Dim _Contador = 0
        Dim _Cont_Filas = 0

        Dim tiempoPorProducto As Double

        For Each Fila As DataRow In _Tbl_Detalle_Externo.Rows

            Dim _Codigo As String = Fila.Item(_Campo_Codigo).ToString
            Dim _Descripcion As String
            Dim _Prct As Boolean

            Try
                _Prct = Fila.Item("Prct")
            Catch ex As Exception
                _Prct = False
            End Try

            Dim _RowProducto As DataRow
            Dim _RowConcepto As DataRow

            If _Prct Then

                Consulta_sql = "Select Top 1 * From TABCT Where KOCT = '" & _Codigo & "'"
                _RowConcepto = _Sql.Fx_Get_DataRow(Consulta_sql)

                _Descripcion = _RowConcepto.Item("NOKOCT").ToString.Trim

            Else

                Consulta_sql = "Select Top 1 * From MAEPR Where KOPR = '" & _Codigo & "'"
                _RowProducto = _Sql.Fx_Get_DataRow(Consulta_sql)

                _Descripcion = _RowProducto.Item("NOKOPR").ToString.Trim

            End If

            Dim _Cantidad As Double = Fila.Item(_Campo_Cantidad)

            If _Codigo = "SET060257" Then
                Dim a = 0
            End If

            If CBool(_Cantidad) Then

                ' Iniciar el cronómetro
                Dim stopwatch As Stopwatch = System.Diagnostics.Stopwatch.StartNew()

                Dim _UnTrans As Integer = 1
                Dim _Precio As Double = Fila.Item(_Campo_Precio)

                Dim _Observa As String
                Dim _DescuentoPorc As Double

                If _Aplica_Descuentos Then

                    Dim _Desc1 As Double = Fila.Item("Desc1")
                    Dim _Desc2 As Double = Fila.Item("Desc2")
                    Dim _Desc3 As Double = Fila.Item("Desc3")
                    Dim _Desc4 As Double = Fila.Item("Desc4")
                    Dim _Desc5 As Double = Fila.Item("Desc5")

                    _DescuentoPorc = 100 * (1 - ((1 - (_Desc1 / 100.0)) *
                                                      (1 - (_Desc2 / 100.0)) *
                                                      (1 - (_Desc3 / 100.0)) *
                                                      (1 - (_Desc4 / 100.0)) *
                                                      (1 - (_Desc5 / 100.0))))

                    _DescuentoPorc = Math.Round(_DescuentoPorc, 2)

                Else
                    _DescuentoPorc = 0
                End If

                Dim _New_Fila As DataGridViewRow = Grilla_Detalle.Rows(_Cont_Filas)

                _New_Fila.Cells("FechaEmision").Value = _FechaEmision

                If _Prct Then
                    Sb_Agregar_Concepto(_New_Fila, _RowConcepto)
                Else
                    Sb_Traer_Producto_Grilla(_New_Fila, _RowProducto, True)
                End If

                Dim _Sucursal As String
                Dim _Bodega As String

                Try
                    _Sucursal = Fila.Item("Sucursal")
                    _New_Fila.Cells("Sucursal").Value = _Sucursal
                Catch ex As Exception

                End Try

                Try
                    _Bodega = Fila.Item("Bodega")
                    _New_Fila.Cells("Bodega").Value = _Bodega
                Catch ex As Exception

                End Try

                _New_Fila.Cells("Codigo").Value = _Codigo
                _New_Fila.Cells("Cantidad").Value = _Cantidad

                Dim _Precio_Old As Double = _New_Fila.Cells("Precio").Value

                If Not _Aplicar_Precio_De_Listas Then
                    _New_Fila.Cells("Precio").Value = _Precio
                End If

                If _New_Fila.Cells("Precio").Value = 0 Then
                    _New_Fila.Cells("Precio").Value = 1
                End If

                _New_Fila.Cells("Observa").Value = _Observa

                _New_Fila.Cells("Potencia").Value = 0
                _New_Fila.Cells("Operacion").Value = String.Empty

                Try
                    _New_Fila.Cells("CodFuncionario").Value = Fila.Item("Kofulido")
                Catch ex As Exception

                End Try

                If _New_Fila.Cells("Precio").Value > 0 Then

                    If _Prct Then

                        Dim _Campo
                        Dim _Campo_Bk

                        If ChkValores.Checked Then
                            _Campo = "VADTNELI"
                            _Campo_Bk = "ValNetoLinea"
                        Else
                            _Campo = "VADTBRLI"
                            _Campo_Bk = "ValBrutoLinea"
                        End If

                        _New_Fila.Cells("Cantidad").Value = 0
                        _New_Fila.Cells("Precio").Value = 0
                        _New_Fila.Cells(_Campo_Bk).Value = _Precio

                        Sb_Procesar_Datos_De_Grilla(_New_Fila, _Campo_Bk, False, False, True)

                    Else

                        Sb_Procesar_Datos_De_Grilla(_New_Fila, "Cantidad", False, False, , _Revisar_Descuentos)

                        If _DescuentoPorc > 0 Then
                            _New_Fila.Cells("DescuentoPorc").Value = Math.Round(_DescuentoPorc, 2)
                            Sb_Procesar_Datos_De_Grilla(_New_Fila, "DescuentoPorc", False, False, , _Revisar_Descuentos)
                        Else

                            If _AgregarDscotSeteados Then
                                Sb_Agregar_DsctoSeteadoPorLinea(_New_Fila)
                            End If

                        End If

                    End If

                End If

                Sb_Nueva_Linea(_CodLista)

                _Cont_Filas += 1

                stopwatch.Stop()
                Dim aa = stopwatch.ElapsedMilliseconds

                tiempoPorProducto = aa / 1000.0

            End If

            ' Define el tiempo estimado por producto en segundos
            tiempoPorProducto = 0.333

            ' Calcula el número de productos restantes
            Dim productosRestantes As Integer = _CantLineas - _Contador

            ' Calcula el tiempo restante en segundos
            Dim tiempoRestante As Integer = productosRestantes * tiempoPorProducto

            '' Muestra el tiempo restante en una etiqueta (Label)
            'If Not IsNothing(_LblTiempoRestante) Then
            '    _LblTiempoRestante.Text = "Tiempo restante: " & tiempoRestante.ToString() & " segundos"
            'End If
            ' Crear un TimeSpan a partir del tiempo en segundos
            Dim tiempo As TimeSpan = TimeSpan.FromSeconds(tiempoRestante)

            ' Obtener horas, minutos y segundos
            Dim horas As Integer = tiempo.Hours
            Dim minutos As Integer = tiempo.Minutes
            Dim segundos As Integer = tiempo.Seconds


            If Not IsNothing(_LblEstatus) Then
                System.Windows.Forms.Application.DoEvents()
                _LblEstatus.Text = "Tiempo restante: " & tiempo.ToString() & ", Producto: " & _Codigo.ToString.Trim & ", " & _Descripcion
            End If

            If Not IsNothing(_Progreso_Porc) AndAlso Not IsNothing(_Progreso_Cont) AndAlso CBool(_CantLineas) Then

                System.Windows.Forms.Application.DoEvents()
                _Progreso_Porc.Value = ((_Contador * 100) / _CantLineas)
                _Progreso_Cont.Value += 1

            End If

            _Contador += 1

            If Cancelar Then
                Return
            End If

        Next

        If _MarcarGrilla Then
            Sb_Marcar_Grilla()
        End If

    End Sub

    Sub Sb_Agregar_DsctoSeteadoPorLinea(ByRef _Fila As DataGridViewRow)

        Dim _Id As Integer = _Fila.Cells("Id").Value
        Dim _Precio As Double

        Dim _TblMaedtli As DataTable = Fx_Crea_Tabla_Con_Filtro(_Ds_Matriz_Documentos.Tables("Descuentos_Doc"), "Id = " & _Id, "Id")

        _Fila.Cells("Recargo_Campo").Value = String.Empty
        _Fila.Cells("Recargo_Valor").Value = 0

        If Not CBool(_TblMaedtli.Rows.Count) Then
            Sb_Traer_Descuentos_Seteados_Desde_Lista(_Fila)
            _TblMaedtli = Fx_Crea_Tabla_Con_Filtro(_Ds_Matriz_Documentos.Tables("Descuentos_Doc"), "Id = " & _Id, "Id")
        End If

        ' VOLVEMOS A RECALCULAR LOS DESCUENTOS
        If ChkValores.Checked Then
            _Precio = _Fila.Cells("ValNetoLinea").Value() + _Fila.Cells("DsctoNeto").Value()
        Else
            _Precio = _Fila.Cells("ValBrutoLinea").Value + _Fila.Cells("DsctoBruto").Value()
        End If

        Dim _Total_Descuento As Double = 0
        Dim _NroDsctos As Integer

        Eliminar_Campos(_Ds_Matriz_Documentos.Tables("Descuentos_Doc"), _Id)

        Dim _Decimal As Integer

        If ChkValores.Checked Then
            _Decimal = 1
        Else
            _Decimal = 0
        End If

        For Each _Fila_Dscto As DataRow In _TblMaedtli.Rows

            Dim _Podt As Double = _Fila_Dscto.Item("Podt_Original")
            Dim _Podt_Original As Double = Math.Round(_Fila_Dscto.Item("Podt_Original"), 5)
            Dim _Vadt As Double = Math.Round((_Podt / 100) * _Precio, 1)

            Dim _TblDsctos = _Ds_Matriz_Documentos.Tables("Descuentos_Doc").Select("Id = " & _Id)
            Dim _Valor = _Precio - _Total_Descuento

            If _Podt > 0 Then

                _Vadt = Math.Round((_Podt / 100) * _Valor, _Decimal)

                If Chk_Redondear_Cero.Checked Then _Vadt = Fx_Redondeo_Descuento(_Vadt, Chk_Redondear_Cero.Checked)

                _Podt = Math.Round((_Vadt / _Valor) * 100, 5)

                Dim NewFila As DataRow
                NewFila = _Ds_Matriz_Documentos.Tables("Descuentos_Doc").NewRow

                With NewFila
                    .Item("Id") = _Id
                    .Item("Podt") = _Podt
                    .Item("Vadt") = _Vadt
                    .Item("Podt_Original") = _Podt_Original
                    _Ds_Matriz_Documentos.Tables("Descuentos_Doc").Rows.Add(NewFila)
                End With

            End If

            _Total_Descuento += _Vadt
            _NroDsctos += 1

        Next

        _Total_Descuento = Math.Round(_Total_Descuento)

        _Fila.Cells("DescuentoValor").Value = Math.Round(_Total_Descuento, 0)
        _Fila.Cells("NroDscto").Value = _NroDsctos

        Dim _Recargo_Valor As Double = _Fila.Cells("Recargo_Valor").Value

        If CBool(_Recargo_Valor) Then
            Sb_Procesar_Datos_De_Grilla(_Fila, "Cantidad", False, False)
        End If

        If CBool(_Total_Descuento) Then
            Sb_Procesar_Datos_De_Grilla(_Fila, "DescuentoValor", False, False)
        End If

    End Sub

    Public Sub Sb_Crear_Documento_Interno_Con_Tabla2(_Formulario As Form,
                                                     _Tbl_Detalle_Externo As DataTable,
                                                     _FechaEmision As Date,
                                                     _Campo_Codigo As String,
                                                     _Campo_Cantidad As String,
                                                     _Campo_Precio As String,
                                                     _Observaciones As String,
                                                     _Aplica_Descuentos As Boolean,
                                                     _Aplicar_Precio_De_Listas As Boolean,
                                                     Optional _NroDocumento As String = "",
                                                     Optional _UnTrans As Integer = 1)

        _TblObservaciones.Rows(0).Item("Observaciones") = _Observaciones

        Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, False, False)

        If Not String.IsNullOrEmpty(_NroDocumento) Then
            _TblEncabezado.Rows(0).Item("NroDocumento") = _NroDocumento
        End If

        _TblEncabezado.Rows(0).Item("FechaEmision") = _FechaEmision
        _TblEncabezado.Rows(0).Item("Fecha_1er_Vencimiento") = _FechaEmision
        _TblEncabezado.Rows(0).Item("FechaUltVencimiento") = _FechaEmision
        _TblEncabezado.Rows(0).Item("Cuotas") = 0
        _TblEncabezado.Rows(0).Item("Dias_1er_Vencimiento") = 0
        _TblEncabezado.Rows(0).Item("Dias_Vencimiento") = 0
        _TblObservaciones.Rows(0).Item("Forma_pago") = String.Empty

        Dim _CodLista = _TblEncabezado.Rows(0).Item("ListaPrecios")
        Dim _Contador = 0

        For Each Fila As DataRow In _Tbl_Detalle_Externo.Rows

            Dim _Sucursal As String = Fila.Item("Sucursal")
            Dim _Bodega As String = Fila.Item("Bodega")
            Dim _Codigo As String = Fila.Item(_Campo_Codigo)

            Dim _Id_OtSvr = 0
            Dim _Semilla_Svr = 0

            Try
                _Id_OtSvr = Fila.Item("Id_Ot")
            Catch ex As Exception
                _Id_OtSvr = 0
            End Try

            Try
                _Semilla_Svr = Fila.Item("Semilla")
            Catch ex As Exception
                _Semilla_Svr = 0
            End Try

            Dim _Descripcion As String

            Try
                _Descripcion = Fila.Item("Descripcion")
            Catch ex As Exception
                _Descripcion = String.Empty
            End Try

            Dim _Observa As String

            Try
                _Observa = Fila.Item("Observa")
            Catch ex As Exception
                _Observa = String.Empty
            End Try

            Consulta_sql = "Select Top 1 * From MAEPR Where KOPR = '" & _Codigo & "'"
            Dim _RowProducto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            Dim _Cantidad As Double = Fila.Item(_Campo_Cantidad)

            If CBool(_Cantidad) Then

                Dim _Precio As Double = Fila.Item(_Campo_Precio)

                Dim _DescuentoPorc As Double

                If _Aplica_Descuentos Then

                    Dim _Desc1 As Double = Fila.Item("Desc1")
                    Dim _Desc2 As Double = Fila.Item("Desc2")
                    Dim _Desc3 As Double = Fila.Item("Desc3")
                    Dim _Desc4 As Double = Fila.Item("Desc4")
                    Dim _Desc5 As Double = Fila.Item("Desc5")

                    _DescuentoPorc = 100 * (1 - ((1 - (_Desc1 / 100.0)) *
                                                      (1 - (_Desc2 / 100.0)) *
                                                      (1 - (_Desc3 / 100.0)) *
                                                      (1 - (_Desc4 / 100.0)) *
                                                      (1 - (_Desc5 / 100.0))))

                    _DescuentoPorc = Math.Round(_DescuentoPorc, 2)

                Else
                    _DescuentoPorc = 0
                End If

                Dim _New_Fila As DataGridViewRow = Grilla_Detalle.Rows(_Contador)

                Sb_Traer_Producto_Grilla(_New_Fila, _RowProducto, True)

                _New_Fila.Cells("Sucursal").Value = _Sucursal
                _New_Fila.Cells("Bodega").Value = _Bodega
                _New_Fila.Cells("Codigo").Value = _Codigo
                _New_Fila.Cells("Cantidad").Value = _Cantidad

                If Not String.IsNullOrEmpty(_Descripcion) Then
                    _New_Fila.Cells("Descripcion").Value = _Descripcion
                End If

                Dim _Precio_Old As Double = _New_Fila.Cells("Precio").Value

                If Not _Aplicar_Precio_De_Listas Then
                    _New_Fila.Cells("Precio").Value = _Precio
                End If

                If _New_Fila.Cells("Precio").Value = 0 Then
                    _New_Fila.Cells("Precio").Value = 1
                End If

                _New_Fila.Cells("Observa").Value = _Observa

                _New_Fila.Cells("Potencia").Value = 0
                _New_Fila.Cells("Operacion").Value = String.Empty

                _New_Fila.Cells("Id_OtSvr").Value = _Id_OtSvr
                _New_Fila.Cells("Semilla_Svr").Value = _Semilla_Svr

                If _New_Fila.Cells("Precio").Value > 0 Then
                    Sb_Procesar_Datos_De_Grilla(_New_Fila, "Cantidad", True, True)
                    If _DescuentoPorc > 0 Then
                        _New_Fila.Cells("DescuentoPorc").Value = Math.Round(_DescuentoPorc, 2)
                        Sb_Procesar_Datos_De_Grilla(_New_Fila, "DescuentoPorc", True, True)
                    End If
                End If

                _Contador += 1
                Sb_Nueva_Linea(_CodLista)

            End If

        Next

        Sb_Marcar_Grilla()

        Return

    End Sub

    Public Sub Sb_Crear_Documento_Interno_Con_Tabla3Potl(_Formulario As Form,
                                                         _Tbl_Detalle_Externo As DataTable,
                                                         _FechaEmision As Date,
                                                         _Campo_Codigo As String,
                                                         _Campo_Cantidad As String,
                                                         _Campo_Precio As String,
                                                         _Observaciones As String,
                                                         _Aplica_Descuentos As Boolean,
                                                         _Aplicar_Precio_De_Listas As Boolean,
                                                         _UnTrans As Integer,
                                                         Optional _CodLista As String = "01C",
                                                         Optional _Campo_Idmaeddo_Dori As String = "IDPOTL")

        _TblObservaciones.Rows(0).Item("Observaciones") = _Observaciones

        Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, False, False)


        _TblEncabezado.Rows(0).Item("ListaPrecios") = _CodLista
        _TblDetalle.Rows(0).Item("CodLista") = _CodLista

        _TblEncabezado.Rows(0).Item("FechaEmision") = _FechaEmision
        _TblEncabezado.Rows(0).Item("Fecha_1er_Vencimiento") = _FechaEmision
        _TblEncabezado.Rows(0).Item("FechaUltVencimiento") = _FechaEmision
        _TblEncabezado.Rows(0).Item("Cuotas") = 0
        _TblEncabezado.Rows(0).Item("Dias_1er_Vencimiento") = 0
        _TblEncabezado.Rows(0).Item("Dias_Vencimiento") = 0
        _TblObservaciones.Rows(0).Item("Forma_pago") = String.Empty

        Dim _Contador = 0

        For Each Fila As DataRow In _Tbl_Detalle_Externo.Rows

            Dim _Sucursal As String = Fila.Item("Sucursal")
            Dim _Bodega As String = Fila.Item("Bodega")
            Dim _Codigo As String = Fila.Item(_Campo_Codigo)
            Dim _Idmaeddo_Dori As Integer = Fila.Item(_Campo_Idmaeddo_Dori)
            Dim _Tidopa As String = "OTL"
            Dim _Nudopa As String = Fila.Item("NUMOT")

            Dim _Descripcion As String = Fila.Item("GLOSA")
            Dim _Observa As String = String.Empty

            Consulta_sql = "Select Top 1 * From MAEPR Where KOPR = '" & _Codigo & "'"
            Dim _RowProducto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            Dim _Cantidad As Double = Fila.Item(_Campo_Cantidad)

            If CBool(_Cantidad) Then

                Dim _DescuentoPorc As Double = 0

                Dim _New_Fila As DataGridViewRow = Grilla_Detalle.Rows(_Contador)

                Sb_Traer_Producto_Grilla(_New_Fila, _RowProducto, True)

                _New_Fila.Cells("Sucursal").Value = _Sucursal
                _New_Fila.Cells("Bodega").Value = _Bodega
                _New_Fila.Cells("Codigo").Value = _Codigo
                _New_Fila.Cells("Cantidad").Value = _Cantidad
                _New_Fila.Cells("FechaEmision").Value = _FechaEmision

                If Not String.IsNullOrEmpty(_Descripcion) Then
                    _New_Fila.Cells("Descripcion").Value = _Descripcion
                End If

                Dim _Precio_Old As Double = _New_Fila.Cells("Precio").Value

                If Not _Aplicar_Precio_De_Listas Then
                    _New_Fila.Cells("Precio").Value = Fila.Item(_Campo_Precio)
                End If

                If _New_Fila.Cells("Precio").Value = 0 Then
                    _New_Fila.Cells("Precio").Value = 1
                End If

                _New_Fila.Cells("Idmaeddo_Dori").Value = _Idmaeddo_Dori
                _New_Fila.Cells("Tidopa").Value = _Tidopa
                _New_Fila.Cells("Observa").Value = _Observa
                _New_Fila.Cells("Potencia").Value = 0
                _New_Fila.Cells("Operacion").Value = String.Empty


                If _New_Fila.Cells("Precio").Value > 0 Then
                    Sb_Procesar_Datos_De_Grilla(_New_Fila, "Cantidad", True, True)
                    If _DescuentoPorc > 0 Then
                        _New_Fila.Cells("DescuentoPorc").Value = Math.Round(_DescuentoPorc, 2)
                        Sb_Procesar_Datos_De_Grilla(_New_Fila, "DescuentoPorc", True, True)
                    End If
                End If

                _Contador += 1
                Sb_Nueva_Linea(_CodLista)

            End If

        Next

        Sb_Marcar_Grilla()

    End Sub

    Public Sub Sb_Crear_Documento_Interno_Con_Tabla4Potl(_Formulario As Form,
                                                         _Tbl_Detalle_Externo As DataTable,
                                                         _FechaEmision As Date,
                                                         _Campo_Codigo As String,
                                                         _Campo_Cantidad As String,
                                                         _Campo_Precio As String,
                                                         _Observaciones As String,
                                                         _Aplica_Descuentos As Boolean,
                                                         _Aplicar_Precio_De_Listas As Boolean,
                                                         _UnTrans As Integer)

        _TblObservaciones.Rows(0).Item("Observaciones") = String.Empty '_Observaciones

        Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, False, False)

        Dim _CodLista = "01C" '_TblEncabezado.Rows(0).Item("ListaPrecios")

        _TblEncabezado.Rows(0).Item("ListaPrecios") = _CodLista
        _TblDetalle.Rows(0).Item("CodLista") = _CodLista

        _TblEncabezado.Rows(0).Item("FechaEmision") = _FechaEmision
        _TblEncabezado.Rows(0).Item("Fecha_1er_Vencimiento") = _FechaEmision
        _TblEncabezado.Rows(0).Item("FechaUltVencimiento") = _FechaEmision
        _TblEncabezado.Rows(0).Item("Cuotas") = 0
        _TblEncabezado.Rows(0).Item("Dias_1er_Vencimiento") = 0
        _TblEncabezado.Rows(0).Item("Dias_Vencimiento") = 0
        _TblObservaciones.Rows(0).Item("Forma_pago") = String.Empty

        Dim _Contador = 0

        For Each Fila As DataRow In _Tbl_Detalle_Externo.Rows

            Dim _Sucursal As String = Fila.Item("Sucursal")
            Dim _Bodega As String = Fila.Item("Bodega")
            Dim _Codigo As String = Fila.Item(_Campo_Codigo)
            Dim _Idpotl As Integer = Fila.Item("IDPOTL")
            Dim _Tidopa As String = "OTL"
            Dim _Nudopa As String = Fila.Item("NUMOT")

            Dim _Descripcion As String = Fila.Item("GLOSA")
            Dim _Observa As String = String.Empty 'Fila.Item("Observa")

            Consulta_sql = "Select Top 1 * From MAEPR Where KOPR = '" & _Codigo & "'"
            Dim _RowProducto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            Dim _Cantidad As Double = Fila.Item(_Campo_Cantidad)

            If CBool(_Cantidad) Then

                Dim _Precio As Double = Fila.Item(_Campo_Precio)

                Dim _DescuentoPorc As Double = 0

                Dim _New_Fila As DataGridViewRow = Grilla_Detalle.Rows(_Contador)

                Sb_Traer_Producto_Grilla(_New_Fila, _RowProducto, True)

                _New_Fila.Cells("Sucursal").Value = _Sucursal
                _New_Fila.Cells("Bodega").Value = _Bodega
                _New_Fila.Cells("Codigo").Value = _Codigo
                _New_Fila.Cells("Cantidad").Value = _Cantidad
                _New_Fila.Cells("FechaEmision").Value = _FechaEmision

                If Not String.IsNullOrEmpty(_Descripcion) Then
                    _New_Fila.Cells("Descripcion").Value = _Descripcion
                End If

                Dim _Precio_Old As Double = _New_Fila.Cells("Precio").Value

                If Not _Aplicar_Precio_De_Listas Then
                    _New_Fila.Cells("Precio").Value = _Precio
                End If

                If _New_Fila.Cells("Precio").Value = 0 Then
                    _New_Fila.Cells("Precio").Value = 1
                End If

                _New_Fila.Cells("Idmaeddo_Dori").Value = _Idpotl
                _New_Fila.Cells("Tidopa").Value = _Tidopa
                _New_Fila.Cells("Observa").Value = _Observa
                _New_Fila.Cells("Potencia").Value = 0
                _New_Fila.Cells("Operacion").Value = String.Empty


                If _New_Fila.Cells("Precio").Value > 0 Then
                    Sb_Procesar_Datos_De_Grilla(_New_Fila, "Cantidad", True, True)
                    If _DescuentoPorc > 0 Then
                        _New_Fila.Cells("DescuentoPorc").Value = Math.Round(_DescuentoPorc, 2)
                        Sb_Procesar_Datos_De_Grilla(_New_Fila, "DescuentoPorc", True, True)
                    End If
                End If

                _Contador += 1
                Sb_Nueva_Linea(_CodLista)

            End If

        Next

        Sb_Marcar_Grilla()

    End Sub

    Private Sub Btn_Minimizar_Click(sender As System.Object, e As System.EventArgs)

        Dim _Borrar As Boolean = _Post_Venta

        Dim _TipoEstacion = Trim(_Global_Row_EstacionBk.Item("TipoEstacion"))

        If _TipoEstacion = "P" Or _TipoEstacion = "Nvv" Then
            Me.WindowState = FormWindowState.Minimized
        Else

            If Fx_Revisar_si_tiene_registros(False) Then

                If Not (_RowEntidad Is Nothing) Then

                    'Dim Ruta_Documento_Bkp = AppPath() & "\Data\" & RutEmpresa & "\BkPost\DC_Construccion.xml"
                    '_DstCompras.WriteXml(_Directorio_Informe & "\Parametros_Inf.xml")

                    _Ds_Matriz_Documentos.WriteXml(_Ruta_Documento_Bkp, XmlWriteMode.IgnoreSchema)
                    _En_Construccion = True

                    'MessageBoxEx.Show("Archivo Xml guardado correctamente", "Grabra Xml", MessageBoxButtons.OK, MessageBoxIcon.Information)

                    'ToastNotification.Show(Me, "Archivo Xml guardado correctamente" & Environment.NewLine & _
                    '                       "Ruta esta en el portapapeles", My.Resources.ok_button, _
                    '                                3 * 1000, eToastGlowColor.Green, eToastPosition.MiddleCenter)

                    Clipboard.SetText(_Ruta_Documento_Bkp)
                Else
                    System.IO.File.Delete(_Ruta_Documento_Bkp)
                End If
            Else
                _Borrar = True
            End If

            If _Borrar Then File.Delete(_Ruta_Documento_Bkp)

            Me.Close()

        End If

    End Sub

    Private Sub Btn_Mini_Buscar_CodPrincipal_Grilla_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Mini_Buscar_CodPrincipal_Grilla.Click
        Sb_Busca_Producto_En_Grilla(Buscar_Codigo.Principal)
    End Sub

#Region "BUSCAR PRODUCTOS EN GRILLA"

    Enum Buscar_Codigo
        Principal
        Alternativo
    End Enum

    Sub Sb_Busca_Producto_En_Grilla(_Cabeza As Buscar_Codigo)

        Dim _Campo As String

        If _Cabeza = Buscar_Codigo.Principal Then
            _Campo = "Codigo"
        ElseIf _Cabeza = Buscar_Codigo.Alternativo Then
            _Campo = "CodigoProv"
        End If

        Dim _Nuevo_Producto As Boolean

        Try
            _Nuevo_Producto = Grilla_Detalle.Rows(0).Cells("Nuevo_Producto").Value
        Catch ex As Exception
            _Nuevo_Producto = True
        End Try

        If _Nuevo_Producto Then
            Beep()
            ToastNotification.Show(Me, "NO HAY PRODUCTOS QUE BUSCAR", My.Resources.cross,
                                   1 * 1000, eToastGlowColor.Red, eToastPosition.MiddleCenter)

        Else

            Dim _Codigo As String

            Dim _Aceptado As Boolean = InputBox_Bk(Me, "INGRESE EL CÓDIGO A BUSCAR",
                                                "Buscar código " & _Cabeza.ToString, _Codigo, False, _Tipo_Mayus_Minus.Normal, 25, True)

            If _Aceptado Then
                If BuscarDatoEnGrilla(Trim(_Codigo), _Campo, Grilla_Detalle) Then
                    Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index).Cells("Cantidad")
                    Grilla_Detalle.Focus()
                End If
            End If

        End If

    End Sub

#End Region

    Private Sub Grilla_Detalle_DataError(sender As System.Object, e As System.Windows.Forms.DataGridViewDataErrorEventArgs) Handles Grilla_Detalle.DataError

        Dim _Fila As DataGridViewRow = Grilla_Detalle.CurrentRow
        Dim _Cabeza = Grilla_Detalle.Columns(Grilla_Detalle.CurrentCell.ColumnIndex).Name

        If _Cabeza = "FechaRecepcion" Then
            MessageBoxEx.Show(Me, e.Exception.Message & vbCrLf & vbCrLf &
                              "El formato de la fecha debe ser dd-mm-aaaa o dd/mm/aaaa", "Validación de fecha", MessageBoxButtons.OK, MessageBoxIcon.Stop)

        End If

    End Sub

    Private Sub Btn_Config_Tipo_Estacion_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Config_Tipo_Estacion.Click

        Dim _Autorizado As Boolean

        Dim Fm_Pass As New Frm_Clave_Administrador
        Fm_Pass.ShowDialog(Me)
        _Autorizado = Fm_Pass.Pro_Autorizado
        Fm_Pass.Dispose()

        If _Autorizado Then
            Dim _Id = _Global_Row_EstacionBk.Item("Id")
            Dim Fm As New Frm_RegistrarEquipo(Frm_RegistrarEquipo.Enum_Accion.Editar, _Id, False)
            Fm.ShowDialog(Me)
            Fm.Dispose()

            Dim _Mod As New Clas_Modalidades

            _Mod.Sb_Actualiza_Formatos_X_Modalidad()
            _Mod.Sb_Actualizar_Variables_Modalidad(ModModalidad_Doc)

            Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_EstacionesBkp Where NombreEquipo = '" & _NombreEquipo & "'"
            _Global_Row_EstacionBk = _Sql.Fx_Get_DataRow(Consulta_sql)

        End If

    End Sub


    Private Sub Btn_Exportar_a_XML_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Exportar_a_XML.Click
        ' Dim Ruta_Documento_Bkp = AppPath() & "\Data\" & RutEmpresa & "\BkPost\"
        Dim Ruta_Documento_Bkp = AppPath() & "\Data\" & RutEmpresa & "\BkPost\DC_Construccion.xml"
        '_DstCompras.WriteXml(_Directorio_Informe & "\Parametros_Inf.xml")
        _Ds_Matriz_Documentos.WriteXml(Ruta_Documento_Bkp, XmlWriteMode.IgnoreSchema)
        'MessageBoxEx.Show("Archivo Xml guardado correctamente", "Grabra Xml", MessageBoxButtons.OK, MessageBoxIcon.Information)

        ToastNotification.Show(Me, "Archivo Xml guardado correctamente" & Environment.NewLine &
                               "Ruta esta en el portapapeles", Btn_Cambiar_Tipo_Documento.Image,
                                        3 * 1000, eToastGlowColor.Green, eToastPosition.MiddleCenter)

        'ToastNotification.Show(Me, "Archivo Xml guardado correctamente" & Environment.NewLine &
        '                       "Ruta esta en el portapapeles", My.Resources.ok_button,
        '                                3 * 1000, eToastGlowColor.Green, eToastPosition.MiddleCenter)

        Clipboard.SetText(Ruta_Documento_Bkp)

        ExportarTabla_JetExcel_Tabla(_TblDetalle, Me, "Detalle")

    End Sub

    Sub Sb_Cambiar_Vendedor(_CambiaTodasLasFilas As Boolean)

        Dim _Tbl_Filtro_Vendedores As DataTable
        Dim _Filtrar As New Clas_Filtros_Random(Me)

        Dim _Sql_Filtro_Condicion_Extra As String = "And INACTIVO = 0"

        If Fx_Tiene_Permiso(Nothing, "NO00022",, False) Then

            Dim _Kogru As String = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Usuarios", "Kogru_Ventas", "CodFuncionario = '" & FUNCIONARIO & "'")

            If Not _Kogru.Contains("'") Then
                _Kogru = "'" & _Kogru & "'"
            End If

            _Sql_Filtro_Condicion_Extra += vbCrLf & "And KOFU In (Select d.KOFU From TABFUGD d Left Join TABFUGE e On e.KOGRU = d.KOGRU Where d.KOGRU In (" & _Kogru & "))"

        End If

        If _Filtrar.Fx_Filtrar(_Tbl_Filtro_Vendedores,
                               Clas_Filtros_Random.Enum_Tabla_Fl._Funcionarios_Random, _Sql_Filtro_Condicion_Extra, Nothing, False, True) Then

            _Tbl_Filtro_Vendedores = _Filtrar.Pro_Tbl_Filtro
            _CodVendedor = _Filtrar.Pro_Tbl_Filtro.Rows(0).Item("Codigo")

            If _CambiaTodasLasFilas Then
                For Each _Row As DataRow In _TblDetalle.Rows
                    _Row.Item("CodFuncionario") = _CodVendedor
                    _Row.Item("CodVendedor") = _CodVendedor
                Next
            Else

                Dim _Fila As DataGridViewRow

                Try
                    _Fila = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index)
                Catch ex As Exception
                    _Fila = Grilla_Detalle.Rows(0)
                End Try

                _Fila.Cells("CodFuncionario").Value = _CodVendedor
                _Fila.Cells("CodVendedor").Value = _CodVendedor
            End If

        End If

    End Sub

    Private Sub Btn_Mnu_Ficha_Entidad_Click(sender As Object, e As EventArgs) Handles Btn_Mnu_Ficha_Entidad.Click

        Dim _Koen = _TblEncabezado.Rows(0).Item("CodEntidad")
        Dim _Suen = _TblEncabezado.Rows(0).Item("CodSucEntidad")

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "CfEnt001", Nothing, _Koen, _Suen) Then

            Dim _Mensaje As New LsValiciones.Mensajes

            _Mensaje = Fx_EntidadEnGrupoVendedores(_RowEntidad, FUNCIONARIO, False)

            If Not _Mensaje.EsCorrecto Then
                MessageBoxEx.Show(Me, _Mensaje.Mensaje, "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                Return
            End If

            Dim Fm As New Frm_Crear_Entidad_Mt
            Fm.Fx_Llenar_Entidad(_Koen, _Suen)
            Fm.CrearEntidad = False
            Fm.EditarEntidad = True
            Fm.BtnEliminarUser.Enabled = False
            Fm.ShowDialog(Me)

            If Fm.Grabar Then

                If Not _Revision_Remota Then

                    MessageBoxEx.Show(Me, "Los datos de la entidad se han actualizado. Sin embargo, para que los cambios se reflejen" & vbCrLf &
                                      "en el documento, debe limpiar y recargar la entidad.", "Información",
                                      MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, True)

                End If

            End If

            Fm.Dispose()

        End If

    End Sub

    Private Sub Btn_Ver_Situacion_Cliente_Click(sender As Object, e As EventArgs) Handles Btn_Ver_Situacion_Cliente.Click

        Dim _Koen = _TblEncabezado.Rows(0).Item("CodEntidad")
        Dim _Suen = _TblEncabezado.Rows(0).Item("CodSucEntidad")

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Inf00018", Nothing, _Koen, _Suen) Then

            Dim Fm As New Frm_InfoEnt_Deudas_Doc_Comerciales(_RowEntidad, 0, 0, 0, 0, True)
            Fm.Btn_CambCodPago.Visible = False
            Fm.ShowDialog(Me)
            Fm.Dispose()

        End If

    End Sub

    Private Sub Btn_Ver_Comportamiento_De_Pago_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Ver_Comportamiento_De_Pago.Click

        Dim _Koen = _TblEncabezado.Rows(0).Item("CodEntidad")
        Dim _Suen = _TblEncabezado.Rows(0).Item("CodSucEntidad")

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Inf00018", Nothing, _Koen, _Suen) Then

            Dim Fm As New Frm_Infor_Ent_Comportamiento_De_Pago
            Fm.Pro_RowEntidad = _RowEntidad
            Fm.ShowDialog(Me)
            Fm.Dispose()

        End If

    End Sub

    Private Sub Btn_Ver_Documentos_Pendientes_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Ver_Documentos_Pendientes.Click

        Dim _Koen = _TblEncabezado.Rows(0).Item("CodEntidad")
        Dim _Suen = _TblEncabezado.Rows(0).Item("CodSucEntidad")

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Inf00018", Nothing, _Koen, _Suen) Then

            Sb_Ver_Deuda_Pendiente(_Koen, _Suen, False)

        End If

    End Sub

    Private Sub Btn_Ver_Cheques_En_Cartera_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Ver_Cheques_En_Cartera.Click

        Dim _Koen = _TblEncabezado.Rows(0).Item("CodEntidad")
        Dim _Suen = _TblEncabezado.Rows(0).Item("CodSucEntidad")

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Inf00018", Nothing, _Koen, _Suen) Then

            Dim _Nokoen = _TblEncabezado.Rows(0).Item("Nombre_Entidad")

            Dim Fm As New Frm_Infor_Cheques_En_Cartera_X_Clientes
            Fm.Pro_Filtro_Entidad = _Koen
            Fm.Text = "Cheques en cartera entidad: " & _Nokoen
            Fm.ShowDialog(Me)
            Fm.Dispose()

        End If

    End Sub

    Private Sub Btn_Ver_Deuda_Total_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Ver_Deuda_Total.Click

        Dim _Koen = _TblEncabezado.Rows(0).Item("CodEntidad")
        Dim _Suen = _TblEncabezado.Rows(0).Item("CodSucEntidad")

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Inf00018", Nothing, _Koen, _Suen) Then

            Sb_Ver_Deuda_Pendiente(_Koen, _Suen, True)

        End If

    End Sub

    Sub Sb_Ver_Deuda_Pendiente(_Koen As String,
                               _Suen As String,
                               _Deuda_Efectiva As Boolean)


        Dim _Fx_Fecha_Inicio = "19000101"
        Dim _Fx_Fecha_Fin = "22001231"

        Dim _Filtro_Maeedo = "And EDO.ENDO = '" & _Koen & "' -- AND EDO.SUENDO = '" & _Suen & "'"
        Dim _Filtro_Maedpce = "And DPCE.ENDP = '" & _Koen & "'"

        Consulta_sql = My.Resources.Recursos_Inf_Compras_Vencimiento.Informe_Vencimientos_Ventas_Anuales & Environment.NewLine & Environment.NewLine

        Dim Fm As New Frm_Inf_Vencimientos_Detalle_Documentos(_Koen, _Suen, Consulta_sql,
                                                      _Fx_Fecha_Inicio, _Fx_Fecha_Fin,
                                                      Frm_Inf_Vencimientos_Detalle_Documentos.Accion.Mostrar_todo,
                                                      0, Frm_Inf_Vencimientos_Detalle_Documentos.Tipo_Informe.Ventas)

        Fm.Pro_Mover_Fechas = False
        Fm.Pro_Chk_Deuda_Efectiva = _Deuda_Efectiva ' _Chk_Deuda_Efectiva

        Fm.Pro_Filtro_Maeedo = _Filtro_Maeedo
        Fm.Pro_Filtro_Maedpce = _Filtro_Maedpce
        Fm.Pro_Solo_Cheques = True
        Fm.Btn_Marcar_Masivamente_Anotaciones_De_Documentos.Visible = False
        Fm.Chk_Mostrar_Pagos_Pendientes.Visible = False
        Fm.Sb_Generar_Informe()

        Fm.ShowDialog(Me)
        Fm.Dispose()

    End Sub

    Private Sub Btn_Info_Plana_Entidad_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Info_Plana_Entidad.Click

        If Not (_RowEntidad Is Nothing) Then
            Dim Fm As New Frm_InfoEnt_Informacion_General(_RowEntidad)
            Fm.ShowDialog(Me)
            Fm.Dispose()
        Else
            MessageBoxEx.Show(Me, "Falta el entidad", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
        End If

    End Sub

    Private Sub Btn_Editar_Nota_de_venta_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Editar_Nota_de_venta.Click

        Dim _Vizado = _TblEncabezado.Rows(0).Item("Vizado")
        Dim _Koen = _TblEncabezado.Rows(0).Item("CodEntidad")
        Dim _Suen = _TblEncabezado.Rows(0).Item("CodSucEntidad")

        If Not _Vizado Then

            If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Bkp00058", Nothing, _Koen, _Suen) Then

                Sb_Buscar_Documento("NVV", True, "")

                If _Editar_documento And SoloprodEnDoc_CLALIBPR Then

                    Dim _Codigo As String = _TblDetalle.Rows(0).Item("Codigo")
                    Dim _Clalibpr As String = _Sql.Fx_Trae_Dato("MAEPR", "CLALIBPR", "KOPR = '" & _Codigo & "'")
                    Dim _Descripcion As String = _Sql.Fx_Trae_Dato("TABCARAC", "NOKOCARAC", "KOTABLA = 'CLALIBPR' And KOCARAC = '" & _Clalibpr & "'")

                    _TblEncabezado.Rows(0).Item("TblTipoVenta") = "CLALIBPR"
                    _TblEncabezado.Rows(0).Item("CodTipoVenta") = _Clalibpr
                    Lbl_TipoVenta.Text = "Tipo de venta: " & _Descripcion

                End If

            End If

        Else
            MessageBoxEx.Show(Me, "DOCUMENTO VISADO", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, Me.TopMost)
        End If

    End Sub

    Sub Sb_Reservar_Movimientos_WMS(_Idmaeedo As Integer)

        Dim _Tbl_Wms As DataTable = _Ds_Matriz_Documentos.Tables("Tbl_Wms")

        Dim _SqlQuery As String = String.Empty

        _SqlQuery = String.Empty

        For Each _Fila As DataRow In _Tbl_Wms.Rows ' Tbl_Wms.Rows

            Dim _Id_Wms = _Fila.Item("Id_Wms")
            Dim _Codigo = _Fila.Item("Codigo")
            Dim _NroSerie_01 = _Fila.Item("NroSerie_01")
            Dim _NroSerie_02 = _Fila.Item("NroSerie_02")

            Consulta_sql = "Select * From MAEDDO Where IDMAEEDO = " & _Idmaeedo & " And KOPRCT = '" & _Codigo & "'"
            Dim _Row_Maeddo As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            Dim _Tido = _Row_Maeddo.Item("TIDO")
            Dim _Nudo = _Row_Maeddo.Item("NUDO")
            Dim _Idmaeddo = _Row_Maeddo.Item("IDMAEDDO")

            _SqlQuery += " Update " & _Global_BaseBk & "Zw_WMS_Ubicaciones_Stock_X_Producto 
                          Set Reservado = 1,Idmaeddo_Reserva = " & _Idmaeddo & ",Tido_Reserva = '" & _Tido & "',Nudo_Reserva = '" & _Nudo & "'
                          Where Id_Movimiento = " & _Id_Wms & Environment.NewLine

        Next

        If Not String.IsNullOrEmpty(_SqlQuery) Then _Sql.Ej_consulta_IDU(_SqlQuery)

    End Sub

    Function Fx_Validar_Codigos_WMS() As Boolean

        Dim _Tbl As DataTable = Fx_Crea_Tabla_Con_Filtro(_Ds_Matriz_Documentos.Tables("Tbl_Wms"), "1 > 0", "Id_Wms")

        Dim _Filtro_Id_Wms As String = Generar_Filtro_IN(_Tbl, "", "Id_Wms", True, False, "")
        Dim _Condicion As String = String.Empty

        If CBool(_Tbl.Rows.Count) Then

            Consulta_sql = "Select Coun(*) From " & _Global_BaseBk & "Zw_WMS_Ubicaciones_Stock_X_Producto
                            Where Id_Movimiento In " & _Filtro_Id_Wms & "And Reservado = 1"

            Dim _Reg = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_WMS_Ubicaciones_Stock_X_Producto",
                                                "Id_Movimiento In" & _Filtro_Id_Wms & Space(1) &
                                                "And Reservado = 1")

            If _Reg = 0 Then
                Return True
            Else
                Return False
            End If

        Else
            Return True
        End If

    End Function

    Private Sub Timer_Revisar_Notificacion_Tick(sender As System.Object, e As System.EventArgs) Handles Timer_Revisar_Notificacion.Tick

        Timer_Revisar_Notificacion.Enabled = False

        Dim _NroRemota = _RowRemota_Notificacion.Item("NroRemota")
        Dim _Id_DocEnc = _RowRemota_Notificacion.Item("Id_Casi_DocEnc")
        Dim _Vizado As Boolean = _RowRemota_Notificacion.Item("Permiso_Otorgado")
        Dim _Observaciones_Remotas = _RowRemota_Notificacion.Item("Observaciones")
        Dim _Permiso_Otorgado = _RowRemota_Notificacion.Item("Permiso_Otorgado")
        Dim _RCadena As Boolean = _RowRemota_Notificacion.Item("RCadena")

        If _RCadena Then
            Dim _Id_Enc = _RowRemota_Notificacion.Item("RCadena_Id_Enc")
            _Vizado = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_Remotas", "RCadena_Id_Enc = " & _Id_Enc & " And Permiso_Otorgado = 1")
        End If

        If Not _Vizado Then
            Consulta_sql = " Update " & _Global_BaseBk & "Zw_Remotas Set Eliminada = 1 Where NroRemota = '" & _NroRemota & "'"
            _Sql.Ej_consulta_IDU(Consulta_sql)
        End If

        Sb_Crear_Documento_Desde_Otros_Documentos_Casi_Bakapp(_Id_DocEnc, _Vizado)

        If Not _Permiso_Otorgado Then

            MessageBoxEx.Show(Me, _Observaciones_Remotas, "Observaciones",
                              MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxButtons.OK, Me.TopMost)

            If _Sql.Fx_Existe_Tabla(_Global_BaseBk & "Zw_Casi_DocArc") Then

                Consulta_sql = "Update  " & _Global_BaseBk & "Zw_Casi_DocArc Set Id_DocEnc = 0,En_Construccion = 0,NombreEquipo = '" & _NombreEquipo & "' 
                                Where Id_DocEnc = " & _Id_DocEnc
                _Sql.Ej_consulta_IDU(Consulta_sql)

            End If

            Dim _Id_Despacho As Integer = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Despachos_Doc", "Id_Despacho", "Archidrst = 'Zw_Casi_DocEnc' And Idrst = " & _Id_DocEnc, True)

            If CBool(_Id_Despacho) Then

                _Cl_Despacho = New Clas_Despacho(False)
                _Cl_Despacho.Sb_Cargar_Despacho(_Id_Despacho)

            End If

        End If

        'Sb_Actualizar_Permisos_Necesarios_Del_Documento()
        Sb_Marcar_Grilla()
        Sb_Botones_Activos(False, True)

    End Sub

    Private Sub Timer_Revisa_Permiso_Remoto_Tick(sender As System.Object, e As System.EventArgs) Handles Timer_Revisa_Permiso_Remoto.Tick

        Timer_Revisa_Permiso_Remoto.Enabled = False

        Me.Enabled = False

        Dim _NroRemota = _RowRemota_Notificacion.Item("NroRemota")
        Dim _Id_DocEnc = _RowRemota_Notificacion.Item("Id_Casi_DocEnc")
        Dim _CodPermiso = _RowRemota_Notificacion.Item("CodPermiso")

        Consulta_sql = "Select Top 1 Semilla,CodPermiso,DescripcionPermiso,CodFamilia,NombreFamiliaPermiso,Descuento
                        From " & _Global_BaseBk & "ZW_Permisos
                        Where CodPermiso = '" & _CodPermiso & "'"
        Dim _RowPermiso As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        Dim _Nombre_Permiso As String = _RowPermiso.Item("DescripcionPermiso")

        Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Casi_DocTom Where Id_DocEnc = " & _Id_DocEnc & " And NombreEquipo = '" & _NombreEquipo & "'"
        _Sql.Ej_consulta_IDU(Consulta_sql)

        Dim _Documento_Tomado_Intertanto As Boolean

        Sb_Crear_Documento_Desde_Otros_Documentos_Casi_Bakapp(_Id_DocEnc, False, _Documento_Tomado_Intertanto)

        If Not _Documento_Tomado_Intertanto Then

            _Revisando_Situacion_Comercial = True

            If _Revisar_Notificacion_Automatica_Remota Then

                If _Tipo_Documento = csGlobales.Enum_Tipo_Documento.Venta Then

                    _Mostrar_Costos = Fx_Tiene_Permiso(Me, "Bkp00037", FUNCIONARIO, False)
                    _Mostrar_Margen = Fx_Tiene_Permiso(Me, "Bkp00038", FUNCIONARIO, False)

                    If _Mostrar_Costos Then
                        Btn_Ver_Costos.Enabled = False
                    Else
                        Btn_Ver_Costos.Enabled = True
                    End If

                    If _Mostrar_Margen Then
                        Btn_Mostrar_Margenes.Enabled = False
                    Else
                        Btn_Mostrar_Margenes.Enabled = True
                    End If

                    Sb_Revisando_Situacion_Comercial(True)

                ElseIf _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Compra Then

                    Btn_Ver_Costos.Visible = False
                    Btn_Mostrar_Margenes.Visible = False

                    Dim _Reserva_NroOCC As Boolean = _TblEncabezado.Rows(0).Item("Reserva_NroOCC")
                    Dim _Reserva_Idmaeedo As Integer = _TblEncabezado.Rows(0).Item("Reserva_Idmaeedo")
                    Dim _NroDocumento As String = _TblEncabezado.Rows(0).Item("NroDocumento")

                    If _Reserva_NroOCC Then

                        Dim _Reg As Boolean = _Sql.Fx_Cuenta_Registros("MAEEDO", "IDMAEEDO = " & _Reserva_Idmaeedo & " And ESDO = 'N'")

                        If Not _Reg Then

                            MessageBoxEx.Show(Me, "Problemas con el número de orden de compra" & vbCrLf &
                                              "El número " & _NroDocumento & " no esta disponible" & vbCrLf & vbCrLf &
                                              "No se puede gestionar la acción", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)

                            Dim _Id_Enc As Integer = _RowRemota_Notificacion.Item("RCadena_Id_Enc")

                            Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Casi_DocTom Where Id_DocEnc = " & _Id_DocEnc & "
                                            Update " & _Global_BaseBk & "Zw_Remotas Set 
                                            CodFuncionario_Autoriza = 'XXX',Otorga = 'Rechazado',
                                            Observaciones = 'PROBLEMAS CON EL NRO. DE ORDEN DE COMPRA - REVISE EL REGISTRO EN EL SISTEMA!!! - CIERRE AUTOMATICO',
                                            Fecha_Otorga = GetDate()
                                            Where NroRemota = '" & _NroRemota & "'
                                            Update " & _Global_BaseBk & "Zw_Remotas_En_Cadena_01_Enc Set
                                            Fecha_Hora_Grab = Getdate(),Estado = 'R'
                                            Where Id_Enc = " & _Id_Enc

                            _Sql.Ej_consulta_IDU(Consulta_sql)

                            Me.Close()

                        End If

                    End If

                    If _CodPermiso = "Comp0095" Then

                        For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows

                            Dim _Codigo = _Fila.Cells("Codigo").Value
                            Dim _Reg = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_Prod_Usuario_Validador",
                                                                "Empresa = '" & ModEmpresa_Doc & "' And CodFuncionario = '" & FUNCIONARIO & "' And Codigo = '" & _Codigo & "'")

                            If Not CBool(_Reg) Then
                                _Fila.DefaultCellStyle.ForeColor = Color.LightGray
                            End If

                        Next

                    End If

                End If

            End If

            _Bloquear_Edicion_Detalle = True

            Lbl_InfoVtaAcumMes.Text = Me.Text
            Me.Text += Space(2) & ",DOCUMENTO EN ESTADO PENDIENTE PERMISO: " & _NroRemota & " - " & UCase(_Nombre_Permiso)


            _Revisando_Situacion_Comercial = False

            Warning_Visado.Visible = False
            Btn_Desbloquear_Visado.Visible = False

        Else

            Consulta_sql = "Select *,NOKOFU
                            From " & _Global_BaseBk & "Zw_Casi_DocTom
                            Left Join TABFU On KOFU = CodFuncionario
                            Where Id_DocEnc = " & _Id_DocEnc
            Dim _Row_Tomado As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            Dim _Nokofu = _Row_Tomado.Item("NOKOFU")

            Consulta_sql = " Update " & _Global_BaseBk & "Zw_Notificaciones Set Mostrar = 0,Autorizado = 0,Rechazado = 0 Where NroRemota = '" & _NroRemota & "'"
            _Sql.Ej_consulta_IDU(Consulta_sql)

            MessageBoxEx.Show(Me, "El documento fue tomado en el intertanto por " & Environment.NewLine &
                              _Nokofu, "Validación", MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, Me.TopMost)

            Me.Close()

        End If

        Sb_Revisar_Si_Hay_Archivos_Adjuntos()

        Me.Enabled = True
        Me.Refresh()

    End Sub

    Sub Sb_Autorizar_Permiso_Solicitado()

        Dim _Crea_Doc_Definitivo As Boolean

        Dim _Crear_Doc_Def_Al_Grabar As Boolean = _RowRemota_Notificacion.Item("Crear_Doc_Def_Al_Grabar")
        Dim _CodPermiso As String = _RowRemota_Notificacion.Item("CodPermiso")
        Dim _Id_Enc As Integer = _RowRemota_Notificacion.Item("RCadena_Id_Enc")

        Select Case _CodPermiso

            Case "Bkp00014", "Bkp00039"

                If _Crear_Doc_Def_Al_Grabar Then

                    If Fx_Reevaluar_Permisos_Stock(_CodPermiso) Then
                        Sb_Autorizar_X_Descuentos_Crear_Doc_Definitivo()
                        _Crea_Doc_Definitivo = True
                    End If

                Else
                    Fx_Autorizar_X_Descuentos(False)
                End If

            Case "Bkp00015", "Bkp00019", "Bkp00033", "Bkp00057", "ODp00017", "Bkp00062", "Doc00098", "Doc00101", "Doc00102", "Doc00161" ', "Doc00103"

                If _Crear_Doc_Def_Al_Grabar Then

                    If Fx_Reevaluar_Permisos_Stock(_CodPermiso) Then

                        Sb_Autorizar_X_Permiso_Remoto_Crear_Doc_Definitivo()
                        _Crea_Doc_Definitivo = True

                    End If

                Else

                    Sb_Autorizar_X_Permiso_Remoto(_CodPermiso)

                End If

            Case "Comp0092"

                Sb_Autorizar_X_Solicitud_De_Compra(_Crea_Doc_Definitivo)

            Case "Comp0095"

                _Crea_Doc_Definitivo = _Crear_Doc_Def_Al_Grabar
                Sb_Autorizar_X_Solicitud_De_Compra_Validar_Productos(_Crea_Doc_Definitivo)

            Case Else

                Sb_Autorizar_X_Permiso_Remoto(_CodPermiso)

        End Select

        If _Crea_Doc_Definitivo Then

            If CBool(_New_Idmaeedo) Then
                '_Id_Enc = 6
                If CBool(_Id_Enc) Then

                    Consulta_sql = "Select Top 1 * From " & _Global_BaseBk & "Zw_Remotas_En_Cadena_01_Enc Where Id_Enc = " & _Id_Enc

                    Dim _Row_Remotas_En_Cadena_01_Enc As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                    Consulta_sql = "Select Top 1 * From MAEEDO Where IDMAEEDO =" & _New_Idmaeedo
                    Dim _Rom_New_Maeedo As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                    Consulta_sql = "Update " & _Global_BaseBk & "Zw_Remotas_En_Cadena_01_Enc Set
                                    Estado = 'A',
                                    Idmaeedo = " & _Rom_New_Maeedo.Item("IDMAEEDO") & ",
                                    Tido = '" & _Rom_New_Maeedo.Item("TIDO") & "',
                                    Nudo = '" & _Rom_New_Maeedo.Item("NUDO") & "',
                                    Total_Documento = " & De_Num_a_Tx_01(_Rom_New_Maeedo.Item("VABRDO"), False, 5) & ",
                                    Fecha_Hora_Grab = Getdate()
                                    Where Id_Enc = " & _Id_Enc
                    _Sql.Ej_consulta_IDU(Consulta_sql)

                    Dim _Id_DocEnc = _RowRemota_Notificacion.Item("Id_Casi_DocEnc")

                    'Revisar Ordenes de despachopendientes...

                    If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Venta Or
                      _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Traslado_Interno Then

                        Consulta_sql = "Select Top 1 * From " & _Global_BaseBk & "Zw_Despachos_Doc Where Archidrst = 'Zw_Casi_DocEnc' And Idrst = " & _Id_DocEnc
                        Dim _Row_Despachos_Doc As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                        If Not IsNothing(_Row_Despachos_Doc) Then

                            Dim _Id_Despacho = _Row_Despachos_Doc.Item("Id_Despacho")

                            _Cl_Despacho = New Clas_Despacho(False)
                            _Cl_Despacho.Sb_Cargar_Despacho(_Id_Despacho)
                            _Cl_Despacho.Sb_Crear_Desdespacho_Desde_Permiso_Remoto_Aprobado(_New_Idmaeedo, False)

                            Consulta_sql = "Update " & _Global_BaseBk & "Zw_Despachos Set Id_Despacho_Padre = Id_Despacho Where Id_Despacho_Padre = 0"
                            _Sql.Ej_consulta_IDU(Consulta_sql)

                        End If

                    End If

                    Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Casi_DocEnc Where Id_DocEnc = " & _Id_DocEnc & "
                                    Delete " & _Global_BaseBk & "Zw_Casi_DocDet Where Id_DocEnc = " & _Id_DocEnc & "
                                    Delete " & _Global_BaseBk & "Zw_Casi_DocDsc Where Id_DocEnc = " & _Id_DocEnc & "
                                    Delete " & _Global_BaseBk & "Zw_Casi_DocImp Where Id_DocEnc = " & _Id_DocEnc & "
                                    Delete " & _Global_BaseBk & "Zw_Casi_DocObs Where Id_DocEnc = " & _Id_DocEnc & "
                                    Delete " & _Global_BaseBk & "Zw_Casi_DocPer Where Id_DocEnc = " & _Id_DocEnc & "
                                    Delete " & _Global_BaseBk & "Zw_Referencias_Dte Where Id_Doc = " & _Id_DocEnc & " And Kasi = 1
                                    Delete " & _Global_BaseBk & "Zw_Notificaciones Where RCadena_Id_Enc = " & _Id_Enc & "
                                    Delete " & _Global_BaseBk & "Zw_Casi_DocTag Where Id_DocEnc = " & _Id_Enc

                    _Sql.Fx_Eje_Condulta_Insert_Update_Delte_TRANSACCION(Consulta_sql)

                    If _Sql.Fx_Existe_Tabla(_Global_BaseBk & "Zw_Casi_DocArc") Then

                        '' Traspasamos los archivos adjuntos desde el documento Casi_Bakapp hacia el documento definitivo en Random

                        Consulta_sql = "Insert Into " & _Global_BaseBk & "Zw_Docu_Archivos (Idmaeedo, Nombre_Archivo, Archivo, Fecha, CodFuncionario) 
                                Select " & _New_Idmaeedo & ",Nombre_Archivo,Archivo,Fecha,CodFuncionario From " & _Global_BaseBk & "Zw_Casi_DocArc Where Id_DocEnc = " & _Id_DocEnc & " 
                                Delete " & _Global_BaseBk & "Zw_Casi_DocArc Where Id_DocEnc = " & _Id_DocEnc
                        _Sql.Fx_Eje_Condulta_Insert_Update_Delte_TRANSACCION(Consulta_sql)

                    End If

                End If

            End If

        Else

            Dim _Id_DocEnc = _RowRemota_Notificacion.Item("Id_Casi_DocEnc")

            If _Autorizado_Remota Then

                Consulta_sql = "Update " & _Global_BaseBk & "Zw_Remotas_En_Cadena_01_Enc Set
                                Estado = 'P',
                                Fecha_Hora_Grab = Getdate()
                                Where Id_Enc = " & _Id_Enc & "
                                Update " & _Global_BaseBk & "Zw_Casi_DocEnc Set Vizado = 1 Where Id_DocEnc = " & _Id_DocEnc & "
                                Delete " & _Global_BaseBk & "Zw_Notificaciones Where RCadena_Id_Enc In (" & _Id_Enc & ") And (Autorizado = 1 Or Rechazado = 1)
                                Delete " & _Global_BaseBk & "Zw_Notificaciones Where RCadena_Id_Enc In (" & _Id_DocEnc & ") And (Autorizado = 1 Or Rechazado = 1)"
                _Sql.Ej_consulta_IDU(Consulta_sql)

                'Sb_Reestablecer_Stock_En_Zw_Prod_Stock(_Tido, _TblDetalle)

            End If

        End If

    End Sub

    Sub Sb_Autorizar_X_Descuentos_Crear_Doc_Definitivo()

        Dim _Otorga = "Autorizado"

        Dim _Id_DocEnc = _RowRemota_Notificacion.Item("Id_Casi_DocEnc")
        Dim _NroRemota As String = _RowRemota_Notificacion.Item("NroRemota")

        Consulta_sql = "Select * From " & _Global_BaseBk & "ZW_PermisosVsUsuarios" & Environment.NewLine &
                       "Where CodUsuario = '" & FUNCIONARIO & "' And CodPermiso = 'Bkp00039'"
        Dim _Row_Permisos As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)


        Dim _Dscto_Global As Double = _TblEncabezado.Rows(0).Item("Total_Porc_Dscto")

        If Not (_Row_Permisos Is Nothing) Then

            Dim _Valor_Dscto As Double = Math.Round(_Row_Permisos.Item("Valor_Dscto") / 100, 4)

            If _Valor_Dscto >= _Dscto_Global Then

                For Each _Fila As DataRow In _TblDetalle.Rows
                    _Fila.Item("CodFunAutoriza") = FUNCIONARIO
                Next


                Dim _Filtro_Idmaeedo_Dori = Generar_Filtro_IN(_TblDetalle, "", "Idmaeedo_Dori", True, False)

                Consulta_sql = "Select IDMAEEDO From MAEEDO Where IDMAEEDO In " & _Filtro_Idmaeedo_Dori
                Dim _Tbl_Dori As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

                'Abrimos todas las filas de los documentos relacionados

                For Each _Fila As DataRow In _Tbl_Dori.Rows
                    Dim _Idmaeedo_Dori = _Fila.Item("IDMAEEDO")
                    Consulta_sql = "Select * From MAEDDO Where IDMAEEDO = " & _Idmaeedo_Dori
                    Dim _Tbl_Maeddo As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)
                    Dim Cerrar_Doc As New Clas_Cerrar_Documento
                    Cerrar_Doc.Fx_Abrir_Documento(_Idmaeedo_Dori, _Tbl_Maeddo)
                Next

                Sb_Grabar_Documento(_New_Idmaeedo, False)

                If CBool(_New_Idmaeedo) Then

                    Consulta_sql = "Update " & _Global_BaseBk & "Zw_Remotas Set 
                                    CodFuncionario_Autoriza = '" & FUNCIONARIO & "',Permiso_Otorgado = 1,
                                    Otorga = '" & _Otorga & "',Fecha_Otorga = GetDate(),Idmaeedo = " & _New_Idmaeedo & ",NombreEquipo_Auto = '" & _NombreEquipo & "'
                                    Where Id_Casi_DocEnc = " & _Id_DocEnc & " --NroRemota = '" & _NroRemota & "'
                                    Delete " & _Global_BaseBk & "Zw_Casi_DocTom Where Id_DocEnc = " & _Id_DocEnc
                    _Sql.Ej_consulta_IDU(Consulta_sql)

                    _Autorizado_Remota = True

                    Me.Close()

                End If

            Else

                Dim _Total_Dscto_Porcentaje As Double = _TblEncabezado.Rows(0).Item("Total_Porc_Dscto")

                MessageBoxEx.Show(Me, "Descuento global según documento " & FormatPercent(_Total_Dscto_Porcentaje, 2) & Environment.NewLine &
                                  "Descuento máximo permitido para el usuario: " & FormatPercent(_Valor_Dscto, 2),
                                  "PERMISO DENEGADO",
                                  MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)

            End If

        Else

            MessageBoxEx.Show(Me, "Usted no posee permiso para realizar esta acción" & Environment.NewLine &
                              "Permiso Nro: Bkp00039", "Validación",
                              MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)

        End If

    End Sub

    Function Fx_Autorizar_X_Descuentos(_Solo_Ver_Permiso As Boolean) As Boolean

        Consulta_sql = "Select * From " & _Global_BaseBk & "ZW_PermisosVsUsuarios 
                        Where CodUsuario = '" & FUNCIONARIO & "' And CodPermiso = 'Bkp00039'"

        Dim _Row_Permisos As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)
        Dim _Dscto_Global As Double = _TblEncabezado.Rows(0).Item("Total_Porc_Dscto")

        If Not (_Row_Permisos Is Nothing) Then

            Dim _Valor_Dscto As Double = Math.Round(_Row_Permisos.Item("Valor_Dscto") / 100, 4)

            If _Valor_Dscto >= _Dscto_Global Then

                If _Revision_Remota Then

                    If Not _Solo_Ver_Permiso Then
                        Sb_Autorizar_X_Permiso_Remoto("Bkp00039")
                    End If

                    Return True

                End If

            Else

                MessageBoxEx.Show(Me, "Descuento global según documento " & Lbl_Total_Porc_Dscto.Text & Environment.NewLine &
                                  "Descuento máximo permitido para el usuario " & FUNCIONARIO.Trim & ": " & FormatPercent(_Valor_Dscto, 2),
                                  "PERMISO DENEGADO", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)

            End If

        Else

            MessageBoxEx.Show(Me, "Usted no posee permiso para realizar esta acción" & Environment.NewLine &
                              "Permiso Nro: Bkp00039", "Validación",
                              MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)

        End If

    End Function

    Sub Sb_Autorizar_X_Solicitud_De_Compra(ByRef _Crea_Doc_Definitivo As Boolean)

        Dim _Permiso = "Comp0092"

        Dim _Id_Enc = _RowRemota_Notificacion.Item("RCadena_Id_Enc")
        Dim _Nro_RCadena = _RowRemota_Notificacion.Item("Nro_RCadena")
        Dim _Id_DocEnc = _RowRemota_Notificacion.Item("Id_Casi_DocEnc")
        Dim _NroRemota As String = _RowRemota_Notificacion.Item("NroRemota")
        Dim _CodFuncionario_Solicita As String = _RowRemota_Notificacion.Item("CodFuncionario_Solicita")

        Dim _CodFuncionario = _TblEncabezado.Rows(0).Item("CodFuncionario")
        Dim _Valor_Max_Compra_Responzable As Double

        Consulta_sql = "Select * From " & _Global_BaseBk & "ZW_PermisosVsUsuarios
                        Where CodUsuario = '" & FUNCIONARIO & "' And CodPermiso = '" & _Permiso & "'"
        Dim _Row_Permisos_Responzable As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        If Not IsNothing(_Row_Permisos_Responzable) Then
            _Valor_Max_Compra_Responzable = _Row_Permisos_Responzable.Item("Valor_Max_Compra")
        End If

        Consulta_sql = "Select * From " & _Global_BaseBk & "ZW_PermisosVsUsuarios
                        Where CodUsuario = '" & FUNCIONARIO & "' And CodPermiso = '" & _Permiso & "'"
        Dim _Row_Permisos As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        Dim _Total_Bruto As Double = LblTotalBruto.Tag

        If Not (_Row_Permisos Is Nothing) Then

            Dim _Moneda_Doc As String = _TblEncabezado.Rows(0).Item("Moneda_Doc")
            Dim _Valor_Dolar As Double = _TblEncabezado.Rows(0).Item("Valor_Dolar")
            Dim _Tasadorig_Doc As Double = _TblEncabezado.Rows(0).Item("Tasadorig_Doc")

            If _Moneda_Doc.ToString.Trim <> "$" Then
                _Total_Bruto = Math.Round(_Total_Bruto * _Tasadorig_Doc, 0)
            End If

            Dim _Valor_Max_Compra As Double = _Row_Permisos.Item("Valor_Max_Compra")

            If _Valor_Max_Compra >= _Valor_Max_Compra_Responzable Then

                Dim _Puede_Dar_Permiso = False
                Dim _Jefes As New List(Of String)

                Fx_Insertar_Jefe_Y_SubJefes(_CodFuncionario_Solicita, _Jefes)

                For Each _CodJefe As String In _Jefes

                    If _CodJefe = FUNCIONARIO Then
                        _Puede_Dar_Permiso = True
                        Exit For
                    End If

                Next

                If _Puede_Dar_Permiso Then

                    If _Valor_Max_Compra >= _Total_Bruto Then

                        'La solicitud ha sido aprobada exitosamente por lo que se ha generado la Orden de Compra N°XXXXXX

                        Sb_Autorizar_X_Permiso_Remoto_Crear_Doc_Definitivo()

                        Consulta_sql = "Select * From MAEEDO Where IDMAEEDO = " & _New_Idmaeedo
                        Dim _Row_Occ As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                        If Not IsNothing(_Row_Occ) Then

                            MessageBoxEx.Show(Me, "Se ha generado la Orden de Compra N° " & _Row_Occ.Item("NUDO"), "La solicitud ha sido aprobada exitosamente",
                                              MessageBoxButtons.OK, MessageBoxIcon.Information)

                            _Crea_Doc_Definitivo = True

                        End If

                    Else

                        Consulta_sql = "Select CodJefe,NOKOFU,CodJefeReemplazo 
                                        From " & _Global_BaseBk & "Zw_Usuarios_VS_Jefes 
                                        Inner Join TABFU On KOFU = CodJefe 
                                        Where CodFuncionario = '" & FUNCIONARIO & "' And Empresa = '" & ModEmpresa_Doc & "'"
                        Dim _Row_Jefe As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                        Dim _CodJefe As String = "???"
                        Dim _NombreJefe As String = "!!!!"

                        If Not IsNothing(_Row_Jefe) Then
                            _CodJefe = _Row_Jefe.Item("CodJefe")
                            _NombreJefe = _Row_Jefe.Item("NOKOFU")
                        End If

                        MessageBoxEx.Show(Me, "Solicitud aprobada exitosamente, sin embargo pasará a evaluación de su jefatura" & vbCrLf &
                                              "ya que el monto de la solicitud excede su rango de aprobación." & vbCrLf & vbCrLf &
                                              "Monto Solicitado: " & FormatNumber(_Total_Bruto, 0) & vbCrLf &
                                              "Monto Autorizado: " & FormatNumber(_Valor_Max_Compra, 0) & vbCrLf &
                                              "Jefatura: " & _CodJefe.Trim & "-" & _NombreJefe.Trim, "Autorizado", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)

                        Sb_Autorizar_X_Permiso_Remoto(_Permiso)

                    End If

                Else

                    MessageBoxEx.Show(Me, "Usted no puede autorizar esta Orden de compra, ya que no tiene relación de jefatura con el usuario que solicita el permiso",
                                              "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                    Return

                End If

            Else

                Dim _Total_Dscto_Porcentaje As Double = _TblEncabezado.Rows(0).Item("Total_Porc_Dscto")

                MessageBoxEx.Show(Me, "Valor máximo permitido para el usuario: " & FormatNumber(_Valor_Max_Compra, 0),
                                  "PERMISO DENEGADO",
                                  MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)

            End If

        Else

            MessageBoxEx.Show(Me, "Usted no posee permiso para realizar esta acción" & Environment.NewLine &
                              "Permiso Nro: " & _Permiso, "Validación",
                              MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)

        End If

    End Sub

    Sub Sb_Autorizar_X_Solicitud_De_Compra_Validar_Productos(ByRef _Crea_Doc_Definitivo As Boolean)

        Dim _Permiso = "Comp0095"

        Dim _Id_Enc = _RowRemota_Notificacion.Item("RCadena_Id_Enc")
        Dim _Nro_RCadena = _RowRemota_Notificacion.Item("Nro_RCadena")
        Dim _Id_DocEnc = _RowRemota_Notificacion.Item("Id_Casi_DocEnc")
        Dim _NroRemota As String = _RowRemota_Notificacion.Item("NroRemota")
        Dim _CodFuncionario_Solicita As String = _RowRemota_Notificacion.Item("CodFuncionario_Solicita")

        Dim _CodFuncionario = _TblEncabezado.Rows(0).Item("CodFuncionario")

        Consulta_sql = "Select * From " & _Global_BaseBk & "ZW_PermisosVsUsuarios
                        Where CodUsuario = '" & FUNCIONARIO & "' And CodPermiso = '" & _Permiso & "'"
        Dim _Row_Permisos As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        Dim _Puede_Dar_Permiso = False

        If (_Row_Permisos Is Nothing) Then

            MessageBoxEx.Show(Me, "Usted no posee permiso para realizar esta acción" & Environment.NewLine &
                            "Permiso Nro: " & _Permiso, "Validación",
                            MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
            Return

        End If

        For Each _Fila As DataRow In _TblDetalle.Rows

            Dim _Codigo = _Fila.Item("Codigo")
            Dim _FunValida_Compra As String = _Fila.Item("FunValida_Compra").ToString.Trim

            If String.IsNullOrEmpty(_FunValida_Compra) Then

                Dim _Reg = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_Prod_Usuario_Validador",
                                                "Empresa = '" & ModEmpresa_Doc & "' And CodFuncionario = '" & FUNCIONARIO & "' And Codigo = '" & _Codigo & "'")

                If CBool(_Reg) Then

                    _Fila.Item("FunValida_Compra") = FUNCIONARIO
                    _Puede_Dar_Permiso = True

                End If

            End If

        Next

        If Not _Puede_Dar_Permiso Then

            MessageBoxEx.Show(Me, "Usted no posee permiso para realizar esta acción" & Environment.NewLine &
                         "No hay productos que pueda validar", "Validación",
                         MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
            Return

        End If

        If _Puede_Dar_Permiso Then

            If _Crea_Doc_Definitivo Then

                Sb_Autorizar_X_Permiso_Remoto_Crear_Doc_Definitivo()

                Consulta_sql = "Select * From MAEEDO Where IDMAEEDO = " & _New_Idmaeedo
                Dim _Row_Occ As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                If Not IsNothing(_Row_Occ) Then

                    MessageBoxEx.Show(Me, "Se ha generado la Orden de Compra N° " & _Row_Occ.Item("NUDO"), "La solicitud ha sido aprobada exitosamente",
                                                  MessageBoxButtons.OK, MessageBoxIcon.Information)

                    _Crea_Doc_Definitivo = True

                End If

            Else

                MessageBoxEx.Show(Me, "Solicitud aprobada exitosamente, sin embargo pasará a la siguiente evaluación.", "Autorizado",
                                  MessageBoxButtons.OK, MessageBoxIcon.Information)

                Sb_Autorizar_X_Permiso_Remoto(_Permiso)

                For Each _Fila As DataRow In _TblDetalle.Rows

                    Dim _Id_DocDet = _Fila.Item("Id_DocDet")
                    Dim _FunValida_Compra = _Fila.Item("FunValida_Compra")

                    Consulta_sql = "Update " & _Global_BaseBk & "Zw_Casi_DocDet " &
                                   "Set FunValida_Compra = '" & _FunValida_Compra & "' Where Id_DocDet = " & _Id_DocDet
                    _Sql.Ej_consulta_IDU(Consulta_sql)

                Next

            End If

        End If

    End Sub

    Sub Sb_Autorizar_X_Permiso_Remoto(_CodPermiso As String)

        _Autorizado_Remota = True

        Dim _Id_Rem = _RowRemota_Notificacion.Item("Id_Rem")
        Dim _Id_DocEnc = _RowRemota_Notificacion.Item("Id_Casi_DocEnc")
        Dim _NroRemota As String = _RowRemota_Notificacion.Item("NroRemota")

        Consulta_sql = "Update " & _Global_BaseBk & "Zw_Remotas Set 
                        CodFuncionario_Autoriza = '" & FUNCIONARIO & "',Permiso_Otorgado = 1,Otorga = 'Autorizado'," &
                       "Fecha_Otorga = GetDate(),NombreEquipo_Auto = '" & _NombreEquipo & "'
                        Where Id_Rem = " & _Id_Rem & "
                        Update " & _Global_BaseBk & "Zw_Casi_DocPer Set Autorizado = 1,CodFuncionario_Autoriza = '" & FUNCIONARIO &
                            "',NomFuncionario_Autoriza = '" & Nombre_funcionario_activo & "',NroRemota = '" & _NroRemota & "'" & "
                        Where Id_DocEnc = " & _Id_DocEnc & " And CodPermiso = '" & _CodPermiso & "'
                        Delete " & _Global_BaseBk & "Zw_Casi_DocTom Where Id_DocEnc = " & _Id_DocEnc

        _Sql.Ej_consulta_IDU(Consulta_sql)

        Dim _RCadena_Id_Enc As Integer = _RowRemota_Notificacion.Item("RCadena_Id_Enc")

        If CBool(_RCadena_Id_Enc) Then
            Sb_Cadena_Remota_Generar_Remota_y_Notificacion(_RCadena_Id_Enc, _Id_DocEnc)
        End If

        Me.Close()

    End Sub

    Sub Sb_Autorizar_X_Permiso_Remoto_Crear_Doc_Definitivo()

        _Autorizado_Remota = True

        Dim _Id_Rem = _RowRemota_Notificacion.Item("Id_Rem")
        Dim _Id_DocEnc = _RowRemota_Notificacion.Item("Id_Casi_DocEnc")
        Dim _NroRemota As String = _RowRemota_Notificacion.Item("NroRemota")
        Dim _Nro_RCadena As String = _RowRemota_Notificacion.Item("Nro_RCadena")


        Dim _Filtro_Idmaeedo_Dori = Generar_Filtro_IN(_TblDetalle, "", "Idmaeedo_Dori", True, False)

        Consulta_sql = "Select IDMAEEDO From MAEEDO Where IDMAEEDO In " & _Filtro_Idmaeedo_Dori
        Dim _Tbl_Dori As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

        'Abrimos todas las filas de los documentos relacionados

        For Each _Fila As DataRow In _Tbl_Dori.Rows
            Dim _Idmaeedo_Dori = _Fila.Item("IDMAEEDO")
            Consulta_sql = "Select * From MAEDDO Where IDMAEEDO = " & _Idmaeedo_Dori
            Dim _Tbl_Maeddo As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)
            Dim Cerrar_Doc As New Clas_Cerrar_Documento
            Cerrar_Doc.Fx_Abrir_Documento(_Idmaeedo_Dori, _Tbl_Maeddo)
        Next

        Sb_Grabar_Documento(_New_Idmaeedo, False)

        'Cerramos todas las filas de los documentos relacionados

        For Each _Fila As DataRow In _Tbl_Dori.Rows
            Dim _Idmaeedo_Dori = _Fila.Item("IDMAEEDO")
            Consulta_sql = "Select * From MAEDDO Where IDMAEEDO = " & _Idmaeedo_Dori
            Dim _Tbl_Maeddo As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)
            Dim Cerrar_Doc As New Clas_Cerrar_Documento
            Cerrar_Doc.Fx_Cerrar_Documento(_Idmaeedo_Dori, _Tbl_Maeddo)
        Next

        If CBool(_New_Idmaeedo) Then

            If _Sql.Fx_Existe_Tabla(_Global_BaseBk & "Zw_Casi_DocArc") Then
                '' Traspasamos los archivos adjuntos desde el documento Casi_Bakapp hacia el documento definitivo en Random
                Consulta_sql = "Insert Into " & _Global_BaseBk & "Zw_Docu_Archivos (Idmaeedo, Nombre_Archivo, Archivo, Fecha, CodFuncionario) 
                                Select " & _New_Idmaeedo & ",Nombre_Archivo,Archivo,Fecha,CodFuncionario From " & _Global_BaseBk & "Zw_Casi_DocArc Where Id_DocEnc = " & _Id_DocEnc & " 
                                Delete " & _Global_BaseBk & "Zw_Casi_DocArc Where Id_DocEnc = " & _Id_DocEnc
                _Sql.Fx_Eje_Condulta_Insert_Update_Delte_TRANSACCION(Consulta_sql)

            End If

            ''Cerramos la Remota
            Consulta_sql = "Update " & _Global_BaseBk & "Zw_Remotas Set 
                            CodFuncionario_Autoriza = '" & FUNCIONARIO & "',Permiso_Otorgado = 1,
                            Otorga = 'Autorizado',Fecha_Otorga = GetDate(),NombreEquipo_Auto = '" & _NombreEquipo & "',Idmaeedo = " & _New_Idmaeedo & "
                            Where Id_Rem = " & _Id_Rem & " --Id_Casi_DocEnc = " & _Id_DocEnc & " And NroRemota = '" & _NroRemota & "'
                            Delete " & _Global_BaseBk & "Zw_Casi_DocTom Where Id_DocEnc = " & _Id_DocEnc
            _Sql.Ej_consulta_IDU(Consulta_sql)

            If String.IsNullOrEmpty(_Nro_RCadena) Then
                _Nro_RCadena = "@@@@"
            End If

            Consulta_sql = "Update " & _Global_BaseBk & "Zw_Remotas Set Idmaeedo = " & _New_Idmaeedo & ",Id_Casi_DocEnc = 0
                            Where Id_Casi_DocEnc = " & _Id_DocEnc & " Or Nro_RCadena = '" & _Nro_RCadena & "'"
            _Sql.Ej_consulta_IDU(Consulta_sql)

            Me.Close()

        End If

    End Sub

    Private Sub Btn_Ver_Costos_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Ver_Costos.Click

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Bkp00037", Nothing, "", "") Then

            _Mostrar_Costos = True

            Lbl_Total_costo.Visible = _Mostrar_Costos
            Lbl_Total_Porc_Margen.Visible = _Mostrar_Margen
            Lbl_Total_Valor_Margen.Visible = _Mostrar_Margen

            Sb_Formato_Grilla_Detalle_Revision_situacion_Comercial()
            Btn_Ver_Costos.Enabled = False

        End If

    End Sub

    Private Sub Btn_Mostrar_Margenes_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Mostrar_Margenes.Click

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Bkp00038", Nothing, "", "") Then

            _Mostrar_Margen = True

            Lbl_Total_costo.Visible = _Mostrar_Costos
            Lbl_Total_Porc_Margen.Visible = _Mostrar_Margen
            Lbl_Total_Valor_Margen.Visible = _Mostrar_Margen

            Sb_Formato_Grilla_Detalle_Revision_situacion_Comercial()
            Btn_Mostrar_Margenes.Enabled = False

        End If

    End Sub

    Sub Sb_Rechazar_Permiso_Solicitado(_Motivo_Rechazo As String)

        _Rechazado_Remota = True
        _Autorizado_Remota = False

        Dim _Id_DocEnc = _RowRemota_Notificacion.Item("Id_Casi_DocEnc")
        Dim _NroRemota = _RowRemota_Notificacion.Item("NroRemota")
        Dim _Id_Enc As Integer = _RowRemota_Notificacion.Item("RCadena_Id_Enc")

        Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Casi_DocTom Where Id_DocEnc = " & _Id_DocEnc & vbCrLf &
                       "Update " & _Global_BaseBk & "Zw_Remotas Set " & vbCrLf &
                       "CodFuncionario_Autoriza = '" & FUNCIONARIO & "'" &
                       ",Otorga = 'Rechazado'" &
                       ",Observaciones = '" & _Motivo_Rechazo & "'" &
                       ",Fecha_Otorga = GetDate()" & vbCrLf &
                       "Where NroRemota = '" & _NroRemota & "'" & vbCrLf &
                       "Update " & _Global_BaseBk & "Zw_Remotas_En_Cadena_01_Enc Set" & vbCrLf &
                       "Fecha_Hora_Grab = Getdate()" &
                       ",Estado = 'R'" & vbCrLf &
                       "Where Id_Enc = " & _Id_Enc

        If _Sql.Ej_consulta_IDU(Consulta_sql) Then
            Sb_Reestablecer_Stock_En_Zw_Prod_Stock(_Tido, _TblDetalle)
        End If

        Me.Close()

    End Sub

    Function Fx_Validad_Cupo_Excedido(ByRef _Tiene_Cupo_Excedido As Boolean) As Boolean

        Dim _NOTRAEDEUD As Boolean = _RowEntidad.Item("NOTRAEDEUD")

        If _NOTRAEDEUD Then
            Return True
        End If

        Dim _Fun_Auto_Cupo_Exe = NuloPorNro(_TblEncabezado.Rows(0).Item("Fun_Auto_Cupo_Exe"), "")

        Dim _EnCurso_Total = _TblEncabezado.Rows(0).Item("TotalBrutoDoc")
        Dim _Autorizar_Venta_Con_Cupo_Exedido As Boolean
        Dim _Crsd_Disponible As Double
        Dim _Crto_Disponible As Double


        Dim Fm_D As New Frm_InfoEnt_Deudas_Doc_Comerciales(_RowEntidad, _EnCurso_Total, 0, 0, 0, True)
        Fm_D.Pro_Fun_Auto_Cupo_Exe = _Fun_Auto_Cupo_Exe
        _Autorizar_Venta_Con_Cupo_Exedido = Fm_D.Pro_Autorizar_Venta_Con_Cupo_Exedido
        _Crsd_Disponible = Fm_D.Pro_Crsd_Disponible
        _Crto_Disponible = Fm_D.Pro_Crto_Disponible
        Fm_D.Dispose()

        If _Crto_Disponible < 0 Then

            _Tiene_Cupo_Excedido = True

            If _Autorizar_Venta_Con_Cupo_Exedido Then

                Fx_Validad_Cupo_Excedido = _Autorizar_Venta_Con_Cupo_Exedido

            Else

                If Fx_Tiene_Permiso(Me, "Bkp00033", _Fun_Auto_Cupo_Exe, False) Then
                    Fx_Validad_Cupo_Excedido = True
                End If

            End If

        End If

    End Function

    Function Fx_Validad_Morosidad(ByRef _Tiene_Morosidad As Boolean) As Boolean

        Dim _Bloqueada As Boolean

        If Not Fx_Entidad_Tiene_Deudas_CtaCte(Me, _RowEntidad, False, False, _Bloqueada) Then

            Dim _Row() = _TblPermisos.Select("CodPermiso = 'Bkp00019'")

            Dim _Row_Permiso As DataRow = _Row(0)

            Dim _Fun_Auto_Deuda_Ven = _Row_Permiso.Item("CodFuncionario_Autoriza")

            If Fx_Tiene_Permiso(Me, "Bkp00019", _Fun_Auto_Deuda_Ven, False) Then
                Fx_Validad_Morosidad = True
            End If

            _Tiene_Morosidad = True

        End If

    End Function

    Function Fx_Validar_Descuentos(ByRef _Tiene_Dsctos_Superados As Boolean) As Boolean

        If _Hay_Descuentos_Globales Then
            Fx_Validar_Descuentos = Fx_Validar_Descuentos_Globales(_Tiene_Dsctos_Superados, False)
        Else
            Fx_Validar_Descuentos = Fx_Validar_Descuentos_Individuales(_Tiene_Dsctos_Superados, False)
        End If

    End Function

    Function Fx_Validar_Fecha_Despacho(ByRef _Tiene_X_05_Fecha_Despacho As Boolean) As Boolean

        Dim _Fun_Auto_Fecha_Des = NuloPorNro(_TblEncabezado.Rows(0).Item("Fun_Auto_Fecha_Des"), "")
        Dim _FechaRecepcion As Date = _TblEncabezado.Rows(0).Item("FechaRecepcion")

        Dim _Dias_Max_Fecha_Despacho = _Global_Row_Configuracion_Estacion.Item("Dias_Max_Fecha_Despacho")
        Dim _Dias_Max_Fecha_Despacho_Sab = _Global_Row_Configuracion_Estacion.Item("Dias_Max_Fecha_Despacho_Sab")
        Dim _Dias_Max_Fecha_Despacho_Dom = _Global_Row_Configuracion_Estacion.Item("Dias_Max_Fecha_Despacho_Dom")

        Dim _Fecha_Server As Date = FechaDelServidor()
        Dim _Fecha_Max_Despacho As Date = DateAdd(DateInterval.Day, _Dias_Max_Fecha_Despacho, _Fecha_Server)

        Dim _Dias_Habiles = Fx_Cuenta_Dias(_Fecha_Server, _FechaRecepcion, Opcion_Dias.Habiles)
        Dim _Dias_Sabado = Fx_Cuenta_Dias(_Fecha_Server, _FechaRecepcion, Opcion_Dias.Sabado)
        Dim _Dias_Domingo = Fx_Cuenta_Dias(_Fecha_Server, _FechaRecepcion, Opcion_Dias.Domingo)

        Dim _Total_Dias As Integer = _Dias_Habiles - 1

        _Fecha_Max_Despacho = DateAdd(DateInterval.Day, _Total_Dias, _Fecha_Server)

        If _Dias_Max_Fecha_Despacho_Sab Then _Total_Dias += _Dias_Sabado
        If _Dias_Max_Fecha_Despacho_Dom Then _Total_Dias += _Dias_Domingo

        _TblEncabezado.Rows(0).Item("FechaMaxRecepcion") = FormatDateTime(_Fecha_Max_Despacho, DateFormat.ShortDate)

        If _Total_Dias > _Dias_Max_Fecha_Despacho Then

            If Fx_Tiene_Permiso(Me, "Bkp00057", _Fun_Auto_Fecha_Des, False) Then
                Fx_Validar_Fecha_Despacho = True
            End If

            _Tiene_X_05_Fecha_Despacho = True

        End If

    End Function

    Function Fx_Validar_Solicitud_Compra(ByRef _Tiene_X_06_Solicitud_Compra As Boolean) As Boolean

        Dim _Permiso = "Comp0092"

        Dim _Total_Neto As Double = LblTotalNeto.Tag
        Dim _Total_Iva As Double = LblTotalIva.Tag
        Dim _Total_Ila As Double = LblTotalImpuestos.Tag
        Dim _Total_Bruto As Double = LblTotalBruto.Tag

        Dim _Valor_Max_Compra As Double

        Consulta_sql = "Select * From " & _Global_BaseBk & "ZW_PermisosVsUsuarios 
                            Where CodUsuario = '" & FUNCIONARIO & "' And CodPermiso = '" & _Permiso & "'"
        Dim _Row_Permiso_SOC As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        If Not IsNothing(_Row_Permiso_SOC) Then

            _Valor_Max_Compra = _Row_Permiso_SOC.Item("Valor_Max_Compra")

        End If

        Dim _Moneda_Doc As String = _TblEncabezado.Rows(0).Item("Moneda_Doc")
        Dim _Valor_Dolar As Double = _TblEncabezado.Rows(0).Item("Valor_Dolar")

        If _Moneda_Doc.ToString.Trim <> "$" Then
            _Total_Bruto = Math.Round(_Total_Bruto * _Valor_Dolar, 0)
        End If

        If _Valor_Max_Compra >= _Total_Bruto Then
            Fx_Validar_Solicitud_Compra = True
        End If

        _Tiene_X_06_Solicitud_Compra = True

    End Function

    Function Fx_Validar_Solicitud_Compra_Validar_Productos(ByRef _Tiene_X_07_Validar_Productos As Boolean) As Boolean

        Dim _Permiso = "Comp0095"
        Dim _Contar_Prod_Sin_Validacion = 0

        For Each _Fila As DataRow In _TblDetalle.Rows

            Dim _Codigo = _Fila.Item("Codigo")

            Dim _Reg = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_Prod_Usuario_Validador",
                                                "Empresa = '" & ModEmpresa_Doc & "' And CodFuncionario = '" & FUNCIONARIO & "' And Codigo = '" & _Codigo & "'")

            If CBool(_Reg) Then
                _Fila.Item("FunValida_Compra") = FUNCIONARIO
            Else
                _Contar_Prod_Sin_Validacion += 1
            End If

        Next

        _Tiene_X_07_Validar_Productos = CBool(_Contar_Prod_Sin_Validacion)

        Return Not CBool(_Contar_Prod_Sin_Validacion)

    End Function

    Function Fx_Validar_Cantidades_En_Documentos() As String

        For Each _Fila As DataRow In _TblDetalle.Rows

            Dim _Cantidad As Double = _Fila.Item("Cantidad")
            Dim _Prct As Boolean = _Fila.Item("Prct")

            If Not _Prct Then

                If Not CBool(_Cantidad) Then

                    Return "Existen productos con cantidad cero, debe corregir"

                End If

            End If

        Next

        Return String.Empty

    End Function

    Function Fx_Validar_Totales_En_Conceptos() As Boolean

        For Each _Fila As DataRow In _TblDetalle.Rows

            Dim _ValBrutoLinea As Double = _Fila.Item("ValBrutoLinea")
            Dim _Prct As Boolean = _Fila.Item("Prct")

            If _Prct Then

                If Not CBool(_ValBrutoLinea) Then

                    Return Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00042", Nothing, "", "")

                End If

            End If

        Next

        Return True

    End Function

    Function Fx_Validar_Precios_Cero_En_Documentos()

        If _Revision_Remota Then Return True

        Dim _NumRecord = 0

        For Each _Fila As DataRow In _TblDetalle.Rows

            Dim _Precio As Double = _Fila.Item("Precio")
            Dim _Prct As Boolean = _Fila.Item("Prct")

            If Not _Prct Then

                If Not CBool(_Precio) Then

                    _NumRecord += 1

                End If

            End If

        Next

        Dim _CodPermiso As String

        If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Venta Then
            _CodPermiso = "Doc00028"
        ElseIf _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Compra Then
            _CodPermiso = "Doc00029"
        Else
            _CodPermiso = "Doc00030"
        End If

        If _NumRecord > 0 Then

            Return Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, _CodPermiso, Nothing, "", "")
            'Return Fx_Tiene_Permiso(Me, _CodPermiso)

        Else
            Return True
        End If

    End Function

    Function Fx_Validar_Peso_Minimo_o_Valores_Por_Despacho_A_Domicilio(ByRef _Tiene_X_07_Min_Despacho As Boolean, _Mostrar_Mensaje As Boolean) As Boolean

        Try

            Dim _Peso_Min_Despacho, _Valor_Min_Despacho As Double

            Dim _Filtro_Prod = Generar_Filtro_IN(_TblDetalle, "", "Codigo", False, False, "'")

            Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Despachos_MiniCompXProd" & vbCrLf &
                           "Where Empresa = '" & ModEmpresa_Doc & "' And Codigo In " & _Filtro_Prod
            Dim _Tbl As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

            If _Tbl.Rows.Count Then

                _Peso_Min_Despacho = _Tbl.Rows(0).Item("Peso_Min_Despacho")
                _Valor_Min_Despacho = _Tbl.Rows(0).Item("Valor_Min_Despacho")

            Else

                Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Despachos_Configuracion" & vbCrLf &
                               "Where Empresa = '" & ModEmpresa_Doc & "'"
                Dim _Row As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                If Not IsNothing(_Row) Then
                    _Peso_Min_Despacho = _Row.Item("Peso_Min_Despacho")
                    _Valor_Min_Despacho = _Row.Item("Valor_Min_Despacho")
                End If

            End If

            Sb_Suma_Kilos()

            Dim _TotalNetoDoc As Double = _TblEncabezado.Rows(0).Item("TotalNetoDoc")
            Dim TotalKilos As Double = _TblEncabezado.Rows(0).Item("TotalKilos")

            _TblEncabezado.Rows(0).Item("MinKgDesp") = _Peso_Min_Despacho
            _TblEncabezado.Rows(0).Item("MinNetoDesp") = _Valor_Min_Despacho

            If IsNothing(_Cl_Despacho) Then
                Return True
            End If

            If _Cl_Despacho.Row_Despacho.Item("Tipo_Envio") <> "DD" Then
                Return True
            End If

            If _Peso_Min_Despacho > 0 AndAlso _Valor_Min_Despacho > 0 Then

                If TotalKilos < _Peso_Min_Despacho And _TotalNetoDoc < _Valor_Min_Despacho Then

                    _Tiene_X_07_Min_Despacho = True

                    If _Mostrar_Mensaje Then

                        MessageBoxEx.Show(Me, "Para poder hacer un despacho a domicilio debe cumplir con ciertos requisitos mínimos." & vbCrLf & vbCrLf &
                                      "Mínimo en Kg: " & FormatNumber(_Peso_Min_Despacho, 1) & ", mínimo de total neto: " & FormatCurrency(_Valor_Min_Despacho, 0) & vbCrLf &
                                      "Valores del documento: Kg " & FormatNumber(TotalKilos, 1) & ", total neto: " & FormatCurrency(_TotalNetoDoc, 0) & vbCrLf & vbCrLf &
                                      "¡Se necesitara permiso para poder grabar el documento!",
                                      "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)

                    End If

                    If Fx_Tiene_Permiso(Me, "ODp00017", FUNCIONARIO, False) Then
                        Return True
                    End If

                End If

            Else

                If _Valor_Min_Despacho > 0 Then

                    If _TotalNetoDoc < _Valor_Min_Despacho Then

                        _Tiene_X_07_Min_Despacho = True

                        If _Mostrar_Mensaje Then

                            Dim _Msg As String = "El monto neto total del documento es inferior al valor neto mínimo de venta necesario para realizar el despacho." & vbCrLf & vbCrLf &
                                              "Valor neto documento: " & FormatCurrency(_TotalNetoDoc, 0) & vbCrLf &
                                              "Valor mínimo para despachar: " & FormatCurrency(_Valor_Min_Despacho, 0) & vbCrLf & vbCrLf &
                                              "Para poder grabar el despacho a domicilio se necesitara un permiso"

                            MessageBoxEx.Show(Me, _Msg, "Validación",
                                              MessageBoxButtons.OK, MessageBoxIcon.Stop)

                        End If

                        If Fx_Tiene_Permiso(Me, "ODp00017", FUNCIONARIO, False) Then
                            Return True
                        End If

                    End If

                End If

            End If

        Catch ex As Exception
            _Cl_Despacho = Nothing
        End Try

    End Function

    Function Fx_Validad_MinimoVenta(ByRef _Tiene_MinVenta As Boolean) As Boolean

        If Not _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Configuracion", "ValorMinimoNVV") Then
            _Tiene_MinVenta = False
            Return True
        End If

        Dim _TotalNetoDoc As Double = _TblEncabezado.Rows(0).Item("TotalNetoDoc")
        Dim _ValorMinimoNVV As Double = _Global_Row_Configuracion_Estacion.Item("ValorMinimoNVV")

        If _TotalNetoDoc < _ValorMinimoNVV Then

            Dim _Row() = _TblPermisos.Select("CodPermiso = 'Bkp00062'")
            Dim _Row_Permiso As DataRow = _Row(0)

            Dim _Fun_Auto_Deuda_Ven = _Row_Permiso.Item("CodFuncionario_Autoriza")

            If Fx_Tiene_Permiso(Me, "Bkp00062", _Fun_Auto_Deuda_Ven, False) Then
                Return True
            End If

            _Tiene_MinVenta = True

        End If

    End Function

    Sub Sb_Suma_Kilos()

        Dim _SumKilos As Double = 0

        For Each _Fl As DataRow In _TblDetalle.Rows

            Dim _Codigo As String = _Fl.Item("Codigo")
            Dim _CantUd1 As Double = _Fl.Item("CantUd1")
            Dim _Pesoubic As Double = _Fl.Item("Pesoubic")
            Dim _Prct As Boolean = _Fl.Item("Prct")
            Dim _Tipr As String = _Fl.Item("Tipr")

            If Not _Prct And Fx_ProdConInfo(_Tipr) Then

                Dim _Kilos As Double = _Pesoubic

                If _Kilos = 0 Then _Kilos = 1
                _Kilos = _Kilos * _CantUd1

                _SumKilos += _Kilos

            End If

        Next

        _TblEncabezado.Rows(0).Item("TotalKilos") = _SumKilos

    End Sub

    Sub Sb_Agregar_Conceptos_Asociados()

        Dim _Suma_Recargos As Double = 0
        Dim _Campo_Recargo As String

        For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows

            Dim _Recargo_Campo As String = _Fila.Cells("Recargo_Campo").Value
            Dim _Recargo_Valor As Double = _Fila.Cells("Recargo_Valor").Value

            _Suma_Recargos += _Recargo_Valor

            If Not String.IsNullOrEmpty(_Recargo_Campo) Then
                _Campo_Recargo = _Recargo_Campo
            End If

            If CBool(_Recargo_Valor) Then

                _Fila.Cells("Recargo_Campo").Value = String.Empty
                _Fila.Cells("Recargo_Valor").Value = 0

                Sb_Procesar_Datos_De_Grilla(_Fila, "DescuentoPorc", False, False)

            End If

        Next

        If CBool(_Suma_Recargos) Then

            Dim _Campo As String
            Dim _Campo_Bk As String

            Sb_Nueva_Linea(_TblEncabezado.Rows(0).Item("ListaPrecios"))

            Dim _New_Fila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.RowCount - 1)

            Consulta_sql = "Select * From TABCT Where KOCT = '" & _Campo_Recargo & "'"
            Dim _RowConcepto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            Sb_Agregar_Concepto(_New_Fila, _RowConcepto)

            If ChkValores.Checked Then
                _Campo = "VADTNELI"
                _Campo_Bk = "ValNetoLinea"
            Else
                _Campo = "VADTBRLI"
                _Campo_Bk = "ValBrutoLinea"
            End If

            _New_Fila.Cells(_Campo_Bk).Value = _Suma_Recargos

            Sb_Procesar_Datos_De_Grilla(_New_Fila, _Campo_Bk, False, False, True)

        End If

        Dim _Suma_Recargos_Netos As Double
        Dim _Cantidades As Double

        For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows

            Dim _Prct As Boolean = _Fila.Cells("Prct").Value
            Dim _Tict As String = _Fila.Cells("Tict").Value
            Dim _Codigo As String = _Fila.Cells("Codigo").Value
            Dim _CantUd1 As Double = _Fila.Cells("CantUd1").Value
            Dim _ValNetoLinea As Double = _Fila.Cells("ValNetoLinea").Value

            Dim _Recargo_Campo As String = _Fila.Cells("Recargo_Campo").Value

            If _Prct And _Tict = "R" Then

                If String.IsNullOrEmpty(_Recargo_Campo) Then

                    Consulta_sql = "Select * From TABCT Where KOCT = '" & _Codigo & "'"
                    Dim _RowConcepto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                    If _RowConcepto.Item("RECAPRRE") Then
                        _Suma_Recargos_Netos += _ValNetoLinea
                        _Fila.Cells("Recargo_Campo").Value = "Rev"
                    End If

                End If

            Else

                _Cantidades += _CantUd1

            End If

        Next

        If CBool(_Suma_Recargos_Netos) Then

            Dim _Valor_Distribuir As Double = Math.Round(_Suma_Recargos_Netos / _Cantidades, 5)

            For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows

                Dim _Prct As Boolean = _Fila.Cells("Prct").Value
                Dim _Tict As String = _Fila.Cells("Tict").Value
                Dim _Codigo As String = _Fila.Cells("Codigo").Value
                Dim _Rtu As Double = _Fila.Cells("Rtu").Value
                Dim _PrecioNetoRealUd1 As Double = _Fila.Cells("PrecioNetoRealUd1").Value
                Dim _PrecioNetoRealUd2 As Double = _Fila.Cells("PrecioNetoRealUd2").Value

                Dim _Recargo_Campo As String = _Fila.Cells("Recargo_Campo").Value

                If Not _Prct Then

                    _PrecioNetoRealUd1 = _PrecioNetoRealUd1 + _Valor_Distribuir
                    _PrecioNetoRealUd2 = _PrecioNetoRealUd2 + (_Valor_Distribuir * _Rtu)

                    _Fila.Cells("PrecioNetoRealUd1").Value = Math.Round(_PrecioNetoRealUd1, 3)
                    _Fila.Cells("PrecioNetoRealUd2").Value = Math.Round(_PrecioNetoRealUd2, 3)

                End If

            Next

        End If

    End Sub

    Sub Sb_Actualizar_Permisos_Necesarios_Del_Documento_New()

        Dim _Vizado = Grilla_Encabezado.Rows(0).Cells("Vizado").Value

        Dim _Necesita_Permiso As Boolean
        Dim _Autorizado As Boolean
        Dim _Revisar_Stock_FcvBlv As Boolean = False

        If _Revision_Remota Then
            Return
        End If

        If _Tido = "GDI" Or _Tido = "GTI" Then
            _Autorizado = False : _Necesita_Permiso = False
            _Autorizado = Fx_Validar_Stock(False, _Necesita_Permiso)
            Sb_Revisar_Permiso("Bkp00015", _Autorizado, _Necesita_Permiso)
            Return
        End If

        If RutEmpresa.Trim = _RowEntidad.Item("KOEN").ToString.Trim Then
            Return
        End If

        _RowEntidad = Fx_Traer_Datos_Entidad_Tabla(_RowEntidad.Item("KOEN"), _RowEntidad.Item("SUEN")).Rows(0)

        If _Tido = "FCV" Or _Tido = "BLV" Then

            For Each _Fila As DataRow In _TblDetalle.Rows

                If _Fila.Item("Lincondest") Then

                    _Autorizado = False : _Necesita_Permiso = False
                    _Autorizado = Fx_Validar_Stock(False, _Necesita_Permiso)
                    Sb_Revisar_Permiso("Bkp00015", _Autorizado, _Necesita_Permiso)

                    If Not _Autorizado Then
                        _Revisar_Stock_FcvBlv = True
                    End If

                    Exit For

                End If

            Next

            If Not _Revisar_Stock_FcvBlv Then
                Sb_Revisar_Permiso("Bkp00015", False, False)
            End If

        End If

        If _Vizado And _Revisar_Stock_FcvBlv Then
            _Vizado = False
        End If

        If _Vizado And _Tido <> "GDV" And _Tido <> "GDP" Then
            Return
        End If

        For Each _Fl As DataRow In _TblPermisos.Rows
            If Not _Fl.Item("PermisoIndependiente") Then
                _Fl.Item("Autorizado") = False
                _Fl.Item("Necesita_Permiso") = False
                _Fl.Item("Permiso_Presencial") = False
                _Fl.Item("CodFuncionario_Autoriza") = String.Empty
                _Fl.Item("NomFuncionario_Autoriza") = String.Empty
            End If
        Next

        If _Tido = "NCV" Or _Tido = "GRC" Or _Tido = "FCC" Or _Tido = "GRD" Then
            Return
        End If

        Dim _Desde_Guia_Despacho = 0
        Dim _Contador_MS = 0         ' Contador para productos que mueven stock fisico
        Dim _Contador_NMS = 0        ' Contador para productos que NO mueven stock fisico   
        Dim _Desde_Factura = 0

        For Each _Fila As DataRow In _TblDetalle.Rows

            Dim _Tidopa As String = _Fila.Item("Tidopa")
            Dim _Prct As Boolean = _Fila.Item("Prct")
            Dim _Tipr As String = _Fila.Item("Tipr")
            Dim _Tict As String = _Fila.Item("Tict")

            If _Prct Then
                _Contador_NMS += 1
            Else

                If _Tipr = "SSN" Or _Tipr = "FLN" Then
                    _Contador_NMS += 1
                Else

                    If _Tidopa = "GDP" Or _Tidopa = "GDV" Then
                        _Desde_Guia_Despacho += 1
                    End If

                    If _Tidopa = "FCV" Or _Tidopa = "BLV" Then
                        _Desde_Factura += 1
                    End If

                    _Contador_MS += 1

                End If

            End If

        Next

        If CBool(_Desde_Guia_Despacho) Then

            If _Desde_Guia_Despacho = _Contador_MS Then
                Return
            Else
                _Autorizado = False : _Necesita_Permiso = False
                _Autorizado = Fx_Validar_Descuentos(_Necesita_Permiso)
                Sb_Revisar_Permiso("Bkp00039", _Autorizado, _Necesita_Permiso)

                If Not _Necesita_Permiso Then
                    Return
                End If

            End If

        End If

        If CBool(_Desde_Factura) Then

            If _Desde_Factura = _Contador_MS Then
                Return
            End If

        End If

        Dim _NecesitaPermisoFlPRe As Boolean
        Dim _CodPermisoFlPre As String
        Dim _CodPermisoFlCOV As String = "Doc00075"
        Dim _CodPermisoFlDoc As String = "Bkp00012"

        If _Tido = "COV" Or _Tido = "BLV" Or _Tido = "FCV" Or _Tido = "NVV" Or _Tido = "GDV" Or _Tido = "GDP" Then

            'If _Tido = "COV" Then
            '    _CodPermisoFlPre = _CodPermisoFlCOV
            'Else
            '    _CodPermisoFlPre = _CodPermisoFlDoc
            'End If

            For Each _FlPre As DataRow In _TblDetalle.Rows

                Dim _Precio As Double = Math.Round(NuloPorNro(_FlPre.Item("Precio"), 0), 0)
                Dim _Campo As String
                Dim _Precio_Lista As Double

                If ChkValores.Checked Then
                    _Campo = "PrecioNetoUdLista"
                Else
                    _Campo = "PrecioBrutoUdLista"
                End If

                _Precio_Lista = Math.Round(NuloPorNro(_FlPre.Item(_Campo), 0), 0)

                If _Precio <> _Precio_Lista Then
                    _NecesitaPermisoFlPRe = True
                    Exit For
                End If

            Next

            Dim _ListaPermisosInsertar As New List(Of String)
            Dim _ListaPermiso As New List(Of DataRow)

            For Each _Fl As DataRow In _TblPermisos.Rows

                Dim _Insertar_Permiso As Boolean

                If _Tido = "COV" Then
                    _CodPermisoFlPre = _CodPermisoFlCOV
                    If _Fl.Item("CodPermiso") = _CodPermisoFlDoc Then
                        If _Fl.Item("Autorizado") Or _Fl.Item("Solicitar_Permiso_Al_Final") Then
                            _ListaPermiso.Add(_Fl)
                            _Insertar_Permiso = True
                        End If
                    End If
                Else
                    _CodPermisoFlPre = _CodPermisoFlDoc
                    If _Fl.Item("CodPermiso") = _CodPermisoFlCOV Then
                        If _Fl.Item("Autorizado") Or _Fl.Item("Solicitar_Permiso_Al_Final") Then
                            _ListaPermiso.Add(_Fl)
                            _Insertar_Permiso = True
                        End If
                    End If
                End If

                If Not _NecesitaPermisoFlPRe Then
                    If _Fl.Item("CodPermiso") = _CodPermisoFlPre Then
                        _ListaPermiso.Add(_Fl)
                    End If
                End If

                If _Insertar_Permiso Then
                    Dim _Existe As Boolean
                    For Each _CodPso As String In _ListaPermisosInsertar
                        If _CodPso = _CodPermisoFlPre Then
                            _Existe = True
                            Exit For
                        End If
                    Next
                    If Not _Existe Then
                        _ListaPermisosInsertar.Add(_CodPermisoFlPre)
                    End If
                End If

            Next

            For Each _Fl As DataRow In _ListaPermiso
                _TblPermisos.Rows.Remove(_Fl)
            Next

            If _NecesitaPermisoFlPRe Then
                For Each _CodPso As String In _ListaPermisosInsertar
                    If Fx_Tiene_Permiso(Me, _CodPso,, False) Then
                        Fx_Incorporar_Permiso_Al_Documento(_TblPermisos, _CodPso, True, True, FUNCIONARIO, Nombre_funcionario_activo, "", True, True, False)
                    Else
                        Fx_Incorporar_Permiso_Al_Documento(_TblPermisos, _CodPso, True, False, "", "", "", False, True, True)
                    End If
                Next
            End If

        End If

        If _Tido = "COV" Then

            If _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Configuracion", "Las_Cotizaciones_No_Revisan_Permisos") Then

                Dim _Las_Cotizaciones_No_Revisan_Permisos As Boolean = _Global_Row_Configuracion_General.Item("Las_Cotizaciones_No_Revisan_Permisos")

                If _Las_Cotizaciones_No_Revisan_Permisos Then
                    Return
                End If

            End If

        End If

        If _Tido = "OCC" Then

            Dim _Usar_Validador_Prod_X_Compras As Boolean

            If _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Configuracion", "Usar_Validador_Prod_X_Compras") Then
                _Usar_Validador_Prod_X_Compras = _Global_Row_Configuracion_General.Item("Usar_Validador_Prod_X_Compras")
            End If

            If _Usar_Validador_Prod_X_Compras Then

                _Autorizado = False : _Necesita_Permiso = False
                _Autorizado = Fx_Validar_Solicitud_Compra_Validar_Productos(_Necesita_Permiso)
                Sb_Revisar_Permiso("Comp0095", _Autorizado, _Necesita_Permiso)

            End If

            _Autorizado = False : _Necesita_Permiso = False
            _Autorizado = Fx_Validar_Solicitud_Compra(_Necesita_Permiso)
            Sb_Revisar_Permiso("Comp0092", _Autorizado, _Necesita_Permiso)

        Else

            If _Tido <> "COV" Then

                If (_Tido = "BLV" Or _Tido = "FCV") And Not _Revisar_Stock_FcvBlv Then
                    Sb_Revisar_Permiso("Bkp00015", False, False)
                Else
                    _Autorizado = False : _Necesita_Permiso = False
                    _Autorizado = Fx_Validar_Stock(False, _Necesita_Permiso)
                    Sb_Revisar_Permiso("Bkp00015", _Autorizado, _Necesita_Permiso)
                End If

                _Autorizado = False : _Necesita_Permiso = False
                _Autorizado = Fx_Validad_Morosidad(_Necesita_Permiso)
                Sb_Revisar_Permiso("Bkp00019", _Autorizado, _Necesita_Permiso)

                '_Autorizado = False : _Necesita_Permiso = False
                '_Necesita_Permiso = Not Fx_RevisarProtestos(False, _RowEntidad)
                '_Autorizado = Fx_Tiene_Permiso(Me, "Doc00103",, False)
                'Sb_Revisar_Permiso("Doc00103", _Autorizado, _Necesita_Permiso)

                If _Tido = "NVV" Or _Tido = "GDV" Or _Tido = "GDP" Then

                    _Autorizado = False : _Necesita_Permiso = False
                    _Autorizado = Fx_Validad_MinimoVenta(_Necesita_Permiso)
                    Sb_Revisar_Permiso("Bkp00062", _Autorizado, _Necesita_Permiso)

                    Dim _Revisar As Boolean = True
                    Dim _Existe_Tbl_Entidades_Bakapp As Boolean = _Sql.Fx_Existe_Tabla(_Global_BaseBk & "Zw_Entidades")

                    If _Existe_Tbl_Entidades_Bakapp Then

                        Dim _Libera_NVV As Boolean
                        Dim _Koen As String = _RowEntidad.Item("KOEN")
                        Dim _Suen As String = _RowEntidad.Item("SUEN")

                        Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Entidades" & vbCrLf &
                                       "Where CodEntidad = '" & _Koen & "' And CodSucEntidad = '" & _Suen & "'"
                        Dim _Row_Entidades As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                        If IsNothing(_Row_Entidades) Then

                            Consulta_sql = "Insert Into " & _Global_BaseBk & "Zw_Entidades (CodEntidad,CodSucEntidad,Libera_NVV) Values ('" & _Koen & "','" & _Suen & "',0)" & vbCrLf &
                                           "Select * From " & _Global_BaseBk & "Zw_Entidades where CodEntidad = '" & _Koen & "' And CodSucEntidad = '" & _Suen & "'"
                            _Row_Entidades = _Sql.Fx_Get_DataRow(Consulta_sql)

                        End If

                        _Libera_NVV = _Row_Entidades.Item("Libera_NVV")

                        If _Libera_NVV Then

                            Consulta_sql = "Select * From MAEEN Where KOEN = '" & _Koen & "' And SUEN = '" & _Suen & "'"
                            Dim _Row As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                            Dim _SumCrto As Double = _Row.Item("CRSD") + _Row.Item("CRCH") + _Row.Item("CRLT") + _Row.Item("CRPA") + _Row.Item("CRTO")
                            _Revisar = CBool(_SumCrto)

                            If Not (_Revisar) Then
                                Sb_Revisar_Permiso("Bkp00019", False, False)
                            End If

                        End If

                    End If

                    If _TblEncabezado.Rows(0).Item("RevFincred") Then
                        _Revisar = False
                    End If

                    If _Revisar Then
                        _Autorizado = False : _Necesita_Permiso = False
                        _Autorizado = Fx_Validad_Cupo_Excedido(_Necesita_Permiso)
                        Sb_Revisar_Permiso("Bkp00033", _Autorizado, _Necesita_Permiso)
                    End If

                    'Fecha de vigencia del credito
                    If Fx_CreditoVigenteVencido(_RowEntidad) Then
                        If Not Fx_Tiene_Permiso(Me, "Doc00098",, False) Then
                            Sb_Revisar_Permiso("Doc00098", False, True)
                        End If
                    End If

                End If

                If _Tido = "NVV" Then

                    If Chk_Pickear.Visible And Not Chk_Pickear.Checked Then

                        If Not Fx_Tiene_Permiso(Me, "Doc00101", FUNCIONARIO, False) Then
                            Sb_Revisar_Permiso("Doc00101", False, True)
                        End If

                    End If

                    Dim _PidePermiso As Boolean = False

                    For Each _Fl As DataRow In _TblDetalle.Rows
                        If _Fl.Item("DesacRazTransf") And _Fl.Item("RtuVariable") Then
                            _PidePermiso = True
                            Exit For
                        End If
                    Next

                    If Not Chk_Pickear.Checked And _Global_Row_Configuracion_General.Item("NuncaPickeaDocConRTUDesactivada") Then
                        _PidePermiso = False
                    End If

                    If _PidePermiso Then

                        If Not Fx_Tiene_Permiso(Me, "Doc00102", FUNCIONARIO, False) Then
                            Sb_Revisar_Permiso("Doc00102", False, True)
                        End If

                    End If

                End If

                If Not String.IsNullOrEmpty(_RowEntidad.Item("KOFUEN").ToString.Trim) Then
                    For Each _Fl As DataRow In _TblDetalle.Rows
                        If _Fl.Item("CodVendedor").ToString.Trim <> _RowEntidad.Item("KOFUEN").ToString.Trim Then
                            If Not Fx_Tiene_Permiso(Me, "Doc00161", FUNCIONARIO, False) Then
                                Sb_Revisar_Permiso("Doc00161", False, True)
                            End If
                            Exit For
                        End If
                    Next
                End If

            End If

            _Autorizado = False : _Necesita_Permiso = False
            _Autorizado = Fx_Validar_Descuentos(_Necesita_Permiso)
            Sb_Revisar_Permiso("Bkp00039", _Autorizado, _Necesita_Permiso)

            _Autorizado = False : _Necesita_Permiso = False
            _Autorizado = Fx_Validar_Fecha_Despacho(_Necesita_Permiso)
            Sb_Revisar_Permiso("Bkp00057", _Autorizado, _Necesita_Permiso)

            If Not IsNothing(_Cl_Despacho) Then

                _Autorizado = False : _Necesita_Permiso = False
                _Autorizado = Fx_Validar_Peso_Minimo_o_Valores_Por_Despacho_A_Domicilio(_Necesita_Permiso, False)
                Sb_Revisar_Permiso("ODp00017", _Autorizado, _Necesita_Permiso)

            End If

        End If

    End Sub

    Function Fx_Revisar_Permisos_Necesarios_Del_Documento_NVVAuto(_CodFuncionario_Autoriza As String,
                                                                  _InsertarFuncionario As Boolean) As LsValiciones.Mensajes

        Dim _Mensaje As New LsValiciones.Mensajes
        Dim _Cl_RemotasEnCadena As New Cl_RemotasEnCadena(_Ds_Matriz_Documentos)

        Try

            Sb_Borrar_Lineas_En_Blanco()

            _TblEncabezado.Rows(0).Item("CodFuncionario") = _CodFuncionario_Autoriza

            'For Each _Fl As DataRow In _TblPermisos.Rows
            '    If Not _Fl.Item("PermisoIndependiente") Then
            '        _Fl.Item("Autorizado") = False
            '        _Fl.Item("Necesita_Permiso") = False
            '        _Fl.Item("Permiso_Presencial") = False
            '        _Fl.Item("CodFuncionario_Autoriza") = String.Empty
            '        _Fl.Item("NomFuncionario_Autoriza") = String.Empty
            '    End If
            'Next

            Dim _Autorizado As Boolean
            Dim _Necesita_Permiso As Boolean

            _Autorizado = False : _Necesita_Permiso = False
            _Autorizado = Fx_Validar_Stock(False, _Necesita_Permiso)

            If _Necesita_Permiso And Not _Autorizado Then
                _Cl_RemotasEnCadena.Sb_Insertar_DetalleConUsuario("Bkp00015", _InsertarFuncionario)
            End If

            _Autorizado = False : _Necesita_Permiso = False
            _Autorizado = Fx_Validad_Morosidad(_Necesita_Permiso)

            If _Necesita_Permiso And Not _Autorizado Then
                _Cl_RemotasEnCadena.Sb_Insertar_DetalleConUsuario("Bkp00019", _InsertarFuncionario)
            End If

            _Autorizado = False : _Necesita_Permiso = False
            _Autorizado = Fx_Validad_MinimoVenta(_Necesita_Permiso)

            If _Necesita_Permiso And Not _Autorizado Then
                _Cl_RemotasEnCadena.Sb_Insertar_DetalleConUsuario("Bkp00062", _InsertarFuncionario)
            End If

            Dim _Revisar As Boolean = True
            Dim _Existe_Tbl_Entidades_Bakapp As Boolean = _Sql.Fx_Existe_Tabla(_Global_BaseBk & "Zw_Entidades", False)

            If _Existe_Tbl_Entidades_Bakapp Then

                Dim _Libera_NVV As Boolean
                Dim _Koen As String = _RowEntidad.Item("KOEN")
                Dim _Suen As String = _RowEntidad.Item("SUEN")

                Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Entidades" & vbCrLf &
                               "Where CodEntidad = '" & _Koen & "' And CodSucEntidad = '" & _Suen & "'"
                Dim _Row_Entidades As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                If IsNothing(_Row_Entidades) Then

                    Consulta_sql = "Insert Into " & _Global_BaseBk & "Zw_Entidades (CodEntidad,CodSucEntidad,Libera_NVV) Values ('" & _Koen & "','" & _Suen & "',0)" & vbCrLf &
                                   "Select * From " & _Global_BaseBk & "Zw_Entidades where CodEntidad = '" & _Koen & "' And CodSucEntidad = '" & _Suen & "'"
                    _Row_Entidades = _Sql.Fx_Get_DataRow(Consulta_sql, False)

                End If

                _Libera_NVV = _Row_Entidades.Item("Libera_NVV")

                If _Libera_NVV Then

                    Consulta_sql = "Select CRSD,CRCH,CRLT,CRPA,CRTO From MAEEN Where KOEN = '" & _Koen & "' And SUEN = '" & _Suen & "'"
                    Dim _Row As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql, False)

                    Dim _SumCrto As Double = _Row.Item("CRSD") + _Row.Item("CRCH") + _Row.Item("CRLT") + _Row.Item("CRPA") + _Row.Item("CRTO")
                    _Revisar = CBool(_SumCrto)

                    If Not (_Revisar) Then
                        Sb_Revisar_Permiso("Bkp00019", False, False)
                    End If

                End If

            End If

            If _TblEncabezado.Rows(0).Item("RevFincred") Then
                _Revisar = False
            End If

            If _Revisar Then
                _Autorizado = False : _Necesita_Permiso = False
                _Autorizado = Fx_Validad_Cupo_Excedido(_Necesita_Permiso)
                'Sb_Revisar_Permiso("Bkp00033", _Autorizado, _Necesita_Permiso)
                If _Necesita_Permiso And Not _Autorizado Then
                    _Cl_RemotasEnCadena.Sb_Insertar_DetalleConUsuario("Bkp00033", _InsertarFuncionario)
                End If
            End If

            If Fx_CreditoVigenteVencido(_RowEntidad) Then
                If Not Fx_Tiene_Permiso(Me, "Doc00098",, False) Then
                    'Sb_Revisar_Permiso("Doc00098", False, True)
                    _Cl_RemotasEnCadena.Sb_Insertar_DetalleConUsuario("Doc00098", _InsertarFuncionario)
                End If
            End If

            'If _Tido = "NVV" Then

            'If Chk_Pickear.Visible And Not Chk_Pickear.Checked Then

            '    If Not Fx_Tiene_Permiso(Me, "Doc00101", FUNCIONARIO, False) Then
            '        Sb_Revisar_Permiso("Doc00101", False, True)
            '    End If

            'End If

            'Dim _PidePermiso As Boolean = False

            'For Each _Fl As DataRow In _TblDetalle.Rows
            '    If _Fl.Item("DesacRazTransf") And _Fl.Item("RtuVariable") Then
            '        _PidePermiso = True
            '        Exit For
            '    End If
            'Next

            'If Not Chk_Pickear.Checked And _Global_Row_Configuracion_General.Item("NuncaPickeaDocConRTUDesactivada") Then
            '    _PidePermiso = False
            'End If

            'If _PidePermiso Then

            '    If Not Fx_Tiene_Permiso(Me, "Doc00102", FUNCIONARIO, False) Then
            '        Sb_Revisar_Permiso("Doc00102", False, True)
            '    End If

            'End If

            'End If

            'If Not String.IsNullOrEmpty(_RowEntidad.Item("KOFUEN").ToString.Trim) Then
            '    For Each _Fl As DataRow In _TblDetalle.Rows
            '        If _Fl.Item("CodVendedor").ToString.Trim <> _RowEntidad.Item("KOFUEN").ToString.Trim Then
            '            If Not Fx_Tiene_Permiso(Me, "Doc00161", FUNCIONARIO, False) Then
            '                Sb_Revisar_Permiso("Doc00161", False, True)
            '            End If
            '            Exit For
            '        End If
            '    Next
            'End If

            _Autorizado = False : _Necesita_Permiso = False
            _Autorizado = Fx_Validar_Descuentos(_Necesita_Permiso)
            'Sb_Revisar_Permiso("Bkp00039", _Autorizado, _Necesita_Permiso)
            If _Necesita_Permiso And Not _Autorizado Then
                _Cl_RemotasEnCadena.Sb_Insertar_DetalleConUsuario("Bkp00039", _InsertarFuncionario)
            End If

            _Autorizado = False : _Necesita_Permiso = False
            _Autorizado = Fx_Validar_Fecha_Despacho(_Necesita_Permiso)
            'Sb_Revisar_Permiso("Bkp00057", _Autorizado, _Necesita_Permiso)
            If _Necesita_Permiso And Not _Autorizado Then
                _Cl_RemotasEnCadena.Sb_Insertar_DetalleConUsuario("Bkp00057", _InsertarFuncionario)
            End If

            'If Not IsNothing(_Cl_Despacho) Then
            '    _Autorizado = False : _Necesita_Permiso = False
            '    _Autorizado = Fx_Validar_Peso_Minimo_o_Valores_Por_Despacho_A_Domicilio(_Necesita_Permiso, False)
            '    Sb_Revisar_Permiso("ODp00017", _Autorizado, _Necesita_Permiso)
            'End If

            If _Cl_RemotasEnCadena.Ls_Zw_Remotas_En_Cadena_02_Det.Count > 0 Then

                With _Cl_RemotasEnCadena.Zw_Remotas_En_Cadena_01_Enc

                    .Empresa = _TblEncabezado.Rows(0).Item("Empresa")
                    .Modalidad = _TblEncabezado.Rows(0).Item("Modalidad")
                    .Nro_RCadena = String.Empty
                    .Id_DocEnc = _Id_DocEnc
                    .Id_Enc = 0
                    .CodEntidad = _TblEncabezado.Rows(0).Item("CodEntidad")
                    .CodSucEntidad = _TblEncabezado.Rows(0).Item("CodSucEntidad")
                    .Nombre_Entidad = _TblEncabezado.Rows(0).Item("Nombre_Entidad")
                    .Usuario_Solicita = _TblEncabezado.Rows(0).Item("CodFuncionario")
                    .Tido = _TblEncabezado.Rows(0).Item("TipoDoc")
                    .Total_Original = _TblEncabezado.Rows(0).Item("TotalBrutoDoc")
                    .Total_Documento = _TblEncabezado.Rows(0).Item("TotalBrutoDoc")

                End With

                _Mensaje.EsCorrecto = False
                _Mensaje.Mensaje = "Documento necesita permisos"
                _Mensaje.Tag = _Cl_RemotasEnCadena

            Else

                _Mensaje.EsCorrecto = True
                _Mensaje.Mensaje = "Documento no necesita permisos"
                _Mensaje.Tag = _Cl_RemotasEnCadena

            End If

        Catch ex As Exception
            _Mensaje.EsCorrecto = False
            _Mensaje.Mensaje = ex.Message
            _Mensaje.Tag = Nothing
        End Try

        Return _Mensaje

    End Function

    Sub Sb_Revisar_Permiso(_CodPermiso As String, _Autorizado As Boolean, _Necesita_Permiso As Boolean)

        If Not _Autorizado Then

            For Each _FilaPer As DataRow In _TblPermisos.Rows

                Dim _CodPermiso_Fila = _FilaPer.Item("CodPermiso")

                If _CodPermiso = _CodPermiso_Fila Then

                    If Not _FilaPer.Item("Autorizado") Then
                        _FilaPer.Item("Necesita_Permiso") = _Necesita_Permiso
                    End If

                    Exit For

                End If

            Next

        End If

    End Sub

    Function Fx_Documento_Autorizado() As Boolean

        For Each _FilaPer As DataRow In _TblPermisos.Rows

            Dim _Necesita_Permiso = _FilaPer.Item("Necesita_Permiso")
            Dim _Autorizado = _FilaPer.Item("Autorizado")

            If _Necesita_Permiso And Not _Autorizado Then

                Return False

            End If

        Next

        Return True

    End Function

    Sub Sb_Cadena_Remota_Grabar_Documento_New(ByRef _Documento_Autorizado As Boolean,
                                              ByRef _Enviar_Solicitudes As Boolean,
                                              ByRef _Nro_RCadena As String)

        If Not _Documento_Autorizado Then

            Dim Fm_p As New Frm_Formulario_Permisos_Asociados_New(_Ds_Matriz_Documentos, _RowEntidad, _Tipo_Documento)
            Fm_p.Btn_Enviar_Solicitudes_Cadenas_Remotas.Visible = Not _Post_Venta
            Beep()

            Fm_p.ShowDialog(Me)

            Dim _Id_Enc As Integer = Fm_p.Pro_Id_Enc
            Dim _Id_DocEnc As Integer = Fm_p.Pro_Id_DocEnc
            _Nro_RCadena = Fm_p.Pro_Nro_RCadena
            _Enviar_Solicitudes = Fm_p.Pro_Enviar_Solicitudes
            _Documento_Autorizado = Fm_p.Pro_Autorizado_Para_Grabar
            Fm_p.Dispose()

            If _Enviar_Solicitudes Then

                If _Revisar_Notificacion_Automatica_Remota Then

                    Dim _Id_Enc_Padre = _RowRemota_Notificacion.Item("Id_Casi_DocEnc")

                    Consulta_sql = "
                                    Delete " & _Global_BaseBk & "Zw_Casi_DocEnc Where Id_DocEnc = " & _Id_Enc_Padre & "
                                    Delete " & _Global_BaseBk & "Zw_Casi_DocDet Where Id_DocEnc = " & _Id_Enc_Padre & "
                                    Delete " & _Global_BaseBk & "Zw_Casi_DocDsc Where Id_DocEnc = " & _Id_Enc_Padre & "
                                    Delete " & _Global_BaseBk & "Zw_Casi_DocImp Where Id_DocEnc = " & _Id_Enc_Padre & "
                                    Delete " & _Global_BaseBk & "Zw_Casi_DocTom Where Id_DocEnc = " & _Id_Enc_Padre & "
                                    Delete " & _Global_BaseBk & "Zw_Casi_DocPer Where Id_DocEnc = " & _Id_Enc_Padre & "
                                    Delete " & _Global_BaseBk & "Zw_Referencias_Dte Where Id_Doc = " & _Id_DocEnc & " And Kasi = 1
                                    
                                    Update " & _Global_BaseBk & "Zw_Remotas_En_Cadena_01_Enc Set Estado = 'E',Total_Documento = 0,Fecha_Hora_Grab = Getdate() Where Id_DocEnc = " & _Id_Enc_Padre & "
                                    Update " & _Global_BaseBk & "Zw_Remotas_En_Cadena_01_Enc Set Id_Enc_Padre = " & _Id_Enc_Padre & " Where Id_DocEnc = " & _Id_DocEnc
                    _Sql.Fx_Eje_Condulta_Insert_Update_Delte_TRANSACCION(Consulta_sql)

                    If _Sql.Fx_Existe_Tabla(_Global_BaseBk & "Zw_Casi_DocArc") Then

                        Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Casi_DocArc Where Id_DocEnc = " & _Id_Enc_Padre
                        _Sql.Fx_Eje_Condulta_Insert_Update_Delte_TRANSACCION(Consulta_sql)

                    End If

                End If

                Sb_Cadena_Remota_Generar_Remota_y_Notificacion(_Id_Enc, _Id_DocEnc)

                If Not IsNothing(_Cl_Despacho) Then

                    _Cl_Despacho.Fx_Insertar_NVV_Desde_Permisos_Remotos_BakApp(_Id_DocEnc)

                End If

            End If

        End If

    End Sub

    Sub Sb_Cadena_Remota_Generar_Remota_y_Notificacion(_Id_Enc As Integer,
                                                       _Id_DocEnc As Integer)


        Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Remotas_En_Cadena_01_Enc Where Id_Enc = " & _Id_Enc
        Dim _Row_Enc As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        Dim _Nro_Rcadena = _Row_Enc.Item("Nro_Rcadena")

        Dim _Usuario_Solicita = _Row_Enc.Item("Usuario_Solicita")

        Consulta_sql = "Select * From TABFU Where KOFU = '" & _Usuario_Solicita & "'"
        Dim _Row_Usuaio_Solicita As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Remotas_En_Cadena_02_Det 
                        Where Id_Enc = " & _Id_Enc & " And NroRemota = '' Order by Orden"
        Dim _Tbl_Det As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

        Dim _Nro_Det As Integer = _Tbl_Det.Rows.Count

        If _Nro_Det = 0 Then Return

        Dim _Row_Det As DataRow = _Tbl_Det.Rows(0)

        Dim _Id_Det = _Row_Det.Item("Id_Det")
        Dim _Orden = _Row_Det.Item("Orden")
        Dim _CodPermiso = _Row_Det.Item("CodPermiso")
        Dim _Descripcion_Permiso = _Row_Det.Item("Descripcion")
        Dim _Monto_Aprobacion = De_Num_a_Tx_01(_Row_Det.Item("Monto_Aprobacion"), False, 5)

        Dim _NroRemota As String

        _NroRemota = Fx_Solicitar_Remota(_Usuario_Solicita,
                                         _CodPermiso,
                                         _Descripcion_Permiso,
                                         _Id_DocEnc,
                                         _RowEntidad.Item("KOEN"),
                                         _RowEntidad.Item("NOKOEN"), False, "")

        Consulta_sql = "Update " & _Global_BaseBk & "Zw_Remotas_En_Cadena_02_Det Set NroRemota = '" & _NroRemota & "',New_Id_DocEnc = " & _Id_DocEnc & "
                        Where Id_Det =" & _Id_Det & "
                        Update " & _Global_BaseBk & "Zw_Remotas Set 
                        RCadena = 1, RCadena_Id_Enc = " & _Id_Enc & ",Nro_RCadena = '" & _Nro_Rcadena & "',Monto_Aprobacion = " & _Monto_Aprobacion & "
                        Where NroRemota = '" & _NroRemota & "'"
        _Sql.Ej_consulta_IDU(Consulta_sql)

        _Nro_Det = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_Remotas_En_Cadena_02_Det", "Id_Enc = " & _Id_Enc)

        If _Orden = _Nro_Det Then

            Consulta_sql = "Update " & _Global_BaseBk & "Zw_Remotas Set Crear_Doc_Def_Al_Grabar = 1
                            Where NroRemota = '" & _NroRemota & "'"
            _Sql.Ej_consulta_IDU(Consulta_sql)

        End If


        Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Remotas_En_Cadena_03_Usu Where Id_Det = " & _Id_Det
        Dim _Tbl_Usu As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

        For Each _Fila_Usu As DataRow In _Tbl_Usu.Rows

            Dim _Nombre_Usuario_Solicita = Trim(_Row_Usuaio_Solicita.Item("NOKOFU"))
            Dim _Usuario_Destino = _Fila_Usu.Item("Usuario_Destino")

            Dim _Entidad_txt As String
            Dim _Asunto As String

            If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Venta Then
                _Entidad_txt = "Cliente: "
            ElseIf _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Compra Then
                _Entidad_txt = "Proveedor: "
            End If

            _Asunto = "Solicitud de permiso remoto Nro: " & _Nro_Rcadena & ", " & _Nombre_Usuario_Solicita & ". Bakapp " & UCase(_Tipo_Documento.ToString)

            Dim _Texto = "Solicitado por: " & _Usuario_Solicita & " - " & Mid(Trim(_Nombre_Usuario_Solicita), 1, 13) & Environment.NewLine &
                         "Nro Cadena Remotas: " & _Nro_Rcadena & Environment.NewLine &
                         "Nro Remota " & _NroRemota & Environment.NewLine &
                         _Descripcion_Permiso & Environment.NewLine &
                         _Entidad_txt & Trim(_RowEntidad.Item("NOKOEN"))

            Dim _Titulo As String

            Dim _Nombre_Correo = _Global_Row_Configuracion_General.Item("Nombre_Usuario_Correo_Remotas")
            Dim _Para = _Sql.Fx_Trae_Dato("TABFU", "EMAIL", "KOFU = '" & _Usuario_Destino & "'").ToString.Trim

            Dim _Enviar_Correo = True

            csNotificaciones.Notificacion.Fx_Insertar_Notificacion(_Usuario_Solicita,
                                                                   _Usuario_Destino,
                                                                   _Titulo,
                                                                   _Texto,
                                                                   csNotificaciones.Notificacion.Imagen.Remota,
                                                                   _NroRemota, False, 0, True, _Id_Enc, _Enviar_Correo, _Nombre_Correo, _Asunto, _Para)

        Next

    End Sub

    Private Function Fx_Cadena_Remota_Usuarios_Destino(_Codpermiso As String, _Descripcion As String) As DataTable

        Dim _Tbl_Usuarios As DataTable

        Consulta_sql = "Select CodUsuario From " & _Global_BaseBk & "ZW_PermisosVsUsuarios" & Environment.NewLine &
                       "Where CodPermiso = '" & _Codpermiso & "'"
        Dim _Tbl As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)
        Dim _Filtro_Usuarios_NOT_In As String

        If CBool(_Tbl.Rows.Count) Then
            _Filtro_Usuarios_NOT_In = "And KOFU In " & Generar_Filtro_IN(_Tbl, "", "CodUsuario", False, False, "'")
        End If

        Dim Fm_R As New Frm_Filtro_Especial_Informes(Frm_Filtro_Especial_Informes._Tabla_Fl._Funcionarios_Random)
        Fm_R.Pro_Sql_Filtro_Condicion_Extra = "And INACTIVO = 0" & Environment.NewLine & _Filtro_Usuarios_NOT_In
        Fm_R.Text = "SOLICITUD DE PERMISO: " & _Codpermiso & " - " & _Descripcion
        Fm_R.ShowDialog(Me)

        Dim _Titulo = "PERMISO REMOTO"

        If Fm_R.Pro_Filtrar Then
            _Tbl_Usuarios = Fm_R.Pro_Tbl_Filtro
        End If
        Fm_R.Dispose()

        Return _Tbl_Usuarios

    End Function

    Private Function Fx_Cadena_Remota_Nueva_Linea_Det(ByRef _Tbl As DataTable,
                                                      _CodPermiso As String,
                                                      _Descripcion As String,
                                                      _Orden As Integer) As DataRow

        Dim NewFila As DataRow
        NewFila = _Tbl.NewRow
        With NewFila

            .Item("Id_Enc") = 0
            '.Item("Sucursal") = Mod_Sucursal
            .Item("Nro_RCadena") = "XXXXXXXXXX"
            .Item("Orden") = _Orden
            .Item("CodPermiso") = _CodPermiso
            .Item("Descripcion") = _Descripcion
            .Item("NroRemota") = ""
            .Item("New_Id_DocEnc") = 0
            .Item("Otorga") = ""

        End With

        _Tbl.Rows.Add(NewFila)

        Return NewFila

    End Function

    Private Function Fx_Cadena_Remota_Nueva_Linea_Usu(ByRef _Tbl As DataTable,
                                                      _Id_Det As Integer,
                                                      _Usuario_Destino As String,
                                                      _CodPermiso As String) As DataRow

        Dim NewFila As DataRow
        NewFila = _Tbl.NewRow
        With NewFila

            .Item("Id_Enc") = 0
            .Item("Id_Det") = _Id_Det
            '.Item("Id_Usu") = Mod_Sucursal
            .Item("Usuario_Destino") = _Usuario_Destino
            .Item("CodPermiso") = _CodPermiso

        End With

        _Tbl.Rows.Add(NewFila)

        Return NewFila

    End Function

    Private Sub Warning_Visado_OptionsClick(sender As System.Object, e As System.EventArgs) Handles Warning_Visado.OptionsClick

        Dim Fm_p As New Frm_Formulario_Permisos_Asociados_New(_Ds_Matriz_Documentos, _RowEntidad, _Tipo_Documento)
        Fm_p.Btn_Enviar_Solicitudes_Cadenas_Remotas.Visible = False
        Fm_p.ShowDialog(Me)

    End Sub

    Private Sub Btn_Cadena_Remota_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Cadena_Remota.Click

        Dim Fm As New Frm_Cadenas_Remotas_Lista(Frm_Cadenas_Remotas_Lista.Enum_Accion.Mis_CRemotas, _Tido)
        Fm.ShowDialog(Me)
        Fm.Dispose()

    End Sub

    Private Sub Btn_Mini_Buscar_CodAlternativo_Grilla_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Mini_Buscar_CodAlternativo_Grilla.Click
        Sb_Busca_Producto_En_Grilla(Buscar_Codigo.Alternativo)
    End Sub

    Private Sub Btn_Refrescar_Stock_X_Linea_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Mini_Refrescar_Stock_X_Linea.Click
        Sb_Borrar_Lineas_En_Blanco()
        Sb_Marcar_Grilla()
        Fx_Validar_Stock(False, 0)
    End Sub

    Sub Sb_Buscar_Documentos_Entidad(_Tido_Buscar As String)

        Try

            Sb_Grilla_Detalle_Eventos(False)

            Dim _IdMaeedo As String

            Dim _Fm As New Frm_BusquedaDocumento_Filtro(False)
            With _Fm

                .Grupo_Funcionario.Enabled = False
                .Rdb_Funcionarios_Uno.Checked = True
                .Pro_Sql_Filtro_Documentos_Extra = "And TIDO IN ('" & _Tido_Buscar & "')"
                .Pro_TipoDoc_Seleccionado = Frm_BusquedaDocumento_Filtro._TipoDoc_Sel.Personalizado
                .Rdb_Tipo_Documento_Uno.Checked = True

                .Sb_LlenarCombo_FlDoc(Frm_BusquedaDocumento_Filtro._TipoDoc_Sel.Personalizado, _Tido_Buscar,
                                      "Where TIDO IN ('" & _Tido_Buscar & "')")
                .Rdb_Estado_Vigente.Checked = True
                .Rdb_Funcionarios_Todos.Checked = True
                .Grupo_Funcionario.Enabled = True
                .Rdb_FEmision_EmitidosEntre.Checked = True
                .ShowDialog(Me)

                If Not (.Pro_Row_Documento_Seleccionado Is Nothing) Then
                    _IdMaeedo = .Pro_Row_Documento_Seleccionado.Item("IDMAEEDO")
                End If

                .Dispose()

            End With


            Dim _CampoPrecio As String

            If ChkValores.Checked Then ' Neto
                _CampoPrecio = "PPPRNE"
            Else ' Bruto
                _CampoPrecio = "PPPRBR"
            End If

            If Not String.IsNullOrEmpty(_IdMaeedo) Then

                Sb_Limpiar(ModModalidad_Doc)

                Consulta_sql = "Select * From MAEEDO Where IDMAEEDO = " & _IdMaeedo & "
                                Select *,
                                CASE WHEN UDTRPR = 1 THEN CAPRCO1-CAPREX1 ELSE CAPRCO2-CAPREX2 END AS 'Cantidad',
                                CAPRCO1-CAPREX1 AS 'CantUd1_Dori',CAPRCO2-CAPREX2 AS 'CantUd2_Dori',
                                CASE WHEN UDTRPR = 1 THEN " & _CampoPrecio & " ELSE " & _CampoPrecio & "*RLUDPR END AS 'Precio'
                                From MAEDDO  WITH ( NOLOCK )  
                                Where IDMAEEDO=" & _IdMaeedo & " AND ( ESLIDO<>'C' OR ESFALI='I' ) AND TICT = '' Order by NULIDO
                                Select TOP 1 * From MAEEDOOB Where IDMAEEDO = " & _IdMaeedo

                Dim _Filtro_Idmaeedo = "(" & _IdMaeedo & ")"

                Consulta_sql = "Select * From MAEEDO Where IDMAEEDO = " & _IdMaeedo & "
                                
                                Select MAEDDO.*,CASE WHEN UDTRPR = 1 THEN CAPRCO1-CAPREX1 ELSE CAPRCO2-CAPREX2 END AS 'Cantidad',
                                CAPRCO1-CAPREX1 AS 'CantUd1_Dori',CAPRCO2-CAPREX2 AS 'CantUd2_Dori',
                                CASE WHEN UDTRPR = 1 THEN " & _CampoPrecio & " ELSE " & _CampoPrecio & "*RLUDPR END AS 'Precio',
                                Isnull(Ofer.Id_Oferta,'') As Id_Oferta,
                                Isnull(Ofer.Oferta,'') As Oferta,
                                Isnull(Ofer.Es_Padre_Oferta,0) As Es_Padre_Oferta,
                                Isnull(Ofer.Padre_Oferta,0) As Padre_Oferta,
                                Isnull(Ofer.Hijo_Oferta,0) As Hijo_Oferta,
                                Isnull(Cantidad_Oferta,0) As Cantidad_Oferta,
                                Isnull(Porcdesc_Oferta,0) As Porcdesc_Oferta
                                From MAEDDO WITH ( NOLOCK ) 
                                Left Join " & _Global_BaseBk & "Zw_Linea_Oferta Ofer On Ofer.Idmaeddo = IDMAEDDO
                                Where IDMAEEDO In " & _Filtro_Idmaeedo & "  AND ( ESLIDO<>'C' OR ESFALI='I' ) --AND TICT = ''
                                Order by IDMAEEDO,IDMAEDDO
                                
                                Select * From MAEIMLI
                                Where IDMAEEDO In " & _Filtro_Idmaeedo & " 

                                Select * From MAEDTLI
                                Where IDMAEEDO In " & _Filtro_Idmaeedo & " 

                                Select TOP 1 * From MAEEDOOB Where IDMAEEDO = " & _IdMaeedo

                _Ds_Documento_de_Origen = _Sql.Fx_Get_DataSet(Consulta_sql)

                If CBool(_Ds_Documento_de_Origen.Tables(1).Rows.Count) Then

                    Dim _Fl As String = Generar_Filtro_IN(_Ds_Documento_de_Origen.Tables(1), "", "IDMAEEDO", False, False, "")

                    Dim _Reg As Integer = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_Casi_DocDet", "Idmaeedo_Dori In " & _Fl)

                    If CBool(_Reg) Then
                        MessageBoxEx.Show(Me, "No es posible traer el detalle de alguno de los documentos asociados." & Environment.NewLine &
                                          "Uno o más de los archivos asociados está ligado a un documento pendiente de solicitud de permiso remoto" & Environment.NewLine &
                                          "Para poder ligar nuevamente cualquiera de esos documentos primero deben terminar esas gestiones",
                                          "Validación BakApp", MessageBoxButtons.OK, MessageBoxIcon.Error, MessageBoxDefaultButton.Button1, Me.TopMost)

                    Else

                        If _Tido_Buscar = "COV" Then
                            _Tido = "BLV"
                        End If

                        Sb_Crear_Documento_Desde_Otros_Documentos(Me, _Ds_Documento_de_Origen, False, True, Nothing, False, False)

                    End If

                Else
                    MessageBoxEx.Show(Me, "Documento se encuentra cerrado completamente", "Documento cerrado",
                                      MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                End If
            End If


        Catch ex As Exception
            MessageBoxEx.Show(ex.Message, "Problema", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
        Finally
            Sb_Grilla_Detalle_Eventos(True)
        End Try

    End Sub

    Private Sub Chk_Redondear_Cero_CheckedChanged(sender As System.Object, e As System.EventArgs)

        If Chk_Redondear_Cero.Checked Then
            Chk_Redondear_Cero.Checked = Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Bkp00050", Nothing, "", "")
            'Chk_Redondear_Cero.Checked = Fx_Tiene_Permiso(Me, "Bkp00050")
        End If

    End Sub

    Private Sub Chk_Redondear_Cero_Validating(sender As System.Object, e As System.ComponentModel.CancelEventArgs)

        If Not Fx_Tiene_Permiso(Me, "Bkp00050") Then
            e.Cancel = True
        End If

    End Sub

    Private Sub Btn_Modificar_Chk_Redondeo_Click(sender As System.Object, e As System.EventArgs) Handles Btn_Modificar_Chk_Redondeo.Click

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Bkp00050", Nothing, "", "") Then
            Chk_Redondear_Cero.Enabled = True
        End If

    End Sub

    Function Fx_Cambiar_Bodega_Linea_Activa(_Fila As DataGridViewRow) As Boolean

        Dim _Vizado As Boolean = Grilla_Encabezado.Rows(0).Cells("Vizado").Value
        Dim _Permiso As String

        If _Vizado Then
            _Permiso = "Bkp00059"
        Else
            _Permiso = "Bkp00045"
        End If

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, _Permiso, Nothing, "", "") Then ' Fx_Tiene_Permiso(Me, _Permiso) Then

            Dim _Row_Bodega As DataRow
            Dim _Stock_Insuficiente As Boolean
            Dim _Codigo As String = _Fila.Cells("Codigo").Value
            Dim _Sucursal As String = _Fila.Cells("Sucursal").Value
            Dim _Bodega As String = _Fila.Cells("Bodega").Value
            Dim _Prct As Boolean = _Fila.Cells("Prct").Value
            Dim _Cantidad As Double = NuloPorNro(_Fila.Cells("Cantidad").Value, 0)
            Dim _Es_Venta As Boolean = (_Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Venta)

            If _Prct Then

                Dim Fm_b As New Frm_SeleccionarBodega(Frm_SeleccionarBodega.Accion.Bodega)
                Fm_b.Pro_Empresa = ModEmpresa_Doc
                Fm_b.Pro_Sucursal = _Sucursal
                Fm_b.Pro_Bodega = _Bodega
                Fm_b.ShowDialog(Me)

                Dim _Bodega_Seleccionada = Fm_b.Pro_Seleccionado
                Dim _RowBodega = Fm_b.Pro_RowBodega
                Dim _Empresa_Sel = _RowBodega.Item("EMPRESA")
                Dim _Sucursal_Sel = _RowBodega.Item("KOSU")
                Dim _Bodega_Sel = _RowBodega.Item("KOBO")

                _Permiso = "Bo" & _Empresa_Sel & _Sucursal & _Bodega

                Fm_b.Dispose()

                If Fm_b.Pro_Seleccionado Then

                    _Fila.Cells("Sucursal").Value = _Sucursal_Sel
                    _Fila.Cells("Bodega").Value = _Bodega_Sel

                    Return True

                End If

            Else

                Dim Fm As New Frm_Formulario_Cantidad_Stock_X_Bodega(_Codigo, _Cantidad, _Sucursal, _Es_Venta, _Tido)
                Fm.ShowDialog(Me)
                _Row_Bodega = Fm.Row_Bodega
                _Stock_Insuficiente = Fm.Stock_Insuficiente
                Fm.Dispose()

                If Not (_Row_Bodega Is Nothing) Then

                    If _Vizado And _Stock_Insuficiente Then

                        MessageBoxEx.Show(Me, "Solo puede cambiar la bodega por una con stock suficiente." & vbCrLf &
                                          "Si quiere cambiar la bodega debera desbloquear el documento y solicitar nuevamente los permisos para grabar.",
                                          "Documento visado", MessageBoxButtons.OK, MessageBoxIcon.Stop,
                                          MessageBoxDefaultButton.Button1, Me.TopMost)
                    Else

                        _Fila.Cells("Sucursal").Value = _Row_Bodega.Item("KOSU")
                        _Fila.Cells("Bodega").Value = _Row_Bodega.Item("KOBO")

                        If _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Venta Or
                           _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Despacho Or
                           _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Despacho_Interna Or
                           _Tipo_Documento = csGlobales.Mod_Enum_Listados_Globales.Enum_Tipo_Documento.Guia_Traslado_Interno Then
                            Sb_Revisar_Stock_Fila(_Fila,,,, True, False)
                        End If

                        Sb_Marcar_Fila_Grilla(_Fila)

                        Grilla_Detalle.CurrentCell = _Fila.Cells("Cantidad")

                        If _Vizado Then
                            _Fila.Cells("Consolidar_Stock").Value = True
                        End If

                    End If

                    Return True

                End If

            End If

        End If

    End Function

    Private Sub Btn_Cambiar_Bodega_Click(sender As Object, e As EventArgs) Handles Btn_Cambiar_Bodega.Click

        Dim _Fila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index)
        Fx_Cambiar_Bodega_Linea_Activa(_Fila)

    End Sub

    Private Sub Grilla_Detalle_CellDoubleClick(sender As Object, e As DataGridViewCellEventArgs)

        Dim _Cabeza = Grilla_Detalle.Columns(Grilla_Detalle.CurrentCell.ColumnIndex).Name
        Dim _Fila As DataGridViewRow = Grilla_Detalle.CurrentRow

        Call Grilla_Detalle_KeyDown(Grilla_Detalle, Nothing)

    End Sub



    Private Sub Btn_Ver_Cardex_De_Inventario_Click(sender As Object, e As EventArgs) Handles Btn_Ver_Cardex_De_Inventario.Click

        Dim _Fila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index)

        Dim _Codigo = _Fila.Cells("Codigo").Value
        Dim _Nuevo_Producto As Boolean = _Fila.Cells("Nuevo_Producto").Value
        Dim _Ud = _Fila.Cells("UnTrans").Value

        If Not _Nuevo_Producto Then

            If Fr_Alerta_Stock.Visible Then
                Fr_Alerta_Stock.Close()
            Else
                Codigo_abuscar = _Codigo
                Fr_Alerta_Stock = New AlertCustom(_Codigo, _Ud)
                CType(Fr_Alerta_Stock, AlertCustom).Tido = _Tido
                ShowLoadAlert(Fr_Alerta_Stock, Me)
            End If

        End If

    End Sub

    Function Fx_Grabar_Pistoleando()

        Dim _Documento_Aceptado As Boolean
        Dim _Fisconbarr = _Global_Row_Modalidad.Item("FISCONBARR")
        Dim _Funcionario_Inicia As String = FUNCIONARIO

        Dim _ValidaMovFisConCodBarra As Boolean = (_Fisconbarr = "S")

        If Not _ValidaMovFisConCodBarra Then
            _ValidaMovFisConCodBarra = _Global_Row_Configuracion_Estacion.Item("ValidaMovFisConCodBarra")
        End If

        If _ValidaMovFisConCodBarra Then '_Fisconbarr = "S" Then

            Consulta_sql = "Select Top 1 * From TABTIDO Where TIDO = '" & _Tido & "'"
            Dim _Row_Tabtido As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            Dim _Signo = String.Empty
            Dim _Fiad As Boolean = CBool(_Row_Tabtido.Item("FIAD"))
            Dim _Fico As Boolean = CBool(_Row_Tabtido.Item("FICO"))

            Dim _Pistolear As Boolean
            Dim _ProdPistolear = 0

            If _Fiad Or _Fico Then

                For Each _Fila As DataRow In _TblDetalle.Rows

                    Dim _Codigo As String = _Fila.Item("Codigo")
                    Dim _Descripcion As String = _Fila.Item("Descripcion")
                    Dim _Cantidad_Documento As Double = _Fila.Item("Cantidad")
                    Dim _Tipr As String = _Fila.Item("Tipr")
                    Dim _Prct As Boolean = _Fila.Item("Prct")

                    If Not _Prct Then
                        If Fx_ProdConInfo(_Tipr) Then
                            _ProdPistolear += 1
                        End If
                    End If

                Next

                If _ProdPistolear = 0 Then
                    Return True
                End If

                Dim Fm As New Frm_Formulario_Lector_Barra(_Ds_Matriz_Documentos.Tables("Tbl_Lector_Barra"),
                                                          _Ds_Matriz_Documentos.Tables("Detalle_Doc"),
                                                          _Ds_Matriz_Documentos.Tables("Permisos_Doc"))
                Fm.ListaCodQRUnicosLeidos = _ListaCodQRUnicosLeidos
                Fm.ListaCodConDocLeidos = _ListaCodConDocLeidos
                Fm.ShowDialog(Me)
                _Documento_Aceptado = Fm.Pro_Documento_Aceptado
                _ListaCodQRUnicosLeidos = Fm.ListaCodQRUnicosLeidos
                _ListaCodConDocLeidos = Fm.ListaCodConDocLeidos
                Fm.Dispose()

            Else
                _Documento_Aceptado = True
            End If

        Else
            _Documento_Aceptado = True
        End If

        Return _Documento_Aceptado

    End Function

    Function Fx_Existen_Documentos_Relacionados() As Boolean

        For Each _Fila As DataRow In _TblDetalle.Rows
            Dim _Idmaeddo_Dori = _Fila.Item("Idmaeddo_Dori")
            If CBool(_Idmaeddo_Dori) Then
                Return True
            End If
        Next

    End Function

    Sub Sb_Traer_Descuentos_Seteados_Desde_Lista(_Fila As DataGridViewRow)

        Dim _Id As Integer = _Fila.Cells("Id").Value
        Dim _Codigo As String = _Fila.Cells("Codigo").Value
        Dim _CodLista As String = _Fila.Cells("CodLista").Value

        Dim _CantUd1 As Double = _Fila.Cells("CantUd1").Value
        Dim _CantUd2 As Double = _Fila.Cells("CantUd2").Value

        Dim _Prct As Boolean = _Fila.Cells("Prct").Value
        Dim _Tict As String = _Fila.Cells("Tict").Value

        Dim _TblDscto As DataTable

        Consulta_sql = "Select TOP 1 TABPRE.*,TABPP.MELT From TABPRE 
                        Inner Join TABPP On TABPP.KOLT = TABPRE.KOLT
                        Where TABPRE.KOLT = '" & _CodLista & "' And KOPR = '" & _Codigo & "'"
        Dim _Row_Tabpre As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        Consulta_sql = "Declare @Campos Int

                        Set @Campos =(Select Count(*) From PNOMDIM Where DEPENDENCI = 'Por_tabpp' And NOMBRE = CODIGO And CODIGO <> 'PASO01P')

                        Select TOP 1 OPERA,Cast(SUBSTRING( OPERA,28,@Campos*2) As Varchar(200)) As Opera_Rev 
                        INTO #Paso
                        From TABPP Where OPERA LIKE 'XX%'

                         Update #Paso Set Opera_Rev = REPLACE(Opera_Rev,'  ','Dp,')
                         Update #Paso Set Opera_Rev = REPLACE(Opera_Rev,' 1','Dv,')
                         Update #Paso Set Opera_Rev = REPLACE(Opera_Rev,' 2','Rp,')
                         Update #Paso Set Opera_Rev = REPLACE(Opera_Rev,' 3','Rv,')

                        Select * From #Paso
                        Drop Table #Paso"

        Dim _Row_Opera As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        If Not IsNothing(_Row_Opera) Then

            Dim _Opera = _Row_Opera.Item("Opera_Rev")
            Dim _Opera_Rev = Split(_Opera, ",")

            Consulta_sql = "Select Top 1 * From TABPRE Where KOLT = '" & _CodLista & "' And KOPR = '" & _Codigo & "'"
            Dim _TblTabpre As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

            ' Asi es como actua el campo OPERA, este campo define como se comportaran los campos adicionales a partir del campo nro 29 en adelante

            '       28 - Ultimo Campo EDTMA02UD

            '        '' = Descuento Porcentaje
            '        1  = Descuento Valor
            '        2  = Recargo Porcentaje
            '        3  = Recargo Valor

            Dim _Campos_Adicionales = String.Empty
            Dim _j = 0
            Dim _a = 0

            Consulta_sql = "Select Cast('' As Varchar(20)) As Tcampo,Cast(0 As Float) As Dscto,Cast(0 As Float) As Valor" & Environment.NewLine &
                           "Where 1 < 0"
            _TblDscto = _Sql.Fx_Get_DataTable(Consulta_sql)

            For _i = 28 To _TblTabpre.Columns.Count - 1

                Dim _Columna As DataColumn = _TblTabpre.Columns(_i)
                Dim _Nombre_Columna As String = _Columna.ColumnName

                If Mid(_Nombre_Columna, 1, 5) <> "FORM_" Then

                    '_Campos_Adicionales += "[" & _Nombre_Columna & "] [CHAR] (121) Default ''," & Environment.NewLine

                    Dim _Valor As Double = NuloPorNro(_Row_Tabpre.Item(_Nombre_Columna), 0)
                    Dim _Valor_Fx As Double

                    Dim _Koen = _TblEncabezado.Rows(0).Item("CodEntidad")

                    Dim _Campo_Ecuacion As String = "FORM_" & numero_(_i + 1, 3)

                    _Valor_Fx = Fx_Precio_Formula_Random(_Row_Tabpre, _Nombre_Columna, _Campo_Ecuacion, Nothing, True, _Koen, _CantUd1, _CantUd2)

                    If _Valor = 0 Then _Valor = _Valor_Fx

                    Dim _DocEn_Neto_Bruto = _TblEncabezado.Rows(0).Item("DocEn_Neto_Bruto")

                    If CBool(_Valor) Then

                        Dim _TCampo = _Opera_Rev(_j)
                        Dim _Dscto As Double
                        Dim _Incorporar_Dscto As Boolean

                        Select Case _TCampo
                            Case "Dp"
                                'Porcentaje
                                '_Array_Dsctos(_a, 0) = _TCampo
                                '_Array_Dsctos(_a, 1) = _Valor
                                '_Array_Dsctos(_a, 2) = 0
                                _Dscto = _Valor
                                _Valor = 0
                                _Incorporar_Dscto = True
                            Case "Dv" ', "Rv"
                                _Valor = _Valor '* -1
                                _Dscto = 0
                                _Incorporar_Dscto = True
                                '_Array_Dsctos(_a, 0) = _TCampo
                                '_Array_Dsctos(_a, 1) = 0
                                '_Array_Dsctos(_a, 2) = _Valor
                            Case "Rp"

                            Case "Rv"

                                'If _Prct And _Tict = "R" Then

                                Dim _Iva = _Fila.Cells("PorIva").Value / 100
                                Dim _Ila = _Fila.Cells("PorIla").Value / 100

                                Dim _Impuestos As Double = 1 + (_Iva + _Ila)

                                Dim _Melt = _Row_Tabpre.Item("MELT")

                                If _Melt = "B" Then

                                    If ChkValores.Checked Then
                                        _Valor = Math.Round(_Valor / _Impuestos, 3)
                                    Else
                                        _Valor = _Valor * _Impuestos
                                    End If

                                Else

                                    If Not ChkValores.Checked Then
                                        _Valor = Math.Round(_Valor * _Impuestos, 0)
                                    End If

                                End If

                                _Fila.Cells("Recargo_Campo").Value = _Nombre_Columna
                                _Fila.Cells("Recargo_Valor").Value = _Valor

                        End Select

                        If _Incorporar_Dscto Then

                            Dim NewFila As DataRow
                            NewFila = _TblDscto.NewRow
                            With NewFila
                                .Item("TCampo") = _TCampo
                                .Item("Dscto") = _Dscto
                                .Item("Valor") = _Valor
                                _TblDscto.Rows.Add(NewFila)
                            End With

                        End If

                    End If

                    _j += 1

                End If

                'ReDim Preserve _Array_Dsctos(1, 2)

            Next

            If CBool(_TblDscto.Rows.Count) Then

                Sb_Insertar_Descuentos_En_Escala(_Fila, _TblDscto)

            End If

        End If

    End Sub

    Sub Sb_Insertar_Descuentos_En_Escala(_Fila As DataGridViewRow, _TblDscto As DataTable)

        Dim _Id = _Fila.Cells("Id").Value
        Dim _NroDscto = 0
        Dim _Precio As Double = _Fila.Cells("Precio").Value '_Fila.Cells("Precio").Value

        If ChkValores.Checked Then
            _Precio = _Fila.Cells("ValNetoLinea").Value
        Else
            _Precio = _Fila.Cells("ValBrutoLinea").Value
        End If

        Dim _Valor As Double = _Precio
        Dim _Redondear_Dscto As Boolean = Chk_Redondear_Cero.Checked
        Dim _Total_Descuento As Double
        Dim _Total_Pc As Double

        Eliminar_Campos(_Ds_Matriz_Documentos.Tables("Descuentos_Doc"), _Id)

        Dim _Decimales As Integer

        Dim _Moneda_Det As String = _Fila.Cells("Moneda").Value
        Dim _Moneda_Enc As String = _TblEncabezado.Rows(0).Item("Moneda_Doc")

        Dim _Tipo_Moneda_Enc As String = _TblEncabezado.Rows(0).Item("TipoMoneda")
        Dim _Tipo_Cambio_Ent As Double = _TblEncabezado.Rows(0).Item("Valor_Dolar")

        If _Moneda_Det.Trim <> _Moneda_Enc.Trim Then
            If _Tipo_Moneda_Enc <> "N" Then
                _Decimales = _DecimalesGl ' 2
            End If
        Else
            If _Tipo_Moneda_Enc <> "N" Then
                _Decimales = _DecimalesGl ' 2
            End If
        End If


        'If ChkValores.Checked Then
        '    _Decimal = 2
        'Else
        '    _Decimal = 0
        'End If

        For Each _Row As DataRow In _TblDscto.Rows

            Dim _TCampo = _Row.Item("TCampo")

            Dim _Podt As Double = _Row.Item("Dscto")
            Dim _Vadt As Double = _Row.Item("Valor")

            If _Podt <> 0 Then '_TCampo = "Dp" Then

                If _Podt > 0 Then
                    _Vadt = Math.Round((_Podt / 100) * _Valor, _Decimales)
                    If _Redondear_Dscto Then _Vadt = Fx_Redondeo_Descuento(_Vadt, _Redondear_Dscto)
                    '_DescuentoPorc = Math.Round((_Descuento / _TotalNeto_Calculo) * 100, 5)
                    _Podt = Math.Round((_Vadt / _Valor) * 100, 5)
                Else
                    _Vadt = 0
                End If

            Else 'If _Cabeza = "Vadt" Then

                If _Vadt <> 0 Then
                    If _Redondear_Dscto Then _Vadt = Fx_Redondeo_Descuento(_Vadt, _Redondear_Dscto)
                    _Podt = Math.Round((_Vadt / _Valor) * 100, 5)
                Else
                    _Podt = 0
                End If

            End If

            If _Podt <> 0 Then

                Dim NewFila As DataRow
                NewFila = _Ds_Matriz_Documentos.Tables("Descuentos_Doc").NewRow
                With NewFila
                    .Item("Id") = _Id
                    .Item("Podt") = _Podt
                    .Item("Vadt") = _Vadt
                    .Item("Podt_Original") = _Podt
                    _Ds_Matriz_Documentos.Tables("Descuentos_Doc").Rows.Add(NewFila)
                End With

                _NroDscto += 1

            End If

            _Total_Descuento += _Vadt

            _Valor -= _Vadt

        Next

        If _Total_Descuento <> 0 Then
            _Total_Pc = _Total_Descuento / _Precio
        End If

        '_Fila.Cells("Podt").Value = _Podt
        '_Fila.Cells("Vadt").Value = _Vadt
        '_Fila.Cells("UltDscto").Value = _Vadt
        '_Fila.Cells("Podt_Original").Value = _Podt_Original
        '_Fila.Cells("CodDscto").Value = "D_SIN_TIPO"

        'If ChkValores.Checked Then
        '    _DescuentoValor = _Fila.Item("VADTNELI")
        'Else
        '    _DescuentoValor = _Fila.Item("VADTBRLI")
        'End If

        _Fila.Cells("DescuentoValor").Value = _Total_Descuento
        _Fila.Cells("NroDscto").Value = _NroDscto

        Sb_Procesar_Datos_De_Grilla(_Fila, "DescuentoValor", False, False)

    End Sub


    Private Sub Btn_Cpr_Crear_Producto_Click(sender As Object, e As EventArgs) Handles Btn_Cpr_Crear_Producto.Click

    End Sub

    Private Sub Btn_Cpr_Editar_Producto_Click(sender As Object, e As EventArgs) Handles Btn_Cpr_Editar_Producto.Click

        Dim _Fila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index)

        Dim _Id_CPr = _Fila.Cells("Id_CPr").Value
        Dim _Grabar As Boolean

        Dim _Cl_SolCreaProducto As New Cl_SolCreaProducto

        Dim Fm As New Frm_SolCreaProducto(_Id_CPr)
        Fm.Pro_Moneda = _RowMoneda_Doc.Item("KOMO")
        Fm.Pro_Row_Proveedor = _RowEntidad
        Fm.ShowDialog(Me)
        _Grabar = Fm.Pro_Grabar
        _Cl_SolCreaProducto = Fm.Pro_Cl_SolCreaProducto
        Fm.Dispose()

        If _Grabar Then

            Dim _UnTrans = _Fila.Cells("UnTrans").Value
            'Dim _Precio As Double = _Cl_SolCreaProducto.Row_NewMaepr.Item("CostoUd" & _UnTrans)
            Dim _Nokopr As String = _Cl_SolCreaProducto.Row_NewMaepr.Item("Nokopr")
            Dim _Rlud As Double = _Cl_SolCreaProducto.Row_NewMaepr.Item("Rlud")

            Dim _Ud1Linea = _Cl_SolCreaProducto.Row_NewMaepr.Item("Ud01pr")
            Dim _Ud2Linea = _Cl_SolCreaProducto.Row_NewMaepr.Item("Ud02pr")
            Dim _UdTrans As String

            If _UnTrans = 1 Then
                _UdTrans = _Ud1Linea
            Else
                _UdTrans = _Ud2Linea
            End If

            Dim _Kopral = _Cl_SolCreaProducto.Row_NewMaepr.Item("Kopral")

            With _Fila

                .Cells("Cantidad").Value = 0
                '.Cells("Precio").Value = _Precio
                .Cells("Descripcion").Value = _Nokopr
                .Cells("Rtu").Value = _Rlud
                .Cells("UnTrans").Value = _UnTrans 'UnidadTrans ' numero
                .Cells("UdTrans").Value = _UdTrans 'UnTrans ' caracter
                .Cells("Ud01PR").Value = _Ud1Linea
                .Cells("Ud02PR").Value = _Ud2Linea
                .Cells("CodigoProv").Value = _Kopral

            End With

            Sb_Procesar_Datos_De_Grilla(_Fila, "Cantidad", True, True)

        End If

    End Sub

    Private Sub Btn_Cpr_Eliminar_Producto_Click(sender As Object, e As EventArgs) Handles Btn_Cpr_Eliminar_Producto.Click

        Dim _Fila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index)

        Dim _Id_CPr = _Fila.Cells("Id_CPr").Value

        Dim _Cl As New Cl_SolCreaProducto
        _Cl.Id_CPr = _Id_CPr

        If _Cl.Fx_Eliminar_Producto Then
            Sb_Eliminar_Fila(_Fila, True)
        End If

    End Sub

    Private Sub Timer_Revisa_SOC_Tick(sender As Object, e As EventArgs) Handles Timer_Revisa_SOC.Tick

        Timer_Revisa_SOC.Stop()

        Dim _Row_Soc As DataRow '= _Cl_Soc.Row_Soc_01_Enc
        Dim _Id_DocEnc = _Row_Soc.Item("Id_DocEnc")
        Dim _Numero = _Row_Soc.Item("Numero")
        Dim _Documento_Tomado_Intertanto As Boolean

        Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Casi_DocTom Where Id_DocEnc = " & _Id_DocEnc & " And NombreEquipo = '" & _NombreEquipo & "'"
        _Sql.Ej_consulta_IDU(Consulta_sql)

        Sb_Crear_Documento_Desde_Otros_Documentos_Casi_Bakapp(_Id_DocEnc, False, _Documento_Tomado_Intertanto)

        If Not _Documento_Tomado_Intertanto Then

            _Bloquear_Edicion_Detalle = True

            Lbl_InfoVtaAcumMes.Text = Me.Text
            Me.Text += Space(2) & ",SOLICITUD DE COMPRA NRO: " & _Numero
            _TblEncabezado.Rows(0).Item("Vizado") = True

            Sb_Botones_Activos(False, False)

        Else

            Consulta_sql = "Select *,NOKOFU
                            From " & _Global_BaseBk & "Zw_Casi_DocTom
                            LEFT JOIN TABFU ON KOFU = CodFuncionario
                            Where Id_DocEnc = " & _Id_DocEnc
            Dim _Row_Tomado As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            Dim _Nokofu = _Row_Tomado.Item("NOKOFU")

            MessageBoxEx.Show(Me, "El documento fue tomado en el intertanto por " & Environment.NewLine &
                              _Nokofu, "Validación", MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, Me.TopMost)

            Me.Close()

        End If

    End Sub

    Private Sub Btn_Editar_Solicitud_Click(sender As Object, e As EventArgs) Handles Btn_Editar_Solicitud.Click

        _TblEncabezado.Rows(0).Item("Vizado") = False

        Sb_Marcar_Grilla()
        Sb_Botones_Activos(False, False)

        MessageBoxEx.Show(Me, "Ahora es posible editar el documento", "Editar Solicitud", MessageBoxButtons.OK,
                          MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, Me.TopMost)

    End Sub

    Sub Sb_Solicitar_Compra_De_Producto(_Existe As Boolean)

        Dim _RowProducto As DataRow

        If _Existe Then

            _RowProducto = Fx_Buscar_Producto("", False, False, Nothing, False)

            If IsNothing(_RowProducto) Then
                Return
            End If

        End If

        Dim Fm As New Frm_Sol_Recom_Compra_Pr(0)
        Fm.Pro_Row_Producto = _RowProducto
        Fm.ShowDialog(Me)
        Fm.Dispose()

    End Sub

    Private Sub Btn_Sol_Compra_Pr_Existente_Click(sender As Object, e As EventArgs) Handles Btn_Sol_Compra_Pr_Existente.Click
        Sb_Solicitar_Compra_De_Producto(True)
    End Sub

    Private Sub Btn_Sol_Compra_Pr_No_Existente_Click(sender As Object, e As EventArgs) Handles Btn_Sol_Compra_Pr_No_Existente.Click
        Sb_Solicitar_Compra_De_Producto(False)
    End Sub

    Private Sub Btn_Ver_Mis_Solicitudes_Productos_Click(sender As Object, e As EventArgs) Handles Btn_Ver_Mis_Solicitudes_Productos.Click

        Dim Fm As New Frm_Sol_Recom_Lista(Frm_Sol_Recom_Lista.Enum_Vista_Solicitudes.Mis_Solicitudes)
        Fm.ShowDialog(Me)
        Fm.Dispose()

    End Sub

    Private Sub Btn_Sol_Compra_Click(sender As Object, e As EventArgs) Handles Btn_Sol_Compra.Click

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Prod061", Nothing, "", "") Then 'Fx_Tiene_Permiso(Me, "Prod061") Then

            Dim _Fila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index)
            Dim _Codigo = _Fila.Cells("Codigo").Value

            Dim _RowProducto As DataRow

            _RowProducto = Fx_Buscar_Producto(_Codigo, False, False, Nothing, False)

            If IsNothing(_RowProducto) Then
                Return
            End If

            Dim Fm As New Frm_Sol_Recom_Compra_Pr(0)
            Fm.Pro_Row_Producto = _RowProducto
            Fm.ShowDialog(Me)
            Fm.Dispose()

        End If

    End Sub

    Private Sub Btn_Mini_Sol_Compra_Click(sender As Object, e As EventArgs) Handles Btn_Mini_Sol_Compra.Click

        If Fx_Tiene_Permiso(Me, "Prod061") Then

            Dim Fm As New Frm_Sol_Recom_Lista(Frm_Sol_Recom_Lista.Enum_Vista_Solicitudes.Mis_Solicitudes)
            Fm.ShowDialog(Me)
            Fm.Dispose()

        End If

    End Sub

    Private Sub Btn_Sol_Crear_Producto_Click(sender As Object, e As EventArgs) Handles Btn_Mini_Sol_Crear_Producto.Click

        Dim _Grabar As Boolean

        Dim _Cl_SolCreaProducto As New Cl_SolCreaProducto

        Dim Fm As New Frm_SolCreaProducto(0)
        Fm.Pro_Moneda = _RowMoneda_Doc.Item("KOMO")
        Fm.Pro_Row_Proveedor = _RowEntidad
        Fm.ShowDialog(Me)
        _Grabar = Fm.Pro_Grabar
        _Cl_SolCreaProducto = Fm.Pro_Cl_SolCreaProducto
        Fm.Dispose()

        If _Grabar Then

            Dim _Fila As DataGridViewRow

            Dim _Nuevo_Producto As Boolean
            For Each _Row As DataGridViewRow In Grilla_Detalle.Rows

                _Nuevo_Producto = _Row.Cells("Nuevo_Producto").Value

                If _Nuevo_Producto Then
                    _Fila = _Row
                    Exit For
                End If

            Next

            If Not _Nuevo_Producto Then
                Sb_Nueva_Linea(_TblEncabezado.Rows(0).Item("ListaPrecios"))
                _Fila = Grilla_Detalle.Rows(Grilla_Detalle.RowCount - 1)
            End If

            Dim _RowProducto As DataRow = _Cl_SolCreaProducto.Row_NewMaepr

            Sb_Traer_Producto_Grilla_Producto_A_Crear(_Fila, _RowProducto)

        End If


    End Sub

    Private Sub Btn_Desbloquear_Visado_Click(sender As Object, e As EventArgs) Handles Btn_Desbloquear_Visado.Click

        Dim _Opcion = MessageBoxEx.Show(Me, "Si desbloquea el documento debera solicitar nuevamente los permisos asociados" & Environment.NewLine & Environment.NewLine &
                                        "¿Desea desbloquear el documento?",
                                        "Documento Visado",
                                        MessageBoxButtons.OKCancel, MessageBoxIcon.Warning, MessageBoxButtons.OK, Me.TopMost)

        If _Opcion = Windows.Forms.DialogResult.OK Then

            _TblEncabezado.Rows(0).Item("CodUsuario_Permiso_Dscto") = String.Empty
            _TblEncabezado.Rows(0).Item("Fun_Auto_Deuda_Ven") = String.Empty
            _TblEncabezado.Rows(0).Item("Fun_Auto_Stock_Ins") = String.Empty
            _TblEncabezado.Rows(0).Item("Fun_Auto_Cupo_Exe") = String.Empty
            _TblEncabezado.Rows(0).Item("Fun_Auto_Fecha_Des") = String.Empty

            '_Row_PermisosNecesarios.Item("Documento_Autorizado") = False
            _TblEncabezado.Rows(0).Item("Vizado") = False

            For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows

                Dim _Idmaeedo_Dori = _Fila.Cells("Idmaeedo_Dori").Value
                Dim _Tidopa = _Fila.Cells("Tidopa").Value
                Dim _Nudopa = _Fila.Cells("Nudopa").Value

                _Fila.Cells("CodFunAutoriza").Value = "xyz" 'FUNCIONARIO

                Consulta_sql = "Update " & _Global_BaseBk & "Zw_Remotas Set Observaciones = 'Documento de origen desbloqueado, " & _Tidopa & "-" & _Nudopa & "',
                                Idmaeedo = 0 Where Idmaeedo = " & _Idmaeedo_Dori
                _Sql.Ej_consulta_IDU(Consulta_sql)

            Next

            Dim _Tbl_Permisos_Doc As DataTable = _Ds_Matriz_Documentos.Tables("Permisos_Doc")

            For Each _Row As DataRow In _Tbl_Permisos_Doc.Rows

                Dim _NroRemota = _Row.Item("NroRemota")

                _Row.Item("Necesita_Permiso") = False
                _Row.Item("Autorizado") = False
                _Row.Item("CodFuncionario_Autoriza") = String.Empty
                _Row.Item("NomFuncionario_Autoriza") = String.Empty
                _Row.Item("NroRemota") = String.Empty
                _Row.Item("Permiso_Presencial") = False

                If Not String.IsNullOrEmpty(_NroRemota) Then

                    Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Remotas Where NroRemota = '" & _NroRemota & "'"
                    Consulta_sql = "Update " & _Global_BaseBk & "Zw_Remotas Set Eliminada = 1 Where NroRemota = '" & _NroRemota & "'"
                    _Sql.Ej_consulta_IDU(Consulta_sql)

                End If

            Next

        End If

        Sb_EliminarFilaPuntos()

        Sb_Marcar_Grilla()
        Sb_Botones_Activos(False, False)

    End Sub

    Private Sub Timer_Crear_Doc_Desde_Otro_Tick(sender As Object, e As EventArgs) Handles Timer_Crear_Doc_Desde_Otro.Tick

        Timer_Crear_Doc_Desde_Otro.Stop()

        Grilla_Encabezado.Rows(0).Cells("CodEntidad").Value = _Tido_Origen & "" & _Nudo_Origen
        Grilla_Encabezado.EndEdit()

        Call Grilla_Encabezado_CellEndEdit(Nothing, Nothing)

    End Sub

    Private Sub Timer_Solo_Ver_Documento_Casi_Bakapp_Tick(sender As Object, e As EventArgs) Handles Timer_Solo_Ver_Documento_Casi_Bakapp.Tick

        Timer_Solo_Ver_Documento_Casi_Bakapp.Stop()

        Me.Enabled = False

        Dim _Documento_Tomado_Intertanto As Boolean

        Sb_Crear_Documento_Desde_Otros_Documentos_Casi_Bakapp(_Id_DocEnc, False, _Documento_Tomado_Intertanto)

        Btn_Ver_Costos.Visible = False
        Btn_Mostrar_Margenes.Visible = False

        _Bloquear_Edicion_Detalle = True

        Lbl_InfoVtaAcumMes.Text = Me.Text
        Me.Text += Space(2) & ",DOCUMENTO EN ESTADO PENDIENTE"

        _Revisando_Situacion_Comercial = False

        Warning_Visado.Visible = False
        Btn_Desbloquear_Visado.Visible = False

        Btn_Aceptar_Documento.Visible = False
        Btn_Rechazar_Documento.Visible = False
        Btn_Observaciones.Visible = True

        Me.Enabled = True
        Me.Refresh()


    End Sub

    Private Sub Frm_Formulario_Documento_FormClosing(sender As Object, e As FormClosingEventArgs) Handles MyBase.FormClosing

        If _Revisando_Situacion_Comercial Then

            Sb_Revisando_Situacion_Comercial(False)
            e.Cancel = True

        ElseIf _Revision_Remota Or _Revisar_Notificacion_Automatica_Remota Then

            Dim _Id_DocEnc = _RowRemota_Notificacion.Item("Id_Casi_DocEnc")
            Dim _NroRemota = _RowRemota_Notificacion.Item("NroRemota")
            Dim _Id_Notificacion = _RowRemota_Notificacion.Item("Id_Notificacion")

            Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Casi_DocTom Where Id_DocEnc = " & _Id_DocEnc & "
                            Update " & _Global_BaseBk & "Zw_Notificaciones SET Mostrar = 1,Autorizado = 0,Rechazado = 0
                            Where NroRemota = '" & _NroRemota & "'"
            _Sql.Ej_consulta_IDU(Consulta_sql)

        Else


            If CBool(_Idmaeedo_Origen) Then

                Consulta_sql = "Update " & _Global_BaseBk & "Zw_WMS_Ubicaciones_Stock_X_Producto SET Reservado = 1
                                Where Idmaeddo_Reserva IN (Select IDMAEDDO From MAEDDO Where IDMAEEDO = " & _Idmaeedo_Origen & ")"
                _Sql.Ej_consulta_IDU(Consulta_sql)

                Dim Cerrar_Doc As New Clas_Cerrar_Documento
                Consulta_sql = "Select * From MAEDDO Where IDMAEEDO = " & _Idmaeedo_Origen

                Dim _Tbl_Origen As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)
                Cerrar_Doc.Fx_Abrir_Documento(_Idmaeedo_Origen, _Tbl_Origen)

            End If

            If Not (Me.WindowState = FormWindowState.Minimized) Then
                If System.IO.File.Exists(_Ruta_Documento_Bkp) Then System.IO.File.Delete(_Ruta_Documento_Bkp)
            End If

        End If

        'End If

    End Sub

    Protected Overrides Sub OnResize(e As System.EventArgs)

        If (Me.WindowState = FormWindowState.Minimized) Then

            Dim _Borrar As Boolean = _Post_Venta

            Dim _TipoEstacion = Trim(_Global_Row_EstacionBk.Item("TipoEstacion"))

            If _TipoEstacion = "N" Then

                For Each row As DataGridViewRow In Grilla_Detalle.Rows

                    Dim _IdMaeddo_Dori As Integer = row.Cells("IdMaeddo_Dori").Value
                    Dim _Stock_desde_WMS As Boolean = row.Cells("Stock_desde_WMS").Value

                    If CBool(_IdMaeddo_Dori) Then
                        _Borrar = True
                        Exit For
                    End If

                Next

                If Fx_Revisar_si_tiene_registros(False) Then

                    If Not (_RowEntidad Is Nothing) Then

                        _Ds_Matriz_Documentos.WriteXml(_Ruta_Documento_Bkp, XmlWriteMode.IgnoreSchema)
                        _En_Construccion = True

                        Clipboard.SetText(_Ruta_Documento_Bkp)

                    Else
                        System.IO.File.Delete(_Ruta_Documento_Bkp)
                    End If

                Else
                    _Borrar = True
                End If

            End If

            If _Borrar Then
                File.Delete(_Ruta_Documento_Bkp)
            End If

            Me.Close()

        End If

        Me.Refresh()

    End Sub

    Private Sub Btn_Anotaciones_al_documento_Click(sender As Object, e As EventArgs) Handles Btn_Anotaciones_al_documento.Click

        If _Revision_Remota Then
            ShowContextMenu(Menu_Contextual_Anotaciones)
        Else
            Call Btn_Ver_Anotaciones_al_documento_Click(Nothing, Nothing)
        End If

    End Sub

    Private Sub Btn_Anotaciones_a_la_linea_Click(sender As Object, e As EventArgs) Handles Btn_Anotaciones_a_la_linea.Click

        Dim Fm As New Frm_Anotaciones_Ver_Anotaciones(0, Frm_Anotaciones_Ver_Anotaciones.Tipo_Tabla.MAEDDO)
        Fm.Tbl_Mevento = _Tbl_Mevento_Edd
        Fm.ShowDialog(Me)
        Fm.Dispose()

    End Sub

    Private Function Fx_Row_Nueva_Linea_Mevento(_Idevento As Integer,
                                                _Archirve As String,
                                                _Idrve As Integer,
                                                _Kofu As String,
                                                _Fevento As Date,
                                                _Kotabla As String,
                                                _Kocarac As String,
                                                _Nokocarac As String,
                                                _Archirse As String,
                                                _Idrse As Integer,
                                                _Fecharef As Date,
                                                _Link As String,
                                                _Kofudest As String,
                                                ByRef _Tbl_Mevento As DataTable) As DataRow

        Dim NewFila As DataRow
        NewFila = _Tbl_Mevento.NewRow
        With NewFila

            .Item("IDEVENTO") = _Tbl_Mevento.Rows.Count + 1
            .Item("ARCHIRVE") = _Archirve
            .Item("IDRVE") = _Idrve
            .Item("KOFU") = _Kofu
            .Item("FEVENTO") = FormatDateTime(_Fevento, DateFormat.ShortDate)
            .Item("KOTABLA") = _Kotabla
            .Item("KOCARAC") = _Kocarac
            .Item("NOKOCARAC") = _Nokocarac

            .Item("ARCHIRSE") = _Archirse
            .Item("IDRSE") = _Idrse
            .Item("HORAGRAB") = 0
            .Item("FECHAREF") = _Fecharef
            .Item("LINK") = _Link
            '.Item("KOFUDEST") = _Kofudest

            _Tbl_Mevento.Rows.Add(NewFila)

        End With

        Return NewFila

    End Function

    Private Sub Btn_Ver_Anotaciones_al_documento_Click(sender As Object, e As EventArgs) Handles Btn_Ver_Anotaciones_al_documento.Click

        If _RowEntidad Is Nothing Then
            MessageBoxEx.Show(Me, "Falta entidad en el documento", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop,
                              MessageBoxDefaultButton.Button1, Me.TopMost)
            Return
        End If

        Dim Fm As New Frm_Anotaciones_Ver_Anotaciones(0, Frm_Anotaciones_Ver_Anotaciones.Tipo_Tabla.MAEEDO)
        Fm.Tbl_Mevento = _Tbl_Mevento_Edo
        Fm.ShowDialog(Me)
        Fm.Dispose()

        Sb_Actualizar_Tag_Mevento()

    End Sub

    Sub Sb_Actualizar_Tag_Mevento()

        If Not IsNothing(_Ds_Documento_Origen) Then

            Dim _TblEncabezado_StBy As DataTable = _Ds_Documento_Origen.Tables(0)

            Dim _Id_DocEnc = _TblEncabezado_StBy.Rows(0).Item("Id_DocEnc")

            If Convert.ToBoolean(_Id_DocEnc) Then

                Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Casi_DocTag Where Id_DocEnc = " & _Id_DocEnc & Environment.NewLine

                For Each _Fila As DataRow In _Tbl_Mevento_Edo.Rows

                    Dim _Archirve = _Fila.Item("ARCHIRVE")
                    Dim _Kofu = _Fila.Item("KOFU")
                    Dim _Fevento As DateTime = _Fila.Item("Hora2")
                    Dim _Kotabla = _Fila.Item("KOTABLA")
                    Dim _Kocarac = _Fila.Item("KOCARAC")
                    Dim _Nokocarac = _Fila.Item("NOKOCARAC")
                    Dim _Archise = _Fila.Item("ARCHIRSE")
                    Dim _Idrse = _Fila.Item("IDRSE")
                    Dim _HoraGrab = _Fila.Item("HORAGRAB")
                    Dim _Fecharef = _Fila.Item("FECHAREF")
                    Dim _Link = _Fila.Item("LINK")
                    Dim _Kofudest = _Fila.Item("KOFUDEST")

                    Consulta_sql += "Insert Into " & _Global_BaseBk & "Zw_Casi_DocTag (Id_DocEnc,Archirve,Idrve,Kofu,Fevento,Kotabla,Kocarac,Nokocarac,Archirse,Idrse,Horagrab,Fecharef,Link,Kofudest)
                                 Values 
                                 (" & _Id_DocEnc & ",'" & _Archirve & "',0,'" & _Kofu & "','" & Format(_Fevento, "yyyyMMdd hh:mm") & "','" & _Kotabla & "','" & _Kocarac & "','" & _Nokocarac &
                                     "','" & _Archise & "'," & _Idrse & "," & _HoraGrab & ",Null,'" & _Link & "','" & _Kofudest & "')" & Environment.NewLine

                Next

                _Sql.Ej_consulta_IDU(Consulta_sql)

            End If

        End If

    End Sub

    Private Sub Btn_Agregar_Anotacion_Simple_Click(sender As Object, e As EventArgs) Handles Btn_Agregar_Anotacion_Simple.Click

        Dim _Anotacion As String
        Dim _Aceptado As Boolean

        _Aceptado = InputBox_Bk(Me, "", "Incorporar anotación simple en documento", _Anotacion,
                                        True, _Tipo_Mayus_Minus.Normal, 200, True, _Tipo_Imagen.Texto)

        If _Aceptado Then

            Dim FmTagEdo As New Frm_Anotaciones_Ver_Anotaciones(0, Frm_Anotaciones_Ver_Anotaciones.Tipo_Tabla.MAEEDO)
            FmTagEdo.Tbl_Mevento = _Tbl_Mevento_Edo

            Dim _Horagrab = Hora_Grab_fx(False)

            FmTagEdo.Fx_Row_Nueva_Linea(0, "MAEEDO", 0, FUNCIONARIO, Now, "", "", _Anotacion, "", 0, Now, "", "", _Horagrab)
            FmTagEdo.Dispose()

            Sb_Actualizar_Tag_Mevento()

            Dim _Usuario_Destino As String = _TblEncabezado.Rows(0).Item("CodFuncionario")

            Dim _RCadena_Id_Enc = _RowRemota_Notificacion.Item("Id_Rem")
            Dim _Id_Rem = _RowRemota_Notificacion.Item("Id_Rem")
            Dim _Id_DocEnc = _RowRemota_Notificacion.Item("Id_Casi_DocEnc")
            Dim _NroRemota As String = _RowRemota_Notificacion.Item("NroRemota")
            Dim _Nro_RCadena As String = _RowRemota_Notificacion.Item("Nro_RCadena")

            If _Anotacion.Length > 100 Then
                _Anotacion = Mid(_Anotacion, 1, 100) & "..."
            End If

            csNotificaciones.Notificacion.Fx_Insertar_Notificacion(FUNCIONARIO,
                                                           _Usuario_Destino, "Enviado por: " & Nombre_funcionario_activo,
                                                           "SOLICITUD REMOTA Nro: " & _Nro_RCadena & " (" & _NroRemota & ")" & vbCrLf &
                                                           "Información: " & _Anotacion,
                                                           csNotificaciones.Notificacion.Imagen.Informacion, "", False, 0, True, _RCadena_Id_Enc,
                                                           False, "", "", "")

            MessageBoxEx.Show(Me, "Anotación incorporada correctamente", "Anotación", MessageBoxButtons.OK, MessageBoxIcon.Information)

        End If

    End Sub

    Private Sub Btn_Cambiar_IVA_Click(sender As Object, e As EventArgs) Handles Btn_Cambiar_IVA.Click

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Bkp00060", Nothing, "", "") Then

            Dim _Fila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index)

            Dim _PorIva As Double = _Fila.Cells("PorIva").Value
            Dim _PorIla As Double = _Fila.Cells("PorIla").Value
            Dim _ValIvaLinea As Double = _Fila.Cells("ValIvaLinea").Value
            Dim _ValIlaLinea As Double = _Fila.Cells("ValIlaLinea").Value

            Dim _ValNetoLinea As Double = _Fila.Cells("ValNetoLinea").Value
            Dim _ValBrutoLinea As Double = _Fila.Cells("ValBrutoLinea").Value
            Dim _Aceptar As Boolean

            Dim Fm As New Frm_Formulario_Iva_Ila(Frm_Formulario_Iva_Ila.Enum_Tipo_Impuesto.Iva, _ValIvaLinea, _ValIlaLinea, _ValNetoLinea, _ValBrutoLinea)
            Fm.ShowDialog(Me)
            _PorIva = Fm.Porc_Iva
            _Aceptar = Fm.Aceptar
            _ValIvaLinea = Fm.Valor_Iva
            Fm.Dispose()

            If _Aceptar Then
                _Fila.Cells("PorIva").Value = _PorIva
                Sb_Procesar_Datos_De_Grilla(_Fila, "DescuentoPorc", False, False)
                _Fila.Cells("ValIvaLinea").Value = _ValIvaLinea
                LblIvaLinea.Text = FormatNumber(_ValIvaLinea, 2)
                Sb_Sumar_Totales()
            End If

        End If

    End Sub

    Private Sub Btn_Especial_Prestashop_Click(sender As Object, e As EventArgs) Handles Btn_Especial_Prestashop.Click

        Dim _Fila As DataGridViewRow = Grilla_Detalle.Rows(0)
        Dim _Nuevo_Producto As Boolean = _Fila.Cells("Nuevo_Producto").Value

        If _Nuevo_Producto Then

            Dim _Aceptar As Boolean
            Dim _Id_order As String

            Dim _Sql_Filtro_Condicion_Extra = String.Empty
            Dim _Filtrar As New Clas_Filtros_Random(Me)

            _Filtrar.Tabla = _Global_BaseBk & "Zw_PrestaShop"
            _Filtrar.Campo = "Codigo_Pagina"
            _Filtrar.Descripcion = "Nombre_Pagina"

            If _Filtrar.Fx_Filtrar(Nothing,
                               Clas_Filtros_Random.Enum_Tabla_Fl._Otra, _Sql_Filtro_Condicion_Extra,
                               Nothing, False, True) Then

                Dim _Tbl_Filtro As DataTable = _Filtrar.Pro_Tbl_Filtro
                Dim _Row As DataRow = _Tbl_Filtro.Rows(0)

                Dim _Codigo_Pagina = Trim(_Row.Item("Codigo"))

                If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, _Codigo_Pagina, Nothing, "", "") Then

                    _Aceptar = InputBox_Bk(Me, "Ingrese el código de la orden", "",
                                                   _Id_order, False,,, True, _Tipo_Imagen.Buscar_documento,, _Tipo_Caracter.Solo_Numeros_Enteros, False)

                    If _Aceptar Then

                        Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_PrestaShop_orders" & vbCrLf &
                                       "Where Codigo_Pagina = '" & _Codigo_Pagina & "' And Id_order = " & _Id_order & " And Reference <> ''"
                        Dim _Row_Orders As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                        If Not IsNothing(_Row_Orders) Then

                            Dim _Reference As String = _Row_Orders.Item("Reference")

                            If _Reference.Contains("Error!") Then

                                Consulta_sql = "Delete " & _Global_BaseBk & "Zw_PrestaShop_orders 
                                                Where Codigo_Pagina = '" & _Codigo_Pagina & "' And Id_order = " & _Id_order
                                _Sql.Ej_consulta_IDU(Consulta_sql)

                                Consulta_sql = "Delete " & _Global_BaseBk & "Zw_PrestaShop_orders_detail" & vbCrLf &
                                                "Where Codigo_Pagina = '" & _Codigo_Pagina & "' And Id_order Not In (Select Id_order From " & _Global_BaseBk & "Zw_PrestaShop_orders Where Codigo_Pagina = '" & _Codigo_Pagina & "')" &
                                                vbCrLf &
                                                "Delete " & _Global_BaseBk & "Zw_PrestaShop_orders_detail_tax" & vbCrLf &
                                                "Where Codigo_Pagina = '" & _Codigo_Pagina & "' And Id_order_detail Not In (Select Id_order_detail From " & _Global_BaseBk & "Zw_PrestaShop_orders_detail Where Codigo_Pagina = '" & _Codigo_Pagina & "')"
                                _Sql.Fx_Eje_Condulta_Insert_Update_Delte_TRANSACCION(Consulta_sql)

                            End If

                        End If

                        Dim _Existe As Boolean

                        _Existe = CBool(_Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_PrestaShop_orders_detail",
                                                               "Codigo_Pagina = '" & _Codigo_Pagina & "' And Id_order = " & _Id_order))

                        If Not _Existe Then

                            Consulta_sql = "Delete " & _Global_BaseBk & "Zw_PrestaShop_orders Where Codigo_Pagina = '" & _Codigo_Pagina & "' And Id_order = " & _Id_order & " And Reference = 'Error!'
                                            Insert Into " & _Global_BaseBk & "Zw_PrestaShop_orders (Codigo_Pagina,Id_order) Values ('" & _Codigo_Pagina & "'," & _Id_order & ")"
                            _Sql.Ej_consulta_IDU(Consulta_sql, False)

                            Dim Fm_Espera As New Frm_Form_Esperar
                            Fm_Espera.BarraCircular.IsRunning = True
                            Fm_Espera.Show()

                            Dim _Contador = 0

                            Do

                                ' 10 Segundos de demora
                                Thread.Sleep(10000)

                                _Existe = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_PrestaShop_orders",
                                                               "Codigo_Pagina = '" & _Codigo_Pagina & "' And Id_order = " & _Id_order & " And Reference <> ''")

                                _Contador += 1

                                If _Contador >= 3 Then
                                    Exit Do
                                End If

                            Loop Until _Existe

                            Fm_Espera.Close()
                            Fm_Espera.Dispose()

                        End If

                        If _Existe Then

                            Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_PrestaShop_orders Where Codigo_Pagina = '" & _Codigo_Pagina & "' And Id_order = " & _Id_order & " And Reference <> ''"
                            _Row_Orders = _Sql.Fx_Get_DataRow(Consulta_sql)

                            Dim _Reference As String = _Row_Orders.Item("Reference")
                            Dim _Idmaeedo_Ref As Integer = _Row_Orders.Item("Idmaeedo")

                            Consulta_sql = "Select TIDO,NUDO,ENDO,SUENDO From MAEEDO Where IDMAEEDO = " & _Idmaeedo_Ref & " And NUDONODEFI = 0"
                            Dim _Row_Maeedo_Ref As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                            If Not IsNothing(_Row_Maeedo_Ref) Then

                                Dim _Tido_Ref = _Row_Maeedo_Ref.Item("TIDO")
                                Dim _Nudo_Ref = _Row_Maeedo_Ref.Item("NUDO")
                                Dim _Endo_Ref = _Row_Maeedo_Ref.Item("ENDO")
                                Dim _Suendo_Ref = _Row_Maeedo_Ref.Item("SUENDO")

                                Dim _Row_Entidad_Ref = Fx_Traer_Datos_Entidad(_Endo_Ref, _Suendo_Ref)

                                Dim _Rut_Ref = _Row_Entidad_Ref.Item("Rut")
                                Dim _Razon_Ref = _Row_Entidad_Ref.Item("NOKOEN").ToString.Trim

                                If MessageBoxEx.Show(Me, "Ya se creo un documento a partir de este pedido en el sistema." & vbCrLf & vbCrLf &
                                                  "Documento: " & _Tido_Ref & "-" & _Nudo_Ref & vbCrLf &
                                                  "Entidad: " & _Rut_Ref & " - " & _Razon_Ref & vbCrLf & vbCrLf &
                                                  "¿Desea ver el documento?", "Validación",
                                                  MessageBoxButtons.YesNo, MessageBoxIcon.Stop) = DialogResult.Yes Then

                                    Dim Fm As New Frm_Ver_Documento(_Idmaeedo_Ref, Frm_Ver_Documento.Enum_Tipo_Apertura.Desde_Random_SQL)
                                    Fm.ShowDialog(Me)
                                    Fm.Dispose()

                                End If

                                Return

                            End If

                            If Not _Reference.Contains("Error!") Then

                                MessageBoxEx.Show(Me, "Código de orden:" & _Row_Orders.Item("Reference"), "Documento encontrado",
                                          MessageBoxButtons.OK, MessageBoxIcon.Information)

                                Sb_Traer_Documentos_Prestashop(_Row_Orders)

                            Else

                                'Consulta_sql = "Delete " & _Global_BaseBk & "Zw_PrestaShop_orders 
                                '                Where Codigo_Pagina = '" & _Codigo_Pagina & "' And Id_order = " & _Id_order
                                '_Sql.Ej_consulta_IDU(Consulta_sql)

                                MessageBoxEx.Show(Me, "No fue posible enontrar el documento en el sitio ", _Reference,
                                          MessageBoxButtons.OK, MessageBoxIcon.Stop)

                            End If

                        Else

                            Consulta_sql = "Delete " & _Global_BaseBk & "Zw_PrestaShop_orders 
                                            Where Codigo_Pagina = '" & _Codigo_Pagina & "' And Id_order = " & _Id_order
                            _Sql.Ej_consulta_IDU(Consulta_sql)

                            MessageBoxEx.Show(Me, "No fue posible enontrar el documento en el sitio ", "El documento no fue encontrado",
                                          MessageBoxButtons.OK, MessageBoxIcon.Stop)

                        End If

                    End If

                End If

            End If

        Else

            MessageBoxEx.Show(Me, "No pueden haber productos en el detalle para poder utilizar esta opción", "Validación",
                              MessageBoxButtons.OK, MessageBoxIcon.Stop)

        End If

    End Sub

    Sub Sb_Traer_Documentos_Prestashop(_Row_Orders As DataRow)

        Dim _Codigo_Pagina As String = _Row_Orders.Item("Codigo_Pagina")
        Dim _Id_order As String = _Row_Orders.Item("Id_order")
        Dim _Reference As String = _Row_Orders.Item("Reference")
        Dim _Date_add As Date = _Row_Orders.Item("Date_add")

        Me.Cursor = Cursors.WaitCursor

        Consulta_sql = "Select 0 As IDMAEEDO,Getdate() As FEEMDO,Getdate() As FEER 
                        Select '" & FUNCIONARIO & "' As KOFULIDO,Det.Product_reference As KOPRCT,Cast(0 As Bit) As PRCT,'' As TICT,TIPR,
                        Product_name As Descripcion,NOKOPR,'' As CodAlternativo,'" & Mod_ListaPrecioVenta & "' As KOLTPR,UD01PR As UD1,UD02PR As UD2,
                        Round(Unit_price_tax_incl * 1.19,0) as CostoUd1,Round(Unit_price_tax_incl * 1.19,0) as CostoUd2,
                        0 As Precio,Round(Unit_price_tax_incl * 1.19,0) As Precio_Vta,RLUD As Rtu,Product_quantity As Cantidad,Reduction_percent as PODTGLLI,
                        1 as UDTRPR,0 as POTENCIA,'' As KOFUAULIDO,'' As KOOPLIDO,
                        0 As IDMAEEDO,0 As IDMAEDDO,'" & ModEmpresa_Doc & "' As EMPRESA,'" & Mod_Sucursal & "' As SULIDO,'" & Mod_Bodega & "' As BOSULIDO,
                        '' As ENDO,'' As SUENDO, GetDate() As FEEMLI,'' As TIDO,'' As NUDO,'' As NULIDO,
                        0 As CantUd1_Dori,0 As CantUd2_Dori,'' As OBSERVA,
                        0 As Id_Oferta,'' As Oferta,0 As Es_Padre_Oferta,0 As Padre_Oferta,0 As Hijo_Oferta,0 As Cantidad_Oferta,0 As Porcdesc_Oferta

                        From " & _Global_BaseBk & "Zw_PrestaShop_orders_detail Det
	                        Inner Join " & _Global_BaseBk & "Zw_PrestaShop_orders_detail_tax Tax On Det.Id_order_detail = Tax.Id_order_detail And Tax.Codigo_Pagina = Det.Codigo_Pagina
                               Inner Join MAEPR On KOPR = Det.Product_reference
                        Where Det.Codigo_Pagina = '" & _Codigo_Pagina & "' And Det.Id_order = " & _Id_order & "

                        Select * From MAEIMLI Where 1<0  
                        Select * From MAEDTLI Where 1<0  

                        Select 'Documento generado desde Prestashop, Referencia: " & _Reference & "' as OBDO,'" & _Id_order & "' As OCDO"

        Dim _Ds_New_Documento As DataSet = _Sql.Fx_Get_DataSet(Consulta_sql)

        Dim _Redondear_Cero As Boolean = Chk_Redondear_Cero.Checked

        Chk_Redondear_Cero.Checked = False

        Sb_Crear_Documento_Desde_Otros_Documentos(Me, _Ds_New_Documento, True, False, Nothing, True, False)

        Dim _NroLinRef = _Class_Referencias_DTE.Tbl_Referencias.Rows.Count + 1
        Dim _Row_Referencia As DataRow = _Class_Referencias_DTE.Fx_Row_Nueva_Referencia(0, 0, "", "", _NroLinRef,
                                                                                        801, _Id_order,
                                                                                        "", "", _Date_add, 0, "Orden de compra")
        _TblObservaciones.Rows(0).Item("Orden_compra") = _Id_order

        Chk_Redondear_Cero.Checked = _Redondear_Cero

        _Desde_Prestahop = True

        Btn_Cliente_Prestashop.Enabled = False
        Btn_Cliente_Prestashop.Enabled = True

        Me.Cursor = Cursors.Default

    End Sub


    Private Sub Btn_Opciones_Especiales_Click(sender As Object, e As EventArgs) Handles Btn_Opciones_Especiales.Click

        If Btn_Especial_Prestashop.Enabled Then

            Dim _Reg = CBool(_Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_PrestaShop"))

            Btn_Especial_Prestashop.Enabled = _Reg
            Btn_Cliente_Prestashop.Enabled = _Desde_Prestahop

        End If

        If _Tido = "OCC" Or _Tido = "GRC" Or _Tido = "FCC" Then
            Btn_ActListaProveedor.Visible = True
        Else
            Btn_ActListaProveedor.Visible = False
        End If

        Btn_Crear_Desde_DTEXMLCompra.Visible = (_Tido = "OCC")

        If IsNothing(_RowEntidad) Then
            Btn_Lista_Costos_Proveedor_Mismo_Proveedor.Enabled = False
            Btn_Lista_Costos_Proveedor_Mismo_Proveedor.Text = "Proveedor actual..."
        Else
            Btn_Lista_Costos_Proveedor_Mismo_Proveedor.Enabled = True
            Btn_Lista_Costos_Proveedor_Mismo_Proveedor.Text = "Proveedor: " & _RowEntidad.Item("NOKOEN").ToString.Trim
        End If

        'Btn_Contenedor.Visible = (PreVenta And _Tido = "OCC")

        ShowContextMenu(Menu_Contextual_Opciones_Especiales)

    End Sub

    Private Sub Btn_Consolidar_Stock_Click(sender As Object, e As EventArgs) Handles Btn_Consolidar_Stock.Click

        If Not Fx_Tiene_Permiso(Me, "Prod055") Then
            Return
        End If

        Dim _Fila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index)

        Dim _Codigo = _Fila.Cells("Codigo").Value

        If Not String.IsNullOrEmpty(_Codigo) Then

            Dim Fm As New Frm_Consolidacion_Stock_PP("('" & _Codigo & "')")
            Fm.Pro_Ejecutar_Automaticamente = True
            Fm.BtnCancelar.Visible = False
            Fm.Chk_Reservar_Ventas_Pendientes_Bakapp.Enabled = False
            Fm.BtnProcesar.Enabled = False
            Fm.ShowDialog(Me)
            Fm.Dispose()

        End If

    End Sub

    Sub Sb_Cambiar_Unidad_De_Medida(_Fila As DataGridViewRow, _UnTrans As Integer)

        Dim _Cantidad As Double = _Fila.Cells("Cantidad").Value
        Dim _Precio As Double = _Fila.Cells("Precio").Value
        Dim _Rtu As Double = _Fila.Cells("Rtu").Value

        Dim _PrecioListaUd1 As Double = _Fila.Cells("PrecioListaUd1").Value
        Dim _PrecioListaUd2 As Double = _Fila.Cells("PrecioListaUd2").Value

        Dim _Melt As String = _Fila.Cells("Melt").Value


        Dim _Iva = _Fila.Cells("PorIva").Value / 100
        Dim _Ila = _Fila.Cells("PorIla").Value / 100

        Dim _Impuestos As Double = 1 + (_Iva + _Ila)

        If _Cantidad = 0 Then

            'Dim _UnTrans As Integer

            If _UnTrans = 1 Then 'Rdb_Unidad1.Checked Then
                '_UnTrans = 1
                _Precio = _PrecioListaUd1 '_Precio / _Rtu
            Else
                '_UnTrans = 2
                _Precio = _PrecioListaUd2 '_Precio * _Rtu
            End If

            ' CAMBIAR EL PRECIO DE LA LISTA A LA UNIDAD QUE CORRESPONDA...

            Dim _Valor_desde_Lista As csGlobales.Enum_Neto_Bruto

            If _Melt = "N" Then
                _Valor_desde_Lista = csGlobales.Enum_Neto_Bruto.Neto
                '_EsNetoLinea = True
            Else
                _Valor_desde_Lista = csGlobales.Enum_Neto_Bruto.Bruto
                '_EsNetoLinea = False
            End If

            Dim _PrecioNetoUd,
                _PrecioBrutoUd,
                _PrecioNetoUdLista As Double

            Dim _PrecioNetoUdLinea,
                _PrecioBrutoUdLinea,
                _PrecioBrutoUdLista As Double

            Dim _PrecioNeto, _PrecioBruto As Double

            Select Case _Valor_desde_Lista

                Case csGlobales.Enum_Neto_Bruto.Neto

                    _PrecioNeto = _Precio
                    _PrecioBruto = Math.Round(_PrecioNeto * _Impuestos, 2)
                    _PrecioNeto = Math.Round(_PrecioBruto / _Impuestos, 2)
                    'TipoValor = "N"

                    _PrecioNetoUd = _PrecioNeto
                    _PrecioBrutoUd = _PrecioBruto
                    _PrecioNetoUdLinea = _PrecioNetoUd
                    _PrecioBrutoUdLinea = _PrecioBruto

                    If _Rtu < 1 Then
                        _PrecioNetoUdLista = _Precio / _Rtu
                        _PrecioBrutoUdLista = _PrecioBruto / _Rtu
                    Else
                        _PrecioNetoUdLista = _PrecioNeto
                        _PrecioBrutoUdLista = _PrecioBruto
                    End If

                Case csGlobales.Enum_Neto_Bruto.Bruto

                    _PrecioNeto = Math.Round(_Precio / _Impuestos, 2)
                    _PrecioBruto = _Precio
                    'TipoValor = "B"

                    _PrecioNetoUdLinea = _PrecioNeto
                    _PrecioNetoUd = Math.Round(_PrecioNeto, 0)
                    _PrecioNetoUdLista = _PrecioNetoUd

                    _PrecioBrutoUd = _Precio
                    _PrecioBrutoUdLinea = _Precio
                    _PrecioBrutoUdLista = _Precio

            End Select


            _Fila.Cells("UnTrans").Value = _UnTrans
            _Fila.Cells("UdTrans").Value = _Fila.Cells("Ud0" & _UnTrans & "PR").Value
            _Fila.Cells("Precio").Value = _Precio

            _Fila.Cells("PrecioNetoUd").Value = _PrecioNetoUd
            _Fila.Cells("PrecioBrutoUd").Value = _PrecioBrutoUd
            _Fila.Cells("PrecioNetoUdLista").Value = _PrecioNetoUdLista
            _Fila.Cells("PrecioBrutoUdLista").Value = _PrecioBrutoUdLista

        Else

            Beep()

        End If

    End Sub

    Private Sub Btn_Despacho_Click(sender As Object, e As EventArgs) Handles Btn_Despacho.Click
        Sb_Despacho(True, False)
    End Sub

    Sub Sb_Despacho(_Cambiar_Entidad As Boolean, ByRef _FormularioCerradoSinGrabar As Boolean)

        If _RowEntidad Is Nothing Then
            MessageBoxEx.Show(Me, "Falta entidad en el documento", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop,
                              MessageBoxDefaultButton.Button1, Me.TopMost)
            Return
        End If

        Dim _Filtros_Despachos = Generar_Filtro_IN(_TblDetalle, "", "Idmaeedo_Dori", True, False)

        Dim _Reg = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_Despachos_Doc", "Idrst In " & _Filtros_Despachos & " And Activo = 1")

        If CBool(_Reg) Then

            MessageBoxEx.Show(Me, "No es posible generar una orden de despacho para este documento ya que existen ordenes activas para algunos de los documentos sustentatorios." & vbCrLf &
                                "De todas formas si graba este documento con las notas de venta asociadas a una orden de despacho, la orden proseguirá su conducto regular conforme al despacho grabado originalmente." & vbCrLf & vbCrLf &
                               "Para poder hacer una orden de despacho desde cero primero debe anular las ordenes asociadas a la(s) notas de venta vinculada(s)", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return

        End If

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "ODp00002", Nothing, "", "") Then

            If _Cambiar_Entidad Then

                If Not IsNothing(_RowEntidad_X_Defecto) Then

                    Dim _Koen_x_defecto = _RowEntidad_X_Defecto.Item("KOEN").ToString.Trim
                    Dim _Suen_x_defecto = _RowEntidad_X_Defecto.Item("SUEN").ToString.Trim

                    Dim _Koen = _RowEntidad.Item("KOEN").ToString.Trim
                    Dim _Suen = _RowEntidad.Item("SUEN").ToString.Trim

                    If _Koen = _Koen_x_defecto And _Suen = _Suen_x_defecto Then

                        MessageBoxEx.Show(Me, "DEBE SELECCIONAR UNA ENTIDAD PARA EL DESPACHO O RETIRO", "Validación",
                                          MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)

                        Dim _RowNuevaEntidad = Fx_Buscar_Entidad(Me, "", "", True, True)

                        If Not (_RowNuevaEntidad Is Nothing) Then
                            _RowEntidad = _RowNuevaEntidad
                            Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, True)
                        Else
                            Return
                        End If

                    End If

                End If

            End If

            If IsNothing(_Cl_Despacho) Then
                _Cl_Despacho = New Clas_Despacho(False)
                _Cl_Despacho.Desde_Documento = True
                _Cl_Despacho.Sb_Nuevo_Despacho()
                _Cl_Despacho.Row_Entidad = _RowEntidad
            Else
                _Cl_Despacho.Accion = Clas_Despacho.Enum_Accion.Editar
            End If

            _Cl_Despacho.Desde_Documento = True

            Fx_Validar_Peso_Minimo_o_Valores_Por_Despacho_A_Domicilio(False, False)

            Dim _Total_Venta_Neto As Double = _TblEncabezado.Rows(0).Item("TotalNetoDoc")
            Dim _Total_Venta_Kilos As Double = _TblEncabezado.Rows(0).Item("TotalKilos")
            Dim _MinKgDesp As Double = _TblEncabezado.Rows(0).Item("MinKgDesp")
            Dim _MinNetoDesp As Double = _TblEncabezado.Rows(0).Item("MinNetoDesp")

            If _Desde_Prestahop Then
                _Cl_Despacho.Row_Despacho.Item("Referencia") = _TblObservaciones.Rows(0).Item("Observaciones")
            End If

            Try

                Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Despachos_Configuracion" & vbCrLf &
                               "Where Empresa = '" & ModEmpresa_Doc & "'"
                Dim _RowConfDesp As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                Dim Fm As New Frm_Desp_01_Ingreso
                Fm.Ds_Matriz_Documentos = _Ds_Matriz_Documentos
                Fm.Total_Venta_Neto = _Total_Venta_Neto
                Fm.Total_Venta_Kilos = _Total_Venta_Kilos
                Fm.Kilos_Minimo = _MinKgDesp
                Fm.Netos_Minimo = _MinNetoDesp
                Fm.Cl_Despacho = _Cl_Despacho
                Fm.ConfirmarLecturaDespacho = _RowConfDesp.Item("ConfirmarLecturaDespacho")
                Fm.ShowDialog(Me)
                _Grabar = Fm.Grabar
                Fm.Dispose()

                If _Grabar Then

                    _Cl_Despacho.Sb_Cargar_Despacho(_Cl_Despacho.Id_Despacho)
                    _TblEncabezado.Rows(0).Item("FechaRecepcion") = _Cl_Despacho.Row_Despacho.Item("Fecha_Compromiso")

                    For Each _Fila As DataRow In _TblDetalle.Rows
                        _Fila.Item("FechaRecepcion") = _Cl_Despacho.Row_Despacho.Item("Fecha_Compromiso")
                    Next

                    If _Cl_Despacho.Row_Despacho.Item("Tipo_Envio") = "RT" Then
                        _TblObservaciones.Rows(0).Item("Observaciones") = _Cl_Despacho.Row_Conf_Despacho.Item("Obs_Retira_Cliente")
                    Else
                        If _TblObservaciones.Rows(0).Item("Observaciones").trim = _Cl_Despacho.Row_Despacho.Item("Direccion").ToString.Trim Then
                            _TblObservaciones.Rows(0).Item("Observaciones") = String.Empty
                        End If
                        If _Cl_Despacho.Row_Conf_Despacho.Item("Obs_DirCom") Then
                            _TblObservaciones.Rows(0).Item("Obs1") = _Cl_Despacho.Row_Despacho.Item("Direccion").ToString.Trim
                            _TblObservaciones.Rows(0).Item("Obs2") = _Cl_Despacho.Row_Despacho.Item("Comuna").ToString.Trim
                            _TblObservaciones.Rows(0).Item("Observaciones") = _Cl_Despacho.Row_Despacho.Item("Direccion").ToString.Trim
                        End If
                        If _Cl_Despacho.Row_Despacho.Item("Tipo_Envio") = "RR" Then
                            _TblObservaciones.Rows(0).Item("Observaciones") = _Cl_Despacho.Row_Despacho.Item("Direccion").ToString.Trim
                        End If
                    End If

                    Dim _Valor_Min_Despacho, _Peso_Min_Despacho As Double

                    Dim _Filtro_Prod = Generar_Filtro_IN(_TblDetalle, "", "Codigo", False, False, "'")

                    Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Despachos_MiniCompXProd" & vbCrLf &
                                   "Where Empresa = '" & ModEmpresa_Doc & "' And Codigo In " & _Filtro_Prod
                    Dim _Tbl As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

                    If _Tbl.Rows.Count Then

                        _Peso_Min_Despacho = _Tbl.Rows(0).Item("Peso_Min_Despacho")
                        _Valor_Min_Despacho = _Tbl.Rows(0).Item("Valor_Min_Despacho")

                    Else

                        Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Despachos_Configuracion" & vbCrLf &
                                       "Where Empresa = '" & ModEmpresa_Doc & "'"
                        Dim _Row As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                        If Not IsNothing(_Row) Then
                            _Peso_Min_Despacho = _Row.Item("Peso_Min_Despacho")
                            _Valor_Min_Despacho = _Row.Item("Valor_Min_Despacho")
                        End If

                    End If

                    Fx_Validar_Peso_Minimo_o_Valores_Por_Despacho_A_Domicilio(False, True)

                    ' Revisar Despacho Chilexpress

                    Consulta_sql = "Select Valor,Costoenvio From " & _Global_BaseBk & "Zw_Chilexpress_Env Where IdDespacho = " & _Cl_Despacho.Id_Despacho
                    Dim _Row_Chilexpress As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                    If Not IsNothing(_Row_Chilexpress) Then

                        Dim _Costoenvio As Double = _Row_Chilexpress.Item("Costoenvio")
                        Dim _Codigo = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Chilexpress_Conf", "CodigoRd", "Activo = 1")

                        Sb_Nueva_Linea(_TblEncabezado.Rows(0).Item("ListaPrecios"))

                        Dim _NewFila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.RowCount - 1)

                        '_Codigo = "CHILEXPRESBK"
                        Dim _RowProducto As DataRow = Fx_Buscar_Producto(_Codigo, False, False, Nothing, False)

                        Sb_Traer_Producto_Grilla(_NewFila, _RowProducto, True, 1, False)
                        _NewFila.Cells("Cantidad").Value = 1
                        _NewFila.Cells("Precio").Value = _Costoenvio
                        Sb_Procesar_Datos_De_Grilla(_NewFila, "Cantidad", False, False, True)

                        MessageBoxEx.Show(Me, "El servicio por despacho a Chilexpress se incorporo en el documento por un monto de " & FormatCurrency(_Costoenvio, 0),
                                          "Despacho por Chilexpress",
                                          MessageBoxButtons.OK, MessageBoxIcon.Information)

                    End If

                Else
                    If _Cl_Despacho.Accion = Clas_Despacho.Enum_Accion.Nuevo Then
                        _Cl_Despacho = Nothing
                    Else
                        _FormularioCerradoSinGrabar = True
                    End If
                End If

            Catch ex As Exception
                _Cl_Despacho = Nothing
            End Try

        End If

    End Sub

    Private Sub Btn_Cambiar_Moneda_Click(sender As Object, e As EventArgs) Handles Btn_Cambiar_Moneda.Click

        If Not Fx_Tiene_Permiso(Me, "Doc00158") Then
            Return
        End If

        Dim _Filtrar As New Clas_Filtros_Random(Me)

        _Filtrar.Tabla = "TABMO"
        _Filtrar.Campo = "KOMO"
        _Filtrar.Descripcion = "NOKOMO"

        Dim _Komo As String
        Dim _Nokomo As String
        Dim _Vamo As Double
        Dim _Timo As String

        Dim _Cambiar_Moneda As Boolean

        Dim _TipoMoneda = _TblEncabezado.Rows(0).Item("TipoMoneda")

        If _TipoMoneda <> "N" Then

            If MessageBoxEx.Show(Me, "¿Desea cambiar el documento a moneda nacional?", "Cambiar tipo de moneda",
                                 MessageBoxButtons.YesNo, MessageBoxIcon.Question) = DialogResult.Yes Then
                _Cambiar_Moneda = True
                _Komo = "$"
            End If

        Else

            If _Filtrar.Fx_Filtrar(Nothing,
                                       Clas_Filtros_Random.Enum_Tabla_Fl._Otra, "And KOMO In (Select Distinct KOMO From MAEMO Where TIMO = 'E')",
                                       Nothing, False, True) Then

                Dim _Tbl_Modena As DataTable = _Filtrar.Pro_Tbl_Filtro

                Dim _Row As DataRow = _Tbl_Modena.Rows(0)

                _Komo = _Row.Item("Codigo").ToString.Trim
                _Nokomo = _Row.Item("Descripcion").ToString.Trim

                _Cambiar_Moneda = True

            End If

        End If

        If _Cambiar_Moneda Then

            Consulta_sql = "Select TOP 1 * From MAEMO 
                            Where KOMO = '" & _Komo & "' And FEMO = '" & Format(_TblEncabezado.Rows(0).Item("FechaEmision"), "yyyyMMdd") & "' Order By IDMAEMO Desc"

            Dim _RowMoneda_Enc As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            If IsNothing(_RowMoneda_Enc) Then
                MessageBoxEx.Show(Me, "No existe tasa de cambio para la modena " & _Komo & " para la fecha " & FormatDateTime(_TblEncabezado.Rows(0).Item("FechaEmision"), DateFormat.ShortDate),
                                  "Validación tasa de cambio", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                Return
            End If

            _Vamo = _RowMoneda_Enc.Item("VAMO")
            _Timo = _RowMoneda_Enc.Item("TIMO")

            Consulta_sql = "Select Semilla,CodUsuario,CodPermiso,Llave,Valor_Dscto,Valor_Max_Compra,TABPP.*
                            From " & _Global_BaseBk & "ZW_PermisosVsUsuarios
                            Inner Join TABPP On KOLT = SUBSTRING(CodPermiso,4,3)
                            Where CodPermiso LIKE 'Lp-%' And CodUsuario = '" & FUNCIONARIO & "' And TIMOLT = '" & _Timo & "'"
            Dim _Tbl_Listas As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

            If Not CBool(_Tbl_Listas.Rows.Count) Then

                Dim _Koen = _TblEncabezado.Rows(0).Item("CodEntidad")
                Dim _Suen = _TblEncabezado.Rows(0).Item("CodSucEntidad")

                If Not Fx_Incorporar_Permiso_En_Lista_De_Permisos_Al_Documento("Doc00035", _Koen, _Suen) Then
                    Return
                End If

            End If

            If Fx_Cambiar_ListaPrecios(_Timo) Then

                _TblEncabezado.Rows(0).Item("Tasadorig_Doc") = _RowMoneda_Enc.Item("VAMO")

                _TblEncabezado.Rows(0).Item("Moneda_Doc") = _Komo
                _TblEncabezado.Rows(0).Item("Valor_Dolar") = _Vamo
                _TblEncabezado.Rows(0).Item("TipoMoneda") = _Timo


                Consulta_sql = "Select Top 1 * From TABMO Where KOMO = '" & _Komo & "'"
                Dim _RowMoneda_Det As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                LblMoneda.Tag = _Komo
                LblMoneda.Text = _Komo

                Dim _CodLista = _TblEncabezado.Rows(0).Item("ListaPrecios")

                Consulta_sql = "Select * From TABPP" & vbCrLf &
                               "Inner Join TABMO On MOLT = KOMO" & vbCrLf &
                               "Where KOLT = '" & _CodLista & "'"
                _RowMoneda_Det = _Sql.Fx_Get_DataRow(Consulta_sql)

                For Each _Fila As DataRow In _TblDetalle.Rows

                    Dim _Nuevo_Producto As Boolean = _Fila.Item("Nuevo_Producto")

                    If _Nuevo_Producto Then

                        _Fila.Item("CodLista") = _RowMoneda_Det.Item("KOLT")
                        _Fila.Item("Moneda") = _RowMoneda_Det.Item("KOMO")
                        _Fila.Item("Tipo_Cambio") = _RowMoneda_Det.Item("VAMO")
                        _Fila.Item("Tipo_Moneda") = _RowMoneda_Det.Item("TIMO")
                        _Fila.Item("Tasadorig") = _TblEncabezado.Rows(0).Item("Tasadorig_Doc")

                    End If

                Next

                Sb_Sumar_Totales()

            Else

                MessageBoxEx.Show(Me, "La moneda seguira siendo " & _TblEncabezado.Rows(0).Item("Moneda_Doc").ToString.Trim, "Cambiar modena",
                                  MessageBoxButtons.OK, MessageBoxIcon.Exclamation, MessageBoxDefaultButton.Button1, Me.TopMost)

            End If

        End If

    End Sub

    Function Fx_Pagar_Documento(ByRef _Es_TLV As Boolean, _Es_Electronico As Boolean, ByRef _Id_CashDro As Integer) As Boolean

        Dim _Autorizado_Grabar As Boolean

        Dim _Aplica_Ley_20956 As Boolean = _Sql.Fx_Exite_Campo("MAEDPCE", "LEY20956")

        Dim _Row_Encabezado As DataRow = _TblEncabezado.Rows(0)

        _Tbl_Maedpce.Clear()
        _Row_Encabezado.Item("Valor_Abonado") = 0

        Dim _Nudo = _TblEncabezado.Rows(0).Item("NroDocumento")
        Dim _Endo = _TblEncabezado.Rows(0).Item("CodEntidad")
        Dim _Suendo = _TblEncabezado.Rows(0).Item("CodSucEntidad")
        Dim _Nokoen = _TblEncabezado.Rows(0).Item("Nombre_Entidad")

        Dim _Sudo = Mod_Sucursal
        Dim _Timodo = _TblEncabezado.Rows(0).Item("TipoMoneda")
        Dim _Modo = _TblEncabezado.Rows(0).Item("Moneda_Doc")
        Dim _Nuvedo = _TblEncabezado.Rows(0).Item("Cuotas")
        Dim _Fe01vedo = Format(_TblEncabezado.Rows(0).Item("Fecha_1er_Vencimiento"), "yyyyMMdd")
        Dim _Feulvedo = Format(_TblEncabezado.Rows(0).Item("FechaUltVencimiento"), "yyyyMMdd")
        Dim _Vabrdo = De_Num_a_Tx_01(_TblEncabezado.Rows(0).Item("TotalBrutoDoc"), False, 5)
        Dim _Saldo = 0
        Dim _Vaabdo = 0

        Consulta_sql = "Select '" & ModEmpresa_Doc & "' As EMPRESA,0 As IDMAEEDO,'" & _Tido & "' As TIDO,'" & _Nudo & "' As NUDO," &
                       "'" & _Endo & "' As ENDO,'" & _Sudo & "' As SUDO,'" & _Timodo & "' As TIMODO,' " & _Modo & "' As MODO," & _Nuvedo & " As NUVEDO," &
                       "Cast('" & _Fe01vedo & "' As Datetime) As FE01VEDO,Cast(" & _Vabrdo & " As Float) As VABRDO,Cast(" & _Vabrdo & " As Float) As SALDO_ANTERIOR,Cast(0 As Float) As VAABDO," &
                       "CAST(0 AS FLOAT) AS PAGO_ACTUAL," &
                       "CAST(0 AS FLOAT) AS PAGO_CHEQUE," &
                       "CAST(0 AS FLOAT) AS SALDO_ACTUAL," &
                       "0 As NUDONODEFI,0 As VAPIDO,'" & _Suendo & "' As SUENDO,Cast('" & _Feulvedo & "' As Datetime) As FEULVEDO,0 As HORAGRAB," &
                       "'" & _Nokoen & "' As NOKOEN,'' As ESPGDO,'' As ESDO,Cast(" & Convert.ToInt32(_Es_Electronico) & " As Bit) As TIDOELEC"

        Dim _Tbl_Maeedo_Pago As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

        Dim Fm As New Frm_Pagos_Documentos("")
        Fm.Aplica_Ley_20956 = _Aplica_Ley_20956
        Fm.Pro_Tbl_Maeedo = _Tbl_Maeedo_Pago
        Fm.Pro_Tbl_Maedpce = _Tbl_Maedpce
        Fm.Desde_Documento = True
        Fm.Ds_Matriz_Documentos = _Ds_Matriz_Documentos
        Fm.ShowDialog(Me)

        _Id_CashDro = Fm.Id_CashDro

        _Tbl_Maedpce = Fm.Pro_Tbl_Maedpce
        _Row_Encabezado.Item("Valor_Abonado") = Fm.Pro_Tbl_Maeedo.Rows(0).Item("VAABDO")
        _Autorizado_Grabar = Fm.Autorizado_Grabar

        If Not _Es_Electronico Then
            _Es_TLV = Fm.Es_TLV
        End If

        Fm.Dispose()

        Sb_Revisar_Si_Hay_Archivos_Adjuntos()

        Return _Autorizado_Grabar

    End Function

    Private Sub Btn_Archivos_Adjuntos_Click(sender As Object, e As EventArgs) Handles Btn_Archivos_Adjuntos.Click

        If _RowEntidad Is Nothing Then
            MessageBoxEx.Show(Me, "Falta entidad en el documento", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop,
                              MessageBoxDefaultButton.Button1, Me.TopMost)
            Return
        End If

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00032", Nothing, "", "") Then

            Dim _Tido As String = _TblEncabezado.Rows(0).Item("TipoDoc")
            Dim _Nudo As String = _TblEncabezado.Rows(0).Item("NroDocumento")

            Dim _Campo As String
            Dim _Id As String

            If _Revision_Remota Then
                _Campo = "Id_DocEnc"
                _Id = _RowRemota_Notificacion.Item("Id_Casi_DocEnc")
            Else
                _Campo = "NombreEquipo"
                _Id = _NombreEquipo
            End If

            Dim _Filtros_Idmaeedo = Generar_Filtro_IN(_TblDetalle, "", "Idmaeedo_Dori", False, False, "")

            If _Filtros_Idmaeedo <> "()" Then

                Consulta_sql = "Insert Into " & _Global_BaseBk & "Zw_Casi_DocArc (Nombre_Archivo,Archivo,Fecha,CodFuncionario,NombreEquipo,Idmaeedo) 
                                Select Nombre_Archivo,Archivo,Fecha,CodFuncionario,'" & _NombreEquipo & "',Idmaeedo 
                                From " & _Global_BaseBk & "Zw_Docu_Archivos Where Idmaeedo In " & _Filtros_Idmaeedo
                _Sql.Ej_consulta_IDU(Consulta_sql)

            End If

            Dim Fm As New Frm_Adjuntar_Archivos("Zw_Casi_DocArc", _Campo, _Id)
            Fm.Text = "Archivos adjuntos documento en construcción: " & _Tido.Trim & " Nro: " & _Nudo
            Fm.Pedir_Permiso = False
            Fm.ShowDialog(Me)
            Fm.Dispose()

            If _Filtros_Idmaeedo <> "()" Then

                Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Casi_DocArc Where Idmaeedo In " & _Filtros_Idmaeedo & " And En_Construccion = 0 And Id_DocEnc = 0"
                _Sql.Ej_consulta_IDU(Consulta_sql)

            End If

            Sb_Revisar_Si_Hay_Archivos_Adjuntos()

        End If

    End Sub

    Private Sub Btn_Grabar_Doc_Reserva_OCC_Click(sender As Object, e As EventArgs) Handles Btn_Grabar_Doc_Reserva_OCC.Click

        Dim _Reserva_Idmaeedo As Integer
        Dim _Grabar As Boolean

        If _RowEntidad Is Nothing Then

            MessageBoxEx.Show(Me, "Falta entidad en el documento", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop,
                              MessageBoxDefaultButton.Button1, Me.TopMost)
            Return

        End If

        If String.IsNullOrEmpty(_TblObservaciones.Rows(0).Item("Observaciones".ToString.Trim)) Then
            _TblObservaciones.Rows(0).Item("Observaciones") = "Esta orden de compra será generada con el detalle una vez que se hayan solicitado todos los productos y revisar la disponibilidad de nuestro proveedor…"
        End If

        Dim Fm As New Frm_Formulario_Observaciones(_Ds_Matriz_Documentos, _RowEntidad, _Tipo_Documento, True)
        Fm.Grabar_Doc_Reserva_OCC = True
        Fm.Btn_Grabar_Observaciones.Visible = False
        Fm.Pro_Class_Referencias_DTE = _Class_Referencias_DTE
        Fm.ShowDialog(Me)

        _Grabar = Fm.Pro_Grabar
        _Class_Referencias_DTE = Fm.Pro_Class_Referencias_DTE

        Fm.Dispose()

        If _Grabar Then

            Dim _Nudo As String
            Dim _Modalidad = _TblEncabezado.Rows(0).Item("Modalidad")
            Dim _CodEntidad As String = _TblEncabezado.Rows(0).Item("CodEntidad")
            Dim _CodSucEntidad As String = _TblEncabezado.Rows(0).Item("CodSucEntidad")
            Dim _Nombre_Entidad As String = _TblEncabezado.Rows(0).Item("Nombre_Entidad")
            Dim _FechaEmision = Format(_TblEncabezado.Rows(0).Item("FechaEmision"), "yyyyMMdd")

            _Nudo = Traer_Numero_Documento(_Tido, , _Modalidad,,, Me)
            _TblEncabezado.Rows(0).Item("NroDocumento") = _Nudo

            Dim _Observaciones As String = _TblObservaciones.Rows(0).Item("Observaciones").ToString.Trim
            Dim _Forma_pago As String = _TblObservaciones.Rows(0).Item("Forma_pago").ToString.Trim
            Dim _Orden_compra As String = _TblObservaciones.Rows(0).Item("Orden_compra").ToString.Trim

            Dim _Placa As String = _TblObservaciones.Rows(0).Item("Placa").ToString.Trim
            Dim _CodRetirador As String = _TblObservaciones.Rows(0).Item("CodRetirador").ToString.Trim
            Dim _Obs(35) As String

            For i = 0 To 34

                Dim Campo As String = "Obs" & i + 1
                _Obs(i) = _TblObservaciones.Rows(0).Item(Campo)

            Next

            Dim _Consulta_sql_Obs = "Insert Into " & _Global_BaseBk & "Zw_Casi_DocObs (Id_DocEnc,Observaciones,Forma_pago,Orden_compra,Obs1," &
                                    "Obs2,Obs3,Obs4,Obs5,Obs6,Obs7,Obs8,Obs9,Obs10," &
                                    "Obs11,Obs12,Obs13,Obs14,Obs15,Obs16,Obs17,Obs18,Obs19,Obs20,Obs21,Obs22,Obs23,Obs24,Obs25,Obs26," &
                                    "Obs27,Obs28,Obs29,Obs30,Obs31,Obs32,Obs33,Obs34,Obs35,Placa,CodRetirador) Values " & vbCrLf &
                                    "(@Id_DocEnc,'" & _Observaciones & "','" & _Forma_pago & "','" & _Orden_compra &
                                    "','" & _Obs(0) & "','" & _Obs(1) & "','" & _Obs(2) & "','" & _Obs(3) & "','" & _Obs(4) & "','" & _Obs(5) &
                                    "','" & _Obs(6) & "','" & _Obs(7) & "','" & _Obs(8) & "','" & _Obs(9) & "','" & _Obs(10) &
                                    "','" & _Obs(11) & "','" & _Obs(12) & "','" & _Obs(13) & "','" & _Obs(14) & "','" & _Obs(15) &
                                    "','" & _Obs(16) & "','" & _Obs(17) & "','" & _Obs(18) & "','" & _Obs(19) & "','" & _Obs(20) &
                                    "','" & _Obs(21) & "','" & _Obs(22) & "','" & _Obs(23) & "','" & _Obs(24) & "','" & _Obs(25) &
                                    "','" & _Obs(26) & "','" & _Obs(27) & "','" & _Obs(28) & "','" & _Obs(29) & "','" & _Obs(30) &
                                    "','" & _Obs(31) & "','" & _Obs(32) & "','" & _Obs(33) & "','" & _Obs(34) & "','" & _Placa & "','" & _CodRetirador & "')"

            Dim _Observacion = "*** RESERVA NUMERO DE ORDEN DE COMPRA. - (Desde Sistema BakApp)"

            Consulta_sql = "Declare @Idmaeedo Int,@Id_DocEnc Int

                            Insert Into MAEEDO (EMPRESA,TIDO,NUDO,ENDO,SUENDO,SUDO,TIGEDO,KOFUDO,ESDO,FEEMDO) Values " &
                            "('" & ModEmpresa_Doc & "','" & _Tido & "','" & _Nudo & "','" & _CodEntidad & "','" & _CodSucEntidad & "','" & Mod_Sucursal & "','I','" & FUNCIONARIO & "','N','" & _FechaEmision & "')
                            Select @Idmaeedo = @@IDENTITY 
                        
                            Insert Into MAEDDO (IDMAEEDO,TIDO,NUDO,EMPRESA,KOPRCT,NOKOPR,PRCT,TICT,TIPR,ESLIDO,LILG,NULIDO,ARCHIRST,IDRST) Values 
                            (@Idmaeedo,'OCC','','" & ModEmpresa_Doc & "','XXXXXXXXXXXXX','RESERVA NUMERO DE ORDEN DE COMPRA',0,'','FPN','C','SI','00001','',0)

                            Insert Into MAEEDOOB (IDMAEEDO,OBDO) Values (@Idmaeedo,'" & _Observacion & "')

                            Insert Into " & _Global_BaseBk & "Zw_Casi_DocEnc (Modalidad,Empresa,Sucursal,TipoDoc,NroDocumento,CodEntidad,CodSucEntidad," &
                            "Nombre_Entidad,FechaEmision,CodFuncionario,Reserva_NroOCC,Reserva_Idmaeedo) 
                             Values ('" & _Modalidad & "','" & ModEmpresa_Doc & "','" & Mod_Sucursal & "','" & _Tido & "','" & _Nudo & "'," &
                            "'" & _CodEntidad & "','" & _CodSucEntidad & "','" & _Nombre_Entidad & "','" & _FechaEmision & "','" & FUNCIONARIO & "',1,@Idmaeedo)
                        
                            Select @Id_DocEnc = @@IDENTITY

                            " & _Consulta_sql_Obs

            _Sql.Fx_Eje_Condulta_Insert_Update_Delte_TRANSACCION(Consulta_sql)

            Dim _Row_Documento As DataRow

            If String.IsNullOrEmpty(_Sql.Pro_Error) Then

                Dim _Reg As Boolean = _Sql.Fx_Cuenta_Registros("MAEEDO", "TIDO = 'OCC' And NUDO = '" & _Nudo & "' And ESDO <> 'N'")

                _Reserva_Idmaeedo = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Casi_DocEnc", "Reserva_Idmaeedo",
                                                                         "TipoDoc = 'OCC' And NroDocumento = '" & _Nudo & "' And Reserva_NroOCC = 1")

                If _Reg Then

                    _Nudo = Traer_Numero_Documento(_Tido, , _Modalidad,, True, Me)

                    Consulta_sql = "Update " & _Global_BaseBk & "Zw_Casi_DocEnc Set NroDocumento = '" & _Nudo & "' Where Reserva_Idmaeedo = " & _Reserva_Idmaeedo & vbCrLf &
                                   "Update MAEEDO Set NUDO = '" & _Nudo & "' Where IDMAEEDO = " & _Reserva_Idmaeedo
                    _Sql.Ej_consulta_IDU(Consulta_sql)

                Else
                    Traer_Numero_Documento(_Tido, , , , True, Me)
                End If

                If MessageBoxEx.Show(Me, "El número quedo reservado exitosamente." & vbCrLf & vbCrLf &
                                 "Número: " & _Nudo & vbCrLf &
                                 "Proveedor: " & _Nombre_Entidad & vbCrLf & vbCrLf &
                                 "¿Desea imprimir el comprobante?", "Reserva de numero de OCC",
                                                                    MessageBoxButtons.YesNo, MessageBoxIcon.Information) = DialogResult.Yes Then


                    Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Casi_DocEnc Where Reserva_Idmaeedo = " & _Reserva_Idmaeedo
                    _Row_Documento = _Sql.Fx_Get_DataRow(Consulta_sql)

                    Dim _New_Id_DocEnc As Integer = _Row_Documento.Item("Id_DocEnc")

                    Dim _Cl_Imprimir As New Clas_Imprimir_Reserva_OCC

                    _Cl_Imprimir.Fx_Imprimir_Archivo(Me, _New_Id_DocEnc, FUNCIONARIO, "")


                End If

                Sb_Limpiar(_Modalidad, False)

            Else

                MessageBoxEx.Show(Me, _Sql.Pro_Error, "Problema!", MessageBoxButtons.OK, MessageBoxIcon.Stop)

            End If

        End If

    End Sub

    Private Sub Btn_Utilizar_Doc_Reserva_OCC_Click(sender As Object, e As EventArgs) Handles Btn_Utilizar_Doc_Reserva_OCC.Click

        Dim Fm As New Frm_Formulario_Stand_By(Frm_Formulario_Stand_By.Tipo_Visualizacion.Mostrar_Numeros_Reservado_OCC,
                                              FUNCIONARIO)
        Fm.ShowDialog(Me)

        Dim _RowDocumento As DataRow = Fm._Row_Documento_Seleccionado

        If Not (_RowDocumento Is Nothing) Then

            Dim _Id_DocEnc As Integer = _RowDocumento.Item("Id_DocEnc")
            Dim _CodEntidad As String = _RowDocumento.Item("CodEntidad")
            Dim _CodSucEntidad As String = _RowDocumento.Item("CodSucEntidad")
            Dim _CodFuncionario As String = _RowDocumento.Item("CodFuncionario")

            If _CodFuncionario <> FUNCIONARIO Then

                If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00047", Nothing, "", "") Then
                    Return
                End If

            End If

            Dim _Mi_Ip = getIp()

            Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Casi_DocTom Where Id_DocEnc = " & _Id_DocEnc & " And NombreEquipo = '" & _NombreEquipo & "'"
            _Sql.Ej_consulta_IDU(Consulta_sql)

            Consulta_sql = "Select *,NOKOFU From " & _Global_BaseBk & "Zw_Casi_DocTom 
                                    Left Join TABFU On KOFU = CodFuncionario
                            Where Id_DocEnc = " & _Id_DocEnc
            Dim _Row_Tomado As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            If IsNothing(_Row_Tomado) Then

                Consulta_sql = "INSERT INTO " & _Global_BaseBk & "Zw_Casi_DocTom (Id_DocEnc,CodFuncionario,Fecha_Hora,NombreEquipo,NroRemota) Values 
                                (" & _Id_DocEnc & ",'" & FUNCIONARIO & "',Getdate(),'" & _NombreEquipo & "','')"
                _Sql.Ej_consulta_IDU(Consulta_sql)

                Sb_Limpiar(ModModalidad_Doc, False)

                Dim _RowNuevaEntidad As DataRow = Fx_Buscar_Entidad(Me, _CodEntidad, _CodSucEntidad, False, False)

                If Not (_RowNuevaEntidad Is Nothing) Then

                    _RowEntidad = _RowNuevaEntidad

                    _TblEncabezado.Rows(0).Item("Id_DocEnc") = _Id_DocEnc
                    _TblEncabezado.Rows(0).Item("FechaEmision") = _RowDocumento.Item("FechaEmision")

                    Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, True)

                    _TblEncabezado.Rows(0).Item("NroDocumento") = _RowDocumento.Item("NroDocumento")
                    _TblEncabezado.Rows(0).Item("Reserva_NroOCC") = True
                    _TblEncabezado.Rows(0).Item("Reserva_Idmaeedo") = _RowDocumento.Item("Reserva_Idmaeedo")

                    Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_Casi_DocObs Where Id_DocEnc = " & _Id_DocEnc
                    Dim _Row_Observaciones_StBy As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                    _TblObservaciones.Rows(0).Item("Observaciones") = String.Empty
                    _TblObservaciones.Rows(0).Item("Forma_pago") = _Row_Observaciones_StBy.Item("Forma_pago")
                    _TblObservaciones.Rows(0).Item("Orden_compra") = _Row_Observaciones_StBy.Item("Orden_compra")

                    _TblObservaciones.Rows(0).Item("Placa") = _Row_Observaciones_StBy.Item("Placa")
                    _TblObservaciones.Rows(0).Item("CodRetirador") = _Row_Observaciones_StBy.Item("CodRetirador")

                    For _i = 1 To 32

                        Dim _Observacion As String = _Row_Observaciones_StBy.Item("Obs" & _i)
                        _TblObservaciones.Rows(0).Item("Obs" & _i) = Mid(_Observacion, 1, 80)

                    Next

                    ToastNotification.Show(Me, "DOCUMENTO RECUPERADO CORRECTAMENTE", Btn_Revisar_Doc_Stand_By.Image,
                                          2 * 1000, eToastGlowColor.Green, eToastPosition.MiddleCenter)

                    Lbl_InfoVtaAcumMes.Text = Me.Text
                    Me.Text += Space(1) & " - (Utilizando número reservado)"

                    Grilla_Detalle.Focus()
                    Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(0).Cells("Codigo")

                    Me.MinimizeBox = False

                    Me.Refresh()

                End If

            Else

                MessageBoxEx.Show(Me, "Este documento esta siendo utilizado por el usuario: " & _Row_Tomado.Item("NOKOFU"), "Validación",
                                  MessageBoxButtons.OK, MessageBoxIcon.Stop)

            End If

        End If

    End Sub

    Private Sub Btn_Recargar_Producto_Click(sender As Object, e As EventArgs) Handles Btn_Recargar_Producto.Click

        Dim _Fila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index)

        Dim _Idmaeddo_Dori As Integer = _Fila.Cells("Idmaeddo_Dori").Value

        If CBool(_Idmaeddo_Dori) Then
            MessageBoxEx.Show(Me, "Solo se pueden recargar los valores de los productos que no estan relacionados a otro documento.",
                              "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        Sb_Recargar_Producto(_Fila)

    End Sub

    Sub Sb_Recargar_Producto(_Fila As DataGridViewRow)

        Dim _Codigo As String = _Fila.Cells("Codigo").Value
        Dim _Id As Integer = _Fila.Cells("Id").Value
        Dim _Cantidad As Double = _Fila.Cells("Cantidad").Value
        Dim _UnTrans = _Fila.Cells("UnTrans").Value

        Dim _Oferta As String = _Fila.Cells("Oferta").Value
        Dim _Es_Padre_Oferta As Boolean = _Fila.Cells("Es_Padre_Oferta").Value
        Dim _Padre_Oferta As String = _Fila.Cells("Padre_Oferta").Value
        Dim _Aplica_Oferta As Boolean = _Fila.Cells("Aplica_Oferta").Value

        Dim _Idmaeddo_Dori As Integer = _Fila.Cells("Idmaeddo_Dori").Value

        If CBool(_Idmaeddo_Dori) Then
            Return
        End If

        Dim _Tict As String = _Fila.Cells("Tict").Value

        If Fx_Tiene_Oferta("xxx", _Fila) Then
            Return
        End If

        Dim _RowProducto As DataRow = Fx_Buscar_Producto(_Codigo, False, False, Nothing, False)

        Dim _TblMaedtli As DataTable

        Sb_Traer_Producto_Grilla(_Fila, _RowProducto, False, 1, False)

        Sb_Cambiar_Unidad_De_Medida(_Fila, _UnTrans)

        _Fila.Cells("Cantidad").Value = _Cantidad
        _Fila.Cells("UnTrans").Value = _UnTrans

        If CBool(_Cantidad) Then

            Sb_Procesar_Datos_De_Grilla(_Fila, "Cantidad", True, True)

            Dim _Precio As Double

            If CBool(_Cantidad) Then

                'If Not CBool(_TblMaedtli.Rows.Count) Then
                Sb_Traer_Descuentos_Seteados_Desde_Lista(_Fila)
                _TblMaedtli = Fx_Crea_Tabla_Con_Filtro(_Ds_Matriz_Documentos.Tables("Descuentos_Doc"), "Id = " & _Id, "Id")
                'End If


                ' VOLVEMOS A RECALCULAR LOS DESCUENTOS
                If ChkValores.Checked Then
                    _Precio = _Fila.Cells("ValNetoLinea").Value() + _Fila.Cells("DsctoNeto").Value()
                Else
                    _Precio = _Fila.Cells("ValBrutoLinea").Value + _Fila.Cells("DsctoBruto").Value()
                End If

                Dim _Total_Descuento As Double = 0
                Dim _NroDsctos As Integer

                Eliminar_Campos(_Ds_Matriz_Documentos.Tables("Descuentos_Doc"), _Id)

                Dim _Decimal As Integer

                If ChkValores.Checked Then
                    _Decimal = 1
                Else
                    _Decimal = 0
                End If

                For Each _Fila_Dscto As DataRow In _TblMaedtli.Rows

                    Dim _Podt As Double = _Fila_Dscto.Item("Podt_Original")
                    Dim _Podt_Original As Double = Math.Round(_Fila_Dscto.Item("Podt_Original"), 5)
                    Dim _Vadt As Double = Math.Round((_Podt / 100) * _Precio, 1)

                    Dim _TblDsctos = _Ds_Matriz_Documentos.Tables("Descuentos_Doc").Select("Id = " & _Id)
                    Dim _Valor = _Precio - _Total_Descuento

                    If _Podt > 0 Then

                        _Vadt = Math.Round((_Podt / 100) * _Valor, _Decimal)

                        If Chk_Redondear_Cero.Checked Then _Vadt = Fx_Redondeo_Descuento(_Vadt, Chk_Redondear_Cero.Checked)

                        _Podt = Math.Round((_Vadt / _Valor) * 100, 5)

                        Dim NewFila As DataRow
                        NewFila = _Ds_Matriz_Documentos.Tables("Descuentos_Doc").NewRow

                        With NewFila
                            .Item("Id") = _Id
                            .Item("Podt") = _Podt
                            .Item("Vadt") = _Vadt
                            .Item("Podt_Original") = _Podt_Original
                            _Ds_Matriz_Documentos.Tables("Descuentos_Doc").Rows.Add(NewFila)
                        End With

                    End If

                    _Total_Descuento += _Vadt
                    _NroDsctos += 1

                Next

                _Total_Descuento = Math.Round(_Total_Descuento)

                _Fila.Cells("DescuentoValor").Value = Math.Round(_Total_Descuento, 0)
                _Fila.Cells("NroDscto").Value = _NroDsctos

                Dim _Recargo_Valor As Double = _Fila.Cells("Recargo_Valor").Value

                If CBool(_Recargo_Valor) Then
                    Sb_Procesar_Datos_De_Grilla(_Fila, "Cantidad", False, False)
                End If

                If CBool(_Total_Descuento) Then
                    Sb_Procesar_Datos_De_Grilla(_Fila, "DescuentoValor", False, False)
                End If

                '' Aca Incorporar funcion para OFERTAS

                'If _Aplica_Oferta Then

                '    Sb_Editar_Oferta(_Fila)

                'Else

                '    If Not String.IsNullOrEmpty(_Oferta) Then

                '        Consulta_sql = "Select * From MAEERES Where TIPORESE In ('OFE','OFD') And CODIGO = '" & _Codigo & "'"
                '        Dim _Row_Maeeres As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                '        Dim _Cantidad_Oferta As Double = _Row_Maeeres.Item("CANTIDAD")

                '        If _Cantidad_Oferta <= _Cantidad Then

                '            Sb_Insertar_Oferta(_Fila)

                '        Else

                '            _Fila.Cells("Aplica_Oferta").Value = False

                '        End If

                '    End If

                'End If

            End If

            Sb_Recalcular_Descuentos(_Fila, False, False)

            If String.IsNullOrEmpty(_Tict) Then

                If Not _Aplica_Oferta Then
                    Sb_Borrar_Conceptos_Descuento()
                End If

            End If

        End If

    End Sub

    Private Sub Btn_Bodega_Para_Todos_Click(sender As Object, e As EventArgs) Handles Btn_Bodega_Para_Todos.Click

        Dim _Fila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index)

        If Fx_Cambiar_Bodega_Linea_Activa(_Fila) Then

            Dim _Sucursal_Sel As String = _Fila.Cells("Sucursal").Value
            Dim _Bodega_Sel As String = _Fila.Cells("Bodega").Value

            For Each _Row As DataRow In _TblDetalle.Rows

                Dim _Codigo As String = _Row.Item("Codigo")

                Dim _Reg = _Sql.Fx_Cuenta_Registros("TABBOPR",
                           "EMPRESA = '" & ModEmpresa_Doc & "' And KOSU = '" & _Sucursal_Sel & "' And KOBO = '" & _Bodega_Sel & "' And KOPR = '" & _Codigo & "'")

                If CBool(_Reg) Then

                    _Row.Item("Sucursal") = _Sucursal_Sel
                    _Row.Item("Bodega") = _Bodega_Sel

                End If

            Next

            MessageBoxEx.Show(Me, "Datos actualizados correctamente", "Cambiar bodegas", MessageBoxButtons.OK, MessageBoxIcon.Information)

        End If

    End Sub

    Private Sub Chk_Ver_Dscto_Maximo_CheckedChanging(sender As Object, e As Controls.CheckBoxXChangeEventArgs)

        If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00048", Nothing, "", "") Then
            e.Cancel = True
        End If

    End Sub

    Private Sub Chk_Ver_Dscto_Maximo_CheckedChanged(sender As Object, e As EventArgs)

        Sb_Formato_Grilla_Detalle()

    End Sub

    Private Sub Btn_Aceptar_Documento_Click(sender As Object, e As EventArgs) Handles Btn_Aceptar_Documento.Click

        Sb_Autorizar_Permiso_Solicitado()

    End Sub

    Private Sub Btn_Cliente_Prestashop_Click(sender As Object, e As EventArgs) Handles Btn_Cliente_Prestashop.Click

        Dim _Id_order = _TblObservaciones.Rows(0).Item("Orden_compra")

        Dim _Id_customer As Integer = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_PrestaShop_orders", "Id_customer", "Id_order = " & _Id_order)

        Consulta_sql = "Select Distinct Vat_number,Firstname,Lastname,Address1,Address2,Phone,Phone_mobile,Email,State_Ciudad,State_comuna
                        From " & _Global_BaseBk & "Zw_PrestaShop_orders_customer
                        Where Id_customer = " & _Id_customer
        Dim _Tbl_Direcciones As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

        Dim _Texto = String.Empty
        Dim _Contador = 0

        For Each _Fl As DataRow In _Tbl_Direcciones.Rows

            Dim _Vat_number = _Fl.Item("Vat_number").ToString.Trim
            Dim _Firstname = _Fl.Item("Firstname").ToString.Trim
            Dim _Lastname = _Fl.Item("Lastname").ToString.Trim
            Dim _Address1 = _Fl.Item("Address1").ToString.Trim
            Dim _Address2 = _Fl.Item("Address2").ToString.Trim
            Dim _Phone = _Fl.Item("Phone").ToString.Trim
            Dim _Phone_mobile = _Fl.Item("Phone_mobile").ToString.Trim
            Dim _Email = _Fl.Item("Email").ToString.Trim
            Dim _State_Ciudad = _Fl.Item("State_Ciudad").ToString.Trim
            Dim _State_comuna = _Fl.Item("State_comuna").ToString.Trim

            If Not String.IsNullOrEmpty(_Vat_number & _Firstname & _Lastname & _Address1 & _Address2 & _Phone & _Phone_mobile & _Email & _State_Ciudad & _State_comuna) Then

                _Contador += 1

                _Texto += "*** DATOS DE DIRECCION Nro: " & numero_(_Contador, 2) & " *** " & vbCrLf & vbCrLf &
                          "Rut       : " & _Vat_number & vbCrLf &
                          "Nombre    : " & _Firstname & " " & _Lastname & vbCrLf &
                          "Dirección : " & _Address1 & " " & _Address2 & vbCrLf &
                          "Ciudad    : " & _State_Ciudad & vbCrLf &
                          "Comuna    : " & _State_comuna & vbCrLf &
                          "Teléfono  : " & _Phone & vbCrLf &
                          "Celular   : " & _Phone_mobile & vbCrLf &
                          "Email     : " & _Email & vbCrLf &
                          "-----------------------------------------------------------------------------------------" & vbCrLf & vbCrLf

            End If

        Next

        Dim Fm As New Frm_Archivo_TXT
        Fm.Pro_Texto_Log = _Texto
        Fm.ShowDialog(Me)
        Fm.Dispose()

    End Sub

    Private Sub Btn_Huella_Click(sender As Object, e As EventArgs) Handles Btn_Huella.Click

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Espr0031", Nothing, "", "") Then

            Dim Fm As New Frm_Huellas_Menu
            Fm.ShowDialog(Me)
            Fm.Dispose()

        End If

    End Sub

    Private Sub Btn_Rechazar_Documento_Click(sender As Object, e As EventArgs) Handles Btn_Rechazar_Documento.Click

        Dim _Aceptado As Boolean
        Dim _Motivo_Rechazo As String

        Dim _CodPermiso As String = _RowRemota_Notificacion.Item("CodPermiso")
        Dim _Id_Enc As Integer = _RowRemota_Notificacion.Item("RCadena_Id_Enc")

        If _CodPermiso = "Bkp00014" Or _CodPermiso = "Bkp00039" Then

            If Not Fx_Autorizar_X_Descuentos(True) Then
                Return
            End If

        End If

        _Aceptado = InputBox_Bk(Me, "Ingrese motivo del rechazo", "Solicitud rechazada", _Motivo_Rechazo, True,
                                                  _Tipo_Mayus_Minus.Mayusculas, 200, True, _Tipo_Imagen.Texto,
                                                  False, _Tipo_Caracter.Cualquier_caracter)


        If _Aceptado Then

            Sb_Rechazar_Permiso_Solicitado(_Motivo_Rechazo)

        End If

    End Sub

    Function Fx_Reevaluar_Permisos_Stock(_CodPermiso As String) As Boolean

        Dim _Autorizado As Boolean = True
        Dim _Necesita_Permiso As Boolean

        If _CodPermiso <> "Bkp00015" Then

            Fx_Validar_Stock(False, _Necesita_Permiso)

        End If

        If _Necesita_Permiso Then

            For Each _FilaPer As DataRow In _TblPermisos.Rows

                Dim _CodPermiso_Fila = _FilaPer.Item("CodPermiso")

                If _CodPermiso_Fila = "Bkp00015" Then

                    _Autorizado = _FilaPer.Item("Autorizado")

                    Exit For

                End If

            Next

            '_Autorizado = Fx_Validar_Stock(False, _Necesita_Permiso)
            'Sb_Revisar_Permiso("Bkp00015", _Autorizado, _Necesita_Permiso)

            If Not _Autorizado Then

                Dim _Motivo_Rechazo As String = Environment.NewLine &
                                               "Puede ser que esta validación no fue solicitada en su momento, pero al momento de reevaluar la situación" & Space(1) &
                                               "nos encontramos con este problema." & vbCrLf &
                                               "El sistema no permitira grabar el documento."

                Dim _Info As New TaskDialogInfo("Validación del sistema",
                              eTaskDialogIcon.ShieldStop,
                              "Existe(n) producto(s) con Stock insuficiente",
                             UCase(_Motivo_Rechazo),
                              eTaskDialogButton.Ok, eTaskDialogBackgroundColor.Red,
                              Nothing,
                              Nothing,
                              Nothing,
                              "La solicitud se devolverá al usuario de origen para que vuelva a reenviar el documento.",
                              Nothing)

                Dim _Resultado As eTaskDialogResult = TaskDialog.Show(_Info)

                _Motivo_Rechazo = "Existe(n) producto(s) con Stock insuficiente" & Environment.NewLine &
                                  "Puede ser que esta validación no fue solicitada en su momento, pero al momento de reevaluar la situación nos encontramos con este problema." & vbCrLf &
                                  "El sistema no permite grabar el documento."

                Sb_Rechazar_Permiso_Solicitado(_Motivo_Rechazo)

            Else

                Return True

            End If

        Else

            Return True

        End If

    End Function

    Private Sub Btn_Config_Impresora_Local_Click(sender As Object, e As EventArgs) Handles Btn_Config_Impresora_Local.Click

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00058", Nothing, "", "") Then

            Dim _Ruta_Impresora = AppPath() & "\Data\" & RutEmpresa & "\Configuracion_Local"

            If Not Directory.Exists(_Ruta_Impresora) Then
                System.IO.Directory.CreateDirectory(_Ruta_Impresora)
            End If

            Dim Fm As New Frm_Seleccionar_Impresoras("")
            Dim Archivo As String

            If _Post_Venta Then
                Archivo = AppPath() & "\Data\" & RutEmpresa & "\BkPost\Imp_Bkpost.xml"
            Else
                Archivo = _Ruta_Impresora & "\Imp_" & _Tido & ".xml"
            End If

            If System.IO.File.Exists(Archivo) Then
                Kill(Archivo)
            End If

            Fm.ShowDialog(Me)

            Dim NewFila As DataRow
            NewFila = _DtsConfig.Tables("Conf_Impresora_Local").NewRow
            With NewFila
                .Item("Modulo") = "Bkpost"
                .Item("Impresora") = Fm.Pro_Impresora_Seleccionada
                _DtsConfig.Tables("Conf_Impresora_Local").Rows.Add(NewFila)
            End With

            _DtsConfig.WriteXml(Archivo)
            _DtsConfig.Clear()

            If Not String.IsNullOrEmpty(Fm.Pro_Impresora_Seleccionada) Then
                MessageBoxEx.Show(Me, "Impresora seleccionada: " & Fm.Pro_Impresora_Seleccionada, "Impresora",
                                  MessageBoxButtons.OK, MessageBoxIcon.Information, MessageBoxDefaultButton.Button1, Me.TopMost)
            End If

            Fm.Dispose()

        End If

    End Sub

    Private Sub Btn_Config_Impresora_Diablito_Click(sender As Object, e As EventArgs) Handles Btn_Config_Impresora_Diablito.Click

        If Not Fx_Tiene_Permiso(Me, "Doc00159") Then
            Return
        End If

        Dim _TidoSel = _Tido

        If _Post_Venta Then _TidoSel = "BLV"

        If _TidoSel = "Ninguno" Then Return

        Dim Fm As New Frm_Imp_Diablito_X_Est(FUNCIONARIO, True)
        Fm.Tido = _TidoSel
        Fm.ShowDialog(Me)
        Fm.Dispose()

    End Sub

    Private Sub Btn_Mini_Cambiar_Bodega_Click(sender As Object, e As EventArgs) Handles Btn_Mini_Cambiar_Bodega.Click
        Call Btn_Cambiar_Bodega_Click(Nothing, Nothing)
    End Sub

    Private Sub Btn_Mini_Bodega_Para_Todos_Click(sender As Object, e As EventArgs) Handles Btn_Mini_Bodega_Para_Todos.Click
        Call Btn_Bodega_Para_Todos_Click(Nothing, Nothing)
    End Sub

    Private Sub Btn_Mini_Consolidar_Stock_Click(sender As Object, e As EventArgs) Handles Btn_Mini_Consolidar_Stock.Click
        Call Btn_Consolidar_Stock_Click(Nothing, Nothing)
    End Sub

    Private Sub Btn_Mini_Recargar_Producto_Click(sender As Object, e As EventArgs) Handles Btn_Mini_Recargar_Producto.Click
        ShowContextMenu(Menu_Contextual_Opciones_Recargar_Costos)
    End Sub

    Sub Sb_Crear_Factura_Desde_NVV_Mavisamente(_Row_Nvv As DataRow)

        Dim _CodEntidad As String = _Row_Nvv.Item("KOEN")
        Dim _CodSucEntidad As String = _Row_Nvv.Item("SUEN")

        Dim _Tido_Relacionado As String = _Row_Nvv.Item("TIDO")
        Dim _Nudo_Relacionado As String = _Row_Nvv.Item("NUDO")

        Dim _Row_Doc_Relacionado As DataRow

        If Not String.IsNullOrEmpty(_Tido_Relacionado) And Not String.IsNullOrEmpty(_Nudo_Relacionado) Then

            _Nudo_Relacionado = Fx_Rellena_ceros(_Nudo_Relacionado, 10)

            If CBool(_Idmaeedo_Relacionado) Then
                Consulta_sql = "Select IDMAEEDO,TIDO,NUDO,ENDO,SUENDO From MAEEDO Where IDMAEEDO = " & _Idmaeedo_Relacionado
            Else
                Consulta_sql = "Select DISTINCT EDO.* From MAEEDO EDO
                                    INNER JOIN MAEDDO DDO ON EDO.IDMAEEDO = DDO.IDMAEEDO 
                                    Where EDO.TIDO = '" & _Tido_Relacionado & "' AND EDO.NUDO = '" & _Nudo_Relacionado & "'"
            End If

            _Row_Doc_Relacionado = _Sql.Fx_Get_DataRow(Consulta_sql)

            If Not IsNothing(_Row_Doc_Relacionado) Then

                _CodEntidad = _Row_Doc_Relacionado.Item("ENDO")
                _CodSucEntidad = _Row_Doc_Relacionado.Item("SUENDO")
                _Idmaeedo_Relacionado = _Row_Doc_Relacionado.Item("IDMAEEDO")

            End If

        End If

        Dim _Mostrar_Mensaje_Deuda = False

        Dim _RowNuevaEntidad = Fx_Buscar_Entidad(Me, _CodEntidad, _CodSucEntidad, False, _Mostrar_Mensaje_Deuda)

        If Not (_RowNuevaEntidad Is Nothing) Then

            _RowEntidad = _RowNuevaEntidad

            Dim _No_Puede_Acceder As Boolean

            Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, True,,, _No_Puede_Acceder)

            If _No_Puede_Acceder Then
                Return
            End If

            Dim _Tbl_Documentos As DataTable
            Dim _Idmaeedo As Integer

            Dim _NroDocumento As String = _TblEncabezado.Rows(0).Item("NroDocumento")

            Dim _Buscar_Documentos_Relacionados As Boolean

            If Not IsNothing(_RowEntidad) Then

                Dim _Koen As String = _RowEntidad.Item("KOEN").ToString.Trim
                Dim _Suen As String = _RowEntidad.Item("SUEN").ToString.Trim

                _Idmaeedo = _Sql.Fx_Trae_Dato("MAEEDO", "IDMAEEDO", "EMPRESA = '" & ModEmpresa_Doc & "' And TIDO = '" & _Tido & "' And NUDO = '" & _NroDocumento & "' And ENDO = '" & _Koen & "'", True)

                If Convert.ToBoolean(_Idmaeedo) Then

                    If MessageBoxEx.Show(Me, "El documento Nro: " & _Tido & "-" & _NroDocumento & " ya existe." & vbCrLf & vbCrLf &
                                          "¿Desea ver el documento?", "Validación",
                                          MessageBoxButtons.YesNo, MessageBoxIcon.Information) = DialogResult.Yes Then

                        Dim Fm2 As New Frm_Ver_Documento(_Idmaeedo, Frm_Ver_Documento.Enum_Tipo_Apertura.Desde_Random_SQL)
                        Fm2.ShowDialog(Me)
                        Fm2.Dispose()

                    End If

                    Sb_Limpiar(ModModalidad_Doc)
                    Return

                End If

            End If

            Dim Fm As New Frm_Documentos_Relacionados(_Tido, _RowEntidad.Item("KOEN"), _RowEntidad.Item("SUEN"), "")
            Fm.Idmaeedo = _Idmaeedo_Relacionado
            Fm.Sb_Generar_Informe_Crear_Dataset()

            If IsNothing(_Row_Doc_Relacionado) Then

                _Buscar_Documentos_Relacionados = CBool(Fm.Pro_Tbl_Informe.Rows.Count)
                If _Buscar_Documentos_Relacionados Then Fm.ShowDialog(Me)
                _Buscar_Documentos_Relacionados = Fm.Pro_Seleccionar

            Else

                _Buscar_Documentos_Relacionados = True


                If _Idmaeedo_Relacionado Then
                    Fm.Sb_Marcar_Una_Fila(_Idmaeedo_Relacionado)
                Else
                    Fm.Sb_Marcar_Una_Fila(_Row_Doc_Relacionado.Item("TIDO"), _Row_Doc_Relacionado.Item("NUDO"))
                End If

            End If

            _Tbl_Documentos = Fm.Pro_Tbl_Informe
            Fm.Dispose()


            If _Buscar_Documentos_Relacionados Then

                If _Tbl_Documentos.Rows.Count Then

                    For Each _Row As DataRow In _Tbl_Documentos.Rows
                        Dim _Chk = _Row.Item("Chk")
                        If _Chk Then
                            _Idmaeedo = _Row.Item("IDMAEEDO")
                            Exit For
                        End If
                    Next

                    Dim _Fecha_hoy As Date = FormatDateTime(FechaDelServidor, DateFormat.ShortDate)

                    Dim _CampoPrecio As String

                    If ChkValores.Checked Then ' Neto
                        _CampoPrecio = "PPPRNE"
                    Else ' Bruto
                        _CampoPrecio = "PPPRBR"
                    End If

                    If CBool(_Idmaeedo) Then

                        Dim _Filtro_Idmaeedo As String
                        _Filtro_Idmaeedo = Generar_Filtro_IN(_Tbl_Documentos, "Chk", "IDMAEEDO", False, True, "")

                        Dim _Ds_Maeedo_Origen As DataSet = _Sql.Fx_Get_DataSet(Consulta_sql)

                        If CBool(_Ds_Maeedo_Origen.Tables(1).Rows.Count) Then

                            Dim _Fl As String = Generar_Filtro_IN(_Ds_Maeedo_Origen.Tables(1), "", "IDMAEEDO", False, False, "")

                            Dim _Reg = _Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_Casi_DocDet", "Idmaeedo_Dori In " & _Fl)

                            If CBool(_Reg) Then

                                MessageBoxEx.Show(Me, "No es posible traer el detalle de alguno de los documentos asociados." & Environment.NewLine &
                                              "Uno o más de los archivos asociados está ligado a un documento pendiente de solicitud de permiso remoto" & Environment.NewLine &
                                              "Para poder ligar nuevamente cualquiera de esos documentos primero deben terminar esas gestiones",
                                              "Validación BakApp", MessageBoxButtons.OK, MessageBoxIcon.Error, MessageBoxDefaultButton.Button1, Me.TopMost)

                            Else

                                Sb_Limpiar(ModModalidad_Doc)

                            End If

                        Else
                            MessageBoxEx.Show(Me, "Documento se encuentra cerrado completamente", "Documento cerrado",
                                          MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
                        End If

                    End If

                End If

            End If

            Grilla_Encabezado.ClearSelection()

        End If

    End Sub

    Private Sub Btn_Clonar_Producto_Click(sender As Object, e As EventArgs) Handles Btn_Clonar_Producto.Click
        Try
            Dim _Fila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.CurrentRow.Index)

            Dim _Nuevo_Producto As Boolean = _Fila.Cells("Nuevo_Producto").Value

            If _Nuevo_Producto Then
                Beep()
                Return
            End If

            If Not Fx_Tiene_Permiso(Me, "Doc00092") Then
                Return
            End If

            Sb_Clonar_Fila(_Fila)
        Catch ex As Exception
            MessageBoxEx.Show(Me, ex.Message)
        End Try
    End Sub

    Private Sub Btn_Mini_Clonar_Producto_Click(sender As Object, e As EventArgs) Handles Btn_Mini_Clonar_Producto.Click
        Call Btn_Clonar_Producto_Click(Nothing, Nothing)
    End Sub

    Private Sub Grilla_Encabezado_DataError(sender As Object, e As DataGridViewDataErrorEventArgs) Handles Grilla_Encabezado.DataError

    End Sub

    Sub Sb_Clonar_Fila(_Fila As DataGridViewRow)

        Try
            Me.Enabled = False
            Me.Cursor = Cursors.WaitCursor

            Dim _CodLista = _Fila.Cells("CodLista").Value
            Dim _Codigo = _Fila.Cells("Codigo").Value
            Dim _Descripcion = _Fila.Cells("Descripcion").Value
            Dim _Precio = _Fila.Cells("Precio").Value
            Dim _Prct As Boolean = _Fila.Cells("Prct").Value

            If _Prct Then
                MessageBoxEx.Show(Me, "Copiar los productos a una nueva fila solo aplica para productos no para conceptos", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                Return
            End If

            Dim _UltFila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.Rows.Count - 1)
            Dim _Nuevo_Producto As Boolean = _UltFila.Cells("Nuevo_Producto").Value

            If Not _Nuevo_Producto Then
                Sb_Nueva_Linea(_CodLista)
            End If

            Dim _NewFila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.Rows.Count - 1)

            Dim _RowProducto As DataRow = Fx_Buscar_Producto(_Codigo, False, False, Nothing, False)

            Sb_Traer_Producto_Grilla(_NewFila, _RowProducto, True, 1, False)

            _NewFila.Cells("Descripcion").Value = _Descripcion
            _NewFila.Cells("Precio").Value = _Precio

            Grilla_Detalle.CurrentCell = Grilla_Detalle.Rows(Grilla_Detalle.Rows.Count - 1).Cells("Cantidad")

        Catch ex As Exception

        Finally
            Me.Cursor = Cursors.Default
            Me.Enabled = True
        End Try

    End Sub

    Function Fx_Revisar_Si_Tiene_OCC_Pendiente() As Boolean

        Dim _SumaOccPdte = 0
        Dim _TieneOCcPdtes As Boolean

        If _Tido <> "OCC" Then Return True

        If Not _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Configuracion", "Revisar_OCC_Pendientes_X_Productos") Then
            Return True
        End If

        If Not _Global_Row_Configuracion_General.Item("Revisar_OCC_Pendientes_X_Productos") Then
            Return True
        End If

        Try

            Me.Cursor = Cursors.WaitCursor

            Dim _Genera_Filtro = Generar_Filtro_IN(_TblDetalle, "", "Codigo", False, False, "'")

            For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows

                Dim _Codigo As String = _Fila.Cells("Codigo").Value
                Dim _TieneOccPdte = CBool(_Sql.Fx_Cuenta_Registros("MAEDDO", "TIDO = 'OCC' And KOPRCT = '" & _Codigo & "' And ESLIDO = '' -- And FEEMLI > '20210101'"))

                _Fila.Cells("TieneOccPdte").Value = _TieneOccPdte

                If _TieneOccPdte Then
                    _Fila.Cells("Codigo").Style.ForeColor = Rojo
                    _SumaOccPdte += 1
                End If

            Next

            _TieneOCcPdtes = CBool(_SumaOccPdte)

            If _TieneOCcPdtes Then

                If MessageBoxEx.Show(Me, "El documento tiene " & _SumaOccPdte & " productos con OCC activas y en estado pendientes" & vbCrLf & vbCrLf &
                                    "¿Desea continuar con la grabación de la OCC en curso de todas maneras?",
                                    "Existen OCC pendientes", MessageBoxButtons.YesNo, MessageBoxIcon.Error) = DialogResult.Yes Then

                    If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00060", Nothing, "", "") Then ' Fx_Tiene_Permiso(Me, "Doc00060") Then
                        Return False
                    End If

                Else

                    Return False

                End If

            End If

            Return True

        Catch ex As Exception
            MessageBoxEx.Show(Me, ex.Message, "Problema", MessageBoxButtons.OK, MessageBoxIcon.Stop)
        Finally
            Me.Cursor = Cursors.Default
        End Try

    End Function

    Function Fx_Revisar_Costo_Lista_Distinto_Costo_Proveedor() As Boolean

        Dim _SumaPLpdistinto = 0
        Dim _TienePLpdistinto As Boolean

        If _Tido <> "OCC" Then Return True

        If Not _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Configuracion", "Alerta_Costo_Lista_Distinto_Costo_Proveedor") Then
            Return True
        End If

        If Not _Global_Row_Configuracion_General.Item("Alerta_Costo_Lista_Distinto_Costo_Proveedor") Then
            Return True
        End If

        Me.Cursor = Cursors.WaitCursor

        Try

            For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows

                Dim _Codigo As String = _Fila.Cells("Codigo").Value

                Dim _PrecioListaUd1 = _Fila.Cells("PrecioListaUd1").Value
                Dim _PrecioListaUd2 = _Fila.Cells("PrecioListaUd2").Value

                Dim _PrecioListaUd1_Prov = _Fila.Cells("PrecioListaUd1_Prov").Value
                Dim _PrecioListaUd2_Prov = _Fila.Cells("PrecioListaUd2_Prov").Value

                If _PrecioListaUd1 <> _PrecioListaUd1_Prov Or _PrecioListaUd2 <> _PrecioListaUd2_Prov Then
                    _SumaPLpdistinto += 1
                    _Fila.Cells("Codigo").Style.ForeColor = Rojo
                End If

            Next

            _TienePLpdistinto = CBool(_SumaPLpdistinto)
            Me.Cursor = Cursors.Default

            If _TienePLpdistinto Then

                If MessageBoxEx.Show(Me, "El documento tiene " & _SumaPLpdistinto & " productos con precios distintos entre la lista de costos del proveedor y la lista de precios del documento" & vbCrLf & vbCrLf &
                                    "¿Desea continuar con la grabación de la OCC en curso de todas maneras?",
                                    "Existen Precios distintos en lista de costos del proveedor", MessageBoxButtons.YesNo, MessageBoxIcon.Exclamation) = DialogResult.Yes Then

                    If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00061", Nothing, "", "") Then 'Fx_Tiene_Permiso(Me, "Doc00061") Then
                        Return False
                    End If

                Else

                    Return False

                End If

            End If

            Return True

        Catch ex As Exception
            MessageBoxEx.Show(Me, ex.Message, "Problema", MessageBoxButtons.OK, MessageBoxIcon.Stop)
        Finally
            Me.Cursor = Cursors.Default
        End Try

    End Function

    Private Sub Btn_Lista_Costos_Proveedor_Mismo_Proveedor_Click(sender As Object, e As EventArgs) Handles Btn_Lista_Costos_Proveedor_Mismo_Proveedor.Click

        Dim _RowProveedor As DataRow = _RowEntidad

        If Not IsNothing(Fm_MPC) Then
            If Not Fm_MPC.Visible Then
                Fm_MPC.Close()
                Fm_MPC.Dispose()
                Fm_MPC = Nothing
            End If
        End If

        If Not IsNothing(Fm_MPC) Then
            'MessageBoxEx.Show(Me, "El formulario ya esta en ejecución" & vbCrLf &
            '                  "Revise la barra de tareas", "Formulario costos por proveedor", MessageBoxButtons.OK, MessageBoxIcon.Information)
            Fm_MPC.Focus()
            Return
        End If

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Pre0013", Nothing, "", "") Then

            Dim _Tbl_Lista_Seleccionada As DataTable
            Dim _CodLista As String = _Global_Row_Configuracion_General.Item("Lista_Precios_Proveedores")

            If String.IsNullOrEmpty(_CodLista) Then

                Dim Fm As New Frm_SeleccionarListaPrecios(Frm_SeleccionarListaPrecios.Enum_Tipo_Lista.Costo, False, False)
                Fm.ShowDialog(Me)
                _Tbl_Lista_Seleccionada = Fm.Pro_Tbl_Listas_Seleccionadas
                Fm.Dispose()

                If Not (_Tbl_Lista_Seleccionada Is Nothing) Then
                    _CodLista = _Tbl_Lista_Seleccionada.Rows(0).Item("Lista")
                End If

            End If

            If Not String.IsNullOrEmpty(_CodLista.Trim) Then

                If IsNothing(_RowProveedor) Then

                    Dim Fm_E As New Frm_BuscarEntidad_Mt(False)
                    Fm_E.ShowInTaskbar = False
                    Fm_E.Text = "Busqueda de proveedores para lista de costos"
                    Fm_E.ShowDialog(Me)
                    If Fm_E.Pro_Entidad_Seleccionada Then
                        _RowProveedor = Fm_E.Pro_RowEntidad
                    End If
                    Fm_E.Dispose()

                End If

                If Not IsNothing(_RowProveedor) Then

                    Dim _RowListaSeleccionada As DataRow

                    Dim Fm_P As New Frm_MantCostosPrecios_LV(_RowProveedor, _CodLista)
                    Fm_P.SeleccionarYCerrar = True
                    Fm_P.ShowDialog(Me)
                    _RowListaSeleccionada = Fm_P.RowListaSeleccionada
                    Fm_P.Dispose()

                    If IsNothing(_RowListaSeleccionada) Then
                        Return
                    End If

                    Dim _Id_Padre As Integer = _RowListaSeleccionada.Item("Id")
                    Dim _Lista As String = _RowListaSeleccionada.Item("Lista")
                    Dim _FechaVigenciaDesde As Date = _RowListaSeleccionada.Item("FechaVigenciaDesde")
                    Dim _FechaVigenciaHasta As Date = _RowListaSeleccionada.Item("FechaVigenciaHasta")

                    Fm_MPC = New Frm_MantCostosPrecios(_RowProveedor, _Lista)
                    Fm_MPC.Id_Padre = _Id_Padre
                    Fm_MPC.Dtp_FechaVigenciaDesde.Value = _FechaVigenciaDesde
                    Fm_MPC.Dtp_FechaVigenciaHasta.Value = _FechaVigenciaHasta
                    Fm_MPC.ShowInTaskbar = True
                    Fm_MPC.Show()

                    'Fm_MPC = New Frm_MantCostosPrecios(_RowProveedor, _CodLista)
                    'Fm_MPC.ShowInTaskbar = True
                    'Fm_MPC.Show()

                Else
                    MessageBoxEx.Show(Me, "No se seleccionó ningún proveedor",
                                     "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                End If

            End If

        End If

    End Sub

    Private Sub Btn_Lista_Costos_Proveedor_Otro_Proveedor_Click(sender As Object, e As EventArgs) Handles Btn_Lista_Costos_Proveedor_Otro_Proveedor.Click

        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Pre0013", Nothing, "", "") Then

            Dim _Tbl_Lista_Seleccionada As DataTable
            Dim _CodLista As String = _Global_Row_Configuracion_General.Item("Lista_Precios_Proveedores")

            If String.IsNullOrEmpty(_CodLista) Then

                Dim Fm As New Frm_SeleccionarListaPrecios(Frm_SeleccionarListaPrecios.Enum_Tipo_Lista.Costo, False, False)
                Fm.ShowDialog(Me)
                _Tbl_Lista_Seleccionada = Fm.Pro_Tbl_Listas_Seleccionadas
                Fm.Dispose()

                If Not (_Tbl_Lista_Seleccionada Is Nothing) Then
                    _CodLista = _Tbl_Lista_Seleccionada.Rows(0).Item("Lista")
                End If

            End If

            If Not String.IsNullOrEmpty(_CodLista.Trim) Then

                Dim _RowProveedor As DataRow

                Dim Fm_E As New Frm_BuscarEntidad_Mt(False)
                Fm_E.ShowInTaskbar = False
                Fm_E.Text = "Busqueda de proveedores para lista de costos"
                Fm_E.ShowDialog(Me)
                If Fm_E.Pro_Entidad_Seleccionada Then
                    _RowProveedor = Fm_E.Pro_RowEntidad
                End If
                Fm_E.Dispose()

                If Not IsNothing(_RowProveedor) Then

                    Dim Fm_P As New Frm_MantCostosPrecios_LV(_RowProveedor, _CodLista)
                    Fm_P.ShowDialog(Me)
                    Fm_P.Dispose()

                Else
                    MessageBoxEx.Show(Me, "No se seleccionó ningún proveedor",
                                     "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                End If

            End If

        End If

    End Sub

    Private Sub Btn_Impresion_PDF_Click(sender As Object, e As EventArgs) Handles Btn_Impresion_PDF.Click
        Sb_Configuracion_Salida_PDF(Me, ModEmpresa_Doc, ModModalidad_Doc, _Tido)
    End Sub

    Function Fx_Validar_Detalle_Asociado_Conceptos_DRA() As Boolean

        'PERMITIR GRABAR OCC CON CONCEPTOS SIN DISTRIBUCION DE RECARGOS A DOCUMENTOS OBLIGATORIO
        Dim _Contador = 0

        For Each _Fila As DataRow In _TblDetalle.Rows

            Dim _Id As Integer = _Fila.Item("Id")
            Dim _Codigo As String = _Fila.Item("Codigo")
            Dim _Prct As Boolean = _Fila.Item("Prct")

            If _Prct Then

                Dim _Reg As Boolean = CBool(_Sql.Fx_Cuenta_Registros(_Global_BaseBk & "Zw_Docu_ObligPg",
                                            "Concepto = '" & _Codigo & "' And Obliga_DRA = 1 And Tido = '" & _Tido & "'"))

                If _Reg Then

                    Dim rows() As DataRow = _Tbl_Maedcr.Select("Id = " & _Id)

                    If Not CBool(rows.Length) Then
                        _Contador += 1
                    End If

                End If

            End If

        Next

        If CBool(_Contador) Then

            If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00062", Nothing, "", "") Then
                Return False
            End If

        End If

        Return True

    End Function


    Private Sub Btn_Mini_Ver_Costo_Lista_Click(sender As Object, e As EventArgs) Handles Btn_Mini_Ver_Costo_Lista.Click

        If Lbl_Costo_Lista.Visible Then
            Lbl_Costo_Lista.Visible = False
        Else
            If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00067", Nothing, "", "") Then
                Lbl_Costo_Lista.Visible = True
            End If
        End If
        Me.Refresh()

    End Sub

    Private Sub Btn_Recargar_Producto_Linea_Activa_Click(sender As Object, e As EventArgs) Handles Btn_Recargar_Producto_Linea_Activa.Click
        Call Btn_Recargar_Producto_Click(Nothing, Nothing)
    End Sub

    Private Sub Btn_Recargar_Producto_Todos_Click(sender As Object, e As EventArgs) Handles Btn_Recargar_Producto_Todos.Click

        Try
            Me.Enabled = False
            Dim _Contador = 1
            For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows
                If CBool(_Fila.Cells("Nuevo_Producto").Value) And _Contador = 1 Then Return
                Sb_Recargar_Producto(_Fila)
                _Contador += 1
            Next
            MessageBoxEx.Show(Me, "Datos actualizados correctamente", "Recalcular valores", MessageBoxButtons.OK, MessageBoxIcon.Information)
        Catch ex As Exception
        Finally
            Me.Enabled = True
        End Try

    End Sub

    Private Sub Btn_Levantar_Prod_Excel_Click(sender As Object, e As EventArgs) Handles Btn_Levantar_Prod_Excel.Click

        If Not Fx_Revisar_encabezado() Then
            Return
        End If

        If Not CBool(_TblDetalle.Rows(0).Item("Nuevo_Producto")) Then
            MessageBoxEx.Show(Me, "Debe quitar los productos del detalle para poder hacer esta gestión",
                              "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        Dim _Fila As DataRow = _TblDetalle.Rows(0)

        Dim _CodSucursal = _Fila.Item("Sucursal")
        Dim _CodBodega = _Fila.Item("Bodega")
        Dim _CodLista = _TblEncabezado.Rows(0).Item("ListaPrecios")

        Dim _Tbl_Productos_Levantar As DataTable

        Dim Fm As New Frm_Impor_Prod_Masivamente(_CodSucursal, _CodBodega, _CodLista, Frm_Impor_Prod_Masivamente.Enum_Tipo_Doc.Excel)
        Fm.NetoBruto = _TblEncabezado.Rows(0).Item("DocEn_Neto_Bruto")
        Fm.ShowDialog(Me)
        _Tbl_Productos_Levantar = Fm.Tbl_Productos_Levantar
        Fm.Dispose()

        If CBool(_Tbl_Productos_Levantar.Rows.Count) Then

            Dim _Contador = 0

            Barra_Progreso.Maximum = 100
            Barra_Progreso.Visible = True
            Lbl_Progreso.Visible = True

            Me.Refresh()

            For Each Fila As DataRow In _Tbl_Productos_Levantar.Rows

                Application.DoEvents()

                Dim _Codigo As String = Fila.Item("Codigo")

                Consulta_sql = "Select Top 1 * From MAEPR Where KOPR = '" & _Codigo & "'"
                Dim _RowProducto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                Dim _Cantidad As Double = Fila.Item("Cantidad")

                Dim _UnTrans As Integer = 1
                Dim _Precio As Double = Fila.Item("Precio")

                Dim _Observa As String
                Dim _DescuentoPorc As Double

                Dim _Bodega As String = Fila.Item("Bodega")

                _DescuentoPorc = 0

                Dim _New_Fila As DataGridViewRow = Grilla_Detalle.Rows(_Contador)

                Sb_Traer_Producto_Grilla(_New_Fila, _RowProducto, True)

                Lbl_Progreso.Text = "Insertando producto: " & _Codigo.Trim & " - " & _New_Fila.Cells("Descripcion").Value

                _New_Fila.Cells("Codigo").Value = _Codigo
                _New_Fila.Cells("Cantidad").Value = _Cantidad

                If Not String.IsNullOrWhiteSpace(_Bodega) Then
                    _New_Fila.Cells("Bodega").Value = _Bodega
                End If

                Dim _Precio_Old As Double = _New_Fila.Cells("Precio").Value

                _New_Fila.Cells("Precio").Value = _Precio

                If _New_Fila.Cells("Precio").Value = 0 Then
                    _New_Fila.Cells("Precio").Value = 1
                End If

                _New_Fila.Cells("Observa").Value = _Observa

                _New_Fila.Cells("Potencia").Value = 0
                _New_Fila.Cells("Operacion").Value = String.Empty

                If _New_Fila.Cells("Precio").Value > 0 And CBool(_Cantidad) Then
                    Sb_Procesar_Datos_De_Grilla(_New_Fila, "Cantidad", True, True)
                    If _DescuentoPorc > 0 Then
                        _New_Fila.Cells("DescuentoPorc").Value = Math.Round(_DescuentoPorc, 2)
                        Sb_Procesar_Datos_De_Grilla(_New_Fila, "DescuentoPorc", True, True)
                    End If
                End If

                _Contador += 1
                Barra_Progreso.Value = ((_Contador * 100) / _Tbl_Productos_Levantar.Rows.Count)

                Sb_Nueva_Linea(_CodLista)

            Next

            Barra_Progreso.Visible = False
            Lbl_Progreso.Visible = False

            Sb_Marcar_Grilla()

        End If

    End Sub

    Private Sub Btn_Levantar_Prod_Txt_Click(sender As Object, e As EventArgs) Handles Btn_Levantar_Prod_Txt.Click

        'MessageBoxEx.Show(Me, "En construcción", "Bakapp información", MessageBoxButtons.OK, MessageBoxIcon.Stop)
        'Return

        If Not Fx_Revisar_encabezado() Then
            Return
        End If

        If Not CBool(_TblDetalle.Rows(0).Item("Nuevo_Producto")) Then
            MessageBoxEx.Show(Me, "Debe quitar los productos del detalle para poder hacer esta gestión",
                              "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        Dim _Fila As DataRow = _TblDetalle.Rows(0)

        Dim _CodSucursal = _Fila.Item("Sucursal")
        Dim _CodBodega = _Fila.Item("Bodega")
        Dim _CodLista = _TblEncabezado.Rows(0).Item("ListaPrecios")

        Dim _Tbl_Productos_Levantar As DataTable
        'Dim _Nombre_Archivo As String

        Dim Fm As New Frm_Impor_Prod_Masivamente(_CodSucursal, _CodBodega, _CodLista, Frm_Impor_Prod_Masivamente.Enum_Tipo_Doc.Txt)
        Fm.ShowDialog(Me)
        _Tbl_Productos_Levantar = Fm.Tbl_Productos_Levantar
        '_Nombre_Archivo = Fm.Nombre_Archivo_SExtencion
        Fm.Dispose()

        'Dim _NewNroDocumento As String

        'Dim _UltChar = Mid(_Nombre_Archivo, _Nombre_Archivo.Length, 1)

        'If IsNumeric(_UltChar) And _Nombre_Archivo.Length <= 10 Then
        '    _NewNroDocumento = Fx_Rellena_ceros(_Nombre_Archivo, 10)
        '    _TblEncabezado.Rows(0).Item("NroDocumento") = _NewNroDocumento
        'End If

        If CBool(_Tbl_Productos_Levantar.Rows.Count) Then

            Dim _Contador = 0

            For Each Fila As DataRow In _Tbl_Productos_Levantar.Rows

                Dim _Codigo As String = Fila.Item("Codigo")

                Consulta_sql = "Select Top 1 * From MAEPR Where KOPR = '" & _Codigo & "'"
                Dim _RowProducto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                Dim _Cantidad As Double = Fila.Item("Cantidad")


                Dim _UnTrans As Integer = 1
                Dim _Precio As Double = Fila.Item("Precio")

                Dim _Observa As String
                Dim _DescuentoPorc As Double

                If False Then

                    Dim _Desc1 As Double = Fila.Item("Desc1")
                    Dim _Desc2 As Double = Fila.Item("Desc2")
                    Dim _Desc3 As Double = Fila.Item("Desc3")
                    Dim _Desc4 As Double = Fila.Item("Desc4")
                    Dim _Desc5 As Double = Fila.Item("Desc5")

                    _DescuentoPorc = 100 * (1 - ((1 - (_Desc1 / 100.0)) *
                                                      (1 - (_Desc2 / 100.0)) *
                                                      (1 - (_Desc3 / 100.0)) *
                                                      (1 - (_Desc4 / 100.0)) *
                                                      (1 - (_Desc5 / 100.0))))

                    _DescuentoPorc = Math.Round(_DescuentoPorc, 2)

                Else
                    _DescuentoPorc = 0
                End If

                Dim _New_Fila As DataGridViewRow = Grilla_Detalle.Rows(_Contador)

                Sb_Traer_Producto_Grilla(_New_Fila, _RowProducto, True)

                _New_Fila.Cells("Codigo").Value = _Codigo
                _New_Fila.Cells("Cantidad").Value = _Cantidad

                Dim _Precio_Old As Double = _New_Fila.Cells("Precio").Value

                _New_Fila.Cells("Precio").Value = _Precio

                If _New_Fila.Cells("Precio").Value = 0 Then
                    _New_Fila.Cells("Precio").Value = 1
                End If

                _New_Fila.Cells("Observa").Value = _Observa

                _New_Fila.Cells("Potencia").Value = 0
                _New_Fila.Cells("Operacion").Value = String.Empty

                If _New_Fila.Cells("Precio").Value > 0 And CBool(_Cantidad) Then
                    Sb_Procesar_Datos_De_Grilla(_New_Fila, "Cantidad", True, True)
                    If _DescuentoPorc > 0 Then
                        _New_Fila.Cells("DescuentoPorc").Value = Math.Round(_DescuentoPorc, 2)
                        Sb_Procesar_Datos_De_Grilla(_New_Fila, "DescuentoPorc", True, True)
                    End If
                End If

                _Contador += 1
                Sb_Nueva_Linea(_CodLista)

            Next

            Sb_Marcar_Grilla()

        End If

    End Sub

    Private Sub Btn_VerEntidad_Enter(sender As Object, e As EventArgs)
        Grilla_Encabezado.Focus()
    End Sub

    Private Sub Btn_VerEntidad_Click(sender As Object, e As EventArgs)
        If Not (_RowEntidad Is Nothing) Then
            ShowContextMenu(Menu_Contextual_Info_Entidad)
        Else
            MessageBoxEx.Show(Me, "Falta el entidad", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
        End If
    End Sub

    Private Sub Txt_Importar_ArchivoSG_Click(sender As Object, e As EventArgs) Handles Txt_Importar_ArchivoSG.Click

        ' Carpetas para creación de GRI desde Orden de fabriación SAIME
        Dim _Carpeta_Archivos_Txt As String '= "D:\Nube OneDrive\OneDrive\Documentos\Empresas\Saime\Txt Ingresos"
        Dim _Carpeta_Generados_Txt As String '= "D:\Nube OneDrive\OneDrive\Documentos\Empresas\Saime\Txt Ingresos\Generados"

        _Carpeta_Archivos_Txt = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Estaciones_Ruta_PDF",
                                                 "Ruta_PDF",
                                                 "Empresa = '" & ModEmpresa_Doc & "' " &
                                                 "And NombreEquipo = '" & _NombreEquipo & "' " &
                                                 "And Modalidad = '" & ModModalidad_Doc & "' And Tipo_Ruta = 'GRI_Ing'")

        If Not Directory.Exists(_Carpeta_Archivos_Txt) Then
            MessageBoxEx.Show(Me, "Falta la carpeta desde donde se deben ir a buscar los archivos txt" & vbCrLf &
                              "Debe configurar esta carpeta para poder hacer la gestión", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        _Carpeta_Generados_Txt = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Estaciones_Ruta_PDF",
                                                  "Ruta_PDF",
                                                  "Empresa = '" & ModEmpresa_Doc & "' " &
                                                  "And NombreEquipo = '" & _NombreEquipo & "' " &
                                                  "And Modalidad = '" & ModModalidad_Doc & "' And Tipo_Ruta = 'GRI_Gen'")

        If Not Directory.Exists(_Carpeta_Generados_Txt) Then
            MessageBoxEx.Show(Me, "Falta la carpeta desde donde se dejaran los archios txt ya procesados" & vbCrLf &
                              "Debe configurar esta carpeta para poder hacer la gestión", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        If _Carpeta_Archivos_Txt = _Carpeta_Generados_Txt Then

            MessageBoxEx.Show(Me, "La carpeta en donde se guardaran los archivos procesados" & vbCrLf &
                              "no puede ser igual a la carpeta desde donde se sacan los archivos para procesar" & vbCrLf & vbCrLf &
                              "Debera configurar nuevamente las carpetas",
                              "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)

            Consulta_sql = "Delete " & _Global_BaseBk & "Zw_Estaciones_Ruta_PDF" & vbCrLf &
                           "Where NombreEquipo = '" & _NombreEquipo & "' " &
                           "And Empresa = '" & ModEmpresa_Doc & "' " &
                           "And Modalidad = '" & ModModalidad_Doc & "' " &
                           "And Tido = '" & _Tido & "' " &
                           "And Tipo_Ruta In ('GRI_Ing','GRI_Gen')"
            _Sql.Ej_consulta_IDU(Consulta_sql)

            Return
        End If


        If Not Fx_Revisar_encabezado() Then
            Return
        End If

        If Not CBool(_TblDetalle.Rows(0).Item("Nuevo_Producto")) Then
            MessageBoxEx.Show(Me, "Debe quitar los productos del detalle para poder hacer esta gestión",
                              "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        Dim _Fila As DataRow = _TblDetalle.Rows(0)

        Dim _CodSucursal = _Fila.Item("Sucursal")
        Dim _CodBodega = _Fila.Item("Bodega")
        Dim _CodLista = _TblEncabezado.Rows(0).Item("ListaPrecios")

        Dim _Tbl_Productos_Levantar As DataTable

        Dim Fm As New Frm_Impor_Prod_Masivamente(_CodSucursal, _CodBodega, _CodLista, Frm_Impor_Prod_Masivamente.Enum_Tipo_Doc.Txt)
        Fm.InitialDirectory = _Carpeta_Archivos_Txt
        Fm.Rdb_Precio_Excel.Checked = True
        Fm.ShowDialog(Me)
        _Tbl_Productos_Levantar = Fm.Tbl_Productos_Levantar
        _Nombre_Archivo_Txt_Especial_Saime = Fm.Nombre_Archivo_SExtencion
        Fm.Dispose()

        If Not CBool(_Tbl_Productos_Levantar.Rows.Count) Then
            Return
        End If

        Dim _NewNroDocumento As String

        Dim _UltChar = Mid(_Nombre_Archivo_Txt_Especial_Saime, _Nombre_Archivo_Txt_Especial_Saime.Length, 1)

        If Not IsNumeric(_UltChar) Then
            MessageBoxEx.Show(Me, "El nombre de documento no se puede transformar en numeración" & vbCrLf &
                              "El nombre del archivo debe terminar en un numero y el nombre debe tener menos de 10 dígitos",
                              "Validación nombre de archivos", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        If IsNumeric(_UltChar) And _Nombre_Archivo_Txt_Especial_Saime.Length <= 10 Then

            _NewNroDocumento = Fx_Rellena_ceros(_Nombre_Archivo_Txt_Especial_Saime, 10)

            Dim _Reg As Boolean = _Sql.Fx_Cuenta_Registros("MAEDDO", "TIDO = '" & _Tido & "' And NUDO = '" & _NewNroDocumento & "'")

            If CBool(_Reg) Then
                MessageBoxEx.Show(Me, "NUMERO DE DOCUMENTO YA EXISTE" & vbCrLf & "No es posible generar el documento número GRI: " & _NewNroDocumento,
                                  "Validación",
                                  MessageBoxButtons.OK, MessageBoxIcon.Stop)
                Return
            End If

            _TblEncabezado.Rows(0).Item("NroDocumento") = _NewNroDocumento
            _NroDocumento_Editado_Por_Usuario = True

        End If

        Dim _Contador = 0

        For Each Fila As DataRow In _Tbl_Productos_Levantar.Rows

            Dim _Codigo As String = Fila.Item("Codigo")

            Consulta_sql = "Select Top 1 * From MAEPR Where KOPR = '" & _Codigo & "'"
            Dim _RowProducto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            Dim _Cantidad As Double = Fila.Item("Cantidad")


            Dim _UnTrans As Integer = 1
            Dim _Precio As Double = Fila.Item("Precio")

            Dim _Observa As String
            Dim _DescuentoPorc As Double

            'If False Then

            '    Dim _Desc1 As Double = Fila.Item("Desc1")
            '    Dim _Desc2 As Double = Fila.Item("Desc2")
            '    Dim _Desc3 As Double = Fila.Item("Desc3")
            '    Dim _Desc4 As Double = Fila.Item("Desc4")
            '    Dim _Desc5 As Double = Fila.Item("Desc5")

            '    _DescuentoPorc = 100 * (1 - ((1 - (_Desc1 / 100.0)) *
            '                                          (1 - (_Desc2 / 100.0)) *
            '                                          (1 - (_Desc3 / 100.0)) *
            '                                          (1 - (_Desc4 / 100.0)) *
            '                                          (1 - (_Desc5 / 100.0))))

            '    _DescuentoPorc = Math.Round(_DescuentoPorc, 2)

            'Else
            _DescuentoPorc = 0
            'End If

            Dim _New_Fila As DataGridViewRow = Grilla_Detalle.Rows(_Contador)

            Sb_Traer_Producto_Grilla(_New_Fila, _RowProducto, True)

            _New_Fila.Cells("Codigo").Value = _Codigo
            _New_Fila.Cells("Cantidad").Value = _Cantidad

            Dim _Precio_Old As Double = _New_Fila.Cells("Precio").Value

            _New_Fila.Cells("Precio").Value = _Precio

            If _New_Fila.Cells("Precio").Value = 0 Then
                _New_Fila.Cells("Precio").Value = 1
            End If

            _New_Fila.Cells("Observa").Value = _Observa

            _New_Fila.Cells("Potencia").Value = 0
            _New_Fila.Cells("Operacion").Value = String.Empty

            If _New_Fila.Cells("Precio").Value > 0 And CBool(_Cantidad) Then
                Sb_Procesar_Datos_De_Grilla(_New_Fila, "Cantidad", True, True)
                If _DescuentoPorc > 0 Then
                    _New_Fila.Cells("DescuentoPorc").Value = Math.Round(_DescuentoPorc, 2)
                    Sb_Procesar_Datos_De_Grilla(_New_Fila, "DescuentoPorc", True, True)
                End If
            End If

            _Contador += 1
            Sb_Nueva_Linea(_CodLista)

        Next

        Sb_Marcar_Grilla()
        _Doc_Desde_Arch_Txt_Especial_Saime = True
        Sb_Grabar_Documento(_New_Idmaeedo, True)

    End Sub

    Private Sub Txt_ArchivoSG_Carpeta_Lectura_Click(sender As Object, e As EventArgs) Handles Txt_ArchivoSG_Carpeta_Lectura.Click
        Sb_Configuracion_Salida_Ruta_Archivo_X_Estacion(Me, _Tido, Enum_Tipo_Ruta.GRI_Ing)
    End Sub

    Private Sub Txt_ArchivoSG_Carpeta_Generados_Click(sender As Object, e As EventArgs) Handles Txt_ArchivoSG_Carpeta_Generados.Click
        Sb_Configuracion_Salida_Ruta_Archivo_X_Estacion(Me, _Tido, Enum_Tipo_Ruta.GRI_Gen)
    End Sub

    Function Fx_Validar_Restricciones_Por_Tipo_Documento_Y_Relacion() As Boolean

        Dim _Permiso As String
        Dim _Tidopa1 As String
        'Dim _Tidopa2 As String

        'NO00013 GRI - -GTI / GDI
        'NO00014 FCC - -OCC / GRC
        'NO00015 GRC - -OCC / FCC
        'NO00016 FCV - -NVV / GDV
        'NO00017 GDV - -NVV / FCV
        'NO00018 NVV - -COV
        'NO00019 NCV - -FCV
        'NO00020 GRD - -NCV

        Select Case _Tido
            Case "GRI" : _Permiso = "NO00013" : _Tidopa1 = "GTI o GDI" ': _Tidopa2 = "GDI"
            Case "FCC" : _Permiso = "NO00014" : _Tidopa1 = "OCC o GRC" ': _Tidopa2 = "GRC"
            Case "GRC" : _Permiso = "NO00015" : _Tidopa1 = "OCC o FCC" ': _Tidopa2 = "FCC"
            Case "FCV" : _Permiso = "NO00016" : _Tidopa1 = "NVV o GDV" ': _Tidopa2 = "GDV"
            Case "GDV" : _Permiso = "NO00017" : _Tidopa1 = "NVV o FCV" ': _Tidopa2 = "FCV"
            Case "NVV" : _Permiso = "NO00018" : _Tidopa1 = "COV"
            Case "NCV" : _Permiso = "NO00019" : _Tidopa1 = "FCV o GRD"
            Case "GRD" : _Permiso = "NO00020" : _Tidopa1 = "NCV"
            Case Else
                Return True
        End Select

        For Each _Fila As DataRow In _TblDetalle.Rows

            Dim _Codigo As String = _Fila.Item("Codigo")
            Dim _Tidopa As String = _Fila.Item("Tidopa").ToString.Trim

            If String.IsNullOrEmpty(_Tidopa) Then

                Dim _Koen = _RowEntidad.Item("KOEN")
                Dim _Suen = _RowEntidad.Item("SUEN")

                If Fx_Tiene_Permiso(Me, _Permiso,, False) Then
                    If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00080", _Ds_Matriz_Documentos, _Koen, _Suen) Then
                        MessageBoxEx.Show(Me, "No puede grabar " & _Tido & " sin documentos relacionados: " & _Tidopa1, "Validación",
                                      MessageBoxButtons.OK, MessageBoxIcon.Stop)
                        Return False
                    End If
                End If

            End If

        Next

        Return True

    End Function

    'Private Sub Btn_ElimRecic_Doc_Click(sender As Object, e As EventArgs) Handles Btn_ElimRecic_Doc.Click

    '    If Fx_Revisar_si_tiene_registros() Then
    '        MessageBoxEx.Show(Me, "Existen datos en el documento, debe limpiar para poder usar esta opción",
    '                          "Editar Vale transitorio", MessageBoxButtons.OK, MessageBoxIcon.Stop)
    '        Return
    '    End If


    '    If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00070", Nothing, "", "") Then
    '        Sb_Buscar_Documento_Eliminar_Reciclar(_Tido, _Post_Venta)
    '    End If

    'End Sub

    Private Sub Btn_Imprimir_Click(sender As Object, e As EventArgs) Handles Btn_Imprimir.Click
        If Not Fx_Revisar_si_tiene_registros() Then
            Return
        End If
        ShowContextMenu(Menu_Contextual_Imp_Doc_Construccion)
    End Sub

    Private Sub Btn_ImpConstCarta_Click(sender As Object, e As EventArgs) Handles Btn_ImpConstCarta.Click
        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00072", Nothing, "", "") Then
            Dim _Impresora = String.Empty ' "PDFCreator"

            Dim _Cl_ImpDocConstruccion As New Clas_Imprimir_DocEnconstruccion(_Ds_Matriz_Documentos)
            _Cl_ImpDocConstruccion.Fx_Imprimir_Archivo(Me, _Impresora, Clas_Imprimir_DocEnconstruccion.Enum_Tipo_Impresion.Carta)
        End If
    End Sub

    Private Sub Btn_ImpConstVale_Click(sender As Object, e As EventArgs) Handles Btn_ImpConstVale.Click
        If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00072", Nothing, "", "") Then
            Dim _Impresora = String.Empty ' "PDFCreator"

            Dim _Cl_ImpDocConstruccion As New Clas_Imprimir_DocEnconstruccion(_Ds_Matriz_Documentos)
            _Cl_ImpDocConstruccion.Fx_Imprimir_Archivo(Me, _Impresora, Clas_Imprimir_DocEnconstruccion.Enum_Tipo_Impresion.Vale)
        End If
    End Sub

    Private Sub Btn_ActListaProveedor_Click(sender As Object, e As EventArgs) Handles Btn_ActListaProveedor.Click

        If Not Fx_Revisar_encabezado() Then
            Return
        End If

        Dim _Koen = _RowEntidad.Item("KOEN")
        Dim _Suen = _RowEntidad.Item("SUEN")

        Fx_Actualizar_Lista_De_Costos_Random_Desde_Bakapp(Me, _Koen, _Suen)

    End Sub

    Private Sub Btn_Crear_Desde_DTEXMLCompra_Click(sender As Object, e As EventArgs) Handles Btn_Crear_Desde_DTEXMLCompra.Click

        If Not Fx_Tiene_Permiso(Me, "Doc00081") Then
            Return
        End If

        If _RowEntidad Is Nothing Then
            MessageBoxEx.Show(Me, "Falta entidad en el documento",
                              "Validación",
                              MessageBoxButtons.OK,
                              MessageBoxIcon.Stop,
                              MessageBoxDefaultButton.Button1, Me.TopMost)
            Grilla_Encabezado.Focus()
            Grilla_Encabezado.CurrentCell = Grilla_Encabezado.Rows(0).Cells("CodEntidad")
            Return
        End If

        Dim _Koen = _RowEntidad.Item("KOEN")
        Dim _Suen = _RowEntidad.Item("SUEN")
        Dim _Nokoen = _RowEntidad.Item("NOKOEN").ToString.Trim
        Dim _Rut = Replace(_RowEntidad.Item("Rut"), ".", "")

        Dim _Cl_GenDoc2DTE As New Bk_GenDoc2DTE.Cl_GenDoc2DTE
        Dim _Detalle As List(Of Bk_GenDoc2DTE.Detalle)
        Dim _Respuesta As Bk_GenDoc2DTE.Respuesta

        Dim _Aceptar As Boolean
        Dim _Folio As String

        '_Aceptar = InputBox_Bk(Me, "Ingrese número de factura del proveedor", "Crear OCC desde FCC", _NroDoc, False,, 10, True, _Tipo_Imagen.Texto)

        'If Not _Aceptar Then
        '    Return
        'End If

        Dim FmDte As New Frm_DocsDesdeDTEXML(_RowEntidad)
        FmDte.ShowDialog(Me)
        _Aceptar = FmDte.Seleccionado
        _Folio = FmDte.Folio
        FmDte.Dispose()

        If Not _Aceptar Then
            Return
        End If

        _Respuesta = _Cl_GenDoc2DTE.Fx_Generar_Documentos_Desde_DTE(_Folio, "33", _Rut)

        If Not _Respuesta.EsCorrecto Then
            MessageBoxEx.Show(Me, _Respuesta.Mensaje, "Error al cargar el documento", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        Dim _Observaciones = String.Empty

        _TblObservaciones.Rows(0).Item("Observaciones") = _Observaciones

        Sb_Actualizar_Datos_De_La_Entidad(Me, _RowEntidad, False, False)

        'If Not String.IsNullOrEmpty(_NroDocumento) Then
        '    _TblEncabezado.Rows(0).Item("NroDocumento") = _NroDocumento
        'End If

        Dim _FechaEmision = Now.Date

        _TblEncabezado.Rows(0).Item("FechaEmision") = _FechaEmision
        _TblEncabezado.Rows(0).Item("Fecha_1er_Vencimiento") = _FechaEmision
        _TblEncabezado.Rows(0).Item("FechaUltVencimiento") = _FechaEmision
        _TblEncabezado.Rows(0).Item("Cuotas") = 0
        _TblEncabezado.Rows(0).Item("Dias_1er_Vencimiento") = 0
        _TblEncabezado.Rows(0).Item("Dias_Vencimiento") = 0
        _TblObservaciones.Rows(0).Item("Forma_pago") = String.Empty

        Dim _CodLista = _TblEncabezado.Rows(0).Item("ListaPrecios")

        Dim _Contador = 0

        If _Respuesta.EsCorrecto Then

            Dim _Filtro_Kopral As String

            _Filtro_Kopral = Generar_Filtro_IN_Lista(_Respuesta.Detalle, False, "'")

            Dim _Reg = _Sql.Fx_Cuenta_Registros("TABCODAL", "KOEN = '" & _Koen & "' And KOPRAL In " & _Filtro_Kopral)

            If _Reg <> _Respuesta.Detalle.Count Then
                MessageBoxEx.Show(Me, "Existen productos que no se encuentran en el maestro de códigos alternativos de este proveedor" & vbCrLf &
                                  "Se iran indicando a medida que vallan siendo identificados para que los valla incorporando de forma manual según corresponda",
                                  "Validación", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
            End If

            'Dim _Tbl As DataTable = Fx_TblFromJson(_Fichero1, "RegistroCompras")

            For Each _Fila As Bk_GenDoc2DTE.Detalle In _Respuesta.Detalle

                Dim _Kopral = _Fila.Codigo
                Dim _Codigo = String.Empty ' _Fila.Codigo
                Dim _Descripcion = _Fila.Descripcion.Trim
                Dim _Cantidad = _Fila.Cantidad
                Dim _Precio = _Fila.Precio
                Dim _Monto = _Fila.Monto
                Dim _DescuentoMonto = _Fila.DescuentoMonto

                Consulta_sql = "Select * From TABCODAL Where KOEN = '" & _Koen & "' And KOPRAL = '" & _Kopral & "'"
                Dim _Tbl_Tcb As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

                Dim _Msg = String.Empty
                Dim _MsgProd = String.Empty
                Dim _Img = MessageBoxIcon.Stop

                If CBool(_Tbl_Tcb.Rows.Count) Then

                    If _Tbl_Tcb.Rows.Count = 1 Then
                        _Codigo = _Tbl_Tcb.Rows(0).Item("KOPR") '_Sql.Fx_Trae_Dato("TABCODAL", "KOPR", "KOEN = '" & _Koen & "' And KOPRAL = '" & _Kopral & "'")
                    Else
                        _Msg = "El código: " & _Kopral & " - " & _Descripcion & "." & vbCrLf &
                            "Existe mas de una vez en el maestro de códigos alternativos para la entidad" & vbCrLf & vbCrLf &
                            "Debe dejar solo un código alternativo para este producto para poder seguir con la gestión" & vbCrLf & vbCrLf &
                            "¿Desea continuar con la gestión?"
                        _Img = MessageBoxIcon.Exclamation
                        _MsgProd = Space(1) & "(Debe dejar solo un código alternativo para: " & _Kopral & " - " & _Descripcion & ")"
                    End If
                Else
                    _Msg = "El código: " & _Kopral & " - " & _Descripcion & "." & vbCrLf &
                            "No existe en el maestro de códigos alternativos para la entidad" & vbCrLf & vbCrLf &
                            "Debe crear el código alternativo para este producto para poder seguir con la gestión" & vbCrLf & vbCrLf &
                            "¿Desea continuar con la gestión?"
                    _MsgProd = Space(1) & "(Código que no existe: " & _Kopral & " - " & _Descripcion & ")"
                End If

                If String.IsNullOrEmpty(_Codigo.Trim) Then

                    If MessageBoxEx.Show(Me, _Msg,
                                      "Validación", MessageBoxButtons.OKCancel, _Img) <> DialogResult.OK Then
                        _Respuesta.EsCorrecto = False
                        Exit For
                    End If

                    If Fx_Tiene_Permiso(Me, "Prod020") Then

                        Clipboard.SetText(_Kopral)

                        Dim Fm As New Frm_Codigos_Alternativos
                        Fm.Text += _MsgProd
                        Fm.Txt_Koen.Tag = _Koen
                        Fm.Txt_Koen.Text = _Koen.ToString.Trim & " - " & _Nokoen
                        Fm.Txt_Koen.ButtonCustom.Enabled = False
                        Fm.Txt_Koen.ButtonCustom2.Enabled = False
                        If _Tbl_Tcb.Rows.Count > 1 Then
                            Fm.Txt_Descripcion.Text = _Kopral
                        End If
                        Fm.ShowDialog(Me)
                        Fm.Dispose()

                        If Not Fx_Tiene_Permiso(Me, "Prod017") Then
                            Return
                        End If

                        _Reg = _Sql.Fx_Cuenta_Registros("TABCODAL", "KOEN = '" & _Koen & "' And KOPRAL = '" & _Kopral & "'")

                        If _Reg = 1 Then
                            _Codigo = _Sql.Fx_Trae_Dato("TABCODAL", "KOPR", "KOEN = '" & _Koen & "' And KOPRAL = '" & _Kopral & "'").Trim
                        End If

                    End If

                End If

                'If String.IsNullOrEmpty(_Codigo) Then
                '    MessageBoxEx.Show(Me, "NO es posible continuar con la ")
                '    Return
                'End If

                If Not String.IsNullOrEmpty(_Codigo) Then

                    'Dim _Codigo As String = Fila.Item(_Campo_Codigo).ToString

                    Consulta_sql = "Select Top 1 * From MAEPR Where KOPR = '" & _Codigo & "'"
                    Dim _RowProducto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                    'Dim _Cantidad As Double = Fila.Item(_Campo_Cantidad)

                    If CBool(_Cantidad) Then

                        Dim _UnTrans As Integer = 1
                        Dim _Aplica_Descuentos As Boolean = CBool(_Fila.Dscto1 + _Fila.Dscto2 + _Fila.Dscto3)
                        'Dim _Precio As Double = Fila.Item(_Campo_Precio)

                        Dim _Observa As String
                        Dim _DescuentoPorc As Double

                        If _Aplica_Descuentos Then

                            Dim _Desc1 As Double = _Fila.Dscto1
                            Dim _Desc2 As Double = _Fila.Dscto2
                            Dim _Desc3 As Double = _Fila.Dscto3
                            Dim _Desc4 As Double '= Fila.Item("Desc4")
                            Dim _Desc5 As Double '= Fila.Item("Desc5")

                            _DescuentoPorc = 100 * (1 - ((1 - (_Desc1 / 100.0)) *
                                                              (1 - (_Desc2 / 100.0)) *
                                                              (1 - (_Desc3 / 100.0)) *
                                                              (1 - (_Desc4 / 100.0)) *
                                                              (1 - (_Desc5 / 100.0))))

                            _DescuentoPorc = Math.Round(_DescuentoPorc, 2)

                        Else

                            _DescuentoPorc = 0

                            Dim _Total As Double = _Precio * _Cantidad

                            If Math.Round(_Total, 0) <> Math.Round(_Monto, 0) Then
                                _Precio = _Monto / _Cantidad
                            End If

                        End If

                        Dim _New_Fila As DataGridViewRow = Grilla_Detalle.Rows(_Contador)

                        Sb_Traer_Producto_Grilla(_New_Fila, _RowProducto, True)

                        _New_Fila.Cells("Codigo").Value = _Codigo
                        _New_Fila.Cells("Cantidad").Value = _Cantidad
                        _New_Fila.Cells("CodigoProv").Value = _Kopral

                        Dim _Precio_Old As Double = _New_Fila.Cells("Precio").Value

                        _New_Fila.Cells("Precio").Value = _Precio

                        If _New_Fila.Cells("Precio").Value = 0 Then
                            _New_Fila.Cells("Precio").Value = 1
                        End If

                        _New_Fila.Cells("Observa").Value = _Observa

                        _New_Fila.Cells("Potencia").Value = 0
                        _New_Fila.Cells("Operacion").Value = String.Empty

                        If _New_Fila.Cells("Precio").Value > 0 Then
                            Sb_Procesar_Datos_De_Grilla(_New_Fila, "Cantidad", True, True)
                            If _DescuentoPorc > 0 Then
                                _New_Fila.Cells("DescuentoPorc").Value = Math.Round(_DescuentoPorc, 2)
                                Sb_Procesar_Datos_De_Grilla(_New_Fila, "DescuentoPorc", True, True)
                            End If
                        End If

                        _Contador += 1
                        Sb_Nueva_Linea(_CodLista)

                    End If

                End If

            Next

            Dim _DsctoGlobal = 0
            Dim _RecarGlobal = 0

            If Not IsNothing(_Respuesta.DscRcgGlobal) Then

                For Each _Fila As Bk_GenDoc2DTE.DscRcgGlobal In _Respuesta.DscRcgGlobal

                    Dim _TpoMov = _Fila.TpoMov

                    If _TpoMov = "D" Then
                        _DsctoGlobal += 1
                    Else
                        _RecarGlobal += 1
                    End If

                Next

            End If

            If CBool(_DsctoGlobal) Then
                MessageBoxEx.Show(Me, "Existen descuentos globales" & vbCrLf &
                                  "Debe incorporar estos descuento a mano en el documento." & vbCrLf &
                                  "Revise el documento que envia el proveedor", "Descuentos Globales", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
            End If

            If CBool(_RecarGlobal) Then
                MessageBoxEx.Show(Me, "Existen recargos globales" & vbCrLf &
                                  "Debe incorporar estos recargos a mano en el documento." & vbCrLf &
                                  "Revise el documento que envia el proveedor", "Recargos Globales", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)
            End If

            _Reg = Grilla_Detalle.RowCount - 1

            If _Reg <> _Respuesta.Detalle.Count Then
                MessageBoxEx.Show(Me, "No es posible cargar el documento." & vbCrLf &
                                  "Faltan productos que asociar a su código alternativo", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                Sb_Limpiar(ModModalidad_Doc, False)
            End If

        End If

    End Sub

    Function Fx_Incorporar_Permiso_En_Lista_De_Permisos_Al_Documento(_CodPermiso As String, _Koen As String, _Suen As String) As Boolean

        Dim _Row_Usuario_Autoriza As DataRow
        Dim _Permiso_Presencial As Boolean

        If Not Fx_Tiene_Permiso(Me, _CodPermiso,,,,, _Koen, _Suen,,, _Row_Usuario_Autoriza,,, _Permiso_Presencial) Then
            Return False
        End If

        Dim _NroRemota As String

        If Not IsNothing(_Rows_Info_Remota) Then
            _NroRemota = _Rows_Info_Remota.Item("NroRemota")
        End If

        Dim _CodFuncionario_Autoriza As String = FUNCIONARIO

        If Not IsNothing(_Row_Usuario_Autoriza) Then
            _CodFuncionario_Autoriza = _Row_Usuario_Autoriza.Item("KOFU")
        End If

        Dim _Cl_Permisos_Asociados As New Cl_Permisos_Asociados(_Ds_Matriz_Documentos)
        _Cl_Permisos_Asociados.Fx_Incorporar_Permiso_Al_Documento(_Ds_Matriz_Documentos, _CodPermiso, True, True,
                                                                  _CodFuncionario_Autoriza, _NroRemota, _Permiso_Presencial, True, False)

        Return True

    End Function

    Private Sub Btn_DecimalAgregar_Click(sender As Object, e As EventArgs) Handles Btn_DecimalAgregar.Click

        If _DecimalesGl < 5 Then _DecimalesGl += 1
        Lbl_NroDecimales.Text = FormatNumber(0, _DecimalesGl)
        Dim _Palabra = Letras(_DecimalesGl)
        Lbl_NroDecimales.Tooltip = _Palabra & " decimal(es)"
        Sb_Formato_Grilla_Detalle()

    End Sub

    Private Sub Btn_DecimalRestar_Click(sender As Object, e As EventArgs) Handles Btn_DecimalRestar.Click

        If _DecimalesGl > 0 And _DecimalesGl <= 5 Then _DecimalesGl -= 1
        Lbl_NroDecimales.Text = FormatNumber(0, _DecimalesGl)
        Dim _Palabra = Letras(_DecimalesGl)
        Lbl_NroDecimales.Tooltip = _Palabra & " decimal(es)"
        Sb_Formato_Grilla_Detalle()

    End Sub

    Function Fx_Revisar_Fincred() As Boolean

        Dim _RevFincredEnt As Boolean
        Dim _Revisar_Fincred As Boolean

        If _Global_Row_Configuracion_General.Item("Fincred_Usar") And _Global_Row_Configuracion_Estacion.Item("Fincred_Usar") Then
            _Revisar_Fincred = _TblEncabezado.Rows(0).Item("RevFincred")
            _RevFincredEnt = _TblEncabezado.Rows(0).Item("RevFincredEnt")
        End If

        If Not _RevFincredEnt Then
            Return True
        End If

        Dim _Monto_total_venta As Double = _TblEncabezado.Rows(0).Item("TotalBrutoDoc")

        If Not _Revisar_Fincred Then
            If _TblEncabezado.Rows(0).Item("TotalBrutoDoc") <> _TblEncabezado.Rows(0).Item("MontoFincred") Then
                _Revisar_Fincred = True
                MessageBoxEx.Show(Me, "El Monto revisado por FINCRED cambio." & vbCrLf &
                                  "Se hara una nueva consulta al sistema FINCRED", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Warning)
            End If
        End If

        If _Revisar_Fincred And _Tido = "NVV" Then

            If _Global_Row_Configuracion_General.Item("LasNVVDebenSerHabilitadasParaFacturar") Then

                MessageBoxEx.Show(Me, "Esta nota de venta sera evaluada por FINCRED al momento de ser habilitada para poder ser facturada" & vbCrLf &
                                  "Recuerde que las condiciones de venta podrian cambiar durante esta validación",
                                  "Cliente FINCRED",
                                  MessageBoxButtons.OK, MessageBoxIcon.Exclamation)

            Else

                Dim _Fincred_Respuesta As New Fincred_API.Respuesta

                _Fincred_Respuesta = Fx_Vaidar_Fincred(0, _Tido, "XXXXXXXXXX",
                                                       _RowEntidad.Item("Rut"),
                                                       _Row_Encabezado_Doc.Item("TotalBrutoDoc"),
                                                       _Row_Encabezado_Doc.Item("Fecha_1er_Vencimiento"),
                                                       _RowEntidad.Item("FOEN").ToString.Trim)

                _TblEncabezado.Rows(0).Item("MontoFincred") = _TblEncabezado.Rows(0).Item("TotalBrutoDoc")
                _TblEncabezado.Rows(0).Item("RevFincred") = False

                If _Fincred_Respuesta.EsCorrecto Then

                    _TblEncabezado.Rows(0).Item("IdFincred") = _Fincred_Respuesta.Id_TramaRespuesta

                    MessageBoxEx.Show(Me, _Fincred_Respuesta.TramaRespuesta.descripcion_negacion & vbCrLf &
                                          "Código de autorización: " & _Fincred_Respuesta.TramaRespuesta.documentos(0).autorizacion,
                                          "Validación FINCRED", MessageBoxButtons.OK, MessageBoxIcon.Information)
                Else
                    MessageBoxEx.Show(Me, "Código de autorización: RECHAZADO" & vbCrLf &
                                      "Respuesta FINCRED: " & _Fincred_Respuesta.MensajeError & vbCrLf & vbCrLf &
                                      "El documento debera seguir el conducto regular, se quitaran los plazos de vencimineto" & vbCrLf &
                                      "Para continuar debera volver a GRABAR el documento",
                                      "Validación FINCRED", MessageBoxButtons.OK, MessageBoxIcon.Stop)

                    _TblEncabezado.Rows(0).Item("IdFincred") = _Fincred_Respuesta.Id_TramaRespuesta
                    _TblEncabezado.Rows(0).Item("FechaEmision") = _TblEncabezado.Rows(0).Item("FechaEmision")
                    _TblEncabezado.Rows(0).Item("Fecha_1er_Vencimiento") = _TblEncabezado.Rows(0).Item("FechaEmision")
                    _TblEncabezado.Rows(0).Item("FechaUltVencimiento") = _TblEncabezado.Rows(0).Item("FechaEmision")
                    _TblEncabezado.Rows(0).Item("Cuotas") = 0
                    _TblEncabezado.Rows(0).Item("Dias_1er_Vencimiento") = 0
                    _TblEncabezado.Rows(0).Item("Dias_Vencimiento") = 0

                    Return False

                End If

            End If

        End If

        Return True

    End Function

    Private Sub Btn_ProximasRecepciones_Click(sender As Object, e As EventArgs) Handles Btn_ProximasRecepciones.Click

        If Not Fx_Tiene_Permiso(Me, "Doc00160") Then
            Return
        End If

        Dim _Fila As DataGridViewRow = Grilla_Detalle.CurrentRow
        Dim _Codigo As String = _Fila.Cells("Codigo").Value

        If _Tido = "NVI" Then

            Consulta_sql = "Select Distinct EMPRESA+KOSU+KOBO As Cod,* From TABBO" & vbCrLf &
                           "Where EMPRESA+KOSU+KOBO" & vbCrLf &
                           "In (" & vbCrLf &
                           "Select SUBSTRING(CodPermiso, 5, 10)" & vbCrLf &
                           "From " & _Global_BaseBk & "ZW_PermisosVsUsuarios" & vbCrLf &
                           "Where CodUsuario = '" & FUNCIONARIO & "'" & Space(1) &
                           "And CodPermiso In (Select CodPermiso From " & _Global_BaseBk & "ZW_Permisos Where CodFamilia = 'Bodega_NVI'))" & vbCrLf &
                           "Or (EMPRESA = '" & ModEmpresa_Doc & "' And KOSU = '" & Mod_Sucursal & "' And KOBO = '" & Mod_Bodega & "')"

        Else

            Consulta_sql = "Select Distinct EMPRESA+KOSU+KOBO As Cod,* From TABBO" & vbCrLf &
                           "Where EMPRESA+KOSU+KOBO" & vbCrLf &
                           "In (" & vbCrLf &
                           "Select SUBSTRING(CodPermiso, 3, 10)" & vbCrLf &
                           "From " & _Global_BaseBk & "ZW_PermisosVsUsuarios" & vbCrLf &
                           "Where CodUsuario = '" & FUNCIONARIO & "'" & Space(1) &
                           "And CodPermiso In (Select CodPermiso From " & _Global_BaseBk & "ZW_Permisos Where CodFamilia = 'Bodega'))" & vbCrLf &
                           "Or (EMPRESA = '" & ModEmpresa_Doc & "' And KOSU = '" & Mod_Sucursal & "' And KOBO = '" & Mod_Bodega & "')"

        End If

        Dim _Tbl_Bodegas As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

        Dim _Filtro As String = Generar_Filtro_IN(_Tbl_Bodegas, "", "Cod", False, False, "'")


        Consulta_sql = "Select *" & vbCrLf &
                       "From MAEDDO Where TIDO In ('FCC','OCC') And KOPRCT = '" & _Codigo & "' And ESLIDO = ''" & vbCrLf &
                       "And EMPRESA+SULIDO+BOSULIDO In " & _Filtro
        Dim _Tbl_Documentos As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

        If Not CBool(_Tbl_Documentos.Rows.Count) Then
            MessageBoxEx.Show(Me, "No hay pedidos pendientes por recepcionar para este producto", "Información",
                              MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        Dim Fm As New Frm_ComprasSinRecepcionar(_Codigo)
        Fm.Tido = _Tido
        Fm.ShowDialog(Me)
        Fm.Dispose()

    End Sub

    Function Fx_Revisar_MinimoCompra() As Boolean

        If _Tido = "OCC" Then

            If _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Entidades", "MontoMinCompra") Then

                Dim _MontoMinCompra As Double = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_Entidades", "MontoMinCompra",
                                                                   "CodEntidad = '" & _RowEntidad.Item("KOEN") & "' And CodSucEntidad = '" & _RowEntidad.Item("SUEN") & "'", True)

                If CBool(_MontoMinCompra) Then

                    If _MontoMinCompra > _TblEncabezado.Rows(0).Item("TotalNetoDoc") Then

                        MessageBoxEx.Show(Me, "Total neto bajo el mínimo de compra para este proveedor." & vbCrLf &
                                          "Total neto: " & FormatCurrency(_TblEncabezado.Rows(0).Item("TotalNetoDoc"), 0) &
                                          ", Mínimo de compra: " & FormatCurrency(_MontoMinCompra, 0), "Validación", MessageBoxButtons.OK, MessageBoxIcon.Warning)

                        If Not Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Doc00085", Nothing, "", "") Then
                            Return False
                        End If

                    End If

                End If

            End If

        End If

        Return True

    End Function

    Sub Sb_AgregarDsctoXPuntos()

        If _Revision_Remota Or Not _Sql.Fx_Existe_Tabla(_Global_BaseBk & "Zw_PtsVta_Doc") Then
            Return
        End If

        If _Tido <> "FCV" And _Tido <> "BLV" And _Tido <> "NVV" Then
            Return
        End If

        Dim _Cl_Puntos As New Cl_Puntos
        _Cl_Puntos.Zw_PtsVta_Configuracion = _Cl_Puntos.Fx_Llenar_Zw_PtsVta_Configuracion(ModEmpresa_Doc)

        If IsNothing(_Cl_Puntos.Zw_PtsVta_Configuracion) Then
            Return
        End If

        If Not _Cl_Puntos.Zw_PtsVta_Configuracion.Activo Then
            Return
        End If

        Dim _CodEntidad As String = _TblEncabezado.Rows(0).Item("CodEntidad")
        Dim _CodSucEntidad As String = _TblEncabezado.Rows(0).Item("CodSucEntidad")

        Dim _PtsGanados As Double = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_PtsVta_Doc", "SUM(PtsGanados)",
                                    "CodEntidad = '" & _CodEntidad & "' And CodSucEntidad = '" & _CodSucEntidad & "' And Nudonodefi = 0", True)
        Dim _PtsUsados As Double = _Sql.Fx_Trae_Dato(_Global_BaseBk & "Zw_PtsVta_Doc", "SUM(PtsUsados)",
                                    "CodEntidad = '" & _CodEntidad & "' And CodSucEntidad = '" & _CodSucEntidad & "'", True)

        Dim _Puntos As Double = Math.Round(_PtsGanados - _PtsUsados)

        If _Puntos <= 0 Then
            Return
        End If

        For Each _Fila As DataGridViewRow In Grilla_Detalle.Rows
            If _Fila.Cells("Espuntosvta").Value Then
                Return
            End If
        Next

        If MessageBoxEx.Show(Me, "Tiene " & _Puntos & " puntos acumulados." & vbCrLf & vbCrLf &
                     "¿Desea utilizarlos en esta compra?", "SISTEMA DE PUNTOS", vbYesNo, vbQuestion) <> DialogResult.Yes Then
            Return
        End If

        Dim _Mensaje As LsValiciones.Mensajes

        _Mensaje = Fx_AgregarDescuentoXPuntos(_Puntos)

        If Not _Mensaje.EsCorrecto Then
            MessageBoxEx.Show(Me, _Mensaje.Mensaje, _Mensaje.Detalle, MessageBoxButtons.OK, MessageBoxIcon.Stop)
        End If

    End Sub

    Function Fx_AgregarDescuentoXPuntos(_Puntos As Double) As LsValiciones.Mensajes

        Dim _Mensaje As New LsValiciones.Mensajes

        Try

            If Not _Sql.Fx_Existe_Tabla(_Global_BaseBk & "Zw_PtsVta_Configuracion") Then
                _Mensaje.Detalle = "Validación"
                Throw New ArgumentException("No existe tabla Zw_PtsVta_Configuracion en base de datos de Bakapp")
            End If

            Consulta_sql = "Select * From " & _Global_BaseBk & "Zw_PtsVta_Configuracion Where Empresa = '" & ModEmpresa_Doc & "'"
            Dim _Row_ConfPuntos As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql, False)

            If Not String.IsNullOrWhiteSpace(_Sql.Pro_Error) Then
                _Mensaje.Detalle = "Error Sql"
                _Mensaje.Resultado = Consulta_sql
                Throw New ArgumentException(_Sql.Pro_Error)
            End If

            If IsNothing(_Row_ConfPuntos) Then
                _Mensaje.Detalle = "Validación"
                Throw New ArgumentException("No existe configuración en tabla Zw_PtsVta_Configuracion")
            End If

            Dim _Koct As String = _Row_ConfPuntos.Item("Concepto")

            Consulta_sql = "Select * From TABCT Where KOCT = '" & _Koct & "'"
            Dim _RowConcepto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            If IsNothing(_RowConcepto) Then
                _Mensaje.Detalle = "Validación"
                Throw New ArgumentException("No existe el concepto " & _Koct & vbCrLf & "Informe de esto al administrador del sistema")
            End If

            Dim _DescuentoValor As Double = (_Puntos / _Row_ConfPuntos.Item("RCadaPuntos")) * _Row_ConfPuntos.Item("REquivPesos")

            For Each _Fila As DataRow In _TblDetalle.Rows

                If _Fila.Item("Codigo") = _Koct Then
                    _Mensaje.Detalle = "Validación"
                    Throw New ArgumentException("Los puntos ya estan siendo utilizados en este documento")
                End If

            Next

            Sb_Nueva_Linea(_TblEncabezado.Rows(0).Item("ListaPrecios"))

            Dim _New_Fila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.RowCount - 1)

            Sb_Agregar_Concepto(_New_Fila, _RowConcepto)

            _New_Fila.Cells("DescuentoValor").Value = _DescuentoValor
            _New_Fila.Cells("Espuntosvta").Value = True

            Sb_Procesar_Datos_De_Grilla(_New_Fila, "DescuentoValor", False, False, True)

            _Mensaje.EsCorrecto = True
            'Throw New ArgumentException("Error")

        Catch ex As Exception
            _Mensaje.Mensaje = ex.Message
        End Try

        Return _Mensaje

    End Function

    Function Fx_SolicitarTipoVenta() As LsValiciones.Mensajes

        Dim _Mensaje As New LsValiciones.Mensajes

        Try

            Dim _Sql_Filtro_Condicion_Extra = "And KOTABLA = 'CLALIBPR'"

            Dim _Filtrar As New Clas_Filtros_Random(Me)
            _Filtrar.Pro_Nombre_Encabezado_Informe = "SELECCIONE EL TIPO DE VENTA"

            If _Filtrar.Fx_Filtrar(Nothing,
                               Clas_Filtros_Random.Enum_Tabla_Fl._Tabla_Tabcarac, _Sql_Filtro_Condicion_Extra, False, False, True) Then

                Dim _Codigo = _Filtrar.Pro_Tbl_Filtro.Rows(0).Item("Codigo")
                Dim _Descripcion = _Filtrar.Pro_Tbl_Filtro.Rows(0).Item("Descripcion").ToString.Trim

                _TblEncabezado.Rows(0).Item("TblTipoVenta") = "CLALIBPR"
                _TblEncabezado.Rows(0).Item("CodTipoVenta") = _Codigo

                _Mensaje.EsCorrecto = True
                _Mensaje.Detalle = "Selección"
                _Mensaje.Mensaje = "Clasificación seleccionada: " & _Descripcion
                _Mensaje.Icono = MessageBoxIcon.Information
                Lbl_TipoVenta.Text = "Tipo de venta: " & _Descripcion

            Else

                Throw New System.Exception("Debe seleccionar un tipo de venta")

            End If

        Catch ex As Exception
            _Mensaje.Detalle = "Error en proceso de selección"
            _Mensaje.Mensaje = ex.Message
            _Mensaje.Icono = MessageBoxIcon.Stop
        End Try

        Return _Mensaje

    End Function

    Private Sub Btn_CambiarTipoVenta_Click(sender As Object, e As EventArgs) Handles Btn_CambiarTipoVenta.Click

        If Not CBool(_TblDetalle.Rows(0).Item("Nuevo_Producto")) Then
            MessageBoxEx.Show(Me, "Ya existen registros en el detalle" & vbCrLf &
                              "Debe quitar los productos del detalle para poder hacer esta gestión",
                              "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        Dim _Mensaje As LsValiciones.Mensajes = Fx_SolicitarTipoVenta()

        If Not _Mensaje.EsCorrecto Then
            Return
        End If

        MessageBoxEx.Show(Me, _Mensaje.Mensaje, _Mensaje.Detalle, MessageBoxButtons.OK, _Mensaje.Icono)

    End Sub

    Function Fx_RevisarTipoVenta(_Clalibpr As String) As LsValiciones.Mensajes

        Dim _Mensaje As New LsValiciones.Mensajes

        Try

            Dim _CodTipoVenta = _TblEncabezado.Rows(0).Item("CodTipoVenta").ToString.Trim
            Dim _NombreTipo2 As String = _Sql.Fx_Trae_Dato("TABCARAC", "NOKOCARAC", "KOTABLA = 'CLALIBPR' And KOCARAC = '" & _CodTipoVenta & "'")

            If String.IsNullOrEmpty(_Clalibpr.Trim) Then
                _Mensaje.Detalle = "Validación"
                Throw New System.Exception("Este producto no tiene Clasificación libre" & vbCrLf &
                                           "El tipo de producto a vender debe ser: " & _NombreTipo2)
            End If

            If _TblEncabezado.Rows(0).Item("TblTipoVenta").ToString.Trim = "CLALIBPR" AndAlso _CodTipoVenta <> _Clalibpr Then

                Dim _NombreTipo1 As String = _Sql.Fx_Trae_Dato("TABCARAC", "NOKOCARAC", "KOTABLA = 'CLALIBPR' And KOCARAC = '" & _Clalibpr & "'")

                _Mensaje.Detalle = "Validación"
                Throw New System.Exception("Este producto es de tipo: " & _NombreTipo1 & vbCrLf &
                                   "El tipo de producto a vender debe ser: " & _NombreTipo2)


            End If

            _Mensaje.EsCorrecto = True

        Catch ex As Exception
            If String.IsNullOrEmpty(_Mensaje.Detalle) Then _Mensaje.Detalle = "Problema!"
            _Mensaje.Mensaje = ex.Message
            _Mensaje.Icono = MessageBoxIcon.Stop
        End Try

        Return _Mensaje

    End Function

    Sub Sb_RevisarListaSuperior()

        If _Cl_DocListaSuperior.UsarVencListaPrecios Then

            Dim _TotalNetoListaSuperior As Double = _Cl_DocListaSuperior.ObtenerSumaTotales

            Dim _Msj As LsValiciones.Mensajes

            _Msj = _Cl_DocListaSuperior.Fx_RevisarVentasDelMes(_TblEncabezado.Rows(0).Item("CodEntidad"), _TotalNetoListaSuperior)

            If _Msj.EsCorrecto Then

                If _Cl_DocListaSuperior.ListaSuperiorUtilizada Then
                    Return
                End If

                MessageBoxEx.Show(Me, "Puede pasar a una lista con mejor precio." & vbCrLf & vbCrLf &
                                  "Venta de mes en curso : " & FormatCurrency(_Msj.Tag, 0) & vbCrLf &
                                  "Venta lista superior seria de " & FormatCurrency(_TotalNetoListaSuperior, 0) & vbCrLf &
                                  "Total de eventual venta mensual: " & FormatCurrency(_Msj.Tag + _TotalNetoListaSuperior, 0),
                                  "Lista Superior", MessageBoxButtons.OK, MessageBoxIcon.Information)

                For Each _Fl As DataGridViewRow In Grilla_Detalle.Rows

                    Dim _Id = _Fl.Index
                    Dim _Registro As Cl_LsDetalle = _Cl_DocListaSuperior.LsDetalleLpSuperior.FirstOrDefault(Function(r) r.Id = _Id)

                    If _Registro IsNot Nothing Then

                        _Fl.Cells("CodLista").Value = _Registro.Lista
                        _Fl.Cells("PrecioNetoUdLista").Value = _Registro.PrecioNetoUdLista
                        _Fl.Cells("PrecioBrutoUdLista").Value = _Registro.PrecioBrutoUdLista
                        _Fl.Cells("Precio").Value = _Registro.Precio
                        Sb_Procesar_Datos_De_Grilla(_Fl, "Precio", False, False)

                    End If

                    _Cl_DocListaSuperior.ListaSuperiorUtilizada = True

                Next

                Return

            Else

                If _Cl_DocListaSuperior.ListaSuperiorUtilizada Then

                    MessageBoxEx.Show(Me, _Msj.Mensaje & vbCrLf &
                                      "Se restablecerán los precios correspondientes a su lista : " & _Cl_DocListaSuperior.ListaEntidad,
                                      _Msj.Detalle, MessageBoxButtons.OK, _Msj.Icono)

                    For Each _Fl As DataGridViewRow In Grilla_Detalle.Rows

                        Dim _Id = _Fl.Index
                        Dim _Registro As Cl_LsDetalle

                        _Registro = _Cl_DocListaSuperior.LsDetalleLpEntidad.FirstOrDefault(Function(r) r.Id = _Id)

                        If _Registro IsNot Nothing Then

                            _Fl.Cells("CodLista").Value = _Registro.Lista
                            _Fl.Cells("PrecioNetoUdLista").Value = _Registro.PrecioNetoUdLista
                            _Fl.Cells("PrecioBrutoUdLista").Value = _Registro.PrecioBrutoUdLista
                            _Fl.Cells("Precio").Value = _Registro.PrecioNetoUdLista
                            Sb_Procesar_Datos_De_Grilla(_Fl, "Precio", False, False)

                        End If

                        _Registro = _Cl_DocListaSuperior.LsDetalleLpSuperior.FirstOrDefault(Function(r) r.Id = _Id)

                        If _Registro IsNot Nothing Then

                            _Registro.Precio = _Registro.PrecioNetoUdLista

                        End If

                        _Cl_DocListaSuperior.ListaSuperiorUtilizada = False

                    Next

                    Return

                End If

            End If

        End If

    End Sub


    Function Fx_AgregarPallet()

        If _Revision_Remota Then
            Return True
        End If

        If Not _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Configuracion", "InsertarPalletAuto") Then
            Return True
        End If

        If Not _Global_Row_Configuracion_Estacion.Item("InsertarPalletAuto") Then
            Return True
        End If

        Dim _TidoPalletAuto As String = _Global_Row_Configuracion_Estacion.Item("TidoPalletAuto")

        If Not _TidoPalletAuto.Contains(_Tido) Then '_Tido <> "FCV" And _Tido <> "GDV" And _Tido <> "BLV" Then
            Return True
        End If

        Dim _CodigoPallet As String = _Global_Row_Configuracion_Estacion.Item("CodigoPrPallet")
        Dim _ContienePallet As Boolean

        Dim _Ud = _Global_Row_Configuracion_Estacion.Item("UdRevCantIngrePallet")
        Dim _Cantidad As Double = 0

        For Each _Fila As DataRow In _TblDetalle.Rows

            If Not CBool(_Fila.Item("Prct")) Then
                _Cantidad += _Fila.Item("CantUd" & _Ud)
            End If

            Dim _Codigo As String = _Fila.Item("Codigo")

            If _Codigo.Trim = _CodigoPallet.Trim Then
                _ContienePallet = True
            End If

        Next

        Dim _CantPregIngrePallet As Double = _Global_Row_Configuracion_Estacion.Item("CantPregIngrePallet")

        If _Cantidad < _CantPregIngrePallet Or _ContienePallet Then
            Return True
        End If

        'Sumar las cantidades de la unidad 1 y si es mas de lo que se requiere para preguntar por la cantidad de Pallet hacerlo
        'si la cantidad es insuficiente salir y continuar

        Dim _Msg1 = "¿Cliente retira PALLETS?"
        Dim _Msg2 = vbCrLf & "Elija su opción."

        Dim _Mensaje As LsValiciones.Mensajes

        _Mensaje = Fx_Confirmar_LecturaSINO(_Msg1, _Msg2, eTaskDialogIcon.Flag)

        If _Mensaje.Resultado <> "Yes" Then
            If _Mensaje.Cerrar Then
                Return False
            Else
                Return True
            End If
        End If

        'If Not Fx_Confirmar_Lectura(_Msg1, _Msg2, eTaskDialogIcon.Exclamation) Then
        '    Return False
        'End If


        'If MessageBoxEx.Show(Me, "¿Desea agregar los PALLETS?", "Ingresar Pallet",
        '                     MessageBoxButtons.YesNo, MessageBoxIcon.Question) <> DialogResult.Yes Then
        '    Return True
        'End If

        _Mensaje = Fx_AgregarPallet(_CodigoPallet)

        If _Mensaje.Cancelado Then
            Return False
        End If

        'If Not _Mensaje.EsCorrecto Then
        MessageBoxEx.Show(Me, _Mensaje.Mensaje, _Mensaje.Detalle, MessageBoxButtons.OK, _Mensaje.Icono)
        'End If

        Return True

    End Function

    Private Sub Btn_Editar_Cotizacion_Click(sender As Object, e As EventArgs) Handles Btn_Editar_Cotizacion.Click

        Dim _Vizado = _TblEncabezado.Rows(0).Item("Vizado")
        Dim _Koen = _TblEncabezado.Rows(0).Item("CodEntidad")
        Dim _Suen = _TblEncabezado.Rows(0).Item("CodSucEntidad")

        If Not _Vizado Then

            'If Fx_Agregar_Permiso_Otorgado_Al_Documento(Me, _TblPermisos, "Bkp00058", Nothing, _Koen, _Suen) Then

            Sb_Buscar_Documento("COV", True, "")

            If _Editar_documento And SoloprodEnDoc_CLALIBPR Then

                Dim _Codigo As String = _TblDetalle.Rows(0).Item("Codigo")
                Dim _Clalibpr As String = _Sql.Fx_Trae_Dato("MAEPR", "CLALIBPR", "KOPR = '" & _Codigo & "'")
                Dim _Descripcion As String = _Sql.Fx_Trae_Dato("TABCARAC", "NOKOCARAC", "KOTABLA = 'CLALIBPR' And KOCARAC = '" & _Clalibpr & "'")

                _TblEncabezado.Rows(0).Item("TblTipoVenta") = "CLALIBPR"
                _TblEncabezado.Rows(0).Item("CodTipoVenta") = _Clalibpr
                Lbl_TipoVenta.Text = "Tipo de venta: " & _Descripcion

            End If

            'End If

        Else
            MessageBoxEx.Show(Me, "DOCUMENTO VISADO", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, Me.TopMost)
        End If

    End Sub

    Function Fx_AgregarPallet(_Codigo As String) As LsValiciones.Mensajes

        Dim _Mensaje As New LsValiciones.Mensajes

        Try

            Consulta_sql = "Select * From MAEPR Where KOPR = '" & _Codigo & "'"
            Dim _RowProducto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

            If IsNothing(_RowProducto) Then
                _Mensaje.Detalle = "Validación"
                Throw New ArgumentException("No existe el producto: " & _Codigo & vbCrLf &
                                            "Informe de esto al administrador del sistema")
            End If

            Dim _Cantidad As Integer
            Dim _Cancelado As Boolean
            Dim _Aceptar As Boolean = InputBox_Bk(Me, "Ingrese la cantidad de Pallet", "Ingresar Pallet",
                                                  _Cantidad, False,, 2, True, _Tipo_Imagen.Product,,
                                                  _Tipo_Caracter.Solo_Numeros_Enteros, False,,,,, , _Cancelado)

            If Not _Aceptar Then
                _Mensaje.Detalle = "Validación"
                _Mensaje.Cancelado = _Cancelado
                Throw New ArgumentException("Debe ingresar una cantidad de Pallet")
            End If

            _Cl_Pallet.Codigo = _Codigo
            _Cl_Pallet.Cantidad = _Cantidad
            _Cl_Pallet.Pallet = True

            If _RowEntidadBakapp.Item("NoCobrarPallet") Then

                'MessageBoxEx.Show(Me, "Los pallets se añadirán en la anotaciones tabuldas, pero no se cobrarán a este cliente.",
                '                  "Cliente con exclusión para cobrar Pallet",
                '                  MessageBoxButtons.OK, MessageBoxIcon.Information)

                _Mensaje.Detalle = "Cliente con exclusión para cobrar Pallet"
                _Mensaje.Mensaje = "Los pallets se añadirán en la anotaciones tabuldas, pero no se cobrarán a este cliente."

            Else

                Sb_Nueva_Linea(_TblEncabezado.Rows(0).Item("ListaPrecios"))

                Dim _New_Fila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.RowCount - 1)
                Dim _Indice As Integer = _New_Fila.Index ' Grilla_Detalle.CurrentRow.Index

                _New_Fila.Cells("EsPallet").Value = True

                Sb_Traer_Producto_A_La_Nueva_Fila(_New_Fila, _RowProducto, _Indice)

                _New_Fila.Cells("Cantidad").Value = _Cantidad

                Sb_Procesar_Datos_De_Grilla(_New_Fila, "Cantidad", False, False, True)

                _Mensaje.Detalle = "Agregar Pallet"
                _Mensaje.Mensaje = "Pallet agregado con exito al final del detalle del documento"

            End If

            _Mensaje.EsCorrecto = True
            _Mensaje.Icono = MessageBoxIcon.Information

        Catch ex As Exception
            _Mensaje.EsCorrecto = False
            _Mensaje.Detalle = "Pallet no agregado"
            _Mensaje.Mensaje = ex.Message
            _Mensaje.Icono = MessageBoxIcon.Stop
        End Try

        Return _Mensaje

    End Function

    Function Fx_CreditoVigenteVencido(_RowEntidad As DataRow) As Boolean

        If _Sql.Fx_Exite_Campo(_Global_BaseBk & "Zw_Configuracion", "RestringirFechaVencimientoClientes") Then

            If _Global_Row_Configuracion_General.Item("RestringirFechaVencimientoClientes") Then

                Dim _FechaEmision As Date = _TblEncabezado.Rows(0).Item("FechaEmision")
                Dim _Koen As String = _RowEntidad.Item("KOEN")
                Dim _Suen As String = _RowEntidad.Item("SUEN")

                Dim _CRSD = _RowEntidad.Item("CRSD")
                Dim _CRCH = _RowEntidad.Item("CRCH")
                Dim _CRPA = _RowEntidad.Item("CRPA")
                Dim _CRTO = _RowEntidad.Item("CRTO")
                Dim _CRLT = _RowEntidad.Item("CRLT")
                Dim _NUVECR = _RowEntidad.Item("NUVECR")
                Dim _DIASVENCI = _RowEntidad.Item("DIASVENCI")
                Dim _DIPRVE = _RowEntidad.Item("DIPRVE")
                Dim _DIMOPER = _RowEntidad.Item("DIMOPER")

                Dim _Dd As Double = _CRSD + _CRCH + _CRPA + _CRTO + _CRLT + _NUVECR + _DIASVENCI + _DIPRVE + _DIMOPER

                If IsNothing(_RowEntidad.Item("FEVECREN")) Or IsDBNull(_RowEntidad.Item("FEVECREN")) Then
                    Try
                        _RowEntidad.Item("FEVECREN") = _RowEntidad.Item("FECREEN")
                    Catch ex As Exception
                        _RowEntidad.Item("FEVECREN") = DateAdd(_FechaEmision.Date, DateInterval.Day, -1)
                    End Try
                End If

                If CType(_RowEntidad.Item("FEVECREN"), Date).Date < _FechaEmision.Date And CBool(_Dd) Then

                    Return True

                End If

            End If

        End If

        Return False

    End Function

    Function Fx_RevisarProtestos(_MostrarMensaje As Boolean, _RowEntidad As DataRow) As Boolean

        Dim _Koen As String = _RowEntidad.Item("KOEN")
        Dim _Suen As String = _RowEntidad.Item("SUEN")

        Dim _Mensaje As New LsValiciones.Mensajes

        _Mensaje = Fx_Entidad_Revisar_Protestos(_Koen)

        If Not _Mensaje.EsCorrecto Then

            If _MostrarMensaje Then

                If MessageBoxEx.Show(Me, _Mensaje.Mensaje & vbCrLf & vbCrLf &
                                  "¿Desea ver el detalle?", "Validación",
                                  MessageBoxButtons.YesNo, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost) = DialogResult.Yes Then

                    Dim Fm As New Frm_InfoEnt_Protestos(_Mensaje.Tag)
                    Fm.ShowDialog(Me)
                    Fm.Dispose()

                End If

            End If

            Return False

        End If

        Return True

    End Function

    Private Sub Btn_Container_Asociar_Click(sender As Object, e As EventArgs) Handles Btn_Container_Asociar.Click

        If Not Fx_Revisar_encabezado() Then
            Return
        End If

        Dim _IdCont = _Zw_Contenedor.IdCont

        If CBool(_IdCont) Then
            MessageBoxEx.Show(Me, "Ya hay un contenedor asociado" & vbCrLf &
                              "Contenedor: " & _Zw_Contenedor.Contenedor & " - " & _Zw_Contenedor.NombreContenedor,
                              "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        Sb_Asociar_Contenedor()

    End Sub

    Private Sub Btn_Container_Ver_Click(sender As Object, e As EventArgs) Handles Btn_Container_Ver.Click

        Dim _IdCont = _Zw_Contenedor.IdCont

        If Not CBool(_IdCont) Then
            MessageBoxEx.Show(Me, "No hay un contenedor asociado", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        Dim Fm As New Frm_CrearContenedor(_IdCont)
        Fm.Btn_Eliminar.Enabled = False
        Fm.ShowDialog(Me)
        If Fm.Grabar Then
            _Zw_Contenedor = Fm.Zw_Contenedor
        End If
        Fm.Dispose()

    End Sub

    Private Sub Btn_Container_Quitar_Click(sender As Object, e As EventArgs) Handles Btn_Container_Quitar.Click

        Dim _IdCont = _Zw_Contenedor.IdCont

        If Not CBool(_IdCont) Then
            MessageBoxEx.Show(Me, "No hay un contenedor asociado", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        If MessageBoxEx.Show(Me, "¿Esta seguro de querer quitar el contenedor?" & vbCrLf &
                             "Contenedor: " & _Zw_Contenedor.Contenedor & " - " & _Zw_Contenedor.NombreContenedor,
                             "Quitar contenedor", MessageBoxButtons.YesNo, MessageBoxIcon.Question) <> DialogResult.Yes Then
            Return
        End If

        Dim _Cl_Contenedor As New Cl_Contenedor
        _Cl_Contenedor.Fx_Soltar_Contenedor_Tomado(_Zw_Contenedor)
        _Zw_Contenedor = New Zw_Contenedor

    End Sub

    Private Sub Btn_Contenedor_Click(sender As Object, e As EventArgs) Handles Btn_Contenedor.Click

        Dim _IdCont As Integer = _TblEncabezado.Rows(0).Item("IdCont")

        Btn_Contenedor_Asociar.Visible = Not CBool(_IdCont)
        Btn_Contenedor_Quitar.Visible = CBool(_IdCont)
        Btn_Contenedor_Ver.Visible = CBool(_IdCont)

        ShowContextMenu(Menu_Contextual_Contenedor)

    End Sub

    Private Sub Btn_Contenedor_Asociar_Click(sender As Object, e As EventArgs) Handles Btn_Contenedor_Asociar.Click

        Dim _IdCont As Integer = _TblEncabezado.Rows(0).Item("IdCont")

        Dim _Cl_Contenedor As New Cl_Contenedor

        If CBool(_IdCont) Then

            _Cl_Contenedor.Zw_Contenedor = _Cl_Contenedor.Fx_Llenar_Contenedor(_IdCont)

            MessageBoxEx.Show(Me, "Ya hay un contenedor asociado" & vbCrLf &
                              "Contenedor: " & _Cl_Contenedor.Zw_Contenedor.Contenedor & " - " & _Cl_Contenedor.Zw_Contenedor.NombreContenedor,
                              "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return

        End If

        Dim Fm As New Frm_Contenedores
        Fm.ModoSeleccion_Compra = (_Tido = "OCC")
        Fm.ModoSeleccion_Venta = (_Tido = "COV")
        Fm.SeleccionarSoloConProdDisponibles = True
        Fm.ShowDialog(Me)
        _Cl_Contenedor.Zw_Contenedor = Fm.Zw_Contenedor
        Fm.Dispose()

        If CBool(_Cl_Contenedor.Zw_Contenedor.IdCont) Then

            _TblEncabezado.Rows(0).Item("IdCont") = _Cl_Contenedor.Zw_Contenedor.IdCont
            _TblEncabezado.Rows(0).Item("Contenedor") = _Cl_Contenedor.Zw_Contenedor.Contenedor

            _Cl_Contenedor.Fx_Tomar_Contenedor(_Cl_Contenedor.Zw_Contenedor)

            MessageBoxEx.Show(Me, "Contenedor asociado correctamente" & vbCrLf &
                                  "Contenedor: " & _Cl_Contenedor.Zw_Contenedor.Contenedor & " - " & _Cl_Contenedor.Zw_Contenedor.NombreContenedor,
                                  "Asociar contenedor", MessageBoxButtons.OK, MessageBoxIcon.Information)

        End If

    End Sub

    Private Sub Btn_Contenedor_Ver_Click(sender As Object, e As EventArgs) Handles Btn_Contenedor_Ver.Click

        Dim _IdCont As Integer = _TblEncabezado.Rows(0).Item("IdCont")

        If Not CBool(_IdCont) Then
            MessageBoxEx.Show(Me, "No hay un contenedor asociado", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        Dim Fm As New Frm_CrearContenedor(_IdCont)
        Fm.Btn_Eliminar.Enabled = False
        Fm.Btn_Grabar.Enabled = False
        Fm.ShowDialog(Me)
        Fm.Dispose()

    End Sub

    Private Sub Btn_Contenedor_Quitar_Click(sender As Object, e As EventArgs) Handles Btn_Contenedor_Quitar.Click

        If Fx_Revisar_si_tiene_registros(False) Then
            MessageBoxEx.Show(Me, "No es posible quitar el contenedor mientras existan productos en el detalle. " & vbCrLf &
                              "Por favor, elimine los productos antes de continuar.",
                              "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        Dim _IdCont As Integer = _TblEncabezado.Rows(0).Item("IdCont")

        Dim _Cl_Contenedor As New Cl_Contenedor

        If Not CBool(_IdCont) Then

            MessageBoxEx.Show(Me, "No hay un contenedor asociado", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return

        End If

        _Cl_Contenedor.Zw_Contenedor = _Cl_Contenedor.Fx_Llenar_Contenedor(_IdCont)

        If MessageBoxEx.Show(Me, "¿Esta seguro de querer quitar el contenedor?" & vbCrLf &
                             "Contenedor: " & _Cl_Contenedor.Zw_Contenedor.Contenedor & " - " & _Cl_Contenedor.Zw_Contenedor.NombreContenedor,
                             "Quitar contenedor", MessageBoxButtons.YesNo, MessageBoxIcon.Question) <> DialogResult.Yes Then
            Return
        End If

        _Cl_Contenedor.Fx_Soltar_Contenedor_Tomado()

        _TblEncabezado.Rows(0).Item("IdCont") = 0
        _TblEncabezado.Rows(0).Item("Contenedor") = String.Empty

    End Sub

    Function Fx_CargarProductoDesdeContenedor() As PreVenta.Cl_PreVenta_Producto

        Dim _Cl_PreVenta_Producto As New PreVenta.Cl_PreVenta_Producto

        Try

            Dim _IdCont As Integer = _TblEncabezado.Rows(0).Item("IdCont")
            Dim _Cl_Contenedor As New Cl_Contenedor

            Dim _RowProducto As DataRow

            _Cl_Contenedor.Zw_Contenedor = _Cl_Contenedor.Fx_Llenar_Contenedor(_IdCont)

            Dim Fm As New Frm_PreVenta_Productos(ModEmpresa_Doc,
                                                   _Cl_Contenedor.Zw_Contenedor.IdCont,
                                                   _Cl_Contenedor.Zw_Contenedor.Contenedor)
            Fm.ModoSeleccion = True
            Fm.ShowDialog(Me)
            _RowProducto = Fm.RowProducto
            _Cl_PreVenta_Producto.Zw_PreVenta_StockProd = Fm._Zw_PreVenta_StockProd
            Fm.Dispose()

            If IsNothing(_RowProducto) Then
                _Cl_PreVenta_Producto.Mensaje.Detalle = "Validación"
                _Cl_PreVenta_Producto.Mensaje.Mensaje = "No se seleccionó ningún producto del contenedor"
                _Cl_PreVenta_Producto.Mensaje.Icono = MessageBoxIcon.Stop
                _Cl_PreVenta_Producto.Mensaje.Cancelado = True
                Return _Cl_PreVenta_Producto
            End If

            _Cl_PreVenta_Producto.Mensaje.EsCorrecto = True
            _Cl_PreVenta_Producto.Mensaje.Detalle = "Producto seleccionado"
            _Cl_PreVenta_Producto.Mensaje.Mensaje = "Producto seleccionado desde el contenedor: " & _Cl_Contenedor.Zw_Contenedor.Contenedor
            _Cl_PreVenta_Producto.Mensaje.Icono = MessageBoxIcon.Information
            _Cl_PreVenta_Producto.RowProducto = _RowProducto

        Catch ex As Exception

        End Try

        Return _Cl_PreVenta_Producto

    End Function

    Function Fx_CargarProductoDesdeSobreStock() As LsValiciones.Mensajes

        Dim _Zw_Prod_SobreStock As New Zw_Prod_SobreStock
        Dim _Seleccionado As Boolean
        Dim _Mensaje As New LsValiciones.Mensajes

        Try

            Dim Fm As New Frm_SobreStock_Productos
            Fm.ModoSeleccion = True
            Fm.ShowDialog(Me)
            _Zw_Prod_SobreStock = Fm.Zw_Prod_SobreStock
            _Seleccionado = Fm.Seleccionado
            Fm.Dispose()

            If Not _Seleccionado Then
                Throw New System.Exception("No se seleccionó ningún producto")
            End If

            _Mensaje.EsCorrecto = True
            _Mensaje.Detalle = "Producto seleccionado"
            _Mensaje.Mensaje = "Producto seleccionado correctamente"
            _Mensaje.Tag = _Zw_Prod_SobreStock
            _Mensaje.Icono = MessageBoxIcon.Information

        Catch ex As Exception
            _Mensaje.EsCorrecto = False
            _Mensaje.Detalle = "Validación"
            _Mensaje.Mensaje = ex.Message
            _Mensaje.Icono = MessageBoxIcon.Stop
        End Try

        Return _Mensaje

    End Function

    Private Sub Chk_Pickear_CheckedChanged(sender As Object, e As EventArgs) Handles Chk_Pickear.CheckedChanged

        If Not _RevisandoBotonesActivos AndAlso
            Not Chk_Pickear.Checked AndAlso
            _Global_Row_Configuracion_General.Item("Pickear_NVVTodas") Then

            Dim _Msj As String = "Si no cuenta con el permiso para grabar un documento sin Pickear, " &
                                 "este será solicitado al finalizar el documento para completar la acción."
            _Msj = Fx_AjustarTexto(_Msj, 80)

            MessageBoxEx.Show(Me, _Msj, "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)

        End If

        _TblEncabezado.Rows(0).Item("Pickear") = Chk_Pickear.Checked

    End Sub

    Private Sub Btn_UtilizarDetalleOtroDoc_Click(sender As Object, e As EventArgs) Handles Btn_UtilizarDetalleOtroDoc.Click

        If Not Fx_Revisar_encabezado() Then
            Return
        End If

        Dim _Info As String = IIf(Not IsNothing(Btn_UtilizarDetalleOtroDoc.Tag), Btn_UtilizarDetalleOtroDoc.Tag, "")

        If Not String.IsNullOrWhiteSpace(_Info) Then
            MessageBoxEx.Show(Me, "No se puede utilizar esta opcion." & vbCrLf & _Info,
                              "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        If _Editar_documento Then
            MessageBoxEx.Show(Me, "No se puede utilizar esta opcion." & vbCrLf & "El documento esta siendo editado.",
                  "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        If Not CBool(_TblDetalle.Rows(0).Item("Nuevo_Producto")) Then
            MessageBoxEx.Show(Me, "Ya existen registros en el detalle" & vbCrLf &
                              "Debe quitar los productos del detalle para poder hacer esta gestión",
                              "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        If SoloprodEnDoc_CLALIBPR AndAlso
                                    String.IsNullOrWhiteSpace(_TblEncabezado.Rows(0).Item("TblTipoVenta")) AndAlso
                                        String.IsNullOrWhiteSpace(_TblEncabezado.Rows(0).Item("CodTipoVenta")) Then

            MessageBoxEx.Show(Me, "Los productos a vender solo deben ser de un tipo especifico de venta" & vbCrLf &
                              "a continuación deberá seleccionar el tipo.", "Tipo de venta",
                              MessageBoxButtons.OK, MessageBoxIcon.Warning, MessageBoxDefaultButton.Button1, True)

            Dim _Mensaje As LsValiciones.Mensajes = Fx_SolicitarTipoVenta()

            MessageBoxEx.Show(Me, _Mensaje.Mensaje, _Mensaje.Detalle, MessageBoxButtons.OK, _Mensaje.Icono, MessageBoxDefaultButton.Button1, True)

            If Not _Mensaje.EsCorrecto Then Return

        End If

        Dim _Fm As New Frm_BusquedaDocumento_Filtro(False)
        _Fm.Sb_LlenarCombo_FlDoc(Frm_BusquedaDocumento_Filtro._TipoDoc_Sel.Todos, _Tido)
        _Fm.Rdb_Estado_Todas.Checked = True
        _Fm.Pro_Sql_Filtro_Otro_Filtro = "And ESDO <> 'N'"
        _Fm.ShowDialog(Me)
        Dim _Row_Documento As DataRow = _Fm.Pro_Row_Documento_Seleccionado
        _Fm.Dispose()

        If Not IsNothing(_Row_Documento) Then

            Consulta_sql = "Select top 100 Ddo.TIDO,Ddo.NUDO,Ddo.KOPRCT As Codigo,Ddo.UDTRPR As UnTrans,Ddo.CAPRCO1,Ddo.CAPRCO2," &
                           "Case When Ddo.UDTRPR = 1 Then Ddo.CAPRCO1 Else Ddo.CAPRCO2 End As Cantidad," &
                           "Isnull(Mp.CLALIBPR,'') As 'CLALIBPR',Mp.NOKOPR As 'Descripcion'" & vbCrLf &
                           "From MAEDDO Ddo" & vbCrLf &
                           "Inner Join MAEPR Mp On Mp.KOPR = Ddo.KOPRCT" & vbCrLf &
                           "Where IDMAEEDO = " & _Row_Documento.Item("IDMAEEDO") & " And PRCT = 0"
            Dim _Tbl_Productos_Levantar As DataTable = _Sql.Fx_Get_DataTable(Consulta_sql)

            If Not CBool(_Tbl_Productos_Levantar.Rows.Count) Then
                MessageBoxEx.Show(Me, "No existen productos que insertar desde este documento, no se insertan conceptos", "Validación",
                                  MessageBoxButtons.OK, MessageBoxIcon.Stop)
                Return
            End If

            Dim _Contador = 0
            Dim _Index = 0

            Barra_Progreso.Maximum = 100
            Barra_Progreso.Visible = True
            Lbl_Progreso.Visible = True

            Me.Refresh()

            Dim _CodLista = _TblEncabezado.Rows(0).Item("ListaPrecios")
            Dim _LsMensajes As New List(Of LsValiciones.Mensajes)

            Dim _UltFila As DataGridViewRow = Grilla_Detalle.Rows(Grilla_Detalle.Rows.Count - 1)

            If Not String.IsNullOrEmpty(_UltFila.Cells("Codigo").Value) Then
                Sb_Nueva_Linea(_CodLista)
                _Index = Grilla_Detalle.Rows.Count
            End If

            Dim _DocUtilizado As Boolean

            For Each Fila As DataRow In _Tbl_Productos_Levantar.Rows

                Application.DoEvents()

                Dim _Codigo As String = Fila.Item("Codigo")             ' Código
                Dim _Descripcion As String = Fila.Item("Descripcion")   ' Descripcion
                Dim _UnTrans As Integer = Fila.Item("UnTrans")          ' UnTrans
                Dim _Cantidad As Double = Fila.Item("Cantidad")         ' Cantidad

                Consulta_sql = "Select Top 1 * From MAEPR Where KOPR = '" & _Codigo & "'"
                Dim _RowProducto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

                Dim _New_Fila As DataGridViewRow = Grilla_Detalle.Rows(_Index)

                Dim _Mensaje As LsValiciones.Mensajes = Fx_Validar_Si_Se_Puede_Traer_Producto_A_La_Nueva_Fila(_RowProducto,
                                                                                                              _CodLista,
                                                                                                              ModEmpresa_Doc,
                                                                                                              Mod_Sucursal,
                                                                                                              Mod_Bodega,
                                                                                                              _Cantidad,
                                                                                                              True)
                If Not _Mensaje.EsCorrecto Then
                    _LsMensajes.Add(_Mensaje)
                    _Contador += 1
                    Barra_Progreso.Value = ((_Contador * 100) / _Tbl_Productos_Levantar.Rows.Count)
                    Continue For
                End If

                Lbl_Progreso.Text = "Insertando producto: " & _Codigo.Trim & " - " & _New_Fila.Cells("Descripcion").Value
                Sb_Traer_Producto_Grilla(_New_Fila, _RowProducto, True)

                _New_Fila.Cells("Cantidad").Value = _Cantidad
                Sb_Procesar_Datos_De_Grilla(_New_Fila, "Cantidad", False, False, True)

                _Contador += 1
                _Index += 1
                Barra_Progreso.Value = ((_Contador * 100) / _Tbl_Productos_Levantar.Rows.Count)

                Sb_Nueva_Linea(_CodLista)

                _DocUtilizado = True

            Next

            Btn_UtilizarDetalleOtroDoc.Tag = "Se han insertado " & FormatNumber(_Contador, 0) & " productos desde el documento: " & _Row_Documento.Item("TIDO") & " - " & _Row_Documento.Item("NUDO")

            Dim ListaQr As LsValiciones.Mensajes = _LsMensajes.FirstOrDefault(Function(p) p.EsCorrecto = False)

            If Not IsNothing(ListaQr) Then

                MessageBoxEx.Show(Me, "Hay productos que no se pudieron agregar a la lista por diversos problemas", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
                Dim Fmv As New Frm_Validaciones
                Fmv.ListaMensajes = _LsMensajes
                Fmv.ShowDialog(Me)
                Fmv.Dispose()

            End If

            Barra_Progreso.Visible = False
            Lbl_Progreso.Visible = False

            Sb_Marcar_Grilla()
            Sb_RevisarListaSuperior()

        End If

    End Sub

    Private Sub Txt_Lbl_Nombre_Entidad_ButtonCustomClick(sender As Object, e As EventArgs) Handles Txt_Nombre_Entidad.ButtonCustomClick
        If Not (_RowEntidad Is Nothing) Then
            ShowContextMenu(Menu_Contextual_Info_Entidad)
        Else
            MessageBoxEx.Show(Me, "Falta el entidad", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
        End If
    End Sub

    Private Sub Txt_Contacto_ButtonCustomClick(sender As Object, e As EventArgs) Handles Txt_Contacto.ButtonCustomClick

        If Not Fx_Revisar_encabezado() Then
            Return
        End If

        ShowContextMenu(Menu_Contextual_Contacto)

        'If Not (_RowEntidad Is Nothing) Then
        '    ShowContextMenu(Menu_Contextual_Info_Entidad)
        'Else
        '    MessageBoxEx.Show(Me, "Falta el entidad", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop, MessageBoxDefaultButton.Button1, Me.TopMost)
        'End If

    End Sub

    Private Sub Btn_Contacto_VerInfo_Click(sender As Object, e As EventArgs) Handles Btn_Contacto_VerInfo.Click

        Dim _FilaEnc As DataGridViewRow = Grilla_Encabezado.Rows(0)
        Dim _CodEntidad As String = _FilaEnc.Cells("CodEntidad").Value
        Dim _Contacto_Ent As String = _FilaEnc.Cells("Contacto_Ent").Value.ToString.Trim

        If String.IsNullOrWhiteSpace(_Contacto_Ent) Then
            MessageBoxEx.Show(Me, "No hay ningún contacto asociado", "Validación", MessageBoxButtons.OK, MessageBoxIcon.Stop)
            Return
        End If

        Consulta_sql = "Select * From MAEENCON Where KOEN = '" & _CodEntidad & "' And RUTCONTACT = '" & _Contacto_Ent & "'"
        Dim _Row_Contacto As DataRow = _Sql.Fx_Get_DataRow(Consulta_sql)

        If IsNothing(_Row_Contacto) Then
            Return
        End If

        Dim _Rutcontact As String = _Row_Contacto.Item("RUTCONTACT").ToString.Trim
        Dim _Nokocon As String = _Row_Contacto.Item("NOKOCON").ToString.Trim
        Dim _Fonocon As String = _Row_Contacto.Item("FONOCON").ToString.Trim
        Dim _Email As String = _Row_Contacto.Item("EMAILCON").ToString.Trim
        Dim _Cargocon As String = _Row_Contacto.Item("CARGOCON").ToString.Trim
        Dim _Areacon As String = _Row_Contacto.Item("AREACON").ToString.Trim
        Dim _Direcon As String = _Row_Contacto.Item("DIRECON").ToString.Trim

        Dim _Informacion As String = "RUT : " & _Rutcontact & ", NOMBRE: " & _Nokocon & vbCrLf &
                                     "TELEFONO: " & _Fonocon & vbCrLf &
                                     "EMAIL: " & _Email
        MessageBoxEx.Show(Me, _Informacion, "Información del contacto", MessageBoxButtons.OK, MessageBoxIcon.Information)

    End Sub

    Private Sub Btn_Contacto_Agregar_Click(sender As Object, e As EventArgs) Handles Btn_Contacto_Agregar.Click

        Dim _FilaEnc As DataGridViewRow = Grilla_Encabezado.Rows(0)

        Dim _CodEntidad As String = _TblEncabezado.Rows(0).Item("CodEntidad")
        Dim _CodSucEntidad As String = _TblEncabezado.Rows(0).Item("CodSucEntidad")

        Dim Fm As New Frm_Crear_Entidad_Mt_Lista_contactos(True)
        Fm.Pro_CodEntidad = _CodEntidad
        Fm.Pro_SucEntidad = _CodSucEntidad
        Fm.ShowDialog(Me)
        If Fm.Pro_ContactoSeleccionado Then
            _FilaEnc.Cells("Contacto_Ent").Value = Fm.Row_Contacto.Item("RUTCONTACT")
            _FilaEnc.Cells("NomContacto_Ent").Value = Fm.Row_Contacto.Item("NOKOCON").ToString.Trim
            Txt_Contacto.Text = Fm.Row_Contacto.Item("NOKOCON").ToString.Trim
        End If
        Fm.Dispose()

    End Sub

    Private Sub Btn_Contacto_Quitar_Click(sender As Object, e As EventArgs) Handles Btn_Contacto_Quitar.Click

        Dim _FilaEnc As DataGridViewRow = Grilla_Encabezado.Rows(0)
        _FilaEnc.Cells("Contacto_Ent").Value = String.Empty
        _FilaEnc.Cells("NomContacto_Ent").Value = String.Empty
        Txt_Contacto.Text = String.Empty

    End Sub

    Private Sub Lbl_TipoVenta_Click(sender As Object, e As EventArgs) Handles Lbl_TipoVenta.Click

    End Sub

    Function Fx_ProdConInfo(_Tipr As String) As Boolean

        Select Case _Tipr
            Case "FPN", "FPS", "FNP", "FIN"
                Return True
        End Select

        Return False

    End Function

    Private Sub Grilla_Encabezado_CellBeginEdit(sender As Object, e As DataGridViewCellCancelEventArgs) Handles Grilla_Encabezado.CellBeginEdit
        Barra.Enabled = False
        Barra_Herramientas_Producto.Enabled = False
    End Sub

    'Private Sub Frm_Formulario_Documento_Closed(sender As Object, e As EventArgs) Handles Me.Closed
    '    FormularioAbierto = False
    'End Sub

End Class

Namespace Pallet

    Public Class Cl_Pallet

        Public Property Pallet As Boolean
        Public Property Codigo As String
        Public Property Cantidad As Double

        Public Sub New()
            Pallet = False
            Codigo = String.Empty
            Cantidad = 0
        End Sub

    End Class

End Namespace

Namespace PreVenta

    Public Class Cl_PreVenta_Producto
        Public Property Mensaje As LsValiciones.Mensajes
        Public Property Zw_PreVenta_StockProd As Zw_PreVenta_StockProd
        Public Property RowProducto As DataRow

        Public Sub New()
            Mensaje = New LsValiciones.Mensajes
            Zw_PreVenta_StockProd = New Zw_PreVenta_StockProd
            RowProducto = Nothing
        End Sub

    End Class

End Namespace


